#!/usr/bin/python3
import requests
import urllib3
import sys
from base64 import *
from urllib.parse import quote, unquote
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

URL = 'https://edu-ctf.csie.org:10190'
LOGIN = '/login.php'
PARTY = '/party.php'

def printnow(text, end="\n"):
    print(text, end=end)
    sys.stdout.flush()

def updatecookies(FLAGvalue):
    c = requests.cookies.RequestsCookieJar()
    c.set('FLAG', FLAGvalue)
    c.set('PHPSESSID', cookies['PHPSESSID'])
    session.cookies.clear()
    session.cookies.update(c)
    # print(session.cookies.get_dict())

def party():
    response = session.get(url = URL + PARTY)
    if response.text.find('What the flag?! CHEATER!!! get out of here.') != -1:
        return -1
    elif response.text.find('CAT PARTY!!!!!!') != -1:
        return 1
    else:
        return 0

def xorbytes(a, b):
    return bytes([x^y for x,y in zip(a,b)])

# Login
session = requests.Session()
data = {'user': 'GGGGGGGG',
        'pass': 'GGGGGGGG'}
response = session.post(url = URL + LOGIN, data = data, verify = False)
cookies = session.cookies.get_dict()
print(cookies)

# Go to party.php
r = party()
print('Is in party: {}'.format(r))

FLAG = b64decode(str.encode(unquote(cookies['FLAG'])))
print('length & value of b64decode(Cookie[\'FLAG\']): \n\t{}\n\t{}'.format(len(FLAG), FLAG))

# decrypted block
dblocks = b''

# plaintext block
pblocks = b''

# Blocksize
bs = 16

if len(FLAG) % bs != 0:
    print('Blocksize error!')
    exit()

for k in range(1, len(FLAG) // bs):
    dblock = b''
    for j in range(bs):
        printnow('[', end='')
        process = 0
        for i in range(256):
            # Brute-Force Plaintext
            bfp = bytes([i ^ (j+1)])
    
            # Update cookies
            _FLAG  = FLAG[:-(bs*k+1+j)]
            _FLAG += bfp + xorbytes(dblock, bytes([j+1])*j)
            _FLAG += FLAG[-bs*k:][:bs]
            _FLAG = quote(b64encode(_FLAG))
            updatecookies(_FLAG)
        
            if i - process == 10:
                process = i
                printnow('=', end='')
    
            # Go to party.php again
            r = party()
            if r == 1:
                if i != FLAG[-(bs*k+1+j)]:
                    dblock = bytes([i]) + dblock
                    print('>]')
                    print('{} {:#02x} | dblock: {}'.format(j, i, dblock))
                    break
                else:
                    print('X')
            if i == 255:
                print('!]\nGG')
                break
    print('[#{}] cblocks: {}'.format(k, FLAG[-(bs*k+bs):-(bs*k)]))
    if len(dblock) % bs != 0:
        dblock = b'\x00'*(bs - (len(dblock) % bs)) + dblock
    dblocks = dblock + dblocks
    pblock = xorbytes(FLAG[-(bs*k+bs):-(bs*k)], dblock)
    pblocks = pblock + pblocks
    print('[#{}] dblocks: {}'.format(k, dblocks))
    print('[#{}] pblocks: {}'.format(k, pblocks))
