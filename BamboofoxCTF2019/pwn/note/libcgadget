Gadgets information
============================================================
0x00000000001e2358 : adc ah, ch ; add dword ptr [rax], eax ; add al, 0x11 ; clc ; jmp qword ptr [rcx]
0x0000000000002df7 : adc ah, ch ; clc ; ret
0x00000000001e2b58 : adc ah, dh ; add dword ptr [rax], eax ; mov ah, 0x37 ; clc ; call qword ptr [rdi]
0x000000000007f6f1 : adc al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000186baf : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186c19 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000fcca : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000018b7c : adc al, 0 ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; retf
0x00000000001e18bc : adc al, 0 ; add byte ptr [rax], al ; js 0x1e18ac ; add dword ptr [rax], eax ; in al, dx ; retf 0xfff7
0x00000000001166ae : adc al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000aa468 : adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001bf3c8 : adc al, 0 ; in eax, dx ; jmp rax
0x0000000000023468 : adc al, 0 ; mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000022e8b : adc al, 0 ; mov rdi, rbx ; call r14
0x00000000000687c9 : adc al, 0 ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; jmp rax
0x000000000005def0 : adc al, 0 ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x000000000016c8a5 : adc al, 0x13 ; jmp rdx
0x00000000000a9eb5 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000001c0a90 : adc al, 0x17 ; cmc ; call rsp
0x00000000001d555c : adc al, 0x1e ; add dword ptr [rax], eax ; mov dl, 0xf3 ; call qword ptr [rcx]
0x00000000001c575c : adc al, 0x20 ; add byte ptr [rax], al ; mov esp, edi ; call qword ptr [rdx]
0x00000000001c1aa8 : adc al, 0x23 ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000014484f : adc al, 0x24 ; call 0x212c4
0x0000000000042f61 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000000242c : adc al, 0x2d ; retf
0x00000000000bab23 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000157e5d : adc al, 0x41 ; call qword ptr [rdx]
0x00000000001d4f1c : adc al, 0x44 ; stc ; call qword ptr [rax]
0x00000000001234ba : adc al, 0x48 ; add esp, 0xa0 ; pop rbx ; ret
0x00000000000b8090 : adc al, 0x48 ; lea eax, [rdi + 0x14] ; ret
0x00000000000b8ef3 : adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x00000000000ac17b : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x00000000001415c1 : adc al, 0x48 ; mov eax, edx ; movsxd rdx, esi ; ret
0x0000000000021b8c : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000004685a : adc al, 0x4c ; mov dword ptr [rsp + 8], edx ; call 0x53348
0x00000000001c0188 : adc al, 0x63 ; int1 ; call rax
0x000000000000360a : adc al, 0x75 ; movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x00000000001428f4 : adc al, 0x78 ; ret
0x00000000001db45c : adc al, 0x7d ; add dword ptr [rax], eax ; nop ; pushfq ; cmc ; jmp rax
0x00000000001c29a0 : adc al, 0x81 ; stc ; jmp rsp
0x000000000014dc30 : adc al, 0x88 ; add rdx, r8 ; jmp rdx
0x00000000001dc25c : adc al, 0x8b ; add dword ptr [rax], eax ; nop ; clc ; cmc ; call qword ptr [rax]
0x000000000014df16 : adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x00000000000a8604 : adc al, 0x90 ; add rdx, r8 ; jmp rdx
0x00000000000a8533 : adc al, 0x90 ; add rdx, rax ; jmp rdx
0x0000000000084718 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000188040 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000018676e : adc al, 0x91 ; sub eax, edx ; ret
0x00000000000fbf09 : adc al, 0x92 ; add rdx, r10 ; jmp rdx
0x000000000016c8a1 : adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000000521e9 : adc al, 0x96 ; add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x000000000003c760 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000000a8ab7 : adc al, 0xa ; jmp r10
0x00000000000aa023 : adc al, 0xa ; sub eax, edx ; ret
0x00000000001bf0e8 : adc al, 0xa3 ; in al, dx ; call qword ptr [rbx + rcx*8]
0x00000000001d87ac : adc al, 0xa7 ; hlt ; jmp qword ptr [rcx]
0x0000000000125624 : adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000001c1108 : adc al, 0xbb ; cmc ; jmp rax
0x00000000001df65c : adc al, 0xbf ; add dword ptr [rax], eax ; nop ; idiv r15d ; ret 2
0x000000000003fd2e : adc al, 0xc0 ; mov qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000ff5ed : adc al, 0xc2 ; jmp 0xff60e
0x0000000000167474 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x000000000003fd32 : adc al, 0xc7 ; xor eax, eax ; ret
0x00000000000bb4cf : adc al, 0xe ; cmp rdi, rdx ; jb 0xbb4e2 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000d0492 : adc al, 0xe ; jne 0xd048d ; ret
0x0000000000184881 : adc al, 0xe ; sub eax, edx ; ret
0x000000000018acba : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x00000000000c46fc : adc al, 0xe5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x21168
0x00000000001c3edd : adc al, 0xe6 ; jmp qword ptr [rdx]
0x0000000000002c37 : adc al, 0xe7 ; ret
0x000000000014dd96 : adc al, 0xf ; retf 0xd789
0x000000000003334f : adc al, 0xf ; retf 0xfa83
0x00000000000b8a69 : adc al, 0xf ; test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000a63ad : adc al, 0xf ; xchg byte ptr [rdx + rdx - 0x76b40000], dl ; ret 0xf748
0x00000000001d275c : adc al, 0xf0 ; add byte ptr [rax], al ; loopne 0x1d2789 ; int1 ; jmp qword ptr [rcx]
0x00000000000efc75 : adc al, 0xf3 ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000081e7b : adc al, 0xf6 ; ret 0x7420
0x000000000009fdd7 : adc al, 0xf8 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bcf65 : adc al, 0xfb ; call qword ptr [rax]
0x00000000001bcfe9 : adc al, 0xfb ; call rax
0x00000000001bcf45 : adc al, 0xfb ; inc dword ptr [rax + 0x16] ; sti ; jmp qword ptr [rax]
0x0000000000195548 : adc al, 1 ; add byte ptr [rax], al ; ret
0x0000000000121c21 : adc al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001237ad : adc al, 1 ; add byte ptr [rcx - 0x77], cl ; retf 0xdcb8
0x00000000001c3315 : adc al, 1 ; add byte ptr [rdi + rdi - 5], dl ; jmp qword ptr [rax]
0x0000000000006ce8 : adc al, 2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x00000000001c27dd : adc al, 2 ; add byte ptr [rdi + rdi], dh ; stc ; call qword ptr [rax]
0x0000000000131941 : adc al, 6 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000a8305 : adc al, 7 ; je 0xa8305 ; ret
0x00000000000a8232 : adc al, 7 ; test dl, dl ; jne 0xa822f ; ret
0x000000000004ee91 : adc al, 9 ; ret 0x8d74
0x00000000001e232d : adc al, bh ; call qword ptr [rbx]
0x000000000012c77d : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000186d57 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186dc1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000009df0 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44
0x0000000000008cda : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000000b152 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000000f832 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000010e6e1 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000afc4e : adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000076457 : adc al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c04
0x00000000001c33cd : adc al, byte ptr [rcx] ; add ah, al ; retf 0xfffc
0x00000000001d49c1 : adc al, byte ptr [rcx] ; add ah, bh ; call qword ptr [rbx]
0x00000000000b33c4 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000001c278d : adc al, byte ptr [rdx] ; add byte ptr [rdi + rbp - 7], al ; call rax
0x000000000018cd3f : adc al, byte ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001643c2 : adc al, ch ; clc ; ret 0xfffa
0x00000000001324c0 : adc al, ch ; retf 0xf28e
0x00000000000f502e : adc al, ch ; xchg eax, esp ; ret 0xfff2
0x00000000000ea221 : adc bh, 0xff ; inc dword ptr [rcx - 0x77] ; ret
0x000000000014ef39 : adc bh, ah ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x00000000001bcf61 : adc bh, bl ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x00000000001bcf81 : adc bh, bl ; push rax ; adc edi, ebx ; call rax
0x0000000000003c3f : adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001af2f0 : adc bh, ch ; out dx, eax ; jmp qword ptr [rax]
0x000000000013ab08 : adc bh, dh ; ret 0x8080
0x00000000001cfe00 : adc bh, dl ; out dx, al ; jmp qword ptr [rdi]
0x000000000003dbb8 : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000b6535 : adc bl, ch ; call 0xffffffffc3dbee8a
0x00000000000b6455 : adc bl, ch ; call 0xffffffffc403edaa
0x00000000000b9525 : adc bl, ch ; call 0xffffffffc4041e7a
0x0000000000053282 : adc bl, ch ; jno 0x532d8 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000b7676 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b69e6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b6a57 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b69b7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000003020a : adc bl, dh ; ret
0x00000000000b7675 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b69e5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000090855 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000053d2e : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x0000000000041989 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x0000000000054543 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000040ba5 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000041386 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x00000000000f350b : adc byte ptr [r8 + 0x39], r9b ; retf
0x0000000000115b35 : adc byte ptr [r8 + 0x44102444], cl ; mov eax, edx ; syscall
0x00000000001663f7 : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000013479b : adc byte ptr [r8 + 1], cl ; retf 0x3948
0x0000000000085eb2 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000006b1f9 : adc byte ptr [r8 - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000017f16a : adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x00000000000f6cec : adc byte ptr [r8 - 0x77], r9b ; fucomip st(0) ; retf 0xf2a5
0x000000000008ff0f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000003194c : adc byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf
0x00000000000fb891 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000baa9c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000baabe : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000baafc : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bab7e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x0000000000085edd : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x000000000019c700 : adc byte ptr [r9 - 0x3a7cb716], cl ; add dword ptr [rcx], edi ; ret 0xaf7c
0x0000000000145e9a : adc byte ptr [r9 - 0x3c7cb726], r9b ; add dword ptr [rcx], edi ; ret 0xaf7c
0x000000000010712d : adc byte ptr [r9 - 0x7d], cl ; ret 0x4108
0x000000000009d954 : adc byte ptr [rax + 0x1f7403fa], al ; movsx eax, dl ; ret
0x00000000000b6fea : adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x00000000000aba06 : adc byte ptr [rax + 0x29], cl ; retf 0x860f
0x00000000000b680a : adc byte ptr [rax + 0x29], cl ; retf 0x8d4c
0x0000000000150a81 : adc byte ptr [rax + 0x31], cl ; retf 0xb70f
0x000000000013ddfb : adc byte ptr [rax + 0x39], cl ; fbstp tbyte ptr [rbp + rax - 0x18] ; ret 0xee34
0x000000000005453d : adc byte ptr [rax + 0x39], cl ; ret
0x0000000000096243 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000043698 : adc byte ptr [rax + 0x39], cl ; ret 0x3b72
0x00000000000924fc : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000092888 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x000000000009e176 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x00000000000f350c : adc byte ptr [rax + 0x39], cl ; retf
0x0000000000084832 : adc byte ptr [rax + 0x39], cl ; retf 0xffb8
0x0000000000043697 : adc byte ptr [rax + 0x39], r9b ; ret 0x3b72
0x0000000000115b36 : adc byte ptr [rax + 0x44102444], cl ; mov eax, edx ; syscall
0x00000000001663f8 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x00000000000da7ca : adc byte ptr [rax + 0x63], cl ; ret 0x8944
0x0000000000148298 : adc byte ptr [rax + 0x81], bh ; syscall
0x000000000005143c : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001568ee : adc byte ptr [rax + 1], bh ; ret
0x00000000000d060e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000005398e : adc byte ptr [rax + 1], cl ; ret
0x00000000000ac176 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000852b7 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000009b3db : adc byte ptr [rax + 1], cl ; ret 0x3348
0x000000000009b874 : adc byte ptr [rax + 1], cl ; ret 0x3349
0x000000000013479c : adc byte ptr [rax + 1], cl ; retf 0x3948
0x00000000001568ed : adc byte ptr [rax + 1], dil ; ret
0x000000000011da47 : adc byte ptr [rax + 9], cl ; retf 0x8948
0x000000000007b244 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000131043 : adc byte ptr [rax + rdx + 0x5b], dh ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000baca4 : adc byte ptr [rax - 0x12cfdfb1], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000baba2 : adc byte ptr [rax - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000bab20 : adc byte ptr [rax - 0x12cfeba9], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x0000000000162693 : adc byte ptr [rax - 0x39], cl ; ret
0x0000000000125621 : adc byte ptr [rax - 0x73], cl ; adc al, 0xb2 ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000030203 : adc byte ptr [rax - 0x73], cl ; add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x0000000000125845 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000021b8f : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000014d83f : adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rcx
0x000000000006bcf4 : adc byte ptr [rax - 0x75], cl ; cmp al, ch ; retf
0x000000000006b1fa : adc byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000014df0d : adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000038a39 : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call 0x35548
0x00000000000b620c : adc byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000002cc98 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000114763 : adc byte ptr [rax - 0x77], cl ; fucomip st(0) ; pop rsp ; retf
0x00000000000f6ced : adc byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf 0xf2a5
0x0000000000083397 : adc byte ptr [rax - 0x77], cl ; jo 0x833b5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000156b1f : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000083357 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000008335b : adc byte ptr [rax - 0x77], cl ; ret
0x00000000000473f4 : adc byte ptr [rax - 0x77], cl ; ret 0x2f75
0x00000000000565b3 : adc byte ptr [rax - 0x77], cl ; ret 0x875
0x00000000000f97b6 : adc byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000000e291e : adc byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000099bc9 : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000095591 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x00000000001312f5 : adc byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000004740e : adc byte ptr [rax - 0x77], cl ; ret 0xec74
0x0000000000152196 : adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x000000000004a749 : adc byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000008ff10 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x00000000001475fa : adc byte ptr [rax - 0x77], cl ; retf
0x00000000000837c0 : adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x00000000001244a8 : adc byte ptr [rax - 0x77], cl ; retf 0xc148
0x000000000003194d : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf
0x000000000017bb27 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000017bb63 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000b1fb4 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x13
0x000000000019c098 : adc byte ptr [rax - 0x7bf0ffc6], al ; ret
0x0000000000065327 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000090ef3 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a44dc : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000012aa8f : adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000029978 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000000000011d649 : adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000000031e : adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x0000000000103fc3 : adc byte ptr [rax - 1], bh ; ret
0x00000000001bd6a0 : adc byte ptr [rax - 5], ch ; call qword ptr [rax + 0x10fffb67]
0x0000000000117ff6 : adc byte ptr [rax], al ; add al, ch ; ret 0xf092
0x000000000004f8ee : adc byte ptr [rax], al ; add al, ch ; retf 0xfd19
0x000000000011590d : adc byte ptr [rax], al ; add bl, dh ; ret
0x0000000000186802 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x00000000001848d0 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000184a70 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000018b1f8 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x0000000000188fd1 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186f61 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000123f5f : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000000f8b0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ee12 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001d483c : adc byte ptr [rax], al ; add byte ptr [rax], al ; clc ; adc byte ptr [rcx], al ; add bh, dl ; retf
0x00000000001cf9b0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x00000000001d8fb8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; je 0x1d901f ; add dword ptr [rax], eax ; nop ; retf
0x00000000001d58c0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; jl 0x1d58f0 ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000001d8fcc : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rax + 1], bl ; add ah, bh ; retf
0x000000000014484a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rsp], edx ; call 0x212c9
0x000000000011062b : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x00000000001d58fc : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xac000121 ; ret
0x00000000000446bc : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000014dbca : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001c81d0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdx], cs ; add al, cl ; retf
0x00000000001d01e8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000001d01d4 : adc byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 0
0x00000000001cf99c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0
0x000000000014c1d5 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000bbb0c : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001d0198 : adc byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; retf 0
0x000000000007be51 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001cf988 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001b1dcd : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001d0184 : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001b1ded : adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x0000000000115a7b : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001cf9d8 : adc byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000000aa8e8 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001112d6 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007b4a9 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000177718 : adc byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000045de : adc byte ptr [rax], al ; clc ; retf 0x1b
0x000000000000463e : adc byte ptr [rax], al ; cld ; retf 0x1b
0x000000000004f023 : adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x00000000000a852f : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x000000000004fb6c : adc byte ptr [rax], al ; ret
0x00000000001e3ec8 : adc byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000baa9d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000baabf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000baafd : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bab7f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000bac81 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000001112d5 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b66e : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000041939 : adc byte ptr [rbp + 0x39], cl ; retf
0x000000000019c697 : adc byte ptr [rbp + 0x5b0c75c0], al ; pop rbp ; pop r12 ; ret
0x0000000000005228 : adc byte ptr [rbp + 0xa], al ; add byte ptr [rax], al ; retf
0x0000000000147eba : adc byte ptr [rbp + 9], cl ; retf 0x850f
0x00000000000b925d : adc byte ptr [rbp + rcx*4 + 0x1d], cl ; retf
0x000000000004aec5 : adc byte ptr [rbp + rcx*4 + 0x48], al ; dec dword ptr [rax + 1] ; retf 0xc148
0x00000000000e77fa : adc byte ptr [rbp + rcx*4 + 0x4b], cl ; add dword ptr [rcx - 0x77], ecx ; ret
0x000000000009f546 : adc byte ptr [rbp + rcx*4 + 0xc], cl ; sub byte ptr [rax - 0x77], cl ; ret 0x14d
0x00000000001af3cc : adc byte ptr [rbp - 0x10], dh ; jmp qword ptr [rax]
0x00000000001bcc0c : adc byte ptr [rbp - 0x410f0004], bh ; cld ; call rax
0x00000000001af688 : adc byte ptr [rbp - 0x6a4f0010], 0xf0 ; jmp rax
0x00000000001041c6 : adc byte ptr [rbp - 0x77], al ; ret 0x8341
0x00000000000cf909 : adc byte ptr [rbp - 0x77], cl ; retf
0x00000000000bd532 : adc byte ptr [rbp - 0xd], dh ; ret
0x0000000000131045 : adc byte ptr [rbx + 0x31], bl ; rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x00000000000e10d3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002cc75 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000090856 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000001d7503 : adc byte ptr [rbx + 0x80e5302], al ; ret
0x00000000001e174f : adc byte ptr [rbx + 0x80e5402], al ; ret
0x00000000001da3f2 : adc byte ptr [rbx + 0x80e5b02], al ; ret
0x00000000001c7367 : adc byte ptr [rbx + 0x80e6202], al ; ret
0x00000000001dcc27 : adc byte ptr [rbx + 0x80e6402], al ; ret
0x00000000001d74e8 : adc byte ptr [rbx + 0x80e6702], al ; ret
0x00000000001bcf34 : adc byte ptr [rbx + rdi*8], bl ; call qword ptr [rax]
0x000000000008fb52 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000008388e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000877b7 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x877d1 ; ret
0x00000000001e2223 : adc byte ptr [rbx - 0x4ff1b1fe], al ; or al, byte ptr [rdx] ; retf
0x0000000000140f1a : adc byte ptr [rbx - 0x73], al ; add dword ptr [rdx], r8d ; pop rbx ; ret
0x00000000001bdbb8 : adc byte ptr [rbx - 0x757f0005], cl ; sti ; jmp rax
0x0000000000049e0c : adc byte ptr [rbx - 0x7af067fc], cl ; retf 1
0x0000000000036500 : adc byte ptr [rbx - 0x7bf0fd06], al ; retf 0xe
0x00000000001334ab : adc byte ptr [rbx - 0x7cb603ba], cl ; ret
0x00000000000f3625 : adc byte ptr [rbx - 0x7cb7fe3b], al ; ret
0x000000000013092e : adc byte ptr [rbx - 0x7d], bl ; loopne 0x130947 ; pop rbp ; pop r12 ; ret
0x00000000001da2c0 : adc byte ptr [rbx - 0xb], ah ; jmp qword ptr [rbx]
0x0000000000004be1 : adc byte ptr [rbx], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000000dc78 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001d62a0 : adc byte ptr [rbx], al ; hlt ; call qword ptr [rsi]
0x00000000001bcee0 : adc byte ptr [rbx], dl ; sti ; call rax
0x0000000000085ede : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000f3bba : adc byte ptr [rcx + 0x39], al ; ret
0x00000000000869e0 : adc byte ptr [rcx + 0x39], al ; retf 0xea77
0x00000000000524e1 : adc byte ptr [rcx + 0x39], cl ; retf
0x00000000000caed1 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebx ; ret
0x00000000000a3f8a : adc byte ptr [rcx + 0xf], al ; xchg eax, ebx ; ret 0x3949
0x00000000000a4fed : adc byte ptr [rcx + 0xf], al ; xchg eax, ebx ; ret 0x394d
0x00000000000d380c : adc byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; retf 0x8948
0x000000000015056e : adc byte ptr [rcx + 1], cl ; retf
0x0000000000086d43 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000115b3a : adc byte ptr [rcx + rcx*4 - 0x30], al ; syscall
0x00000000000bac02 : adc byte ptr [rcx - 0x12cfe7b1], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000babe2 : adc byte ptr [rcx - 0x12cfe8b1], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000019c701 : adc byte ptr [rcx - 0x3a7cb716], cl ; add dword ptr [rcx], edi ; ret 0xaf7c
0x0000000000145dbf : adc byte ptr [rcx - 0x3a7cb718], cl ; add dword ptr [rcx], edi ; ret 0xb37f
0x0000000000145e9b : adc byte ptr [rcx - 0x3c7cb726], cl ; add dword ptr [rcx], edi ; ret 0xaf7c
0x000000000011dab2 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000001997bf : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000000a5418 : adc byte ptr [rcx - 0x77], cl ; ret 0xb60f
0x00000000001993ee : adc byte ptr [rcx - 0x77], cl ; retf 0xc148
0x000000000011d4d1 : adc byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x00000000000907a7 : adc byte ptr [rcx - 0x7d], al ; ret
0x00000000000530d4 : adc byte ptr [rcx - 0x7d], cl ; in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000041921 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000010712e : adc byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x0000000000184903 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000001884a7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000010f336 : adc byte ptr [rcx - 0xa], al ; ret 0x4901
0x00000000001bd698 : adc byte ptr [rcx - 5], ch ; call qword ptr [rax + 0x10fffb68]
0x00000000001d482d : adc byte ptr [rcx], al ; add al, cl ; retf
0x00000000001d4841 : adc byte ptr [rcx], al ; add bh, dl ; retf
0x0000000000158977 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016731a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000122541 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001bfb5d : adc byte ptr [rcx], al ; add byte ptr [rsi - 0x12], dh ; jmp qword ptr [rax]
0x00000000000cc199 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014f079 : adc byte ptr [rcx], bh ; ret
0x000000000018a390 : adc byte ptr [rcx], bh ; retf 0x557f
0x00000000001bcfd0 : adc byte ptr [rcx], bl ; sti ; jmp rax
0x00000000000d2e53 : adc byte ptr [rcx], ch ; ret 0x428d
0x0000000000043ebe : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000008fb55 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000086827 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001164cd : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x116509 ; ret
0x0000000000150e5f : adc byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001bd6a8 : adc byte ptr [rdi - 5], ah ; call qword ptr [rax + 0x10fffb66]
0x00000000001bd27c : adc byte ptr [rdi - 5], ch ; jmp qword ptr [rsi + 0x16fffb6e]
0x00000000000305f5 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000134daa : adc byte ptr [rdi], cl ; mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x000000000008a2d8 : adc byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000003f652 : adc byte ptr [rdi], cl ; ret 0x8b48
0x000000000014dd09 : adc byte ptr [rdi], cl ; retf 0x5089
0x000000000014ddd4 : adc byte ptr [rdi], cl ; retf 0x5389
0x000000000014dd5a : adc byte ptr [rdi], cl ; retf 0xd189
0x000000000003333f : adc byte ptr [rdi], cl ; retf 0xd289
0x000000000014e12c : adc byte ptr [rdi], cl ; retf 0xd789
0x0000000000053d2f : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000004198a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000046eba : adc byte ptr [rdi], cl ; test ah, ah ; or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000016035c : adc byte ptr [rdi], cl ; test ch, bl ; add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; retf
0x000000000017ec08 : adc byte ptr [rdi], cl ; test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000193673 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000185af1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185be1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185a01 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018de9b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018c99f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018db9f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018d29f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018d59f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018cc97 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000186449 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000185fa1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000185731 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x0000000000186181 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185911 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000186361 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000186271 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185bb3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185ca3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185ac3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018cf44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018db44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018de44 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018d544 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018d244 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000018cc3c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185821 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000018974d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018956d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000189f45 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000188e65 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000189d65 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001859d3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001857f3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001858e3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185703 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000a3851 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x0000000000040ba6 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000041387 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000110de9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000104c1c : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5408
0x00000000000543f1 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x000000000005372d : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000003a89 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00000000001cb7e3 : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000016cd99 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001bd690 : adc byte ptr [rdx - 5], ch ; call qword ptr [rax + 0x10fffb69]
0x00000000000afc4d : adc byte ptr [rdx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001c2735 : adc byte ptr [rdx], al ; add byte ptr [rsi + rbx - 7], dh ; call rsp
0x0000000000190bbb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009c934 : adc byte ptr [rip + 0x6740000], dh ; ret
0x000000000018a0df : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x0000000000190a6a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000190065 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190465 : adc byte ptr [rsi + 0xf], ah ; jmp 0x190439
0x00000000001904e3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1904b7
0x0000000000190975 : adc byte ptr [rsi + 0xf], ah ; jmp 0x190949
0x00000000001909f3 : adc byte ptr [rsi + 0xf], ah ; jmp 0x1909c7
0x0000000000191a95 : adc byte ptr [rsi + 0xf], ah ; jmp 0x191a69
0x0000000000191b13 : adc byte ptr [rsi + 0xf], ah ; jmp 0x191ae7
0x0000000000191fa5 : adc byte ptr [rsi + 0xf], ah ; jmp 0x191f79
0x0000000000192023 : adc byte ptr [rsi + 0xf], ah ; jmp 0x191ff7
0x0000000000190460 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19043e
0x00000000001904de : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1904bc
0x0000000000190970 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19094e
0x00000000001909ee : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1909cc
0x0000000000191a90 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191a6e
0x0000000000191b0e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191aec
0x0000000000191fa0 : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191f7e
0x000000000019201e : adc byte ptr [rsi + 0xf], ah ; out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191ffc
0x00000000000a8c05 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000aca3b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000000b6bcb : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b6bca : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000001ca749 : adc byte ptr [rsi + rcx + 8], al ; ret
0x00000000001af408 : adc byte ptr [rsi - 0x10], dh ; jmp qword ptr [rax]
0x000000000017a29d : adc byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001bcf38 : adc byte ptr [rsi], bl ; sti ; call qword ptr [rax]
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000000d154a : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000054b5f : adc byte ptr [rsp - 4], al ; ret
0x0000000000054ba5 : adc byte ptr [rsp - 8], al ; ret
0x0000000000044436 : adc byte ptr [rsp], al ; jne 0x44449 ; add rsp, 0x18 ; ret
0x0000000000044483 : adc byte ptr [rsp], al ; jne 0x44496 ; add rsp, 0x18 ; ret
0x000000000018cf47 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000014be5d : adc ch, byte ptr [rcx] ; retf 0xc8d
0x00000000001bf9e1 : adc ch, dh ; jmp rax
0x00000000001bf2dc : adc ch, dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000000a8a05 : adc cl, byte ptr [rax + 0x29] ; ret
0x00000000000d2b88 : adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x0000000000058c5f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x00000000001181ab : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000011956d : adc cl, byte ptr [rax - 0x7d] ; ret
0x00000000000c97ed : adc cl, byte ptr [rax - 0x7d] ; ret 0x4d10
0x00000000000b6445 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x0000000000058c62 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000004faa5 : adc cl, byte ptr [rcx + 0x1ee0c1c8] ; or eax, edx ; ret
0x0000000000150224 : adc cl, byte ptr [rcx + 0x31] ; retf 0xc148
0x0000000000000970 : adc cl, byte ptr [rcx + rax] ; or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x0000000000102fd9 : adc cl, byte ptr [rcx + rcx*4 + 0xc] ; ret 0x8348
0x000000000012deb7 : adc cl, byte ptr [rcx - 0x76b7fff8] ; ret 0x894c
0x00000000000cba1b : adc cl, byte ptr [rcx - 0x7cb7e8f4] ; ret 0x4804
0x00000000000cb773 : adc cl, byte ptr [rcx - 0x7cb7e9c4] ; ret 0x4804
0x0000000000041c45 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000f1165 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4101
0x000000000004fa70 : adc cl, byte ptr [rcx] ; retf 0xbe0f
0x0000000000104e91 : adc cl, ch ; ret
0x00000000001c3e59 : adc dh, ah ; call qword ptr [rax]
0x00000000001d24b9 : adc dh, cl ; call rsi
0x00000000001dc5c5 : adc dh, dh ; call rsi
0x000000000014c8ea : adc dh, dh ; ret 0x7401
0x000000000007ebd5 : adc dh, dh ; ret 0x7420
0x0000000000093c06 : adc dh, dh ; ret 0xf0f
0x00000000001c0249 : adc dh, dl ; jmp rsp
0x0000000000002732 : adc dl, bh ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x000000000013d11a : adc dl, byte ptr [rdx - 0x76b7fffe] ; out dx, eax ; call r12
0x000000000007fbcb : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000085ecf : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000002f0ee : adc dword ptr [rax - 0x73], ecx ; add eax, 0x184b83 ; ret
0x00000000000437ce : adc dword ptr [rax - 0x77], ecx ; ret
0x000000000019960d : adc dword ptr [rax - 0x77], ecx ; retf
0x00000000000f0bf2 : adc dword ptr [rax - 0x77], ecx ; retf 0x8948
0x000000000003453f : adc dword ptr [rax - 0x7d], ecx ; ret
0x0000000000083f3c : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x00000000000a6360 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000cba44 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x00000000000a5c20 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000a67e2 : adc dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x0000000000043f1e : adc dword ptr [rax - 0x7d], ecx ; rol dword ptr [rax + rcx*2], 0x83 ; ret 0x4904
0x000000000018b4eb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000000045dc : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; clc ; retf 0x1b
0x000000000000463c : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; cld ; retf 0x1b
0x000000000004f021 : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x000000000004a86c : adc dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000186ef7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188e69 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000d0a2 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000006982 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000019a74b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000000000010e631 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000aa768 : adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000040bb5 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000004639 : adc dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add ah, bh ; retf 0x1b
0x00000000000045d9 : adc dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add al, bh ; retf 0x1b
0x0000000000004609 : adc dword ptr [rax], eax ; add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add byte ptr [rax], al ; retf
0x00000000000e4b11 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x000000000009c1cd : adc dword ptr [rax], eax ; mov rdx, rcx ; jmp 0x9c16a
0x000000000009abf2 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000012f2d6 : adc dword ptr [rbp - 0x78], eax ; call rax
0x00000000000a12ce : adc dword ptr [rbp - 0x7c], eax ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000fb03a : adc dword ptr [rbx + 0x348905c2], eax ; mov byte ptr [rax + 0x63], cl ; retf 0x3949
0x0000000000044692 : adc dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bb748 : adc dword ptr [rbx], eax ; ret
0x00000000000bb6c1 : adc dword ptr [rbx], esp ; ret
0x0000000000192897 : adc dword ptr [rcx + 7], edi ; ret
0x00000000000bb6bc : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000116fe3 : adc dword ptr [rcx - 0x76b6ffd3], ebx ; retf 0x8b
0x00000000000c91dc : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4101
0x0000000000192532 : adc dword ptr [rcx - 1], ebx ; ret
0x00000000001924f6 : adc dword ptr [rcx - 1], edi ; ret
0x000000000007d6ee : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x7d6c4
0x00000000000a42b8 : adc dword ptr [rcx], ecx ; retf 0x5588
0x000000000015683a : adc dword ptr [rdi + 0x20], eax ; ret
0x000000000010e7e2 : adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x0000000000156802 : adc dword ptr [rdi + 0x30], eax ; ret
0x00000000000bb743 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010e7e6 : adc dword ptr [rdi + 0x40], eax ; ret
0x000000000003f8b0 : adc dword ptr [rdi + 0x60], eax ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x000000000003f8b4 : adc dword ptr [rdi + 0x70], eax ; ret
0x000000000010eb06 : adc dword ptr [rdi + 0x78], eax ; ret
0x000000000010f43b : adc dword ptr [rdi + 0xf8], eax ; ret
0x0000000000152f92 : adc dword ptr [rdi + 8], eax ; ret
0x00000000001412d0 : adc dword ptr [rdi + rdx + 8], eax ; ret
0x00000000000bb483 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x00000000000bb625 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000bb62a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000000bb602 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000bb607 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000001929f9 : adc dword ptr [rdi - 8], edi ; ret
0x00000000000bb480 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000003dfb4 : adc dword ptr [rdi], ecx ; ret
0x0000000000025522 : adc dword ptr [rdi], ecx ; retf 0xd285
0x000000000003df95 : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x000000000003e302 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x0000000000192c4c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x00000000000a81cb : adc dword ptr [rdx + rdx*8 + 0x38442074], eax ; retf 0xf41
0x0000000000152fab : adc dword ptr [rdx], eax ; ret
0x000000000010eab6 : adc dword ptr [rsi + 0x70], eax ; ret
0x000000000006436b : adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x0000000000192d7f : adc dword ptr [rsi + 3], edx ; ret
0x0000000000192e1c : adc dword ptr [rsi + 7], edx ; ret
0x000000000014dc14 : adc dword ptr [rsi + 8], eax ; ret
0x0000000000192c1e : adc dword ptr [rsi - 1], edx ; ret
0x000000000015e123 : adc dword ptr [rsp + 0x28], eax ; call rdx
0x0000000000199c36 : adc dword ptr [rsp - 0x28], eax ; ret
0x0000000000186ef6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000008fe8a : adc eax, 0x10035da ; ret
0x00000000000d060a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x00000000000be6ef : adc eax, 0x1224c ; cmovne rax, rdx ; ret
0x000000000009d7b4 : adc eax, 0x14227 ; cmovne rax, rdx ; ret
0x000000000009dcf4 : adc eax, 0x15907 ; cmovne rax, rdx ; ret
0x00000000001bcfc9 : adc eax, 0x1720fffb ; sti ; call qword ptr [rax]
0x0000000000163477 : adc eax, 0x2890d4 ; add rsp, 8 ; ret
0x00000000001595e9 : adc eax, 0x296b52 ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001ab844 : adc eax, 0x2f3ffae1 ; retf 0xb51a
0x00000000000efbf7 : adc eax, 0x315bfff3 ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000067c43 : adc eax, 0x358d4800 ; out dx, al ; ret 0x14
0x00000000000674db : adc eax, 0x358d4800 ; push rsi ; retf 0x14
0x0000000000067cca : adc eax, 0x358d4800 ; ret 0x14
0x000000000006686f : adc eax, 0x358d4800 ; ret 0x14d6
0x0000000000090734 : adc eax, 0x35ab97 ; ret
0x000000000004012d : adc eax, 0x3ab076 ; ret
0x00000000000bcd8a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000030936 : adc eax, 0x3ba5e5 ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002f0c1 : adc eax, 0x3bdb17 ; ret
0x000000000002134c : adc eax, 0x3cf17f ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000005b22e : adc eax, 0x3d8d4800 ; cdq ; retf 0x15
0x0000000000057fcd : adc eax, 0x3d8d4800 ; retf 0x15fb
0x000000000005b1f0 : adc eax, 0x3d8d4800 ; xlatb ; retf 0x15
0x00000000001585e7 : adc eax, 0x3f04 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000131aac : adc eax, 0x401df ; cmovne rax, rdx ; ret
0x00000000000a1cea : adc eax, 0x401f0f00 ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000013190c : adc eax, 0x4039f ; cmovne rax, rdx ; ret
0x0000000000001ecc : adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x00000000001319dc : adc eax, 0x42d9f ; cmovne rax, rdx ; ret
0x000000000005c45f : adc eax, 0x4634800 ; mov al, 0x48 ; add eax, edi ; jmp rax
0x000000000005be09 : adc eax, 0x4634800 ; nop ; add rax, rsi ; jmp rax
0x000000000005bd6b : adc eax, 0x4634800 ; xchg byte ptr [rax + 1], cl ; clc ; jmp rax
0x00000000001335c5 : adc eax, 0x5fdf6 ; cmove rax, rdx ; ret
0x00000000000b7378 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x00000000000be2f9 : adc eax, 0x67058b48 ; retf
0x00000000000643a4 : adc eax, 0x6f0f6600 ; ret
0x000000000005ed59 : adc eax, 0x6f0f6600 ; ret 0x290f
0x000000000005ed82 : adc eax, 0x6f0f6600 ; ret 0x3e8
0x0000000000061c1a : adc eax, 0x6f0f6600 ; ret 0x6be8
0x00000000000b8a9c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x000000000010fa21 : adc eax, 0x80ec8348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000186a81 : adc eax, 0x83480000 ; ret 0xe910
0x000000000005b942 : adc eax, 0x83490000 ; ret
0x0000000000065f75 : adc eax, 0x83fffffd ; ret
0x000000000003276f : adc eax, 0x89480018 ; ret 0xc031
0x00000000000ca471 : adc eax, 0x894d0000 ; retf
0x000000000004c0b2 : adc eax, 0xc8b4800 ; ret 0x8b49
0x000000000009d824 : adc eax, 0xcc537 ; cmovne rax, rdx ; ret
0x000000000009dd2e : adc eax, 0xcd28d ; cmovne rax, rdx ; ret
0x000000000009f14c : adc eax, 0xd2b6f ; cmovne rax, rdx ; ret
0x000000000009ee4c : adc eax, 0xd2e4f ; cmovne rax, rdx ; ret
0x000000000009ecdc : adc eax, 0xd5aaf ; cmovne rax, rdx ; ret
0x00000000000bd505 : adc eax, 0xd5ec6 ; cmove rax, rdx ; ret
0x00000000000bd479 : adc eax, 0xd7be2 ; cmovne rax, rdx ; ret
0x000000000009f02c : adc eax, 0xd827f ; cmovne rax, rdx ; ret
0x000000000009ef8c : adc eax, 0xd830f ; cmovne rax, rdx ; ret
0x000000000009f07c : adc eax, 0xda37f ; cmovne rax, rdx ; ret
0x000000000009efdc : adc eax, 0xda40f ; cmovne rax, rdx ; ret
0x000000000009d864 : adc eax, 0xde0e7 ; cmovne rax, rdx ; ret
0x000000000009dd64 : adc eax, 0xdf397 ; cmovne rax, rdx ; ret
0x000000000009ef14 : adc eax, 0xe0d67 ; cmovne rax, rdx ; ret
0x00000000000d0dda : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000009ef44 : adc eax, 0xe2547 ; cmovne rax, rdx ; ret
0x00000000001a9490 : adc eax, 0xf1ffe87f ; jle 0x1a9486 ; jmp rsp
0x000000000009ec49 : adc eax, 0xf4ca2 ; cmovne rax, rdx ; ret
0x000000000009d7f0 : adc eax, 0xf5ddb ; cmovne rax, rdx ; ret
0x00000000000bb994 : adc eax, 0xf880272 ; ret
0x00000000001afe38 : adc eax, 0xffff271 ; jb 0x1afe37 ; jmp rax
0x00000000001afe38 : adc eax, 0xffff271 ; jb 0x1afe38 ; jmp rax
0x000000000006604b : adc eax, 0xfffffd02 ; add rax, rdx ; jmp rax
0x000000000006b20f : adc eax, dword ptr [rax - 0x78] ; sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000006c30b : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000018b24e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188c89 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000fe80 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40
0x000000000000a738 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000d132 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000004be2 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000062aa : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000011660e : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000aa5e8 : adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000794bf : adc eax, dword ptr [rax] ; call 0x125784
0x000000000002c589 : adc eax, dword ptr [rax] ; mov rdi, r13 ; call r12
0x000000000002c6e0 : adc eax, dword ptr [rax] ; mov rdi, r14 ; call rbx
0x00000000000737d0 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000007d52b : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000007d599 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000114f7c : adc eax, dword ptr [rbx + 0x1674a1f8] ; neg eax ; pop rbx ; ret
0x00000000000a82c2 : adc eax, dword ptr [rcx + 0x39] ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x0000000000121d81 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001c32fd : adc eax, dword ptr [rcx] ; add byte ptr [rdi + rdi], ah ; sti ; jmp rsp
0x00000000000b33c8 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x0000000000131ae1 : adc eax, dword ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000018cc3f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000052a89 : adc eax, eax ; ret
0x000000000019a1f7 : adc eax, ebp ; retf
0x00000000001c21c1 : adc eax, edi ; jmp qword ptr [rax]
0x00000000001e235d : adc eax, edi ; jmp qword ptr [rcx]
0x0000000000052bc6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000001af36d : adc eax, esi ; call qword ptr [rax]
0x0000000000113b79 : adc ebp, -0x10 ; dec dword ptr [rax + 0x39] ; ret
0x00000000001ab4e5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000011a01b : adc ebp, dword ptr [rip - 0x7af0ff00] ; ret
0x00000000001c3479 : adc ebp, edi ; jmp rax
0x000000000008d1a7 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000009d104 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001bcfe1 : adc ebx, edi ; jmp qword ptr [rax]
0x000000000012584c : adc ebx, esi ; ret
0x00000000000b93fc : adc ecx, dword ptr [rax + 0x31] ; retf 0x94c
0x0000000000113022 : adc ecx, dword ptr [rax + 0x63] ; ret 0x348
0x00000000001098e1 : adc ecx, dword ptr [rax - 0x75] ; or byte ptr [rax + 0x39], cl ; retf 0x2974
0x000000000008098c : adc ecx, dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008ea2a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x0000000000043101 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a77cc : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000a4134 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x00000000000cb678 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4c10
0x00000000000bd244 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x000000000002bc64 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000000734f3 : adc ecx, dword ptr [rcx + 0x415d5b28] ; pop rsp ; ret
0x000000000014e1a0 : adc ecx, dword ptr [rdi] ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000014dcf3 : adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000001069ba : adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000b3594 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x00000000000b35b4 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x00000000000b35d4 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x00000000000b341e : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000013fa2d : adc ecx, ebp ; ret 0xfffd
0x0000000000121e4c : adc edi, dword ptr [rax + 0x130] ; syscall
0x000000000011660c : adc edi, dword ptr [rax + 0x13] ; syscall
0x00000000000448cc : adc edi, dword ptr [rax + 0x13e] ; syscall
0x00000000001166ac : adc edi, dword ptr [rax + 0x14] ; syscall
0x000000000011bb1c : adc edi, dword ptr [rax + 0x1a] ; syscall
0x00000000000e48ec : adc edi, dword ptr [rax + 0x22] ; syscall
0x00000000000e499c : adc edi, dword ptr [rax + 0x23] ; syscall
0x00000000001228ac : adc edi, dword ptr [rax + 0x2a] ; syscall
0x00000000001227dc : adc edi, dword ptr [rax + 0x2b] ; syscall
0x0000000000122cfc : adc edi, dword ptr [rax + 0x2e] ; syscall
0x0000000000122b9c : adc edi, dword ptr [rax + 0x2f] ; syscall
0x000000000011720c : adc edi, dword ptr [rax + 0x4a] ; syscall
0x00000000001172bc : adc edi, dword ptr [rax + 0x4b] ; syscall
0x0000000000110a6c : adc edi, dword ptr [rax + 0x55] ; syscall
0x000000000011014c : adc edi, dword ptr [rax + 1] ; syscall
0x00000000001108cc : adc edi, dword ptr [rax + 3] ; syscall
0x0000000000114bbc : adc edi, dword ptr [rax + 7] ; syscall
0x00000000000ec5eb : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000009fd44 : adc edi, eax ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000001bcee1 : adc edi, ebx ; call rax
0x00000000001bcfc5 : adc edi, ebx ; inc dword ptr [rax + 0x15] ; sti ; jmp qword ptr [rax]
0x00000000001bcec1 : adc edi, ebx ; jmp rax
0x00000000001bcfe5 : adc edi, ebx ; push rax ; adc al, 0xfb ; call rax
0x000000000000fcc9 : adc edx, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000002a62a : adc edx, dword ptr [rax + rbx + 0x3d8d4800] ; retf
0x00000000001ac9fe : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000121885 : adc esi, dword ptr [rcx + rax - 0x3d] ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x000000000008de23 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007ebd3 : adc esi, dword ptr [rdx + rdx - 0xa] ; ret 0x7420
0x0000000000081e79 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000001d24f5 : adc esi, ecx ; call rsp
0x00000000001c0251 : adc esi, edx ; call qword ptr [rax]
0x00000000000801e0 : adc esi, esi ; ret 0x7520
0x000000000018ce22 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000192896 : adc qword ptr [rcx + 7], rdi ; ret
0x0000000000192531 : adc qword ptr [rcx - 1], rbx ; ret
0x00000000001924f5 : adc qword ptr [rcx - 1], rdi ; ret
0x00000000001929f8 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000192d7e : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000192e1b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000192c1d : adc qword ptr [rsi - 1], rdx ; ret
0x0000000000188df0 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000008cd9 : adc r8b, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000006686e : adc rax, 0x358d4800 ; ret 0x14d6
0x00000000000a1ce9 : adc rax, 0x401f0f00 ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000550e1 : adc rax, 0xc8b4800 ; ret 0x8b49
0x0000000000052bc5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000001d482b : add ah, ah ; adc byte ptr [rcx], al ; add al, cl ; retf
0x00000000001bf3d7 : add ah, ah ; add ch, ch ; jmp qword ptr [rax]
0x00000000001db92b : add ah, ah ; add dword ptr [rcx], 0xf5bab000 ; call rdx
0x00000000001c2ec7 : add ah, ah ; and edx, edi ; jmp qword ptr [rax]
0x00000000001c1ac7 : add ah, ah ; and esi, edi ; push rsp ; ret 1
0x00000000001bec07 : add ah, ah ; fsubp st(3) ; jmp rax
0x00000000001da12b : add ah, ah ; imul eax, dword ptr [rcx], 0xf5620000 ; jmp qword ptr [rbx]
0x00000000001beea7 : add ah, ah ; in al, dx ; jmp rax
0x00000000001d013b : add ah, ah ; in eax, 0xee ; call qword ptr [rax]
0x00000000001befc7 : add ah, ah ; insb byte ptr [rdi], dx ; in al, dx ; jmp rax
0x00000000001c1837 : add ah, ah ; jp 0x1c1835 ; call rsp
0x00000000001dc59b : add ah, ah ; psadbw mm7, mm7 ; retf 0
0x00000000001bf23f : add ah, ah ; ret
0x00000000001cfa2b : add ah, ah ; ret 0
0x00000000001bf2c7 : add ah, ah ; retf 0xffec
0x00000000001c3687 : add ah, ah ; retf 0xfffd
0x00000000001e022b : add ah, ah ; retf 1
0x00000000001bf5cf : add ah, ah ; sub ebp, ebp ; call rax
0x00000000001c317f : add ah, ah ; xchg dl, bh ; jmp qword ptr [rax]
0x00000000001d2aeb : add ah, ah ; xor cl, dh ; jmp qword ptr [rcx]
0x00000000001c321f : add ah, al ; cwde ; cli ; jmp rsp
0x00000000001c0587 : add ah, al ; jg 0x1c0580 ; jmp rsp
0x00000000001c0587 : add ah, al ; jg 0x1c0581 ; jmp rsp
0x00000000001c310f : add ah, al ; jg 0x1c3111 ; call rsp
0x00000000001d5940 : add ah, al ; jmp qword ptr [rcx]
0x00000000001bdecf : add ah, al ; jno 0x1bdebd ; jmp rsp
0x00000000001cf30b : add ah, al ; mov ebx, 0x8d900000 ; sti ; call qword ptr [rax]
0x00000000001c1e3f : add ah, al ; movsxd rsi, edi ; call qword ptr [rax]
0x00000000001d374b : add ah, al ; or edx, esi ; jmp rdx
0x00000000001bf72f : add ah, al ; ret 0xffed
0x00000000001c2b4f : add ah, al ; ret 0xfff9
0x00000000001c369f : add ah, al ; retf
0x00000000001e18ab : add ah, al ; retf 0xfff7
0x00000000001c33cf : add ah, al ; retf 0xfffc
0x00000000001c067f : add ah, al ; sbb al, 0xf3 ; call rsp
0x00000000001c1327 : add ah, al ; sbb dh, dh ; call rsp
0x00000000001c136f : add ah, al ; sbb esi, esi ; jmp qword ptr [rax]
0x00000000001c6b0b : add ah, al ; xor eax, dword ptr [rax] ; add al, dh ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000000bba5e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001d8243 : add ah, bh ; add qword ptr [rax], rax ; cwde ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d49c3 : add ah, bh ; call qword ptr [rbx]
0x00000000000fb3d3 : add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001d01b3 : add ah, bh ; in eax, 0xee ; call qword ptr [rax]
0x00000000000bbb3b : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000bbaa9 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001c5335 : add ah, bh ; jmp qword ptr [rax]
0x00000000001cf243 : add ah, bh ; mov edx, 0x80580000 ; cli ; call qword ptr [rax]
0x00000000001da243 : add ah, bh ; push 1 ; add byte ptr [rax + 0x62], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001d8fd3 : add ah, bh ; retf
0x000000000000463f : add ah, bh ; retf 0x1b
0x00000000001d5043 : add ah, bh ; sbb byte ptr [rcx], al ; add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdx]
0x00000000001d2b23 : add ah, bl ; add byte ptr [rax], al ; cmp byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001c3d23 : add ah, bl ; add eax, 0x63880000 ; std ; jmp qword ptr [rdx]
0x00000000001cc3a3 : add ah, bl ; in al, dx ; call qword ptr [rsi]
0x00000000001daa23 : add ah, bl ; jb 0x1daa30 ; add al, bl ; jg 0x1daa28 ; call qword ptr [rax]
0x00000000001d79d3 : add ah, bl ; jno 0x1d79cf ; jmp rsp
0x00000000001d0123 : add ah, bl ; leave ; add byte ptr [rax], al ; fsub st(5) ; out dx, al ; jmp qword ptr [rax]
0x00000000001d5a93 : add ah, bl ; sal bl, cl ; jmp rsi
0x00000000001e1b03 : add ah, bl ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x00000000001aca27 : add ah, byte ptr [rbp + rdi - 0x55] ; retf 0xa2fe
0x0000000000192d7a : add ah, byte ptr [rdx - 0xf] ; jl 0x192dcf ; adc dword ptr [rsi + 3], edx ; ret
0x00000000000b341b : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x00000000001c9fce : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000001c3833 : add ah, ch ; add byte ptr [rax], al ; add byte ptr [rax], bh ; in al, 0xe5 ; call qword ptr [rsi]
0x00000000001d8333 : add ah, ch ; add qword ptr [r8], rax ; call 0x221d77e5
0x00000000001c6b23 : add ah, ch ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001d0163 : add ah, ch ; in eax, 0xee ; call qword ptr [rax]
0x00000000001d8283 : add ah, ch ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001cf333 : add ah, ch ; mov ebx, 0xd2b80000 ; sti ; call qword ptr [rax]
0x00000000001d65c3 : add ah, ch ; or esp, esi ; jmp qword ptr [rcx]
0x00000000001c8e33 : add ah, ch ; push rsi ; add byte ptr [rax], al ; sbb byte ptr [rdx - 0x15], ah ; call qword ptr [rax]
0x00000000001c62e3 : add ah, ch ; retf
0x00000000001dbbe3 : add ah, ch ; retf 0xfff5
0x00000000001e18c3 : add ah, ch ; retf 0xfff7
0x00000000001e29e3 : add ah, ch ; xor bh, al ; call qword ptr [rbx]
0x00000000001c6b33 : add ah, ch ; xor eax, dword ptr [rax] ; add al, bh ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000001deb03 : add ah, cl ; add bh, dh ; call qword ptr [rdi]
0x00000000001d5913 : add ah, cl ; and dword ptr [rcx], eax ; add al, cl ; ret
0x00000000001d7113 : add ah, cl ; cmp dword ptr [rcx], eax ; add al, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001cdc93 : add ah, cl ; in al, dx ; jmp qword ptr [rdx]
0x00000000001d8c63 : add ah, cl ; mov bh, 0xf4 ; jmp rax
0x00000000001d55d3 : add ah, cl ; mov bl, 0xf3 ; jmp qword ptr [rcx]
0x00000000001ce403 : add ah, cl ; or ch, ch ; call qword ptr [rcx]
0x00000000001c77d3 : add ah, cl ; ret
0x00000000001dfa13 : add ah, cl ; ret 1
0x00000000001c3edb : add ah, dh ; adc al, 0xe6 ; jmp qword ptr [rdx]
0x00000000001c024f : add ah, dh ; adc esi, edx ; call qword ptr [rax]
0x00000000001c6b4b : add ah, dh ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001d018b : add ah, dh ; in eax, 0xee ; call qword ptr [rax]
0x00000000001bf82f : add ah, dh ; in eax, dx ; jmp qword ptr [rax]
0x00000000001c3127 : add ah, dh ; jg 0x1c3129 ; call qword ptr [rax]
0x00000000001c1997 : add ah, dh ; mov ah, 0xf6 ; call rsp
0x00000000001c0977 : add ah, dh ; mov dl, 0xf4 ; jmp qword ptr [rax]
0x00000000001d0d4b : add ah, dh ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001c2cdf : add ah, dh ; out dx, eax ; stc ; jmp rax
0x00000000001da03b : add ah, dh ; push 0x60b00001 ; cmc ; jmp qword ptr [rsi]
0x00000000001c2bb7 : add ah, dh ; retf
0x00000000001cf93b : add ah, dh ; rol dword ptr [rax], 0 ; xor ch, 0xfb ; call qword ptr [rdx]
0x00000000001be48f : add ah, dh ; sbb ebp, eax ; call qword ptr [rax]
0x00000000001bf5d7 : add ah, dh ; sub ebp, ebp ; jmp rsp
0x00000000001dbc3b : add ah, dh ; test byte ptr [rcx], al ; add byte ptr [rax - 0x34], al ; cmc ; jmp rsp
0x00000000001bf6b7 : add ah, dh ; xchg ch, ch ; call rax
0x00000000001bf08f : add ah, dh ; xchg eax, ebp ; in al, dx ; call rax
0x00000000001c693b : add ah, dh ; xor dword ptr [rax], eax ; add al, ah ; fucom st(7) ; call qword ptr [rsi]
0x00000000001c005f : add ah, dl ; and ecx, esi ; jmp qword ptr [rax]
0x00000000001c2f7f : add ah, dl ; cli ; jmp rsp
0x00000000001d161b : add ah, dl ; fiadd word ptr [rax] ; add al, dl ; xchg eax, esi ; call qword ptr [rax]
0x00000000001d71cb : add ah, dl ; hlt ; jmp qword ptr [rcx]
0x00000000001ca11b : add ah, dl ; imul eax, dword ptr [rax], 0xebac7000 ; call qword ptr [rdx]
0x00000000001bef8f : add ah, dl ; in al, dx ; jmp rsp
0x00000000001d06ab : add ah, dl ; jae 0x1d06a2 ; call qword ptr [rax]
0x00000000001c2377 : add ah, dl ; jb 0x1c2377 ; jmp qword ptr [rax]
0x00000000001beb4f : add ah, dl ; je 0x1beb41 ; jmp qword ptr [rax]
0x00000000001be79f : add ah, dl ; jg 0x1be78f ; jmp rsp
0x00000000001d7cbb : add ah, dl ; jl 0x1d7cb7 ; jmp qword ptr [rcx]
0x00000000001e181b : add ah, dl ; loopne 0x1e1826 ; add byte ptr [rax], ah ; retf 0xfff7
0x00000000001c2447 : add ah, dl ; mov al, 0xf8 ; jmp rax
0x00000000001cf21b : add ah, dl ; mov edx, 0xd4500000 ; in eax, dx ; call qword ptr [rax]
0x00000000001da21b : add ah, dl ; push 1 ; add byte ptr [rax + 0x62], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001c361f : add ah, dl ; ret
0x00000000001c81eb : add ah, dl ; retf
0x00000000001bf2bf : add ah, dl ; retf 0xffec
0x00000000001c078f : add ah, dl ; retf 0xfff3
0x00000000001c0b2f : add ah, dl ; sbb al, 0xf5 ; call rax
0x00000000001c026f : add ah, dl ; sbb dl, dh ; jmp qword ptr [rax]
0x00000000001bf767 : add ah, dl ; shr ebp, cl ; jmp rax
0x00000000001c621b : add ah, dl ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; retf 0xffe7
0x00000000001d52db : add ah, dl ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001e2f1b : add ah, dl ; test dword ptr [rcx], 0xfb27d000 ; call rax
0x00000000001d160b : add ah, dl ; xchg eax, esi ; call qword ptr [rax]
0x00000000001d2a9b : add ah, dl ; xor cl, dh ; jmp qword ptr [rcx]
0x00000000001c1c1f : add ah, dl ; xor edi, esi ; call rsp
0x0000000000154a16 : add al, 0 ; add al, ch ; ret 0xecc7
0x00000000000c4906 : add al, 0 ; add al, ch ; ret 0xf6ba
0x00000000001359ed : add al, 0 ; add al, ch ; retf
0x00000000000275a3 : add al, 0 ; add bh, dh ; ret 0
0x0000000000027597 : add al, 0 ; add bh, dh ; ret 0xf800
0x000000000002b29f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000009476e : add al, 0 ; add byte ptr [rax + 0x39], cl ; ret 0xf275
0x0000000000085a50 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000010541c : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002d37b : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000092682 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000018503d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007d606 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000189b89 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185061 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000bcf4a : add al, 0 ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000000e97a : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000047f2 : add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000a7be9 : add al, 0 ; add byte ptr [rax], al ; jmp 0xa3e8a
0x00000000000d0e63 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000f29bf : add al, 0 ; add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xf2965
0x000000000010f76f : add al, 0 ; add byte ptr [rax], al ; syscall
0x000000000019782b : add al, 0 ; add byte ptr [rbp + rcx*4 + 0x47], al ; add ecx, dword ptr [rbp - 0x77] ; retf
0x00000000000ab4e8 : add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015593a : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007b245 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000039511 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000003a114 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x00000000000393d0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000000ef506 : add al, 0 ; add byte ptr [rcx + 0x39], cl ; retf 0x1bd
0x00000000001988f2 : add al, 0 ; add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x000000000015ee12 : add al, 0 ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000a1c3d : add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000c9488 : add al, 0 ; add byte ptr [rcx], al ; retf 0x8d49
0x000000000016711c : add al, 0 ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 5 ; push rcx ; retf
0x00000000000f959b : add al, 0 ; add byte ptr [rdi + rcx - 0x4a], al ; or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000009ec29 : add al, 0 ; add byte ptr [rdx + rbp - 9], dh ; ret 0
0x000000000012a159 : add al, 0 ; add byte ptr [rdx], al ; call rcx
0x00000000000f6783 : add al, 0 ; add dh, dh ; ret 0x7420
0x000000000013190f : add al, 0 ; cmovne rax, rdx ; ret
0x00000000000e4907 : add al, 0 ; mov edi, eax ; mov eax, 0x22 ; syscall
0x00000000000eb0f1 : add al, 0 ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x00000000001e355b : add al, 0 ; ret 0x504
0x000000000004fb6b : add al, 0x10 ; add bl, dh ; ret
0x0000000000150c40 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x0000000000030209 : add al, 0x10 ; ret
0x0000000000125775 : add al, 0x10 ; shr eax, cl ; and eax, 1 ; ret
0x00000000001e235c : add al, 0x11 ; clc ; jmp qword ptr [rcx]
0x000000000012584b : add al, 0x11 ; ret
0x00000000000bbaf4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000a9eb1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x00000000000a9e4a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000015c4c8 : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000003e9d5 : add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003e87a : add al, 0x24 ; add rsp, 0x28 ; ret
0x0000000000199abe : add al, 0x24 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000199769 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000124e44 : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000124ea5 : add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000011ce23 : add al, 0x24 ; jne 0x11ce34 ; add rsp, 0x18 ; ret
0x0000000000044437 : add al, 0x24 ; jne 0x44448 ; add rsp, 0x18 ; ret
0x0000000000044484 : add al, 0x24 ; jne 0x44495 ; add rsp, 0x18 ; ret
0x00000000000444d6 : add al, 0x24 ; jne 0x444e7 ; add rsp, 0x18 ; ret
0x0000000000044523 : add al, 0x24 ; jne 0x44534 ; add rsp, 0x18 ; ret
0x0000000000044576 : add al, 0x24 ; jne 0x44587 ; add rsp, 0x18 ; ret
0x00000000000445c3 : add al, 0x24 ; jne 0x445d4 ; add rsp, 0x18 ; ret
0x00000000000bd2b3 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001643bc : add al, 0x24 ; movaps xmmword ptr [rsp + 0x10], xmm0 ; call 0x1106c9
0x0000000000130bd3 : add al, 0x25 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000021f2a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001c1af8 : add al, 0x25 ; idiv edi ; insb byte ptr [rdi], dx ; ret
0x00000000000547fb : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x54847 ; leave ; ret
0x0000000000021bac : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000003ecdb : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000031899 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x0000000000080509 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x0000000000105d50 : add al, 0x28 ; call r12
0x00000000001410d1 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x00000000000ba959 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000ba96b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000fd651 : add al, 0x31 ; idiv byte ptr [rcx] ; retf
0x000000000010e9c7 : add al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b151e : add al, 0x31 ; ret
0x00000000000b141a : add al, 0x37 ; ret
0x00000000001c01ec : add al, 0x38 ; add dword ptr [rax], eax ; add al, 0x8a ; int1 ; jmp qword ptr [rax]
0x00000000001c0108 : add al, 0x38 ; int1 ; jmp qword ptr [rax]
0x00000000001d704c : add al, 0x39 ; add dword ptr [rax], eax ; mov al, 0x47 ; hlt ; call qword ptr [rdx]
0x0000000000064ce6 : add al, 0x39 ; ret
0x000000000008457f : add al, 0x3a ; ret
0x00000000001aab06 : add al, 0x3d ; retf
0x00000000001585e8 : add al, 0x3f ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001c0ce8 : add al, 0x40 ; cmc ; jmp rax
0x00000000000876a2 : add al, 0x41 ; mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x87666
0x000000000013bd6c : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b7efb : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000b8d3b : add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x00000000001413de : add al, 0x48 ; lea eax, [rdi + rsi + 8] ; ret
0x0000000000181379 : add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x000000000018138b : add al, 0x48 ; lea eax, [rdx + 5] ; ret
0x0000000000081ae8 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000001742aa : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x000000000008265c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000827f2 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000000bd5d9 : add al, 0x48 ; mov eax, ecx ; ret
0x00000000000a859d : add al, 0x48 ; mov eax, edi ; ret
0x00000000000b17c4 : add al, 0x48 ; xor eax, eax ; ret
0x00000000000bdd58 : add al, 0x4c ; lea ecx, [rsp + 0x20] ; call rbx
0x000000000002a8da : add al, 0x4d ; cmp ebp, ebx ; jb 0x2a950 ; mov rdx, rax ; jmp 0x2a8a7
0x00000000001c0d28 : add al, 0x50 ; cmc ; jmp qword ptr [rax]
0x0000000000130064 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001d75dc : add al, 0x5d ; hlt ; call rsi
0x00000000001da07c : add al, 0x61 ; cmc ; jmp qword ptr [rbx]
0x0000000000181387 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000b34ac : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000002bc62 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000027f29 : add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000000bd341 : add al, 0x74 ; fiadd word ptr [rcx + 0x39] ; sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x000000000010f484 : add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x0000000000197ada : add al, 0x74 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x0000000000043e4a : add al, 0x75 ; add eax, 0x18c48348 ; ret
0x0000000000133414 : add al, 0x75 ; jmp 0xffffffffc40bbd69
0x00000000000fcd92 : add al, 0x75 ; or dword ptr [rbx - 0x7af00002], eax ; ret 9
0x00000000000bcfa2 : add al, 0x75 ; ret
0x00000000000d87f1 : add al, 0x75 ; ret 0x8948
0x000000000014dd03 : add al, 0x75 ; sbb cl, byte ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000001c0b9c : add al, 0x76 ; add dword ptr [rax], eax ; xor al, 0x22 ; cmc ; jmp qword ptr [rax]
0x0000000000114a42 : add al, 0x77 ; or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00000000000305d0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000305f0 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000030530 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000305b0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000304d0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000030570 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000030510 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000030550 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000030670 : add al, 0x78 ; and eax, 1 ; ret
0x00000000000304f0 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x0000000000030590 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x00000000000304b0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000bc094 : add al, 0x80 ; sub eax, dword ptr [r8 + r9*4] ; je 0xbc081 ; ret
0x00000000000737d4 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000018676b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000188043 : add al, 0x81 ; sub eax, edx ; ret
0x000000000002240d : add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000000bc048 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0xbc038 ; ret
0x00000000000ae887 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000000a7168 : add al, 0x83 ; clc ; add dword ptr [rbp + 0x19], eax ; fild dword ptr [rcx - 0x7d] ; ret
0x0000000000074bde : add al, 0x83 ; clc ; pop rbp ; cmove r8, rdx ; jmp 0x74c03
0x00000000000a3e53 : add al, 0x83 ; cli ; add dword ptr [rbp + 0x19], eax ; fild dword ptr [rcx - 0x7d] ; ret
0x00000000000a4ec3 : add al, 0x83 ; cli ; add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x8303
0x00000000001413b0 : add al, 0x83 ; loopne 0x141437 ; ret
0x00000000000875e7 : add al, 0x83 ; loopne 0x875f4 ; mov edx, eax ; mov eax, edx ; ret
0x00000000000876a6 : add al, 0x83 ; loopne 0x876b0 ; mov edx, eax ; jmp 0x87662
0x00000000000876a5 : add al, 0x83 ; loopne 0x876b1 ; mov edx, eax ; jmp 0x87663
0x0000000000087796 : add al, 0x83 ; loopne 0x877a0 ; mov edx, eax ; jmp 0x87752
0x0000000000087795 : add al, 0x83 ; loopne 0x877a1 ; mov edx, eax ; jmp 0x87753
0x000000000008a1f4 : add al, 0x83 ; loopne 0x8a1fd ; ret
0x0000000000064bab : add al, 0x83 ; ret
0x00000000000ee499 : add al, 0x83 ; ret 0x4401
0x00000000000f606a : add al, 0x83 ; ret 0x4801
0x000000000014274b : add al, 0x83 ; ret 0xf01
0x000000000003f63b : add al, 0x83 ; ret 0xf701
0x000000000010ec27 : add al, 0x83 ; retf 0xe803
0x00000000000bc0e2 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0xbc0e0 ; ret
0x00000000000bd52e : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000be719 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000005bd6f : add al, 0x86 ; add rax, rdi ; jmp rax
0x00000000000599d3 : add al, 0x86 ; add rax, rdx ; jmp rax
0x000000000007cc7c : add al, 0x86 ; add rax, rsi ; jmp rax
0x00000000001c3160 : add al, 0x86 ; cli ; call qword ptr [rax]
0x0000000000069f12 : add al, 0x87 ; add rax, rcx ; jmp rax
0x000000000007d418 : add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000bd25e : add al, 0x87 ; test r8d, r8d ; jne 0xbd238 ; ret
0x0000000000181376 : add al, 0x88 ; add al, 0x48 ; lea eax, [rdx + 4] ; ret
0x00000000000b348b : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000bc098 : add al, 0x88 ; je 0xbc07d ; ret
0x000000000011274e : add al, 0x89 ; ret
0x0000000000101140 : add al, 0x89 ; ret 0xb60f
0x000000000002c346 : add al, 0x89 ; retf
0x0000000000124b79 : add al, 0x89 ; retf 0x8d4d
0x00000000001c01f0 : add al, 0x8a ; int1 ; jmp qword ptr [rax]
0x00000000000bc04b : add al, 0x8a ; je 0xbc035 ; ret
0x00000000000b3474 : add al, 0x8b ; add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000000bd248 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000001c2a00 : add al, 0x8c ; stc ; jmp rsp
0x00000000000f5f9a : add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000687cd : add al, 0x90 ; add rax, rcx ; jmp rax
0x000000000005def4 : add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000005be0d : add al, 0x90 ; add rax, rsi ; jmp rax
0x00000000001bf6f0 : add al, 0x93 ; in eax, dx ; call rsp
0x00000000001c31d0 : add al, 0x95 ; cli ; call qword ptr [rax]
0x00000000000bbac3 : add al, 0x96 ; add rax, rsi ; jmp rax
0x00000000000dc4b4 : add al, 0x97 ; add rax, rdi ; jmp rax
0x00000000001d7d8c : add al, 0x99 ; hlt ; call qword ptr [rax]
0x00000000000e6ae5 : add al, 0x9a ; add rax, rdx ; jmp rax
0x0000000000125627 : add al, 0xa ; ret
0x00000000001cf52c : add al, 0xa0 ; out dx, al ; jmp rbx
0x00000000001d834c : add al, 0xa1 ; hlt ; jmp qword ptr [rcx]
0x000000000006b811 : add al, 0xa2 ; add rax, rdx ; jmp rax
0x00000000000f1733 : add al, 0xa6 ; add rax, rsi ; jmp rax
0x000000000008e937 : add al, 0xa8 ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x000000000000236d : add al, 0xaa ; ret
0x00000000001c0958 : add al, 0xad ; hlt ; jmp rsp
0x000000000005c463 : add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000000f17e3 : add al, 0xb1 ; add rax, rcx ; jmp rax
0x000000000014b8b7 : add al, 0xb1 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000e621d : add al, 0xb2 ; add rax, rdx ; jmp rax
0x00000000001d55fc : add al, 0xb4 ; jmp qword ptr [rcx]
0x0000000000030206 : add al, 0xb7 ; mov eax, dword ptr [rax + rdx] ; ret
0x000000000015df23 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000030858 : add al, 0xb8 ; ret
0x00000000000ebb71 : add al, 0xba ; add rax, rdx ; jmp rax
0x00000000000bba09 : add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000001c2480 : add al, 0xc2 ; clc ; inc eax ; std ; add dword ptr [rax], eax ; push rsp ; ret
0x00000000001c3628 : add al, 0xc4 ; std ; jmp rax
0x00000000001dfc4c : add al, 0xc5 ; add dword ptr [rax], eax ; rcr byte ptr [rbx - 9], 1 ; call qword ptr [rdi]
0x00000000001bf270 : add al, 0xc5 ; in al, dx ; call rsp
0x00000000001c1130 : add al, 0xc6 ; cmc ; jmp qword ptr [rax]
0x00000000001bf738 : add al, 0xc7 ; in eax, dx ; jmp rax
0x00000000001d014c : add al, 0xca ; add byte ptr [rax], al ; loopne 0x1d013e ; out dx, al ; call qword ptr [rdx]
0x00000000000df183 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001674b7 : add al, 0xd7 ; xor eax, eax ; ret
0x00000000001aed0c : add al, 0xe5 ; in al, dx ; jmp qword ptr [rsi]
0x00000000001d01dc : add al, 0xe6 ; out dx, al ; call qword ptr [rax]
0x00000000000cbc08 : add al, 0xe8 ; ret 0x599
0x000000000002d4a8 : add al, 0xe8 ; test rax, rax ; je 0x2d4b8 ; call rax
0x0000000000029230 : add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x0000000000073e85 : add al, 0xe9 ; ret 0xfffa
0x00000000001449f5 : add al, 0xe9 ; retf
0x000000000006126d : add al, 0xe9 ; retf 0xfffb
0x00000000001c3728 : add al, 0xe9 ; std ; jmp rsp
0x00000000000f619d : add al, 0xeb ; or dword ptr [rax - 0x7d], ecx ; ret 0x4c04
0x00000000000304d5 : add al, 0xf ; mov bh, 0xc0 ; ret
0x000000000002ac6c : add al, 0xf ; mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000000a8501 : add al, 0xf ; mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a86b3 : add al, 0xf ; mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000018487d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000033d92 : add al, 0xf ; retf
0x000000000015dbe9 : add al, 0xf ; retf 0x1689
0x000000000015dbb9 : add al, 0xf ; retf 0x5089
0x000000000018a19b : add al, 0xf ; sub rax, rsi ; ret
0x00000000000bcc95 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000b714b : add al, 0xf ; test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x00000000001066fe : add al, 0xf ; xchg eax, esp ; ret
0x00000000001d0ecd : add al, 0xf0 ; jmp rcx
0x0000000000174613 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000010fb5b : add al, 0xf3 ; ret
0x0000000000113b5b : add al, 0xf6 ; ret
0x00000000001bd05d : add al, 0xfb ; jmp qword ptr [rax]
0x00000000001d3b75 : add al, 1 ; add al, ch ; push -0xe ; jmp rax
0x00000000000452f7 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000140a5e : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000bccc8 : add al, 1 ; add byte ptr [rax], al ; ret
0x0000000000111474 : add al, 1 ; add byte ptr [rax], al ; syscall
0x000000000007f727 : add al, 1 ; je 0x7f759 ; mov rax, rdx ; pop rbx ; ret
0x0000000000088f37 : add al, 1 ; je 0x88f69 ; mov rax, rdx ; pop rbx ; ret
0x000000000007bdf0 : add al, 1 ; ret
0x000000000007be62 : add al, 1 ; xor eax, eax ; ret
0x000000000006c7c8 : add al, 2 ; add dword ptr [rcx - 0x7d], ecx ; ret
0x00000000001c2df0 : add al, 2 ; cli ; call rax
0x00000000000a895c : add al, 3 ; add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xf6e8
0x00000000001912c7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001c71dc : add al, 3 ; cli ; jmp qword ptr [rcx]
0x00000000001c2658 : add al, 3 ; stc ; call qword ptr [rax]
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x00000000000b7298 : add al, 7 ; add byte ptr [rax], al ; ret
0x00000000000b0f4d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000b1168 : add al, 7 ; ret
0x0000000000089393 : add al, 8 ; add byte ptr [rax], al ; ret
0x00000000000aa01f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x0000000000143586 : add al, 9 ; retf 0xfa81
0x00000000001d275f : add al, ah ; and cl, dh ; jmp qword ptr [rcx]
0x00000000001d5927 : add al, ah ; and dword ptr [rcx], eax ; add ah, ah ; ret
0x00000000001c693f : add al, ah ; fucom st(7) ; call qword ptr [rsi]
0x00000000001d014f : add al, ah ; in eax, 0xee ; call qword ptr [rdx]
0x000000000000e977 : add al, ah ; in eax, dx ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009a3f : add al, ah ; in eax, dx ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000000ad47 : add al, ah ; lock or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001cf027 : add al, ah ; mov eax, 0xc9440000 ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001cf527 : add al, ah ; mov ebp, 0xa0040000 ; out dx, al ; jmp rbx
0x00000000001c62cf : add al, ah ; retf
0x00000000001d8207 : add al, al ; add qword ptr [rax], rax ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000000c6a2a : add al, al ; clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xb
0x00000000001d1607 : add al, al ; fiadd word ptr [rax] ; add ah, dl ; xchg eax, esi ; call qword ptr [rax]
0x00000000001d5b9f : add al, al ; out 0xf3, eax ; jmp rax
0x000000000001b1ff : add al, al ; ret
0x000000000000718f : add al, al ; retf 0x15
0x00000000001c5007 : add al, al ; sbb byte ptr [rax], al ; add byte ptr [rsp + rbx*8 - 0x1a], al ; jmp rdx
0x00000000001cd5cf : add al, al ; shr esp, 1 ; call rsi
0x00000000001a4ae7 : add al, al ; sldt word ptr [rax] ; ret
0x00000000001d483f : add al, bh ; adc byte ptr [rcx], al ; add bh, dl ; retf
0x00000000001d7c3f : add al, bh ; add dword ptr [rax], r8d ; sub al, 0x7c ; hlt ; jmp qword ptr [rcx]
0x00000000001d8797 : add al, bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001dd03f : add al, bh ; cwde ; add dword ptr [rax], eax ; fsubr qword ptr [rcx - 0xa] ; call rax
0x00000000001da13f : add al, bh ; imul eax, dword ptr [rcx], 0xf5621c00 ; jmp qword ptr [rbx]
0x00000000001cc1e7 : add al, bh ; in al, dx ; call qword ptr [rsi]
0x00000000001c6b37 : add al, bh ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000001d01c7 : add al, bh ; in eax, 0xee ; call qword ptr [rdx]
0x00000000000bbb55 : add al, bh ; jg 0xbbb57 ; int1 ; mov eax, eax ; ret
0x00000000001db33f : add al, bh ; jnp 0x1db34c ; add byte ptr [rcx + rbx*4], bh ; cmc ; call qword ptr [rdx]
0x00000000001cfa3f : add al, bh ; ret 0
0x00000000000045df : add al, bh ; retf 0x1b
0x00000000001d5377 : add al, bh ; stosb byte ptr [rdi], al ; jmp qword ptr [rsi]
0x00000000001c5607 : add al, bh ; xchg bh, ah ; call qword ptr [rcx]
0x00000000001c3e57 : add al, bl ; adc dh, ah ; call qword ptr [rax]
0x00000000001d0e97 : add al, bl ; add esi, eax ; call rdx
0x00000000001d0127 : add al, bl ; in eax, 0xee ; jmp qword ptr [rax]
0x00000000001daa27 : add al, bl ; jg 0x1daa24 ; call qword ptr [rax]
0x00000000001d50d7 : add al, bl ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rcx]
0x00000000000b759b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001e3aa3 : add al, bl ; or byte ptr [rax], al ; add byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; retf
0x00000000001c7bf7 : add al, bl ; or ch, cl ; jmp qword ptr [rdx]
0x00000000001d66a7 : add al, bl ; or esi, esp ; jmp qword ptr [rcx]
0x00000000001d8d97 : add al, bl ; ret 0xfff4
0x000000000011cba7 : add al, bl ; retf 0xed83
0x00000000001d511f : add al, bl ; sbb dword ptr [rcx], eax ; add byte ptr [rbp - 0xd], ch ; jmp qword ptr [rcx]
0x00000000001c6b1f : add al, bl ; xor eax, dword ptr [rax] ; add ah, ch ; in eax, 0xe7 ; call qword ptr [rdx]
0x000000000008ce86 : add al, bpl ; ret
0x0000000000096c0e : add al, bpl ; retf
0x000000000003cc32 : add al, byte ptr [eax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000018dd22 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001c30d5 : add al, byte ptr [r8] ; and al, 0x7a ; cli ; call rsp
0x00000000001c2f75 : add al, byte ptr [r8] ; mov ah, 0x4d ; cli ; call rax
0x00000000001c30dd : add al, byte ptr [r8] ; mov ah, 0x7c ; cli ; jmp qword ptr [rax]
0x00000000000b6441 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x00000000001c299e : add al, byte ptr [rax] ; adc al, 0x81 ; stc ; jmp rsp
0x00000000001c315e : add al, byte ptr [rax] ; add al, 0x86 ; cli ; call qword ptr [rax]
0x00000000001c29fe : add al, byte ptr [rax] ; add al, 0x8c ; stc ; jmp rsp
0x00000000001c31ce : add al, byte ptr [rax] ; add al, 0x95 ; cli ; call qword ptr [rax]
0x00000000001c2dee : add al, byte ptr [rax] ; add al, 2 ; cli ; call rax
0x00000000001c2656 : add al, byte ptr [rax] ; add al, 3 ; stc ; call qword ptr [rax]
0x000000000002adfe : add al, byte ptr [rax] ; add al, ch ; retf 0x55
0x0000000000028b93 : add al, byte ptr [rax] ; add al, ch ; xor eax, 0x89000078 ; retf 0xe283
0x0000000000030627 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000002996a : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; retf 0x8341
0x000000000002959d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000009573d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; retf 0x820f
0x000000000005af23 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f73bf : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000fcf14 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf 0x8d48
0x00000000000ab9f2 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000068b4b : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; jmp rax
0x00000000001662de : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000013fdd3 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; retf 0xe083
0x000000000009ade6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000001990e9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000d57ee : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000097d27 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000007fabd : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000192f14 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000013f7a0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000000000028d3b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000500d6 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000001851dd : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c0d7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000187e01 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185201 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000003cc33 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x00000000000300f2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x0000000000043739 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x00000000001cfb0c : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret
0x0000000000153aff : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x000000000015679f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000155e6f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x00000000000d48b0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x212ce
0x000000000015a1d3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000000a7e68 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0xa48c2
0x00000000000a8013 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0xa4a80
0x000000000011d1d9 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x000000000003ee8c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000159687 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015c4ca : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000012416d : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000011fffa : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000054c98 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011fab2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000130e1d : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x000000000019c32d : add al, byte ptr [rax] ; add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x189
0x00000000000ab668 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000082f99 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004056c : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000194c74 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000f984c : add al, byte ptr [rax] ; add byte ptr [rcx + 0xf], al ; mov dh, 0xc ; and al, 0x89 ; retf 0xe183
0x000000000009ba02 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000019c2cd : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000000f57ae : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000011d3e0 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; retf
0x000000000010d4e5 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000014a6bd : add al, byte ptr [rax] ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000197aa2 : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0x7407
0x00000000000e80d4 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000001e4c11 : add al, byte ptr [rax] ; add byte ptr [rdx + 7], al ; add byte ptr [rax], al ; ret
0x0000000000092546 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000001c30d6 : add al, byte ptr [rax] ; and al, 0x7a ; cli ; call rsp
0x00000000001c2bbe : add al, byte ptr [rax] ; and al, 0xcc ; stc ; call rax
0x00000000001c2c2e : add al, byte ptr [rax] ; and al, 0xe0 ; stc ; call qword ptr [rax]
0x00000000001c3126 : add al, byte ptr [rax] ; hlt ; jg 0x1c312a ; call qword ptr [rax]
0x00000000001c2cde : add al, byte ptr [rax] ; hlt ; out dx, eax ; stc ; jmp rax
0x00000000001c2bb6 : add al, byte ptr [rax] ; hlt ; retf
0x00000000001c2ec6 : add al, byte ptr [rax] ; in al, 0x21 ; cli ; jmp qword ptr [rax]
0x00000000001c317e : add al, byte ptr [rax] ; in al, 0x86 ; cli ; jmp qword ptr [rax]
0x00000000001c2e46 : add al, byte ptr [rax] ; in al, 5 ; cli ; jmp qword ptr [rax]
0x00000000001c2736 : add al, byte ptr [rax] ; je 0x1c275d ; stc ; call rsp
0x00000000001c2f76 : add al, byte ptr [rax] ; mov ah, 0x4d ; cli ; call rax
0x00000000001c30de : add al, byte ptr [rax] ; mov ah, 0x7c ; cli ; jmp qword ptr [rax]
0x00000000001c24d6 : add al, byte ptr [rax] ; mov ah, 0xd6 ; clc ; jmp rax
0x00000000001c24f6 : add al, byte ptr [rax] ; mov ah, 0xd8 ; clc ; call qword ptr [rax]
0x00000000001c25e6 : add al, byte ptr [rax] ; mov ah, 0xf0 ; clc ; jmp qword ptr [rax]
0x000000000010f68e : add al, byte ptr [rax] ; mov eax, 0x84 ; syscall
0x000000000013cfd2 : add al, byte ptr [rax] ; mov rdi, rbp ; call r12
0x00000000001c2d5e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; stc ; jmp rax
0x0000000000199c32 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000019772a : add al, byte ptr [rax] ; movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x000000000018ffdb : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000111c1c : add al, byte ptr [rax] ; nop ; mov eax, 0x56 ; syscall
0x00000000001c2e76 : add al, byte ptr [rax] ; or dl, bh ; jmp rsp
0x0000000000139929 : add al, byte ptr [rax] ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000014128b : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001c2a1e : add al, byte ptr [rax] ; popfq ; stc ; jmp qword ptr [rax]
0x00000000001c304e : add al, byte ptr [rax] ; push rsp ; pop rbp ; cli ; call qword ptr [rax]
0x00000000001c2b46 : add al, byte ptr [rax] ; push rsp ; ret 0xfff9
0x000000000014393a : add al, byte ptr [rax] ; ret
0x00000000001c370e : add al, byte ptr [rax] ; sar ebp, 1 ; call rsp
0x00000000001c2dae : add al, byte ptr [rax] ; test bh, bh ; stc ; call rax
0x00000000001c2ebe : add al, byte ptr [rax] ; test byte ptr [rcx], ah ; cli ; call rax
0x00000000001c2d1e : add al, byte ptr [rax] ; test cl, bh ; stc ; call rax
0x00000000001c2b86 : add al, byte ptr [rax] ; test cl, cl ; stc ; jmp rax
0x00000000001c3146 : add al, byte ptr [rax] ; test edx, r15d ; call rsp
0x00000000001c29c6 : add al, byte ptr [rax] ; xchg cl, r15b ; call rsp
0x00000000001c2f3e : add al, byte ptr [rax] ; xchg eax, esp ; cli ; call rax
0x00000000001c27de : add al, byte ptr [rax] ; xor al, 0x3f ; stc ; call qword ptr [rax]
0x00000000001c306e : add al, byte ptr [rax] ; xor al, 0x63 ; cli ; jmp rax
0x00000000001c36fe : add al, byte ptr [rax] ; xor al, 0xd0 ; std ; jmp qword ptr [rax]
0x0000000000056e00 : add al, byte ptr [rbp + 0x39] ; retf 0x6577
0x000000000004aedd : add al, byte ptr [rbp + 0x39] ; retf 0x6677
0x00000000000edc9f : add al, byte ptr [rbp - 0x77] ; ret
0x00000000000a4e90 : add al, byte ptr [rbx + 0x194501fb] ; fild dword ptr [rcx - 0x7d] ; ret
0x00000000000a41d2 : add al, byte ptr [rbx + 0x194801fa] ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000000a4e9a : add al, byte ptr [rbx + 0x194801fb] ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000000a6cab : add al, byte ptr [rbx + 0x194d01fb] ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8303
0x000000000011dab5 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000000efee2 : add al, byte ptr [rbx - 0x763cf740] ; fucomip st(0) ; ret 0x34f
0x00000000000e85a9 : add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x00000000001d3bee : add al, byte ptr [rbx] ; ret
0x00000000001306ee : add al, byte ptr [rcx + 0x39] ; ret
0x00000000000f2e10 : add al, byte ptr [rcx + 0x39] ; retf
0x000000000003f64c : add al, byte ptr [rcx + 0xe1] ; adc byte ptr [rdi], cl ; ret 0x8b48
0x0000000000064ce2 : add al, byte ptr [rcx - 0x75] ; add al, 0x39 ; ret
0x000000000012ca43 : add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x0000000000140a88 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000000000010fbe1 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001c3725 : add al, byte ptr [rcx] ; add byte ptr [rcx + rbp*8], al ; std ; jmp rsp
0x00000000001bf8dd : add al, byte ptr [rcx] ; add byte ptr [rsp + rdi*8], dh ; in eax, dx ; call rsp
0x00000000001c5ff5 : add al, byte ptr [rdx] ; ret 0xb00e
0x00000000001c5582 : add al, byte ptr [rdx] ; retf 0xe0a
0x00000000000a89fa : add al, byte ptr [rsi + 0x3948fff7] ; ret
0x00000000000b739a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000f73be : add al, byte ptr cs:[rax] ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000001c2ec5 : add al, byte ptr ds:[rax] ; in al, 0x21 ; cli ; jmp qword ptr [rax]
0x00000000001c2ebd : add al, byte ptr ds:[rax] ; test byte ptr [rcx], ah ; cli ; call rax
0x00000000001c2d1d : add al, byte ptr ss:[rax] ; test cl, bh ; stc ; call rax
0x0000000000113b77 : add al, ch ; adc ebp, -0x10 ; dec dword ptr [rax + 0x39] ; ret
0x00000000001d782f : add al, ch ; add dword ptr [rax], eax ; push -0xc ; jmp rax
0x00000000001e606f : add al, ch ; add eax, 0x5700000 ; add byte ptr [rax], al ; retf 7
0x00000000001d822f : add al, ch ; add qword ptr [rax], rax ; jl 0x1d81dd ; hlt ; jmp qword ptr [rcx]
0x00000000001be2a9 : add al, ch ; call rax
0x00000000000e4421 : add al, ch ; cdq ; ret 4
0x00000000001d9e97 : add al, ch ; cmc ; jmp qword ptr [rsi]
0x0000000000023b22 : add al, ch ; cwde ; retf
0x00000000001cdca7 : add al, ch ; in al, dx ; jmp qword ptr [rcx]
0x00000000001d0177 : add al, ch ; in eax, 0xee ; call qword ptr [rdx]
0x0000000000094fa6 : add al, ch ; int 0xc3
0x00000000000f52fa : add al, ch ; loopne 0xf52c4 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001d55e7 : add al, ch ; mov bl, 0xf3 ; jmp qword ptr [rcx]
0x00000000001cf22f : add al, ch ; mov edx, 0xd44c0000 ; in eax, dx ; jmp qword ptr [rsi]
0x0000000000029bc1 : add al, ch ; or dword ptr [rax], ebp ; add byte ptr [rcx - 0x77], al ; ret 0x5be9
0x00000000001285af : add al, ch ; or ecx, dword ptr [rbp - 0x76b70011] ; ret 0x8948
0x0000000000021372 : add al, ch ; pop rax ; lock add byte ptr [rax], al ; ret
0x0000000000095292 : add al, ch ; pop rax ; mov dh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000010d151 : add al, ch ; pop rcx ; mov dh, 0xf4 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000023c61 : add al, ch ; pop rcx ; retf 0x10
0x00000000000c4701 : add al, ch ; pop rcx ; retf 0xfff5
0x0000000000066e70 : add al, ch ; pop rdx ; mov ah, 1 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e6aae : add al, ch ; pop rsp ; out 0xf5, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000e63f2 : add al, ch ; push -0x76fffd6d ; ret 0xc748
0x00000000001d3b77 : add al, ch ; push -0xe ; jmp rax
0x0000000000133b65 : add al, ch ; push rbp ; retf
0x00000000000e4333 : add al, ch ; push rdi ; ret
0x0000000000024e07 : add al, ch ; ret
0x0000000000095bc8 : add al, ch ; ret 0x9aa
0x0000000000042628 : add al, ch ; ret 0xa43
0x0000000000154a18 : add al, ch ; ret 0xecc7
0x000000000002bee8 : add al, ch ; ret 0xefb
0x0000000000117ff8 : add al, ch ; ret 0xf092
0x00000000000c7708 : add al, ch ; ret 0xf68c
0x00000000000c4908 : add al, ch ; ret 0xf6ba
0x00000000001544f8 : add al, ch ; ret 0xfdc1
0x0000000000049108 : add al, ch ; ret 0xfe72
0x0000000000154f58 : add al, ch ; ret 0xff6c
0x0000000000098128 : add al, ch ; ret 0xff87
0x0000000000062d8f : add al, ch ; retf
0x00000000000264b0 : add al, ch ; retf 0x10e7
0x0000000000155d30 : add al, ch ; retf 0x38
0x000000000002ae00 : add al, ch ; retf 0x55
0x0000000000089130 : add al, ch ; retf 0x866
0x0000000000087ff0 : add al, ch ; retf 0xa86
0x00000000000815c0 : add al, ch ; retf 0xaf0
0x0000000000159710 : add al, ch ; retf 0xec7a
0x00000000001045f8 : add al, ch ; retf 0xf1cc
0x000000000010ad00 : add al, ch ; retf 0xf256
0x00000000000c7800 : add al, ch ; retf 0xf68b
0x00000000001676f0 : add al, ch ; retf 0xfc8f
0x000000000004f8f0 : add al, ch ; retf 0xfd19
0x0000000000102820 : add al, ch ; retf 0xfe41
0x00000000001495c0 : add al, ch ; retf 0xfe70
0x00000000000245f8 : add al, ch ; retf 0xffcc
0x00000000000ff800 : add al, ch ; retf 0xffe0
0x00000000000d25a0 : add al, ch ; retf 0xffef
0x00000000000292ad : add al, ch ; sbb eax, 0x89000071 ; retf 0xe283
0x00000000001d54d7 : add al, ch ; scasb al, byte ptr [rdi] ; call rdi
0x0000000000133bdc : add al, ch ; scasb al, byte ptr [rdi] ; retf 0xffff
0x000000000015ecdf : add al, ch ; sti ; cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e2f0f : add al, ch ; stosd dword ptr [rdi], eax ; jrcxz 0xe2f0f ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000e068f : add al, ch ; sub ecx, dword ptr [rsp + rsi*8] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001160f4 : add al, ch ; test byte ptr [rax], 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x000000000004fc44 : add al, ch ; xchg ah, dh ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000009fdd4 : add al, ch ; xchg byte ptr [rax + rdi*8], dl ; dec dword ptr [rax - 0x77] ; ret
0x00000000001dc92f : add al, ch ; xchg eax, ecx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmp dh, dh ; call qword ptr [rdi]
0x00000000000f5749 : add al, ch ; xchg eax, ecx ; mov edx, 0x8948fff2 ; ret
0x000000000014d5f6 : add al, ch ; xchg eax, esp ; push rdi ; std ; dec dword ptr [rax + 0x39] ; ret
0x0000000000028b95 : add al, ch ; xor eax, 0x89000078 ; retf 0xe283
0x00000000001d2b0f : add al, cl ; add byte ptr [rax], al ; sbb al, 0x31 ; int1 ; jmp qword ptr [rcx]
0x00000000001d2a0f : add al, cl ; add byte ptr [rax], al ; sub al, 0x2f ; int1 ; jmp qword ptr [rcx]
0x00000000001d840f : add al, cl ; add qword ptr [rax], r8 ; sbb al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001d750f : add al, cl ; cmp eax, 0x5a5c0001 ; hlt ; call qword ptr [rdx]
0x00000000001d2c0f : add al, cl ; hlt ; add byte ptr [rax], al ; pushfq ; cmp al, 0xf1 ; jmp qword ptr [rdi]
0x00000000001d7117 : add al, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001cd927 : add al, cl ; in eax, 0xec ; call qword ptr [rdi]
0x00000000001db30f : add al, cl ; jnp 0x1db31c ; add byte ptr [rcx + rbx*4], bl ; cmc ; call qword ptr [rdi]
0x00000000001cf40f : add al, cl ; mov esp, 0xf30c0000 ; sti ; jmp qword ptr [rax]
0x00000000001d970f : add al, cl ; pop rdi ; add dword ptr [rax], eax ; cmp al, 0xf3 ; hlt ; call rsi
0x000000000001bc07 : add al, cl ; ret
0x00000000001c81d7 : add al, cl ; retf
0x000000000000fcc7 : add al, dh ; adc edx, dword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001cf2bf : add al, dh ; cmc ; in eax, dx ; call qword ptr [rax]
0x00000000001d71df : add al, dh ; hlt ; jmp qword ptr [rcx]
0x00000000001c6b0f : add al, dh ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000001d019f : add al, dh ; in eax, 0xee ; call qword ptr [rdx]
0x00000000001d0137 : add al, dh ; leave ; add byte ptr [rax], al ; in al, 0xe5 ; out dx, al ; call qword ptr [rax]
0x00000000001ccf1f : add al, dh ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call qword ptr [rcx]
0x00000000001e0337 : add al, dh ; retf
0x00000000001d81cf : add al, dh ; sahf ; hlt ; jmp qword ptr [rcx]
0x00000000000047ef : add al, dh ; stc ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001d52ef : add al, dh ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001bf1dc : add al, dl ; add byte ptr [rax], al ; mov ah, 0xb8 ; in al, dx ; jmp qword ptr [rax]
0x00000000001da117 : add al, dl ; imul eax, dword ptr [rcx], 0xf561e400 ; jmp qword ptr [rbx]
0x00000000001cc38f : add al, dl ; in al, dx ; call qword ptr [rsi]
0x000000000000b59f : add al, dl ; insb byte ptr [rdi], dx ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001d06bf : add al, dl ; jae 0x1d06b6 ; call qword ptr [rax]
0x00000000001d567f : add al, dl ; mov ah, 0xf3 ; call qword ptr [rbx]
0x000000000000cb8f : add al, dl ; ret
0x00000000001cfa17 : add al, dl ; ret 0
0x000000000000c727 : add al, dl ; retf
0x00000000001af2b0 : add al, dl ; sti ; push qword ptr [rax - 0x2f] ; sti ; jmp rax
0x00000000001d161f : add al, dl ; xchg eax, esi ; call qword ptr [rax]
0x000000000011889f : add bh, al ; add bl, byte ptr [rax + rsi + 0x31] ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x00000000000fa1b1 : add bh, al ; add byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000022c1f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a0d37 : add bh, al ; dec dword ptr [rax + 0x29] ; ret
0x000000000005a10f : add bh, al ; test dword ptr [rax], eax ; idiv edi ; call qword ptr [rax]
0x000000000019a7af : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001635c9 : add bh, bh ; and eax, 0x287170 ; ret
0x00000000001e3250 : add bh, bh ; inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001e31cc : add bh, bh ; inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x0000000000152edc : add bh, bh ; loope 0x152e75 ; ret
0x000000000013010d : add bh, bh ; loopne 0x1300d1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019a94d : add bh, bh ; loopne 0x19a948 ; ret
0x000000000005d3b4 : add bh, bh ; loopne 0x5d407 ; mov ebx, edx ; jmp rax
0x0000000000069f3f : add bh, bh ; loopne 0x69f92 ; mov eax, ecx ; jmp rax
0x00000000000d010c : add bh, bh ; ret
0x0000000000032e33 : add bh, bh ; ror byte ptr [rax - 0x77], 1 ; fucomip st(0) ; ret 0xfee2
0x0000000000010cb8 : add bh, bl ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x0000000000054a79 : add bh, byte ptr [rax + 1] ; ret
0x0000000000054c96 : add bh, byte ptr [rax + 2] ; ret
0x00000000001106b1 : add bh, byte ptr [rax - 1] ; jmp 0x110683
0x0000000000118b23 : add bh, byte ptr [rax - 1] ; jmp 0x118afd
0x000000000003f16b : add bh, byte ptr [rax - 1] ; ret
0x0000000000195042 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000001deb05 : add bh, dh ; call qword ptr [rdi]
0x0000000000195bdf : add bh, dh ; fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x00000000001985fe : add bh, dh ; fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x00000000000a4e66 : add bh, dh ; ret
0x00000000000275a5 : add bh, dh ; ret 0
0x0000000000027599 : add bh, dh ; ret 0xf800
0x0000000000045457 : add bh, dh ; ret 0xffef
0x00000000000f188f : add bh, dh ; ret 8
0x00000000001c2df1 : add bh, dl ; call rax
0x0000000000018ba7 : add bh, dl ; pop rbp ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001d4843 : add bh, dl ; retf
0x00000000000e718c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000d0bf1 : add bl, al ; mov eax, 2 ; ret
0x0000000000140aac : add bl, al ; nop ; ret
0x000000000015690d : add bl, al ; nop ; xor eax, eax ; ret
0x00000000001530b1 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000e67ca : add bl, al ; nop dword ptr [rax] ; ret
0x000000000009075a : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000009cfd4 : add bl, al ; ret
0x0000000000155fde : add bl, al ; xor eax, eax ; ret
0x00000000001bd011 : add bl, bh ; inc eax ; add ebx, edi ; call qword ptr [rax]
0x00000000001b16f7 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x000000000003dd7f : add bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x000000000005ef89 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x5ef22 ; ret
0x00000000000e994a : add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x00000000001188e1 : add bl, byte ptr [rax + rsi + 0x31] ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x00000000001188a1 : add bl, byte ptr [rax + rsi + 0x31] ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x00000000001185c8 : add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000e994b : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d5225 : add bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000015ff8e : add bl, ch ; fidivr dword ptr [rax - 1] ; ret
0x000000000009f7ae : add bl, ch ; mov cl, 0xe8 ; retf 0x954
0x0000000000045730 : add bl, ch ; ret 0x1f0f
0x000000000014efd2 : add bl, ch ; ret 0x6690
0x00000000000d550e : add bl, ch ; ret 0x8d48
0x0000000000127022 : add bl, ch ; retf
0x000000000015ccbd : add bl, ch ; retf 0x168b
0x0000000000110861 : add bl, ch ; retf 0x1f0f
0x000000000014f995 : add bl, ch ; retf 0x894d
0x00000000001112ef : add bl, ch ; retf 0xf66
0x000000000003e4af : add bl, dh ; addps xmm0, xmm0 ; ret
0x00000000000b794f : add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b795f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000199c33 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x000000000003e3b5 : add bl, dh ; mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000002190f : add bl, dh ; ret
0x000000000004fab6 : add bl, sil ; ret
0x000000000011d423 : add byte ptr [r11 + 0x94801e1], r8b ; retf 0x8949
0x00000000000e689c : add byte ptr [r13 - 0x36], sil ; jmp 0xe684e
0x00000000000e689b : add byte ptr [r13 - 0x36], sil ; jmp 0xe684f
0x0000000000029793 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000002977e : add byte ptr [r15], r9b ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000000297a8 : add byte ptr [r15], r9b ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000052cf5 : add byte ptr [r8 + 0x39], r9b ; retf
0x000000000009eba6 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000029745 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000009d3c1 : add byte ptr [r8 - 0x77], r9b ; retf 0x95e8
0x000000000004211a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000001c7869 : add byte ptr [r8], al ; push rsp ; retf 0xffe8
0x0000000000109be0 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010ffcb : add byte ptr [r9 + rbp - 0x48], sil ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000d59e5 : add byte ptr [r9], r8b ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000140aa7 : add byte ptr [rax + 0x100], bh ; ret
0x0000000000140a86 : add byte ptr [rax + 0x102], bh ; cmovne eax, edx ; ret
0x000000000010fbdf : add byte ptr [rax + 0x102], bh ; syscall
0x0000000000111d6f : add byte ptr [rax + 0x107], bh ; syscall
0x000000000007be4f : add byte ptr [rax + 0x10], bh ; ret
0x0000000000115dc6 : add byte ptr [rax + 0x10], bh ; syscall
0x0000000000111caf : add byte ptr [rax + 0x10a], bh ; syscall
0x000000000012253f : add byte ptr [rax + 0x110], bh ; syscall
0x0000000000121995 : add byte ptr [rax + 0x119], bh ; syscall
0x0000000000196f75 : add byte ptr [rax + 0x11], cl ; retf
0x000000000012259f : add byte ptr [rax + 0x11b], bh ; syscall
0x0000000000121a7f : add byte ptr [rax + 0x122], bh ; syscall
0x0000000000121a7e : add byte ptr [rax + 0x122], dil ; syscall
0x000000000012220f : add byte ptr [rax + 0x123], bh ; syscall
0x00000000001109cf : add byte ptr [rax + 0x124], bh ; syscall
0x0000000000110a2f : add byte ptr [rax + 0x125], bh ; syscall
0x000000000012232f : add byte ptr [rax + 0x126], bh ; syscall
0x00000000001d49bf : add byte ptr [rax + 0x12], bh ; add dword ptr [rax], eax ; cld ; call qword ptr [rbx]
0x00000000001d24b7 : add byte ptr [rax + 0x12], bh ; int1 ; call rsi
0x000000000012262f : add byte ptr [rax + 0x12c], bh ; syscall
0x000000000012214f : add byte ptr [rax + 0x131], bh ; syscall
0x000000000011732f : add byte ptr [rax + 0x132], bh ; syscall
0x00000000001e18d7 : add byte ptr [rax + 0x140001e1], dl ; retf
0x00000000000e4eb9 : add byte ptr [rax + 0x142], bh ; syscall
0x00000000001d4b9f : add byte ptr [rax + 0x14], bl ; add dword ptr [rax], eax ; pushfq ; xchg ebx, esi ; call rdx
0x000000000012274f : add byte ptr [rax + 0x14a], bh ; syscall
0x000000000012277f : add byte ptr [rax + 0x14b], bh ; syscall
0x000000000011023f : add byte ptr [rax + 0x15], bh ; syscall
0x000000000011023e : add byte ptr [rax + 0x15], dil ; syscall
0x000000000009aeef : add byte ptr [rax + 0x16], bh ; ret
0x00000000001109ff : add byte ptr [rax + 0x16], bh ; syscall
0x00000000001d4e87 : add byte ptr [rax + 0x17], al ; add dword ptr [rax], eax ; xchg eax, esp ; pushfq ; call qword ptr [rbx]
0x0000000000103e4f : add byte ptr [rax + 0x18], bh ; syscall
0x000000000000af87 : add byte ptr [rax + 0x19], dh ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000000634f : add byte ptr [rax + 0x1a], al ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001d5287 : add byte ptr [rax + 0x1b], al ; add dword ptr [rax], eax ; xor al, 0xa8 ; jmp qword ptr [rcx]
0x000000000011bbdf : add byte ptr [rax + 0x1b], bh ; syscall
0x00000000001ce2ff : add byte ptr [rax + 0x1c0000ab], bh ; or ch, ch ; jmp qword ptr [rcx]
0x00000000001d24ef : add byte ptr [rax + 0x1c0000ed], ch ; adc esi, ecx ; call rsp
0x00000000001d32df : add byte ptr [rax + 0x1c0000fb], bl ; retf
0x00000000001237df : add byte ptr [rax + 0x1e], bh ; syscall
0x00000000001e270f : add byte ptr [rax + 0x1e], dl ; clc ; jmp rbx
0x000000000012386f : add byte ptr [rax + 0x1f], bh ; syscall
0x000000000003e28b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x000000000011096f : add byte ptr [rax + 0x20], bh ; syscall
0x00000000001d26ef : add byte ptr [rax + 0x20], dl ; int1 ; call qword ptr [rdx]
0x00000000000e45ce : add byte ptr [rax + 0x21058d48], dl ; ret
0x000000000011099f : add byte ptr [rax + 0x21], bh ; syscall
0x0000000000195ce6 : add byte ptr [rax + 0x21], cl ; ret 0x50e9
0x000000000019878e : add byte ptr [rax + 0x21], cl ; ret 0x8944
0x0000000000199193 : add byte ptr [rax + 0x21], cl ; ret 0xe583
0x00000000001986f8 : add byte ptr [rax + 0x21], cl ; ret 0xffb8
0x000000000019673c : add byte ptr [rax + 0x21], cl ; retf 0x8341
0x0000000000058262 : add byte ptr [rax + 0x21], cl ; retf 0xc148
0x0000000000197ba7 : add byte ptr [rax + 0x21], cl ; ror dword ptr [rcx + 0x39], 1 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x00000000000e495f : add byte ptr [rax + 0x22], bh ; syscall
0x00000000000e4a1f : add byte ptr [rax + 0x23], bh ; syscall
0x00000000001d5a8f : add byte ptr [rax + 0x23], cl ; add dword ptr [rax], eax ; fcom st(0), st(2) ; jmp rsi
0x00000000001c38f7 : add byte ptr [rax + 0x24000001], dh ; out 0xe5, al ; call qword ptr [rcx]
0x00000000000d5e1f : add byte ptr [rax + 0x24], bh ; syscall
0x00000000000d5e1e : add byte ptr [rax + 0x24], dil ; syscall
0x00000000001d2847 : add byte ptr [rax + 0x25], bl ; int1 ; jmp qword ptr [rdx]
0x00000000000d5e4f : add byte ptr [rax + 0x26], bh ; syscall
0x00000000000e58df : add byte ptr [rax + 0x27], bh ; syscall
0x0000000000122ebf : add byte ptr [rax + 0x29], bh ; syscall
0x00000000000c5861 : add byte ptr [rax + 0x29], cl ; fmul dword ptr [rax + 0x39] ; ror dword ptr [rdi], 0x8f ; retf
0x000000000006545a : add byte ptr [rax + 0x29], cl ; ret
0x00000000000ed44a : add byte ptr [rax + 0x29], cl ; ret 0x1a8b
0x00000000000d7280 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000026d21 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000027887 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000061748 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000c1da8 : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000000c070a : add byte ptr [rax + 0x29], cl ; ret 0xf66
0x0000000000099af8 : add byte ptr [rax + 0x29], cl ; retf
0x000000000002996c : add byte ptr [rax + 0x29], cl ; retf 0x8341
0x000000000007e696 : add byte ptr [rax + 0x29], cl ; retf 0x8948
0x00000000000609ac : add byte ptr [rax + 0x29], cl ; retf 0x8b48
0x00000000000d8859 : add byte ptr [rax + 0x29], cl ; retf 0x8d48
0x00000000000f29c2 : add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xf2962
0x00000000001ceabf : add byte ptr [rax + 0x2a], dl ; in eax, dx ; call rsp
0x00000000001d62af : add byte ptr [rax + 0x2b], ch ; add dword ptr [rax], eax ; sbb al, 3 ; hlt ; jmp qword ptr [rcx]
0x00000000001d1fff : add byte ptr [rax + 0x2c0000e8], bh ; div eax ; call rsi
0x00000000001da2cf : add byte ptr [rax + 0x2c00016b], cl ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001dffef : add byte ptr [rax + 0x2c0001c8], ch ; jne 0x1dfff6 ; call rdi
0x00000000001d65bf : add byte ptr [rax + 0x2e], bh ; add dword ptr [rax], eax ; in al, dx ; or esp, esi ; jmp qword ptr [rcx]
0x00000000001d679f : add byte ptr [rax + 0x30], bl ; add dword ptr [rax], eax ; or al, 0xf ; hlt ; jmp qword ptr [rcx]
0x000000000012296f : add byte ptr [rax + 0x33], bh ; syscall
0x00000000001d0af7 : add byte ptr [rax + 0x340000d3], dh ; ret 0xffef
0x00000000001dbce7 : add byte ptr [rax + 0x34000185], ah ; sal ebp, 1 ; jmp rsp
0x000000000004f024 : add byte ptr [rax + 0x38], bh ; syscall
0x00000000001e2caf : add byte ptr [rax + 0x38], dh ; clc ; call rsi
0x00000000001d70a7 : add byte ptr [rax + 0x39], ah ; add dword ptr [rax], eax ; and al, 0x49 ; hlt ; jmp rax
0x00000000001c709f : add byte ptr [rax + 0x39], bl ; add byte ptr [rax], al ; pop rsp ; jl 0x1c7097 ; call rdi
0x000000000002959f : add byte ptr [rax + 0x39], cl ; ret
0x00000000000917ef : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000008acdf : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000109cfb : add byte ptr [rax + 0x39], cl ; ret 0x860f
0x00000000000d4383 : add byte ptr [rax + 0x39], cl ; ret 0x975
0x00000000001308e9 : add byte ptr [rax + 0x39], cl ; ret 0xd975
0x00000000001309c0 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000000c66de : add byte ptr [rax + 0x39], cl ; ret 0xec75
0x0000000000094770 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x0000000000052cf6 : add byte ptr [rax + 0x39], cl ; retf
0x00000000000e675c : add byte ptr [rax + 0x39], cl ; retf 0x1674
0x0000000000132e5f : add byte ptr [rax + 0x39], cl ; retf 0x2777
0x000000000016cc86 : add byte ptr [rax + 0x39], cl ; retf 0x280f
0x000000000017357f : add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000001340cf : add byte ptr [rax + 0x39], cl ; retf 0x577
0x00000000000e676d : add byte ptr [rax + 0x39], cl ; retf 0x5d74
0x000000000009573f : add byte ptr [rax + 0x39], cl ; retf 0x820f
0x00000000000851ed : add byte ptr [rax + 0x39], cl ; retf 0x830f
0x0000000000050c1f : add byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000192ca8 : add byte ptr [rax + 0x39], cl ; retf 0x870f
0x0000000000132edf : add byte ptr [rax + 0x39], cl ; retf 0x877
0x000000000016c7a6 : add byte ptr [rax + 0x39], cl ; retf 0x8949
0x0000000000193553 : add byte ptr [rax + 0x39], cl ; retf 0xd975
0x000000000018f000 : add byte ptr [rax + 0x39], cl ; retf 0xe175
0x000000000012c823 : add byte ptr [rax + 0x39], cl ; ror byte ptr [rbx + 0x25], 1 ; ret 0x2beb
0x00000000001596b7 : add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rax + 0x5b], 1 ; ret
0x00000000001d719f : add byte ptr [rax + 0x3a], bl ; add dword ptr [rax], eax ; pushfq ; hlt ; jmp qword ptr [rcx]
0x00000000000e4e2f : add byte ptr [rax + 0x3b], bh ; syscall
0x00000000001d4edf : add byte ptr [rax + 0x3c000117], bl ; stc ; call qword ptr [rax]
0x000000000004f367 : add byte ptr [rax + 0x3e], bh ; mov edi, ebx ; syscall
0x000000000003f17f : add byte ptr [rax + 0x3e], bh ; syscall
0x000000000003f17e : add byte ptr [rax + 0x3e], dil ; syscall
0x00000000001e2da7 : add byte ptr [rax + 0x3f], bh ; clc ; call rbx
0x00000000000e453f : add byte ptr [rax + 0x3f], bh ; syscall
0x00000000001c71d7 : add byte ptr [rax + 0x400003a], dl ; add edi, edx ; jmp qword ptr [rcx]
0x00000000001d01d7 : add byte ptr [rax + 0x40000ca], dl ; out 0xee, al ; call qword ptr [rax]
0x00000000001d55f7 : add byte ptr [rax + 0x400011e], dh ; mov ah, 0xf3 ; jmp qword ptr [rcx]
0x00000000001d75d7 : add byte ptr [rax + 0x400013e], dl ; pop rbp ; hlt ; call rsi
0x00000000001236df : add byte ptr [rax + 0x40], bh ; syscall
0x00000000001236af : add byte ptr [rax + 0x41], bh ; syscall
0x000000000012380f : add byte ptr [rax + 0x43], bh ; syscall
0x000000000012380e : add byte ptr [rax + 0x43], dil ; syscall
0x00000000001d0d0f : add byte ptr [rax + 0x43], dl ; cld ; jmp qword ptr [rbx]
0x00000000001bc3dd : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000001c45f7 : add byte ptr [rax + 0x4400000e], dh ; pop rbx ; std ; jmp qword ptr [rdi]
0x00000000001ca3c7 : add byte ptr [rax + 0x4400006c], al ; ret
0x00000000001da7e7 : add byte ptr [rax + 0x44000170], ah ; ja 0x1da7ec ; call rdx
0x000000000002ef95 : add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000012364f : add byte ptr [rax + 0x44], bh ; syscall
0x00000000001d7d87 : add byte ptr [rax + 0x46], al ; add dword ptr [rax], eax ; add al, 0x99 ; hlt ; call qword ptr [rax]
0x00000000001d7e87 : add byte ptr [rax + 0x47], al ; add dword ptr [rax], eax ; xor al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x000000000012367f : add byte ptr [rax + 0x47], bh ; syscall
0x00000000001dcc97 : add byte ptr [rax + 0x47], bl ; idiv bh ; ret 0
0x000000000011062e : add byte ptr [rax + 0x48], bh ; syscall
0x0000000000130fde : add byte ptr [rax + 0x48c03155], dl ; mov ebp, esp ; pop rbp ; ret
0x000000000011076f : add byte ptr [rax + 0x49], bh ; syscall
0x00000000001d7167 : add byte ptr [rax + 0x4a], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001d82a7 : add byte ptr [rax + 0x4b], ah ; add dword ptr [rax], eax ; and al, 0xa0 ; hlt ; jmp qword ptr [rcx]
0x00000000001d66df : add byte ptr [rax + 0x4c00012f], bl ; or al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001d8397 : add byte ptr [rax + 0x4c], dl ; add dword ptr [rax], eax ; je 0x1d8347 ; hlt ; jmp qword ptr [rcx]
0x0000000000118c8f : add byte ptr [rax + 0x4d], bh ; syscall
0x00000000001cc597 : add byte ptr [rax + 0x4e], cl ; in al, dx ; call rbx
0x00000000001d87a7 : add byte ptr [rax + 0x50], ah ; add dword ptr [rax], eax ; adc al, 0xa7 ; hlt ; jmp qword ptr [rcx]
0x0000000000110b1f : add byte ptr [rax + 0x51], bh ; syscall
0x000000000007bd2f : add byte ptr [rax + 0x52], bh ; syscall
0x00000000001deff7 : add byte ptr [rax + 0x540001b8], dh ; sbb al, 0xf7 ; call qword ptr [rsi]
0x0000000000111d9f : add byte ptr [rax + 0x54], bh ; syscall
0x00000000001d8da7 : add byte ptr [rax + 0x56], ah ; add dword ptr [rax], eax ; push rsp ; ret
0x00000000001cc657 : add byte ptr [rax + 0x57], cl ; in al, dx ; call qword ptr [rcx]
0x0000000000111cdf : add byte ptr [rax + 0x59], bh ; syscall
0x000000000010fabf : add byte ptr [rax + 0x5a], bh ; syscall
0x000000000010faef : add byte ptr [rax + 0x5b], bh ; syscall
0x0000000000021350 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000001cd4cf : add byte ptr [rax + 0x5c00009d], cl ; retf
0x000000000011140f : add byte ptr [rax + 0x5d], bh ; syscall
0x000000000011143f : add byte ptr [rax + 0x5e], bh ; syscall
0x000000000010faaf : add byte ptr [rax + 0x5f], bh ; syscall
0x000000000010faae : add byte ptr [rax + 0x5f], dil ; syscall
0x00000000000d2a2f : add byte ptr [rax + 0x60], bh ; syscall
0x00000000001da0b7 : add byte ptr [rax + 0x61], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001da21f : add byte ptr [rax + 0x62], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001da17f : add byte ptr [rax + 0x62], al ; cmc ; jmp qword ptr [rbx]
0x000000000011600f : add byte ptr [rax + 0x62], bh ; syscall
0x00000000001da1f7 : add byte ptr [rax + 0x62], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001da247 : add byte ptr [rax + 0x62], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001da1a7 : add byte ptr [rax + 0x62], cl ; cmc ; jmp qword ptr [rbx]
0x000000000011600e : add byte ptr [rax + 0x62], dil ; syscall
0x00000000001da1cf : add byte ptr [rax + 0x62], dl ; cmc ; jmp qword ptr [rbx]
0x00000000000a8530 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rdx, rax ; jmp rdx
0x000000000003c75d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000000737d1 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000031194 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000005bd6c : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rdi ; jmp rax
0x00000000000ff2bb : add byte ptr [rax + 0x63], cl ; add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000007d415 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x00000000000687ca : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rcx ; jmp rax
0x000000000005def1 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rdi ; jmp rax
0x000000000005be0a : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, rsi ; jmp rax
0x00000000000e6ae2 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000005c460 : add byte ptr [rax + 0x63], cl ; add al, 0xb0 ; add rax, rdi ; jmp rax
0x00000000000bba06 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x00000000000fd0bc : add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000001da2e7 : add byte ptr [rax + 0x63], cl ; cmc ; jmp qword ptr [rbx]
0x00000000001404c4 : add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x000000000002dad7 : add byte ptr [rax + 0x63], cl ; ret
0x000000000012e530 : add byte ptr [rax + 0x63], cl ; ret 0x4864
0x00000000000c3d49 : add byte ptr [rax + 0x63], cl ; ret 0x8941
0x0000000000046161 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000ee1b7 : add byte ptr [rax + 0x63], cl ; ret 0xc148
0x0000000000046236 : add byte ptr [rax + 0x63], cl ; ret 0xc749
0x00000000000c6bde : add byte ptr [rax + 0x63], cl ; retf
0x000000000012c7df : add byte ptr [rax + 0x63], cl ; retf 0x4864
0x0000000000100f3f : add byte ptr [rax + 0x63], cl ; retf 0x5489
0x00000000000c7fe7 : add byte ptr [rax + 0x63], cl ; retf 0x860f
0x0000000000064235 : add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000f73c1 : add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000fcf16 : add byte ptr [rax + 0x63], cl ; retf 0x8d48
0x000000000008453f : add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000000fc8f7 : add byte ptr [rax + 0x63], cl ; retf 0xc148
0x000000000007d8e3 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000593c3 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000001da2f7 : add byte ptr [rax + 0x6400016b], dh ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000000e456f : add byte ptr [rax + 0x64], bh ; syscall
0x00000000001d9c87 : add byte ptr [rax + 0x65], al ; add dword ptr [rax], eax ; and al, 0x1c ; cmc ; call rdx
0x00000000000e58ff : add byte ptr [rax + 0x66], bh ; syscall
0x00000000001e3127 : add byte ptr [rax + 0x66], ch ; sti ; call qword ptr [rdx]
0x000000000012238f : add byte ptr [rax + 0x67], bh ; syscall
0x00000000000e591f : add byte ptr [rax + 0x68], bh ; syscall
0x00000000001da09f : add byte ptr [rax + 0x69], bl ; add dword ptr [rax], eax ; cmp al, 0x61 ; cmc ; jmp qword ptr [rbx]
0x00000000001da18f : add byte ptr [rax + 0x6a], cl ; add dword ptr [rax], eax ; pushfq ; idiv eax ; jmp qword ptr [rbx]
0x00000000001da1b7 : add byte ptr [rax + 0x6a], dh ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; idiv eax ; jmp qword ptr [rbx]
0x00000000000e590f : add byte ptr [rax + 0x6b], bh ; syscall
0x000000000000b14f : add byte ptr [rax + 0x6c], ah ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000e592f : add byte ptr [rax + 0x6c], bh ; syscall
0x00000000001da38f : add byte ptr [rax + 0x6c], cl ; add dword ptr [rax], eax ; or al, 0x64 ; cmc ; call qword ptr [rdx]
0x00000000000e5b6f : add byte ptr [rax + 0x6d], bh ; syscall
0x00000000000e58ef : add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000e5b9f : add byte ptr [rax + 0x6f], bh ; syscall
0x00000000001cf4c7 : add byte ptr [rax + 0x70], bh ; out dx, al ; jmp qword ptr [rbx]
0x00000000000e5bff : add byte ptr [rax + 0x70], bh ; syscall
0x00000000000e593f : add byte ptr [rax + 0x73], bh ; syscall
0x00000000001ca8c7 : add byte ptr [rax + 0x74000071], al ; fsubr st(3) ; call rsp
0x00000000001d58d7 : add byte ptr [rax + 0x74000121], dl ; ret
0x00000000001d74d7 : add byte ptr [rax + 0x7400013d], dl ; pop rcx ; hlt ; jmp rcx
0x00000000000b643f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000000f25f : add byte ptr [rax + 0x75], ah ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000e5c2f : add byte ptr [rax + 0x76], bh ; syscall
0x00000000000e5c5f : add byte ptr [rax + 0x78], bh ; syscall
0x00000000000b7e9f : add byte ptr [rax + 0x78d4837], cl ; ret
0x000000000012191f : add byte ptr [rax + 0x7a], bh ; syscall
0x000000000012194f : add byte ptr [rax + 0x7b], bh ; syscall
0x00000000001ca5ef : add byte ptr [rax + 0x7c00006e], ch ; retf
0x00000000000e5bcf : add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000e66cf : add byte ptr [rax + 0x7d00], bh ; ret
0x00000000001220ef : add byte ptr [rax + 0x7d], bh ; syscall
0x00000000001bcb3f : add byte ptr [rax + 0x7d], dl ; cld ; jmp qword ptr [rax]
0x00000000000e66df : add byte ptr [rax + 0x7e], bh ; ret
0x000000000012211f : add byte ptr [rax + 0x7e], bh ; syscall
0x000000000003f1b4 : add byte ptr [rax + 0x7f], bh ; syscall
0x00000000001db697 : add byte ptr [rax + 0x7f], dl ; add dword ptr [rax], eax ; stosd dword ptr [rdi], eax ; cmc ; call qword ptr [rbx]
0x000000000014167f : add byte ptr [rax + 0x7fffffff], bh ; ret
0x000000000003f201 : add byte ptr [rax + 0x82], bh ; syscall
0x000000000003f73f : add byte ptr [rax + 0x83], bh ; syscall
0x000000000003f73e : add byte ptr [rax + 0x83], dil ; syscall
0x000000000010f68f : add byte ptr [rax + 0x84], bh ; syscall
0x000000000012256f : add byte ptr [rax + 0x86], bh ; syscall
0x000000000010f99f : add byte ptr [rax + 0x8a], bh ; syscall
0x00000000001163bf : add byte ptr [rax + 0x8c], bh ; syscall
0x00000000001163be : add byte ptr [rax + 0x8c], dil ; syscall
0x00000000001163ff : add byte ptr [rax + 0x8d], bh ; syscall
0x00000000001163fe : add byte ptr [rax + 0x8d], dil ; syscall
0x0000000000103d8f : add byte ptr [rax + 0x8e], bh ; syscall
0x0000000000103dbf : add byte ptr [rax + 0x8f], bh ; syscall
0x0000000000103def : add byte ptr [rax + 0x90], bh ; syscall
0x0000000000103e1f : add byte ptr [rax + 0x91], bh ; syscall
0x0000000000103e7f : add byte ptr [rax + 0x92], bh ; syscall
0x0000000000103eaf : add byte ptr [rax + 0x93], bh ; syscall
0x00000000001986e8 : add byte ptr [rax + 0x9480000], al ; ret 0xb848
0x0000000000103edf : add byte ptr [rax + 0x94], bh ; syscall
0x000000000011bc6f : add byte ptr [rax + 0x96], bh ; syscall
0x000000000011bc9f : add byte ptr [rax + 0x97], bh ; syscall
0x000000000011bccf : add byte ptr [rax + 0x98], bh ; syscall
0x000000000012204f : add byte ptr [rax + 0x9a], bh ; syscall
0x000000000012244f : add byte ptr [rax + 0x9b], bh ; syscall
0x000000000012201f : add byte ptr [rax + 0x9e], bh ; syscall
0x000000000012201e : add byte ptr [rax + 0x9e], dil ; syscall
0x00000000001171cf : add byte ptr [rax + 0xa1], bh ; syscall
0x000000000011727f : add byte ptr [rax + 0xa2], bh ; syscall
0x00000000000d2b0f : add byte ptr [rax + 0xa4], bh ; syscall
0x00000000001218bf : add byte ptr [rax + 0xa6], bh ; syscall
0x000000000011767f : add byte ptr [rax + 0xa7], bh ; syscall
0x00000000001176af : add byte ptr [rax + 0xa8], bh ; syscall
0x000000000011badf : add byte ptr [rax + 0xa], bh ; syscall
0x0000000000116eef : add byte ptr [rax + 0xaa], bh ; syscall
0x0000000000116faf : add byte ptr [rax + 0xab], bh ; syscall
0x0000000000116fae : add byte ptr [rax + 0xab], dil ; syscall
0x000000000012177f : add byte ptr [rax + 0xac], bh ; syscall
0x000000000012174f : add byte ptr [rax + 0xad], bh ; syscall
0x000000000012174e : add byte ptr [rax + 0xad], dil ; syscall
0x000000000012217f : add byte ptr [rax + 0xae], bh ; syscall
0x00000000001221af : add byte ptr [rax + 0xb0], bh ; syscall
0x00000000001d6657 : add byte ptr [rax + 0xb], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001218ef : add byte ptr [rax + 0xbb], bh ; syscall
0x00000000001d7cdf : add byte ptr [rax + 0xc000145], bl ; jge 0x1d7ce3 ; jmp qword ptr [rcx]
0x00000000001d81df : add byte ptr [rax + 0xc00014a], bl ; lahf ; hlt ; jmp qword ptr [rcx]
0x000000000011f98f : add byte ptr [rax + 0xc6], bh ; syscall
0x000000000011f86f : add byte ptr [rax + 0xc7], bh ; syscall
0x00000000000d296f : add byte ptr [rax + 0xc9], bh ; syscall
0x00000000000f40ff : add byte ptr [rax + 0xc], bh ; ret
0x0000000000162dbb : add byte ptr [rax + 0xca], bh ; ret
0x00000000001306d1 : add byte ptr [rax + 0xca], bh ; syscall
0x00000000001221df : add byte ptr [rax + 0xd5], bh ; syscall
0x000000000012207f : add byte ptr [rax + 0xe4], bh ; syscall
0x00000000000e6b44 : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000003ee8f : add byte ptr [rax + 0xe], bh ; syscall
0x0000000000118a3f : add byte ptr [rax + 0xeb], bh ; syscall
0x0000000000118a3e : add byte ptr [rax + 0xeb], dil ; syscall
0x00000000000bbad7 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x0000000000030574 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x000000000008d35f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b1385 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000002401f : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x0000000000104653 : add byte ptr [rax + 0xf], cl ; mov esi, 0x894d024e ; ret
0x0000000000025a92 : add byte ptr [rax + 0xf], cl ; ret
0x000000000015f4f6 : add byte ptr [rax + 0xf], cl ; ret 0x3145
0x000000000012344a : add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x000000000009d888 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000016553c : add byte ptr [rax + 0xf], cl ; ret 0x76eb
0x0000000000162ef4 : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000273a4 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000955d3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000d4827 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x000000000009ed89 : add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000a1354 : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000009d7b8 : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000011290c : add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000009ecc5 : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001438af : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000283b8 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000000e670f : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000001222ff : add byte ptr [rax + 0xfd], bh ; syscall
0x000000000012235f : add byte ptr [rax + 0xff], bh ; syscall
0x0000000000054a3c : add byte ptr [rax + 1], bh ; ret
0x00000000001101df : add byte ptr [rax + 1], bh ; syscall
0x00000000000ab9f4 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000068b4d : add byte ptr [rax + 1], cl ; clc ; jmp rax
0x000000000018a9d9 : add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x000000000005357b : add byte ptr [rax + 1], cl ; ret
0x0000000000053c48 : add byte ptr [rax + 1], cl ; ret 0x149
0x00000000001662e0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000018a9d0 : add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000f8a10 : add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000017363d : add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000032185 : add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000024e45 : add byte ptr [rax + 1], cl ; retf 0x8b48
0x000000000013fdd5 : add byte ptr [rax + 1], cl ; retf 0xe083
0x000000000003d86d : add byte ptr [rax + 1], cl ; retf 0xeeb
0x000000000008937e : add byte ptr [rax + 1], dil ; ret
0x0000000000054d05 : add byte ptr [rax + 2], bh ; ret
0x0000000000153abe : add byte ptr [rax + 2], dil ; ret
0x000000000011093f : add byte ptr [rax + 3], bh ; syscall
0x00000000001e6073 : add byte ptr [rax + 5], dh ; add byte ptr [rax], al ; retf 7
0x00000000000e68b6 : add byte ptr [rax + 7], bh ; ret
0x000000000011020f : add byte ptr [rax + 8], bh ; syscall
0x000000000011020e : add byte ptr [rax + 8], dil ; syscall
0x00000000001c409f : add byte ptr [rax + 9], bl ; add byte ptr [rax], al ; sub sil, r12b ; call rcx
0x0000000000198316 : add byte ptr [rax + 9], cl ; fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000196a47 : add byte ptr [rax + 9], cl ; ret
0x00000000001986eb : add byte ptr [rax + 9], cl ; ret 0xb848
0x00000000001a3a8b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x00000000001be2a7 : add byte ptr [rax + rax - 0x18], ah ; call rax
0x00000000001c0ce7 : add byte ptr [rax + rax*2], al ; cmc ; jmp rax
0x00000000001c7783 : add byte ptr [rax + rax*2], bh ; add byte ptr [rax], al ; pop rax ; ret 0xffe8
0x00000000001bf657 : add byte ptr [rax + rax*2], dh ; in eax, dx ; jmp rsp
0x0000000000024873 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x00000000000b751c : add byte ptr [rax + rax], 0 ; ret
0x0000000000018b7f : add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; retf
0x00000000001e0227 : add byte ptr [rax + rax], al ; add ah, ah ; retf 1
0x00000000001359ec : add byte ptr [rax + rax], al ; add al, ch ; retf
0x000000000009d29f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000009ec28 : add byte ptr [rax + rax], al ; add byte ptr [rdx + rbp - 9], dh ; ret 0
0x00000000001e019f : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; pop rsp ; retf 1
0x00000000001e5cf3 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf 4
0x0000000000130811 : add byte ptr [rax + rax], ch ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000006f684 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; jmp 0x6b8b7
0x000000000009547b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000009d0a9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bd4de : add byte ptr [rax + rax], cl ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x00000000001c6b48 : add byte ptr [rax + rax], dh ; add ah, dh ; in eax, 0xe7 ; call qword ptr [rdx]
0x000000000000df47 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bf3c7 : add byte ptr [rax + rax], dl ; in eax, dx ; jmp rax
0x00000000001bed97 : add byte ptr [rax + rbp - 0x14], ah ; jmp qword ptr [rax]
0x00000000001c40a3 : add byte ptr [rax + rbp - 0x1a], cl ; call rcx
0x00000000000d08c5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x00000000001cdff3 : add byte ptr [rax + rbp*4 - 0x7c80000], ch ; in al, dx ; call qword ptr [rax]
0x00000000001d528b : add byte ptr [rax + rbp*4], dh ; jmp qword ptr [rcx]
0x00000000001d5f6b : add byte ptr [rax + rbp], ah ; add dword ptr [rax], eax ; nop ; stc ; call qword ptr [rdx]
0x00000000001c3587 : add byte ptr [rax + rbx*2 - 3], ah ; jmp rax
0x00000000001c1fb7 : add byte ptr [rax + rbx*4 - 9], al ; jmp qword ptr [rax]
0x00000000001ca8cb : add byte ptr [rax + rbx*8 - 0x15], dh ; call rsp
0x00000000001ce363 : add byte ptr [rax + rcx - 0x13], ch ; call qword ptr [rax]
0x00000000001c2e77 : add byte ptr [rax + rcx - 6], ah ; jmp rsp
0x000000000004fd63 : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x20e8
0x000000000019a24d : add byte ptr [rax + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000054e21 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x32e8
0x0000000000044aee : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0x65e8
0x0000000000044fa3 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0xb0e8
0x0000000000044d46 : add byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; ret 0xde8
0x00000000001c2097 : add byte ptr [rax + rcx*8 - 9], dh ; jmp rax
0x00000000001dff53 : add byte ptr [rax + rcx*8], cl ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 9], ch ; call rax
0x00000000001ce303 : add byte ptr [rax + rcx], bl ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001e5637 : add byte ptr [rax + rcx], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000001dc933 : add byte ptr [rax + rdi - 0xa], ch ; call qword ptr [rdi]
0x00000000001bf39f : add byte ptr [rax + rdi*8 - 0x14], dl ; call rsp
0x00000000001c0107 : add byte ptr [rax + rdi], al ; int1 ; jmp qword ptr [rax]
0x00000000001c6f53 : add byte ptr [rax + rdi], cl ; add byte ptr [rax], al ; sub byte ptr [rax - 0x18], dl ; call qword ptr [rdx]
0x00000000001a4c37 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x00000000001d8793 : add byte ptr [rax + rdx*2 + 1], cl ; add al, bh ; cmpsb byte ptr [rsi], byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001c0d27 : add byte ptr [rax + rdx*2], al ; cmc ; jmp qword ptr [rax]
0x00000000001c05cf : add byte ptr [rax + rdx*4 - 0xe], ah ; jmp qword ptr [rax]
0x00000000001e059b : add byte ptr [rax + rdx*4 - 9], al ; call qword ptr [rbx]
0x00000000001c36ff : add byte ptr [rax + rdx*8], dh ; std ; jmp qword ptr [rax]
0x00000000001d275b : add byte ptr [rax + rsi*8], dl ; add byte ptr [rax], al ; loopne 0x1d278a ; int1 ; jmp qword ptr [rcx]
0x00000000001bf507 : add byte ptr [rax - 0x13], al ; jmp rax
0x00000000001e29df : add byte ptr [rax - 0x13fffe0e], bl ; xor bh, al ; call qword ptr [rbx]
0x00000000001dbbdf : add byte ptr [rax - 0x13fffe7c], bl ; retf 0xfff5
0x00000000001c62df : add byte ptr [rax - 0x13ffffd5], bl ; retf
0x0000000000010207 : add byte ptr [rax - 0x14], dh ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000007d457 : add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x00000000001549df : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x48bf
0x00000000001093dc : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x8b4c
0x00000000001cd9ff : add byte ptr [rax - 0x16], dl ; in al, dx ; jmp rdx
0x000000000014887c : add byte ptr [rax - 0x171876b8], al ; retf 0x1db
0x000000000000d12f : add byte ptr [rax - 0x17], dh ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000009497a : add byte ptr [rax - 0x17], dl ; ret
0x00000000001d2ae7 : add byte ptr [rax - 0x1bffff0d], ah ; xor cl, dh ; jmp qword ptr [rcx]
0x00000000001e18bf : add byte ptr [rax - 0x1f], bh ; add dword ptr [rax], eax ; in al, dx ; retf 0xfff7
0x00000000001d158f : add byte ptr [rax - 0x22], cl ; add byte ptr [rax], al ; fcom qword ptr [rcx - 0x10] ; call qword ptr [rdx]
0x00000000001e1aff : add byte ptr [rax - 0x23fffe1d], bh ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x00000000001d79cf : add byte ptr [rax - 0x23fffebe], cl ; jno 0x1d79d3 ; jmp rsp
0x00000000001d10b7 : add byte ptr [rax - 0x27], dh ; add byte ptr [rax], al ; push rsp ; sbb dh, al ; jmp qword ptr [rcx]
0x00000000001d0cb7 : add byte ptr [rax - 0x2b], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdx]
0x00000000001d71c7 : add byte ptr [rax - 0x2bfffec6], al ; hlt ; jmp qword ptr [rcx]
0x00000000001d52d7 : add byte ptr [rax - 0x2bfffee5], dl ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001c81e7 : add byte ptr [rax - 0x2bffffb6], ah ; retf
0x00000000001cf21f : add byte ptr [rax - 0x2c], dl ; in eax, dx ; call qword ptr [rax]
0x000000000003f8f1 : add byte ptr [rax - 0x2d], cl ; loopne 0x3f947 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001deaff : add byte ptr [rax - 0x33fffe4d], bh ; add bh, dh ; call qword ptr [rdi]
0x00000000001d55cf : add byte ptr [rax - 0x33fffee2], cl ; mov bl, 0xf3 ; jmp qword ptr [rcx]
0x00000000001ce3ff : add byte ptr [rax - 0x33ffff54], bh ; or ch, ch ; call qword ptr [rcx]
0x00000000001c77cf : add byte ptr [rax - 0x33ffffc0], cl ; ret
0x00000000001dbc3f : add byte ptr [rax - 0x34], al ; cmc ; jmp rsp
0x00000000001d0187 : add byte ptr [rax - 0x36], al ; add byte ptr [rax], al ; hlt ; in eax, 0xee ; call qword ptr [rax]
0x00000000001d01af : add byte ptr [rax - 0x36], ch ; add byte ptr [rax], al ; cld ; in eax, 0xee ; call qword ptr [rax]
0x000000000003d16f : add byte ptr [rax - 0x39], cl ; ret
0x000000000009ade8 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000004c63f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000d0e4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d0e2f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d0e8f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d0e3f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000d0e7f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000003ef1f : add byte ptr [rax - 0x39], cl ; ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x00000000001d58c7 : add byte ptr [rax - 0x3d], bl ; jmp qword ptr [rcx]
0x000000000003db95 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000003e4be : add byte ptr [rax - 0x3f28f09a], dl ; and eax, 8 ; ret
0x000000000003e2ea : add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000142747 : add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x83 ; ret 0xf01
0x000000000002133e : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000002cc40 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000002c5a0 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000001361ae : add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000003ec85 : add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000011599c : add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000001d8fcf : add byte ptr [rax - 0x3fffea8], cl ; retf
0x00000000001cf7bf : add byte ptr [rax - 0x40], bh ; add byte ptr [rax], al ; or al, 0xf3 ; sti ; call rsp
0x0000000000046ec0 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000004a86e : add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x000000000005cdef : add byte ptr [rax - 0x4e743], al ; jmp qword ptr [rax]
0x00000000001d555f : add byte ptr [rax - 0x4e], al ; call qword ptr [rcx]
0x00000000001e19ff : add byte ptr [rax - 0x53fffe1e], bh ; xchg eax, edx ; sti ; jmp qword ptr [rdx]
0x00000000001da1df : add byte ptr [rax - 0x53fffe96], bl ; idiv eax ; jmp qword ptr [rbx]
0x00000000001d70ff : add byte ptr [rax - 0x53fffec7], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001d58ff : add byte ptr [rax - 0x53fffedf], bh ; ret
0x00000000001d10ef : add byte ptr [rax - 0x53ffff27], ch ; sbb esi, eax ; jmp rsi
0x00000000001d529f : add byte ptr [rax - 0x58], dl ; jmp qword ptr [rcx]
0x00000000001d51f7 : add byte ptr [rax - 0x5bfffee6], dh ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rcx]
0x00000000001d858f : add byte ptr [rax - 0x5c], al ; hlt ; jmp qword ptr [rcx]
0x00000000001d82bf : add byte ptr [rax - 0x60], al ; hlt ; jmp qword ptr [rcx]
0x00000000001d82e7 : add byte ptr [rax - 0x60], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001d821f : add byte ptr [rax - 0x61], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001d4eff : add byte ptr [rax - 0x64], dh ; call qword ptr [rax]
0x00000000001e099f : add byte ptr [rax - 0x65], ah ; idiv edi ; retf
0x00000000001d7e9f : add byte ptr [rax - 0x66], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001d7ddf : add byte ptr [rax - 0x67], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000144e75 : add byte ptr [rax - 0x6af0dc07], al ; ret 0xf980
0x00000000001cf4d7 : add byte ptr [rax - 0x6bffff43], dl ; jbe 0x1cf4d5 ; call rsp
0x00000000001dc597 : add byte ptr [rax - 0x72], dl ; add dword ptr [rax], eax ; in al, 0xf ; idiv bh ; retf 0
0x00000000000e9947 : add byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; pop r12 ; ret
0x000000000002953a : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000002b6bd : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x0000000000021c8f : add byte ptr [rax - 0x73], cl ; add eax, 0x191b34 ; ret
0x0000000000021c9f : add byte ptr [rax - 0x73], cl ; add eax, 0x193971 ; ret
0x0000000000117ebb : add byte ptr [rax - 0x73], cl ; add eax, 0x2d6235 ; ret
0x0000000000117cdb : add byte ptr [rax - 0x73], cl ; add eax, 0x2d6415 ; ret
0x000000000011f6e7 : add byte ptr [rax - 0x73], cl ; add eax, 0x960e9 ; pop rbx ; ret
0x000000000002b6db : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x000000000002b6f9 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000014410c : add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000d090f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d091f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000d08ff : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000e9837 : add byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000129978 : add byte ptr [rax - 0x73], cl ; pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000052e77 : add byte ptr [rax - 0x73], cl ; pop rsp ; retf 0x4df0
0x0000000000093c02 : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000009623f : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x00000000000924f8 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000001180f8 : add byte ptr [rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000004f00f : add byte ptr [rax - 0x73], cl ; xor eax, 0x349 ; call rax
0x000000000008f796 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffdd72 ; call rax
0x000000000008f433 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe0d5 ; call rax
0x000000000008f12d : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe3db ; call rax
0x000000000008ed26 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe7e2 ; call rax
0x000000000008d8fd : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffc0b ; call rax
0x0000000000080760 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffe68 ; call rax
0x000000000008d608 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffff00 ; call rax
0x00000000001d7def : add byte ptr [rax - 0x73fffeba], ch ; cdq ; hlt ; jmp qword ptr [rcx]
0x000000000019c095 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7bf0ffc6], al ; ret
0x0000000000090eef : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000199438 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000439c1 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000012ecc9 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000163622 : add byte ptr [rax - 0x75], cl ; add eax, 0x288f26 ; call qword ptr [rax]
0x0000000000162fd5 : add byte ptr [rax - 0x75], cl ; add eax, 0x289573 ; call qword ptr [rax]
0x000000000015994f : add byte ptr [rax - 0x75], cl ; add eax, 0x291531 ; pop rbx ; ret
0x000000000015988f : add byte ptr [rax - 0x75], cl ; add eax, 0x291659 ; pop rbx ; ret
0x00000000001597cf : add byte ptr [rax - 0x75], cl ; add eax, 0x291809 ; pop rbx ; ret
0x000000000008fdef : add byte ptr [rax - 0x75], cl ; add eax, 0x35c869 ; ret
0x000000000002bdbf : add byte ptr [rax - 0x75], cl ; add eax, 0x3c0c69 ; ret
0x000000000002389f : add byte ptr [rax - 0x75], cl ; add eax, 0x3ccc31 ; ret
0x000000000002388f : add byte ptr [rax - 0x75], cl ; add eax, 0x3ccc51 ; ret
0x000000000014d8c0 : add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000041ebb : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000014eca5 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x0000000000022cdf : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000156dea : add byte ptr [rax - 0x75], cl ; je 0x156e1a ; js 0x156d81 ; ret 0x1b9
0x000000000009cd37 : add byte ptr [rax - 0x75], cl ; jg 0x9cd8c ; mov rsi, rbp ; call rax
0x000000000010abd0 : add byte ptr [rax - 0x75], cl ; jl 0x10ac01 ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000040fbb : add byte ptr [rax - 0x75], cl ; jl 0x40fec ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000009cf87 : add byte ptr [rax - 0x75], cl ; jnp 0x9cfdc ; mov rsi, r13 ; call rax
0x000000000009cf86 : add byte ptr [rax - 0x75], cl ; jnp 0x9cfdd ; mov rsi, r13 ; call rax
0x000000000009cff7 : add byte ptr [rax - 0x75], cl ; jnp 0x9d049 ; call rax
0x000000000004303a : add byte ptr [rax - 0x75], cl ; js 0x43064 ; call rdx
0x0000000000086bcf : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000011fa9f : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000130a23 : add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x0000000000031063 : add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000001494ff : add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000014742c : add byte ptr [rax - 0x75], cl ; push rax ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000009b3d7 : add byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x3348
0x000000000016e1cf : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000442cf : add byte ptr [rax - 0x75], cl ; push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x0000000000052f72 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x0000000000125646 : add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000e13ff : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x00000000001245ee : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x000000000013d06f : add byte ptr [rax - 0x75], cl ; xor al, 0x24 ; mov rdi, rbp ; call r12
0x0000000000073610 : add byte ptr [rax - 0x75], cl ; xor eax, 0x377948 ; call rax
0x000000000006b357 : add byte ptr [rax - 0x75], cl ; xor eax, 0x37fc01 ; call rax
0x000000000006b027 : add byte ptr [rax - 0x75], cl ; xor eax, 0x37ff31 ; call rax
0x0000000000067e65 : add byte ptr [rax - 0x75], cl ; xor eax, 0x3830f3 ; call rax
0x000000000005e6ae : add byte ptr [rax - 0x75], cl ; xor eax, 0x38c8aa ; call rax
0x000000000005b481 : add byte ptr [rax - 0x75], cl ; xor eax, 0x38fad7 ; call rax
0x000000000000697f : add byte ptr [rax - 0x75], dl ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000118f71 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000008853f : add byte ptr [rax - 0x76b80000], al ; ret
0x000000000007f3c4 : add byte ptr [rax - 0x76b80000], al ; ret 0x3f75
0x00000000001330b8 : add byte ptr [rax - 0x76b80000], al ; ret 0xd75
0x00000000001dc0bf : add byte ptr [rax - 0x77], bh ; add dword ptr [rax], eax ; mov edi, gs ; cmc ; call qword ptr [rbx]
0x0000000000090dca : add byte ptr [rax - 0x77], cl ; adc bl, dh ; ret
0x00000000001663f4 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x00000000000837bd : add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000009de16 : add byte ptr [rax - 0x77], cl ; add eax, 0x34fbca ; ret
0x00000000000908b5 : add byte ptr [rax - 0x77], cl ; add eax, 0x35a9d3 ; ret
0x000000000009088d : add byte ptr [rax - 0x77], cl ; add eax, 0x35a9f3 ; ret
0x000000000009086d : add byte ptr [rax - 0x77], cl ; add eax, 0x35aa0b ; ret
0x000000000016686f : add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000004394f : add byte ptr [rax - 0x77], cl ; clc ; cqo ; idiv rsi ; ret
0x0000000000118e38 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000081ec5 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000018a1e4 : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax + 0x63] ; ret 0x8348
0x000000000007f151 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000114c8f : add byte ptr [rax - 0x77], cl ; fidivr dword ptr [rax + 0x10f] ; syscall
0x0000000000029746 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000001015b8 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x79e8
0x000000000009c6df : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x000000000003d17f : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x39] ; ret
0x00000000000a895e : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x77] ; ret 0xf6e8
0x0000000000029130 : add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x00000000000f3570 : add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x0000000000126ac4 : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x00000000000f70ec : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x000000000014ba8d : add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf 0x1f
0x0000000000132da4 : add byte ptr [rax - 0x77], cl ; imul eax ; ret
0x000000000008fa3b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000008a8d3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x00000000000d1bae : add byte ptr [rax - 0x77], cl ; out dx, al ; call rbx
0x0000000000130ed4 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov edi, ebx ; mov eax, ecx ; syscall
0x00000000000d1e80 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rbx
0x000000000009af4f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000009b747 : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000013c4fc : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x148f66
0x0000000000150f78 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x15d216
0x0000000000035067 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x212ce
0x000000000014e6a0 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000013cfd3 : add byte ptr [rax - 0x77], cl ; out dx, eax ; call r12
0x00000000000803fc : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000014cca6 : add byte ptr [rax - 0x77], cl ; out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000013d381 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000014ef92 : add byte ptr [rax - 0x77], cl ; push rbx ; push 0x5c415d5b ; ret
0x000000000009402d : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000002520f : add byte ptr [rax - 0x77], cl ; ret
0x000000000006d6b8 : add byte ptr [rax - 0x77], cl ; ret 0x148
0x00000000000e6cdb : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000014547f : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000004fd67 : add byte ptr [rax - 0x77], cl ; ret 0x20e8
0x000000000002d37d : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000082388 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000a103f : add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x0000000000139de2 : add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x0000000000199a13 : add byte ptr [rax - 0x77], cl ; ret 0x3775
0x000000000007f6f3 : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000003d546 : add byte ptr [rax - 0x77], cl ; ret 0x394d
0x000000000007f3c7 : add byte ptr [rax - 0x77], cl ; ret 0x3f75
0x00000000000222ff : add byte ptr [rax - 0x77], cl ; ret 0x45e9
0x00000000000222ef : add byte ptr [rax - 0x77], cl ; ret 0x47e9
0x000000000011b4ae : add byte ptr [rax - 0x77], cl ; ret 0x59e8
0x00000000000e6d87 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x00000000000f04fc : add byte ptr [rax - 0x77], cl ; ret 0x774
0x0000000000092684 : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000002a9e7 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000db409 : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x00000000000dc5b0 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000d3678 : add byte ptr [rax - 0x77], cl ; ret 0x894d
0x0000000000080490 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000faf4a : add byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000011a976 : add byte ptr [rax - 0x77], cl ; ret 0x91e8
0x000000000007b887 : add byte ptr [rax - 0x77], cl ; ret 0x94e9
0x000000000012e061 : add byte ptr [rax - 0x77], cl ; ret 0xb2e9
0x000000000002a7a8 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000032771 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000004ee6a : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000011a33e : add byte ptr [rax - 0x77], cl ; ret 0xc9e8
0x000000000009d347 : add byte ptr [rax - 0x77], cl ; ret 0xd148
0x00000000001330bb : add byte ptr [rax - 0x77], cl ; ret 0xd75
0x000000000013e9e7 : add byte ptr [rax - 0x77], cl ; ret 0xdf89
0x000000000011af26 : add byte ptr [rax - 0x77], cl ; ret 0xe1e8
0x000000000004373d : add byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000045e9d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000d5acf : add byte ptr [rax - 0x77], cl ; ret 0xfde9
0x000000000009cb62 : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000008cf18 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000e6cf2 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000075d88 : add byte ptr [rax - 0x77], cl ; retf
0x0000000000186804 : add byte ptr [rax - 0x77], cl ; retf 0x1f0f
0x00000000001848d2 : add byte ptr [rax - 0x77], cl ; retf 0x2e66
0x0000000000184a72 : add byte ptr [rax - 0x77], cl ; retf 0x8349
0x000000000004dfef : add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000005267f : add byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000029d47 : add byte ptr [rax - 0x77], cl ; retf 0x8966
0x00000000000fb0af : add byte ptr [rax - 0x77], cl ; retf 0x8b48
0x00000000000bc0bf : add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000084996 : add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x0000000000184830 : add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000009c1ce : add byte ptr [rax - 0x77], cl ; retf 0x92eb
0x000000000009d3c2 : add byte ptr [rax - 0x77], cl ; retf 0x95e8
0x000000000002a4f9 : add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x0000000000186686 : add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000018b0dc : add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000067ee5 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x00000000000bb560 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001663ac : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000007ecff : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000162d6f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x0000000000114f6e : add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x0000000000199516 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000199a9e : add byte ptr [rax - 0x7ab80000], al ; ret
0x00000000000b17bf : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000008428b : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000199aa1 : add byte ptr [rax - 0x7b], cl ; ret
0x0000000000021885 : add byte ptr [rax - 0x7b], cl ; ret 0xf41
0x000000000006948c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x11
0x000000000004aaa8 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x00000000000b3c83 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x000000000005ed39 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000011164f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2141
0x00000000001480c6 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], 0xf3 ; ret
0x000000000017d11b : add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x00000000001d0ec7 : add byte ptr [rax - 0x7bffff29], al ; add al, 0xf0 ; jmp rcx
0x00000000001c64f7 : add byte ptr [rax - 0x7bffffd3], dh ; shl bh, cl ; call qword ptr [rcx]
0x00000000001428ef : add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rdx + 0x78] ; ret
0x000000000000ccf7 : add byte ptr [rax - 0x7c], al ; or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000182f37 : add byte ptr [rax - 0x7cb7fec8], al ; fdivr st(7) ; ret
0x00000000000514a7 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33e5cb7
0x000000000011829f : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34acaaf
0x000000000011829e : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc34acab0
0x000000000009744b : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000094807 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000094484 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000009b19d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000030357 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000072f3c : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000730a5 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x850f
0x0000000000085b6a : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000001dab77 : add byte ptr [rax - 0x7d], cl ; cmc ; call qword ptr [rbx]
0x0000000000153b5f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; push rdi ; retf
0x000000000019c62f : add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000019ada6 : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x19adb8 ; ret
0x000000000008e2ff : add byte ptr [rax - 0x7d], cl ; jg 0x8e345 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x0000000000096882 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000084246 : add byte ptr [rax - 0x7d], cl ; js 0x84284 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000013fc27 : add byte ptr [rax - 0x7d], cl ; out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x0000000000021f87 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000013ff6a : add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000bae8f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000004699f : add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x00000000000cb16d : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000013f7a2 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x000000000007d427 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x0000000000022c25 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002a404 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000526cf : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000019b29f : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000001239f2 : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x00000000000593a6 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000012c77f : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000000500d8 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000d5b17 : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x00000000001848ff : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c0d9 : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000f6237 : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000000000095ed7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000011359f : add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000000000c91e6 : add byte ptr [rax - 0x7d], cl ; ret 0x4d10
0x0000000000118925 : add byte ptr [rax - 0x7d], cl ; ret 0x6602
0x000000000009ffcf : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x00000000000ff5f7 : add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000007d608 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000012981f : add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x000000000009e8e0 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001868e3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001607f0 : add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000f20dd : add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x0000000000184923 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000a53f7 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000913a8 : add byte ptr [rax - 0x7d], cl ; retf
0x00000000000f9d04 : add byte ptr [rax - 0x7d], cl ; retf 0x31ff
0x000000000009461a : add byte ptr [rax - 0x7d], cl ; retf 0x4801
0x00000000001675df : add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x000000000003cc35 : add byte ptr [rax - 0x7d], cl ; retf 0x4809
0x000000000009672b : add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x000000000003cc95 : add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x00000000000a9f5f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000000b18ff : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000000514ef : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x5b ; ret
0x000000000002d7d7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000801da : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x000000000005090f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000f24ff : add byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx + rcx*2], 0x39 ; retf 0x840f
0x00000000001db98f : add byte ptr [rax - 0x7e], cl ; add dword ptr [rax], eax ; sbb al, 0xbc ; cmc ; jmp qword ptr [rdx]
0x00000000001bcb50 : add byte ptr [rax - 0x7eaf0004], 0xfc ; jmp qword ptr [rax]
0x000000000004f3c0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000095bc1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x9aa
0x00000000001544f1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xfdc1
0x0000000000099eb8 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x00000000001676e9 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xfc8f
0x00000000001495b9 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xfe70
0x0000000000082eb0 : add byte ptr [rax - 0x7f], cl ; ret
0x00000000000300f4 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000009b785 : add byte ptr [rax - 0x7f], cl ; ret 0x6be2
0x0000000000171e3b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000008057f : add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000fad50 : add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000001cfa3b : add byte ptr [rax - 0x8000000], al ; ret 0
0x0000000000004bdf : add byte ptr [rax - 0x80], al ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000014516f : add byte ptr [rax - 0x80], al ; std ; sub al, 0xf ; xchg eax, ebp ; ret 0x8040
0x00000000001cf247 : add byte ptr [rax - 0x80], bl ; cli ; call qword ptr [rax]
0x00000000001cdd8f : add byte ptr [rax - 0xb], ah ; in al, dx ; jmp rbx
0x00000000001c3ed7 : add byte ptr [rax - 0xbfffff9], dl ; adc al, 0xe6 ; jmp qword ptr [rdx]
0x00000000001d82d3 : add byte ptr [rax - 0xc], bl ; jmp qword ptr [rcx]
0x0000000000140a41 : add byte ptr [rax - 1], bh ; cmove eax, edx ; ret
0x000000000003d2bd : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003eefd : add byte ptr [rax - 1], bh ; ret
0x0000000000040146 : add byte ptr [rax - 1], dil ; ret
0x00000000001bd12c : add byte ptr [rax - 5], al ; jmp rax
0x00000000001bd470 : add byte ptr [rax - 5], dh ; call qword ptr [rax + 0x20fffb6f]
0x000000000010ec0b : add byte ptr [rax - 9], cl ; fmul dword ptr [rax + 0x21] ; ret
0x00000000001d7c7b : add byte ptr [rax*2 + 0x7c800001], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001cfa3c : add byte ptr [rax], 0 ; add al, bh ; ret 0
0x00000000000e441e : add byte ptr [rax], 0 ; add al, ch ; cdq ; ret 4
0x0000000000023b1f : add byte ptr [rax], 0 ; add al, ch ; cwde ; retf
0x0000000000023c5e : add byte ptr [rax], 0 ; add al, ch ; pop rcx ; retf 0x10
0x0000000000133b62 : add byte ptr [rax], 0 ; add al, ch ; push rbp ; retf
0x00000000000e4330 : add byte ptr [rax], 0 ; add al, ch ; push rdi ; ret
0x000000000004f3c4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000095bc5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x9aa
0x00000000001544f5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xfdc1
0x0000000000099ebc : add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000087fed : add byte ptr [rax], 0 ; add al, ch ; retf 0xa86
0x00000000000815bd : add byte ptr [rax], 0 ; add al, ch ; retf 0xaf0
0x00000000001676ed : add byte ptr [rax], 0 ; add al, ch ; retf 0xfc8f
0x00000000001495bd : add byte ptr [rax], 0 ; add al, ch ; retf 0xfe70
0x0000000000133bd9 : add byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr [rdi] ; retf 0xffff
0x000000000007beab : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000018effd : add byte ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000f753d : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret
0x000000000018a9cd : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000f8a0d : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000017363a : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; retf 0x8148
0x0000000000132da1 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; ret
0x000000000008cf15 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000ffa30 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; retf
0x0000000000131762 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000018a8da : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000009210b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003e4ab : add byte ptr [rax], 0 ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x000000000015df3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000017461b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000d9f2b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0xd9f00
0x00000000000dc3cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xdc3a7
0x00000000000dc3cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xdc3a9
0x000000000012f863 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x00000000000bba8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000002e163 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000001638bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x16388f
0x000000000016393b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x16390f
0x000000000009d49b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011010b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000003fb89 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000000878ce : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x0000000000130b4a : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x000000000008275b : add byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x00000000000570dd : add byte ptr [rax], 0 ; add byte ptr [rcx], ch ; ret 0x9848
0x00000000001902e1 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000132121 : add byte ptr [rax], 0 ; mov rdi, rbx ; call 0x8eb58
0x00000000001be4dd : add byte ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and ebp, eax ; jmp rax
0x00000000001d2130 : add byte ptr [rax], 0xf1 ; call qword ptr [rax]
0x00000000001c7867 : add byte ptr [rax], ah ; add byte ptr [r8], al ; push rsp ; retf 0xffe8
0x0000000000104037 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x0000000000000762 : add byte ptr [rax], ah ; add byte ptr [rdx], dl ; retf
0x00000000000e4b12 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000001d82ab : add byte ptr [rax], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001d560f : add byte ptr [rax], ah ; mov ah, 0xf3 ; jmp qword ptr [rcx]
0x00000000000305b4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001e181f : add byte ptr [rax], ah ; retf 0xfff7
0x00000000001c2c2f : add byte ptr [rax], ah ; stc ; call qword ptr [rax]
0x00000000001e2356 : add byte ptr [rax], al ; adc ah, ch ; add dword ptr [rax], eax ; add al, 0x11 ; clc ; jmp qword ptr [rcx]
0x00000000001e2b56 : add byte ptr [rax], al ; adc ah, dh ; add dword ptr [rax], eax ; mov ah, 0x37 ; clc ; call qword ptr [rdi]
0x00000000001bf3c6 : add byte ptr [rax], al ; adc al, 0 ; in eax, dx ; jmp rax
0x00000000001d555a : add byte ptr [rax], al ; adc al, 0x1e ; add dword ptr [rax], eax ; mov dl, 0xf3 ; call qword ptr [rcx]
0x00000000001c575a : add byte ptr [rax], al ; adc al, 0x20 ; add byte ptr [rax], al ; mov esp, edi ; call qword ptr [rdx]
0x00000000001db45a : add byte ptr [rax], al ; adc al, 0x7d ; add dword ptr [rax], eax ; nop ; pushfq ; cmc ; jmp rax
0x00000000001dc25a : add byte ptr [rax], al ; adc al, 0x8b ; add dword ptr [rax], eax ; nop ; clc ; cmc ; call qword ptr [rax]
0x00000000001bf0e6 : add byte ptr [rax], al ; adc al, 0xa3 ; in al, dx ; call qword ptr [rbx + rcx*8]
0x00000000001d275a : add byte ptr [rax], al ; adc al, 0xf0 ; add byte ptr [rax], al ; loopne 0x1d278b ; int1 ; jmp qword ptr [rcx]
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001cfdfe : add byte ptr [rax], al ; adc bh, dl ; out dx, al ; jmp qword ptr [rdi]
0x00000000001cf9ae : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x00000000001d01e6 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000001d01d2 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 0
0x00000000001cf99a : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0
0x00000000001d0196 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; retf 0
0x00000000001cf986 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001d0182 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001cf9d6 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001e3ec6 : add byte ptr [rax], al ; adc byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000003f650 : add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x00000000000045da : add byte ptr [rax], al ; adc dword ptr [rax], eax ; adc byte ptr [rax], al ; clc ; retf 0x1b
0x000000000000463a : add byte ptr [rax], al ; adc dword ptr [rax], eax ; adc byte ptr [rax], al ; cld ; retf 0x1b
0x00000000001d4829 : add byte ptr [rax], al ; add ah, ah ; adc byte ptr [rcx], al ; add al, cl ; retf
0x00000000001cfa29 : add byte ptr [rax], al ; add ah, ah ; ret 0
0x00000000001e0229 : add byte ptr [rax], al ; add ah, ah ; retf 1
0x00000000001d5911 : add byte ptr [rax], al ; add ah, cl ; and dword ptr [rcx], eax ; add al, cl ; ret
0x00000000001cfb11 : add byte ptr [rax], al ; add ah, cl ; ret
0x00000000001dfa11 : add byte ptr [rax], al ; add ah, cl ; ret 1
0x00000000001e1819 : add byte ptr [rax], al ; add ah, dl ; loopne 0x1e1828 ; add byte ptr [rax], ah ; retf 0xfff7
0x00000000001c6219 : add byte ptr [rax], al ; add ah, dl ; sub al, byte ptr [rax] ; add byte ptr [rax], dh ; retf 0xffe7
0x00000000001359eb : add byte ptr [rax], al ; add al, 0 ; add al, ch ; retf
0x00000000001d704a : add byte ptr [rax], al ; add al, 0x39 ; add dword ptr [rax], eax ; mov al, 0x47 ; hlt ; call qword ptr [rdx]
0x00000000001bf6ee : add byte ptr [rax], al ; add al, 0x93 ; in eax, dx ; call rsp
0x00000000001cf52a : add byte ptr [rax], al ; add al, 0xa0 ; out dx, al ; jmp rbx
0x00000000001c3626 : add byte ptr [rax], al ; add al, 0xc4 ; std ; jmp rax
0x00000000001dfc4a : add byte ptr [rax], al ; add al, 0xc5 ; add dword ptr [rax], eax ; rcr byte ptr [rbx - 9], 1 ; call qword ptr [rdi]
0x00000000001bf26e : add byte ptr [rax], al ; add al, 0xc5 ; in al, dx ; call rsp
0x00000000001bf736 : add byte ptr [rax], al ; add al, 0xc7 ; in eax, dx ; jmp rax
0x00000000001d014a : add byte ptr [rax], al ; add al, 0xca ; add byte ptr [rax], al ; loopne 0x1d0140 ; out dx, al ; call qword ptr [rdx]
0x00000000001d01da : add byte ptr [rax], al ; add al, 0xe6 ; out dx, al ; call qword ptr [rax]
0x00000000001c71da : add byte ptr [rax], al ; add al, 3 ; cli ; jmp qword ptr [rcx]
0x00000000001d5925 : add byte ptr [rax], al ; add al, ah ; and dword ptr [rcx], eax ; add ah, ah ; ret
0x000000000001b1fd : add byte ptr [rax], al ; add al, al ; ret
0x00000000001d483d : add byte ptr [rax], al ; add al, bh ; adc byte ptr [rcx], al ; add bh, dl ; retf
0x00000000001cfa3d : add byte ptr [rax], al ; add al, bh ; ret 0
0x000000000015a1d1 : add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x000000000012ca41 : add byte ptr [rax], al ; add al, byte ptr [rcx - 1] ; push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000001be2a6 : add byte ptr [rax], al ; add al, ch ; call rax
0x00000000000e441f : add byte ptr [rax], al ; add al, ch ; cdq ; ret 4
0x0000000000023b20 : add byte ptr [rax], al ; add al, ch ; cwde ; retf
0x0000000000021370 : add byte ptr [rax], al ; add al, ch ; pop rax ; lock add byte ptr [rax], al ; ret
0x0000000000023c5f : add byte ptr [rax], al ; add al, ch ; pop rcx ; retf 0x10
0x00000000000c46ff : add byte ptr [rax], al ; add al, ch ; pop rcx ; retf 0xfff5
0x00000000000e63f0 : add byte ptr [rax], al ; add al, ch ; push -0x76fffd6d ; ret 0xc748
0x0000000000133b63 : add byte ptr [rax], al ; add al, ch ; push rbp ; retf
0x00000000000e4331 : add byte ptr [rax], al ; add al, ch ; push rdi ; ret
0x0000000000024e05 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000095bc6 : add byte ptr [rax], al ; add al, ch ; ret 0x9aa
0x0000000000042626 : add byte ptr [rax], al ; add al, ch ; ret 0xa43
0x00000000001544f6 : add byte ptr [rax], al ; add al, ch ; ret 0xfdc1
0x0000000000154f56 : add byte ptr [rax], al ; add al, ch ; ret 0xff6c
0x0000000000062d8d : add byte ptr [rax], al ; add al, ch ; retf
0x0000000000155d2e : add byte ptr [rax], al ; add al, ch ; retf 0x38
0x000000000008912e : add byte ptr [rax], al ; add al, ch ; retf 0x866
0x0000000000087fee : add byte ptr [rax], al ; add al, ch ; retf 0xa86
0x00000000000815be : add byte ptr [rax], al ; add al, ch ; retf 0xaf0
0x000000000015970e : add byte ptr [rax], al ; add al, ch ; retf 0xec7a
0x00000000001676ee : add byte ptr [rax], al ; add al, ch ; retf 0xfc8f
0x000000000010281e : add byte ptr [rax], al ; add al, ch ; retf 0xfe41
0x00000000001495be : add byte ptr [rax], al ; add al, ch ; retf 0xfe70
0x00000000000d259e : add byte ptr [rax], al ; add al, ch ; retf 0xffef
0x0000000000133bda : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; retf 0xffff
0x000000000001bc05 : add byte ptr [rax], al ; add al, cl ; ret
0x00000000001e0335 : add byte ptr [rax], al ; add al, dh ; retf
0x00000000001cfa15 : add byte ptr [rax], al ; add al, dl ; ret 0
0x000000000005a156 : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], eax ; idiv edi ; call qword ptr [rax]
0x000000000019a7ad : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000152eda : add byte ptr [rax], al ; add bh, bh ; loope 0x152e77 ; ret
0x000000000019a94b : add byte ptr [rax], al ; add bh, bh ; loopne 0x19a94a ; ret
0x000000000005d3b2 : add byte ptr [rax], al ; add bh, bh ; loopne 0x5d409 ; mov ebx, edx ; jmp rax
0x0000000000069f3d : add byte ptr [rax], al ; add bh, bh ; loopne 0x69f94 ; mov eax, ecx ; jmp rax
0x0000000000032e31 : add byte ptr [rax], al ; add bh, bh ; ror byte ptr [rax - 0x77], 1 ; fucomip st(0) ; ret 0xfee2
0x000000000009ec81 : add byte ptr [rax], al ; add bh, dh ; ret 0
0x00000000000f188d : add byte ptr [rax], al ; add bh, dh ; ret 8
0x00000000000e718a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000d0bef : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x000000000015690b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000e67c8 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; ret
0x000000000009cfd2 : add byte ptr [rax], al ; add bl, al ; ret
0x0000000000155fdc : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000000000004572e : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000014efd0 : add byte ptr [rax], al ; add bl, ch ; ret 0x6690
0x00000000000d550c : add byte ptr [rax], al ; add bl, ch ; ret 0x8d48
0x000000000015cb9d : add byte ptr [rax], al ; add bl, ch ; retf
0x000000000015ccbb : add byte ptr [rax], al ; add bl, ch ; retf 0x168b
0x000000000011085f : add byte ptr [rax], al ; add bl, ch ; retf 0x1f0f
0x000000000014f993 : add byte ptr [rax], al ; add bl, ch ; retf 0x894d
0x00000000001112ed : add byte ptr [rax], al ; add bl, ch ; retf 0xf66
0x000000000003e4ad : add byte ptr [rax], al ; add bl, dh ; addps xmm0, xmm0 ; ret
0x00000000000b794d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b795d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002190d : add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007be4d : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; ret
0x00000000001165cd : add byte ptr [rax], al ; add byte ptr [rax + 0x10], bh ; syscall
0x0000000000121993 : add byte ptr [rax], al ; add byte ptr [rax + 0x119], bh ; syscall
0x00000000001e18d5 : add byte ptr [rax], al ; add byte ptr [rax + 0x140001e1], dl ; retf
0x000000000009aeed : add byte ptr [rax], al ; add byte ptr [rax + 0x16], bh ; ret
0x00000000001d32dd : add byte ptr [rax], al ; add byte ptr [rax + 0x1c0000fb], bl ; retf
0x00000000000e45cc : add byte ptr [rax], al ; add byte ptr [rax + 0x21058d48], dl ; ret
0x0000000000199191 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; ret 0xe583
0x000000000019673a : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf 0x8341
0x0000000000058260 : add byte ptr [rax], al ; add byte ptr [rax + 0x21], cl ; retf 0xc148
0x00000000000e495d : add byte ptr [rax], al ; add byte ptr [rax + 0x22], bh ; syscall
0x00000000000e4a1d : add byte ptr [rax], al ; add byte ptr [rax + 0x23], bh ; syscall
0x0000000000065458 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000ed448 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x1a8b
0x00000000000d727e : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000061746 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000000c1da6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000000f29c0 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ror dword ptr [rax + 1], 0xca ; jmp 0xf2964
0x00000000001d0af5 : add byte ptr [rax], al ; add byte ptr [rax + 0x340000d3], dh ; ret 0xffef
0x0000000000096a83 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000917ed : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000008acdd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000c358d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf
0x0000000000132e5d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2777
0x000000000016cc84 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x0000000000176071 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000001340cd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x577
0x00000000000e676b : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x5d74
0x00000000000851eb : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x000000000014459c : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000018effe : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0xe175
0x00000000000e4e2d : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], bh ; syscall
0x00000000001bc3db : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000001ca3c5 : add byte ptr [rax], al ; add byte ptr [rax + 0x4400006c], al ; ret
0x000000000002ef93 : add byte ptr [rax], al ; add byte ptr [rax + 0x440ffff9], al ; retf 0xd88
0x000000000012364d : add byte ptr [rax], al ; add byte ptr [rax + 0x44], bh ; syscall
0x000000000011062c : add byte ptr [rax], al ; add byte ptr [rax + 0x48], bh ; syscall
0x000000000011076d : add byte ptr [rax], al ; add byte ptr [rax + 0x49], bh ; syscall
0x00000000001d8da5 : add byte ptr [rax], al ; add byte ptr [rax + 0x56], ah ; add dword ptr [rax], eax ; push rsp ; ret
0x000000000010fabd : add byte ptr [rax], al ; add byte ptr [rax + 0x5a], bh ; syscall
0x00000000001cd4cd : add byte ptr [rax], al ; add byte ptr [rax + 0x5c00009d], cl ; retf
0x00000000000d2a2d : add byte ptr [rax], al ; add byte ptr [rax + 0x60], bh ; syscall
0x00000000000fd0ba : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000001404c2 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x000000000004e6a1 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000c3d47 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x000000000004615f : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000ee1b5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc148
0x00000000000c6bfa : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000100f3d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x5489
0x00000000000c7fe5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000c86b8 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000008453d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000000fecd5 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0xc148
0x00000000000e58fd : add byte ptr [rax], al ; add byte ptr [rax + 0x66], bh ; syscall
0x00000000000e591d : add byte ptr [rax], al ; add byte ptr [rax + 0x68], bh ; syscall
0x00000000000e590d : add byte ptr [rax], al ; add byte ptr [rax + 0x6b], bh ; syscall
0x00000000000e592d : add byte ptr [rax], al ; add byte ptr [rax + 0x6c], bh ; syscall
0x00000000000e58ed : add byte ptr [rax], al ; add byte ptr [rax + 0x6e], bh ; syscall
0x00000000000e593d : add byte ptr [rax], al ; add byte ptr [rax + 0x73], bh ; syscall
0x00000000001d58d5 : add byte ptr [rax], al ; add byte ptr [rax + 0x74000121], dl ; ret
0x00000000000b7e9d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000001ca5ed : add byte ptr [rax], al ; add byte ptr [rax + 0x7c00006e], ch ; retf
0x00000000000e5bcd : add byte ptr [rax], al ; add byte ptr [rax + 0x7c], bh ; syscall
0x00000000000e66cd : add byte ptr [rax], al ; add byte ptr [rax + 0x7d00], bh ; ret
0x00000000001bcb3d : add byte ptr [rax], al ; add byte ptr [rax + 0x7d], dl ; cld ; jmp qword ptr [rax]
0x00000000000e66dd : add byte ptr [rax], al ; add byte ptr [rax + 0x7e], bh ; ret
0x000000000003f1b2 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x000000000003f1ff : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x0000000000103d8d : add byte ptr [rax], al ; add byte ptr [rax + 0x8e], bh ; syscall
0x00000000001986e6 : add byte ptr [rax], al ; add byte ptr [rax + 0x9480000], al ; ret 0xb848
0x00000000000d2b0d : add byte ptr [rax], al ; add byte ptr [rax + 0xa4], bh ; syscall
0x00000000001218bd : add byte ptr [rax], al ; add byte ptr [rax + 0xa6], bh ; syscall
0x00000000000d296d : add byte ptr [rax], al ; add byte ptr [rax + 0xc9], bh ; syscall
0x00000000000f40fd : add byte ptr [rax], al ; add byte ptr [rax + 0xc], bh ; ret
0x00000000001306cf : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000e6b42 : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000003ee8d : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000000bbad5 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x0000000000025a90 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000015f4f4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x3145
0x0000000000123448 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x31c3
0x000000000016553a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x76eb
0x0000000000162ef2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000273a2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000955d1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000000a1352 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000011290a : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x00000000000e6674 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001438ad : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000283b6 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000000e670d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x0000000000054a3a : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000001101dd : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; syscall
0x00000000000d0540 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000018a9d7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000053579 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x0000000000053c46 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x000000000018a9ce : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8c0f
0x00000000000f8a0e : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0xc748
0x000000000017363b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8148
0x00000000000c3ec2 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000024e43 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8b48
0x000000000003d86b : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xeeb
0x0000000000054d03 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x00000000000e68b4 : add byte ptr [rax], al ; add byte ptr [rax + 7], bh ; ret
0x0000000000196a45 : add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret
0x00000000001c7781 : add byte ptr [rax], al ; add byte ptr [rax + rax*2], bh ; add byte ptr [rax], al ; pop rax ; ret 0xffe8
0x0000000000018b7d : add byte ptr [rax], al ; add byte ptr [rax + rax], ah ; add byte ptr [rax], al ; retf
0x00000000001e0225 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, ah ; retf 1
0x00000000001e019d : add byte ptr [rax], al ; add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; pop rsp ; retf 1
0x00000000001e5cf1 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf 4
0x00000000001c6b46 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add ah, dh ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000000d08c3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x00000000001dbbdd : add byte ptr [rax], al ; add byte ptr [rax - 0x13fffe7c], bl ; retf 0xfff5
0x00000000001c62dd : add byte ptr [rax], al ; add byte ptr [rax - 0x13ffffd5], bl ; retf
0x000000000007d455 : add byte ptr [rax], al ; add byte ptr [rax - 0x14dff3b5], al ; retf 0x9066
0x00000000001e18bd : add byte ptr [rax], al ; add byte ptr [rax - 0x1f], bh ; add dword ptr [rax], eax ; in al, dx ; retf 0xfff7
0x00000000001c81e5 : add byte ptr [rax], al ; add byte ptr [rax - 0x2bffffb6], ah ; retf
0x00000000001c77cd : add byte ptr [rax], al ; add byte ptr [rax - 0x33ffffc0], cl ; ret
0x000000000003d16d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000004c63d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003e2e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000142745 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x83 ; ret 0xf01
0x000000000002133c : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000002cc3e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000002c59e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000001361ac : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0xeb11
0x000000000003ec83 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000011599a : add byte ptr [rax], al ; add byte ptr [rax - 0x3fcef877], al ; ret
0x00000000001d8fcd : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffea8], cl ; retf
0x00000000001d58fd : add byte ptr [rax], al ; add byte ptr [rax - 0x53fffedf], bh ; ret
0x000000000002b6bb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000002b6d9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x000000000002b6f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000014410a : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000000000d090d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d091d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000d08fd : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000129976 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000090eed : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000014eca3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x0000000000156de8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; je 0x156e1c ; js 0x156d83 ; ret 0x1b9
0x0000000000043038 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x43066 ; call rdx
0x000000000011fa9d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x0000000000031061 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x000000000009b3d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x3348
0x00000000000442cd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x0000000000125644 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x00000000000e13fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000081ec3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009c6dd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x000000000002912e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fldl2t ; retf 0xfffd
0x0000000000126ac2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; ret
0x0000000000132da2 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; ret
0x00000000000d1bac : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; call rbx
0x00000000000d1e7e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r12 ; call rbx
0x000000000009af4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000009c525 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000150f76 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x15d218
0x0000000000035065 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x212d0
0x000000000008050c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000002520d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000059b92 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000082386 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000000222fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x45e9
0x00000000000f04fa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x774
0x000000000009307d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000fa178 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000db407 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000008048e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000007b885 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x94e9
0x0000000000101a47 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000066c2d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000004373b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000045e9b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x00000000000d5acd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xfde9
0x000000000008cf16 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000000ffa31 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x000000000004dfed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000005267d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000bc0bd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x0000000000084994 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x000000000018482e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x9066
0x000000000002a4f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xb60f
0x0000000000186684 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf66
0x000000000018b0da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0xf9c5
0x0000000000162d6d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x0000000000199514 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000199a9c : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret
0x0000000000021883 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ret 0xf41
0x000000000006948a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0x11
0x00000000001428ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rdx + 0x78] ; ret
0x00000000000514a5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; call 0xffffffffc33e5cb9
0x0000000000153b5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or al, ch ; push rdi ; retf
0x00000000000237e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013ff68 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3904
0x00000000000bae8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000004699d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x0000000000022c23 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000fd0ad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000001239f0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000186423 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013c2ce : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000011359d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000000000ff5f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000012981d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x00000000000a02de : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000187fa1 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001607ee : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb01
0x00000000000f20db : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb02
0x000000000018644d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000a5f05 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000000f9d02 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x31ff
0x00000000001675dd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x00000000000a9f5d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000002d7d5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000f24fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol dword ptr [rcx + rcx*2], 0x39 ; retf 0x840f
0x000000000015a09a : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000173634 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000008057d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000000fad4e : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; retf 0
0x00000000001cfa39 : add byte ptr [rax], al ; add byte ptr [rax - 0x8000000], al ; ret 0
0x000000000003d2bb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000003eefb : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001cfa3a : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add al, bh ; ret 0
0x00000000001d212e : add byte ptr [rax], al ; add byte ptr [rax], 0xf1 ; call qword ptr [rax]
0x00000000001c7865 : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [r8], al ; push rsp ; retf 0xffe8
0x00000000001cf9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x00000000001d01e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000001d01d0 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; nop ; retf 0
0x00000000001cf998 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret 0
0x00000000001d0194 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; retf 0
0x00000000001cf984 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000001d0180 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001cf9d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001cfb0e : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret
0x000000000001b1fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x0000000000062d8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; retf
0x000000000001bc03 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x000000000019a7ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000b795b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002190b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000008acdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000132e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x2777
0x0000000000100f3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x5489
0x000000000008453b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8d4c
0x00000000001bcb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x7d], dl ; cld ; jmp qword ptr [rax]
0x00000000001e5cef : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; retf 4
0x000000000003d16b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000d090b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x00000000000d091b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000d08fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x000000000011fa9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000008fe1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000009bdcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000222fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x45e9
0x000000000009307b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000012a93b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000066c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d5acb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xfde9
0x000000000005267b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000bc0bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d48
0x000000000003544b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000bae8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000004699b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4001
0x0000000000024b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000fd0ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000011359b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000000000012981b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xc601
0x0000000000139deb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x00000000001675db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x4802
0x000000000008057b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xe8
0x00000000001cfa38 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], 0 ; add al, bh ; ret 0
0x000000000001b1f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; ret
0x000000000001bc01 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, cl ; ret
0x0000000000103faa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000001e3e78 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001e59a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000000019e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x000000000000a6f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000b320 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2e
0x0000000000003f10 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x46
0x00000000001bbe68 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x0000000000019609 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x0000000000009672 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdx]
0x00000000001bbe2a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001bcb3a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; jge 0x1bcb48 ; jmp qword ptr [rax]
0x00000000000040f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009a92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000db5a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x000000000000938a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1f
0x00000000001a5912 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000006cea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x00000000001a5e02 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000006eb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000000fe82 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40
0x00000000000080e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x47
0x000000000000812a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x00000000001e3e7a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001e59a6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001e5d92 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x00000000001e563a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000000019e6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x0000000000001522 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000001157a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x000000000001d7da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b45
0x000000000001dbb2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b47
0x000000000001e302 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b4b
0x00000000000099d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x21
0x00000000001a5952 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x000000000000b322 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2e
0x00000000001a5e42 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000000efca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3a
0x0000000000009df2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44
0x0000000000003f12 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x46
0x00000000001bbe6a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x00000000000080b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x57
0x00000000001a4fba : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000001e5182 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000000d64a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x000000000001142a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000001e4dbe : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000ba8eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001960b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000000a1fab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; ret 0x870f
0x00000000000a0b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000043b79 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000011bdeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x00000000000bb0cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000015f04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000012208b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x000000000019974b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x00000000000bff9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000016623b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000000000ed4bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000169eeb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000a8bbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000010d85b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000013e5db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000000001bbe2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000001d3745 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx], al ; add ah, al ; or edx, esi ; jmp rdx
0x0000000000021fdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x000000000008d17b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000001e631b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx + 7], bh ; add byte ptr [rax], al ; ret
0x000000000009147b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000000d07ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x000000000018fa2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, al ; std ; xlatb ; retf 0xc985
0x000000000011ba4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000000000132d1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x00000000000f198b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x000000000011003b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000d0e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000009210c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003e4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x00000000000c46fe : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x21166
0x000000000019a7ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000009674 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdx]
0x00000000001a793c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001a6aec : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000114d54 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000123447 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x0000000000117725 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000bba47 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000000a1436 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x0000000000165539 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; jmp 0x1655c0
0x00000000000a1351 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; pop rbx ; ret
0x000000000006e99c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x6b468
0x0000000000078efa : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x751ed
0x000000000005b70d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000001e631c : add byte ptr [rax], al ; add byte ptr [rax], al ; jp 0x1e6331 ; add byte ptr [rax], al ; ret
0x000000000019389c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000001938ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000001938bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000001938cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000001938dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x000000000019381c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000019382c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000019383c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000019384c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000019385c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000019386c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x000000000019387c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000019388c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000d08fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000d091c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000d090c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000019380c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000017efbc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000b7e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b689c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000b786c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000b756c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000017effc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000017f01c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017efec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000010eb4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000b788c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b78ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b789c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000007be4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x00000000001165cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x000000000009aeec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000000e495c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x22 ; syscall
0x00000000000e4a1c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x23 ; syscall
0x00000000000e4e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x000000000012364c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x000000000011076c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x49 ; syscall
0x000000000010fabc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x00000000000d2a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000e58fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x00000000000e591c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000e590c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000e592c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000e58ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000e593c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000e5bcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000000e66cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7d00 ; ret
0x00000000000e66dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x0000000000103d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x00000000000d2b0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x00000000001218bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x00000000000f40fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc ; ret
0x00000000000d296c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc9 ; syscall
0x0000000000130e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000e670c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000008fd9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000054a39 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001101dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000054d02 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000012e80c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 7 ; ret
0x000000000015df3c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000efeac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x0000000000127f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000000000e4dec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000017461c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000017f02c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000015e408 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000b78cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000b78dc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000014dc9a : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000162d6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000d9f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0xd9eff
0x00000000000dc3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xdc3a6
0x00000000000dc3cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xdc3a8
0x000000000011fa9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000008fe0c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000081ec2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000035064 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call 0x212d1
0x0000000000081dc2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rdi ; jmp 0x81d9e
0x000000000017efcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000b787c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000b794c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b795c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000012f864 : add byte ptr [rax], al ; add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x000000000008d17c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000bba8c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000017476c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015452b : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x0000000000124197 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000043b7a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000a0b8d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002cb45 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001bbe2c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001bcb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; jge 0x1bcb46 ; jmp qword ptr [rax]
0x00000000001bc3da : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000000040f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000006384 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000009a94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000db5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x00000000001a690c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000001a70a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000000938c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1f
0x00000000001a5914 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000006cec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x00000000001a5e04 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000006eb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000000fe84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x40
0x00000000000080e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x47
0x000000000000812c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x48
0x000000000000795c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001e3e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001e59a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 5
0x00000000001e5d94 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 6
0x0000000000008cdc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000000019e8 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 8
0x0000000000001524 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000047f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000001157c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x10
0x000000000001d7dc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b45
0x000000000001dbb4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b47
0x000000000001e304 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b4b
0x00000000001a6944 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000001a70e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000000099d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x21
0x00000000001a5954 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x24
0x000000000000b324 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x2e
0x00000000001a5e44 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x33
0x000000000000efcc : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3a
0x00000000001a9dc5 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3b9a
0x0000000000009df4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x44
0x0000000000003f14 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x46
0x00000000001bbe6c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x49f2
0x00000000000080b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x57
0x00000000000062ac : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000001e5184 : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x000000000000d64c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x000000000001142c : add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000001e5cf0 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf 4
0x00000000001e4dc0 : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001e4944 : add byte ptr [rax], al ; add byte ptr [rax], al ; test al, 8 ; add byte ptr [rax], al ; ret
0x000000000018a67c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000000ba8ec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001638bc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x16388e
0x000000000016393c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; jmp 0x16390e
0x000000000009d61e : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000114f8c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000044148 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011010c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000018e57c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000021bdc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000007ec6c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000be63c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor r15d, r15d ; jmp 0xbe618
0x00000000000d061c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001c3835 : add byte ptr [rax], al ; add byte ptr [rax], bh ; in al, 0xe5 ; call qword ptr [rsi]
0x00000000001d8d7d : add byte ptr [rax], al ; add byte ptr [rax], bh ; push rsi ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff4
0x00000000001dfa5d : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x00000000001df95d : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 1
0x00000000001d015d : add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0
0x0000000000195974 : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000001cf94d : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0
0x00000000000ba8ed : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000001960d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000000001cf975 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0
0x00000000001cfa25 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, ah ; ret 0
0x00000000001cfa11 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, dl ; ret 0
0x00000000001d0159 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0
0x00000000001cf949 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0
0x00000000001cf971 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0
0x00000000001e0226 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ah ; retf 1
0x000000000010f4d4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x000000000008a1c1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x000000000007bca0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x18 ; ret
0x0000000000115d1b : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000121829 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1d], dh ; add rsp, 0x78 ; ret
0x00000000000d5ebe : add byte ptr [rax], al ; add byte ptr [rbp + 0x22], dh ; add rsp, 0x28 ; ret
0x000000000015a5fc : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x28 ; ret
0x000000000016341b : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x18 ; ret
0x000000000002bce5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000009f26d : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x00000000000a1fad : add byte ptr [rax], al ; add byte ptr [rbp + 0x38], al ; ret 0x870f
0x000000000011795d : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; add rsp, 0x68 ; ret
0x00000000000547fe : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x0000000000166743 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3e], dh ; add rsp, 0x78 ; ret
0x0000000000118b01 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3f], dh ; add rsp, 0x38 ; ret
0x0000000000118bd0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x40], dh ; add rsp, 0x38 ; ret
0x000000000011d1ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000000f4033 : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000010fdc4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000010ffe9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000012375c : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x58 ; ret
0x0000000000110714 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x00000000000e0e78 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4e], dh ; add rsp, 0x38 ; ret
0x00000000000e5cc8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x56], dh ; add rsp, 0x38 ; ret
0x000000000008bf4b : add byte ptr [rax], al ; add byte ptr [rbp + 0x58d48c0], al ; ret
0x000000000013b3fa : add byte ptr [rax], al ; add byte ptr [rbp + 0x59], dh ; add rsp, 0x38 ; ret
0x00000000000efcce : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; ret
0x0000000000160360 : add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; retf
0x00000000001667ca : add byte ptr [rax], al ; add byte ptr [rbp + 0x64], dh ; add rsp, 0x38 ; ret
0x000000000016649c : add byte ptr [rax], al ; add byte ptr [rbp + 0x6d], dh ; add rsp, 0x58 ; ret
0x0000000000116c4a : add byte ptr [rax], al ; add byte ptr [rbp + 0x76], dh ; add rsp, 0x38 ; ret
0x0000000000166574 : add byte ptr [rax], al ; add byte ptr [rbp + 0x78], dh ; add rsp, 0x68 ; ret
0x0000000000115d76 : add byte ptr [rax], al ; add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x00000000000da7b6 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; ret
0x0000000000116e13 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000000a361b : add byte ptr [rax], al ; add byte ptr [rbp + 1], al ; ret
0x00000000000f788a : add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; retf 0xc8b
0x000000000003eb5c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000043a3c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000000000117882 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000015c4de : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x0000000000150178 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x0000000000159d2e : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x000000000008b294 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x35c4
0x0000000000096809 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000019aa58 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; nop dword ptr [rax] ; ret
0x0000000000052203 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf 0x8341
0x00000000000c19dd : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x00000000000fb998 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x8349
0x00000000000684dd : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f798b : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x000000000011c717 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x00000000000ee2dd : add byte ptr [rax], al ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x000000000002bf19 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x0000000000173efd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000040388 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000003f2f0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003f45b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000192418 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001c6251 : add byte ptr [rax], al ; add byte ptr [rbx + rbp], cl ; add byte ptr [rax], al ; pop rax ; retf 0xffe7
0x00000000000e1d9b : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x25], cl ; ret
0x000000000015df99 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x00000000000685bf : add byte ptr [rax], al ; add byte ptr [rbx - 0x51f43], al ; call qword ptr [rax]
0x00000000000401d8 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6af00008], al ; ret 0xd521
0x0000000000125e58 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x0000000000043b7b : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x0000000000051f32 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000140ecb : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x00000000000ac0c2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x000000000011bded : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x0000000000197070 : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x0000000000197c2e : add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x000000000005baa4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000069771 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8948
0x000000000003fbe6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0xc989
0x00000000001981db : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x00000000000b6baf : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x00000000000fd6cd : add byte ptr [rax], al ; add byte ptr [rcx + 0x29f631da], cl ; retf 0x6348
0x0000000000085e14 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000017f01d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000000eb77c : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; retf
0x0000000000164c6f : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000017effd : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000b78ad : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000131059 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x000000000014484b : add byte ptr [rax], al ; add byte ptr [rcx + 0x6ae82414], cl ; retf 0xffed
0x0000000000065e46 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000dcebb : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret
0x000000000006a267 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000003fb8a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x00000000001970e1 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x0000000000197e9f : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret 0x8349
0x000000000012de1c : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; sub byte ptr [rcx], r13b ; ret 0x8941
0x00000000000bb0cd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000420a3 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x00000000001d8346 : add byte ptr [rax], al ; add byte ptr [rcx + rax], cl ; add al, 0xa1 ; hlt ; jmp qword ptr [rcx]
0x0000000000144984 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x30e9
0x00000000001445b9 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; retf 0x30e9
0x0000000000144ade : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x3c], cl ; ret 0x55e9
0x00000000001475f4 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x6d], al ; adc byte ptr [rax - 0x77], cl ; retf
0x00000000000e4c8a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x18], al ; syscall
0x000000000003189c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000d1997 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000878cf : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x0000000000130b4b : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x000000000008275c : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000018e8cd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000012d852 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call 0x129b28
0x000000000019b8a5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000009e5cd : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x0000000000055898 : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000015f04d : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000010eb4d : add byte ptr [rax], al ; add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x000000000005c409 : add byte ptr [rax], al ; add byte ptr [rcx - 0x48], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000011de38 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11de47 ; call r12
0x000000000011de68 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11de77 ; call r12
0x0000000000050539 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x4440
0x0000000000050b8c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xb940
0x000000000013f3a3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000000c1435 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x9848
0x00000000000f2c23 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000d9f2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc4eb
0x00000000000c6ba0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0x8948
0x00000000000dc3cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; retf 0xcbeb
0x0000000000197b6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x000000000002c989 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x000000000005aad7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000033bd6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000195852 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000014d160 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000000c63b2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000196893 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000012208d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x0000000000121afd : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x000000000009f246 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf 0xb941
0x0000000000021766 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf
0x000000000019974d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x000000000009464c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000009f2d7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000bff9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000000000016623d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000000000ed4bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000169eed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000000a8bbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000010d85d : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000013e4bf : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000000000046769 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7501
0x00000000001bbe2d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000ac290 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x00000000000ac2b6 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000001d3747 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add ah, al ; or edx, esi ; jmp rdx
0x00000000000fd68c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000000000facc9 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x427e
0x00000000000fcf09 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; retf 0x8944
0x0000000000057b2b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000d8d76 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2941
0x00000000000dd2f7 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x858b
0x00000000000dd24f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000daf93 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x894c
0x00000000000d8e3b : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000db97a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000de53c : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d45
0x00000000000570de : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x9848
0x00000000001163d1 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc085
0x00000000000d8dfe : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xc889
0x00000000000da41d : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd089
0x00000000000d2e3f : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xd129
0x00000000000bf3b3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul cl ; ret 0xfffc
0x00000000001542d9 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; call 0x30d77
0x000000000011ba6a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x00000000001d2afe : add byte ptr [rax], al ; add byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x00000000000431db : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000abbda : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000009d61f : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000164453 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0x63 ; ret 0xfffa
0x0000000000123483 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xd3 ; ret 0xfffe
0x000000000007ec6d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000bcdd2 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000195662 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x0000000000021fdd : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x000000000005ecb3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000012f865 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rbp - 0x78], eax ; call rax
0x0000000000156836 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], eax ; ret
0x00000000001567fe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; ret
0x0000000000152f8e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x0000000000152fa7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdx], eax ; ret
0x000000000010f3aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x000000000014dc10 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000003ee64 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x00000000000bb9d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000001746fd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000017476d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000e98f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000028689 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x00000000000bba8d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x000000000008d17d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x00000000000abc1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000e310b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000000001073f7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x1ae9
0x000000000003fb23 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x66c3
0x0000000000130f76 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000002cc89 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000000de82e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf001
0x00000000000da1b1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xf801
0x0000000000114d55 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfc3
0x000000000014f2ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x1689
0x0000000000060f11 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; retf 0x45e9
0x000000000018a22b : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000001e631d : add byte ptr [rax], al ; add byte ptr [rdx + 7], bh ; add byte ptr [rax], al ; ret
0x00000000000c7af7 : add byte ptr [rax], al ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000018a370 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x00000000001902e2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000009147d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000000ac01a : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000abb42 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000d07ad : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x00000000000693fa : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; jmp rax
0x00000000001e05a9 : add byte ptr [rax], al ; add byte ptr [rsi + rcx*8 + 1], ah ; add byte ptr [rax], dh ; ret 0xfffb
0x00000000001d8d91 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*2 + 1], cl ; add al, bl ; ret 0xfff4
0x00000000001d8db9 : add byte ptr [rax], al ; add byte ptr [rsi + rdx*2 + 1], dh ; add al, dl ; ret
0x000000000013ec43 : add byte ptr [rax], al ; add byte ptr [rsi - 0x7d], ah ; call qword ptr [rax]
0x00000000001d5546 : add byte ptr [rax], al ; add byte ptr [rsi], bl ; add dword ptr [rax], eax ; and al, 0xb2 ; jmp qword ptr [rcx]
0x00000000001d3b71 : add byte ptr [rax], al ; add byte ptr [rsp + rax], ch ; add dword ptr [rax], eax ; call 0xffffffffe11d2df0
0x000000000018fa2d : add byte ptr [rax], al ; add ch, al ; std ; xlatb ; retf 0xc985
0x00000000000f1a77 : add byte ptr [rax], al ; add cl, ch ; cmp eax, 0xf7fffffc ; ret 0
0x000000000006ecdf : add byte ptr [rax], al ; add cl, ch ; leave ; retf
0x000000000006f2fa : add byte ptr [rax], al ; add cl, ch ; outsd dx, dword ptr [rsi] ; ret 0xffff
0x00000000000a7e99 : add byte ptr [rax], al ; add cl, ch ; pop rbp ; ret 0xffff
0x00000000000a8014 : add byte ptr [rax], al ; add cl, ch ; pop rsi ; retf 0xffff
0x00000000000a7c29 : add byte ptr [rax], al ; add cl, ch ; push rbx ; ret 0xffff
0x00000000000a7ea4 : add byte ptr [rax], al ; add cl, ch ; push rdx ; ret 0xffff
0x0000000000029803 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000a7f38 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff4
0x00000000000fb1bb : add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x0000000000050a72 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000028fb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x00000000000a7eaf : add byte ptr [rax], al ; add cl, ch ; ret 0xffff
0x000000000002c7c5 : add byte ptr [rax], al ; add cl, ch ; retf
0x00000000000707de : add byte ptr [rax], al ; add cl, ch ; retf 0xffb0
0x00000000000762de : add byte ptr [rax], al ; add cl, ch ; retf 0xffd7
0x000000000015f1c7 : add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x00000000000f6a0f : add byte ptr [rax], al ; add cl, ch ; retf 0xfffe
0x00000000000a7cfd : add byte ptr [rax], al ; add cl, ch ; stc ; ret
0x000000000007136f : add byte ptr [rax], al ; add cl, ch ; xchg eax, ecx ; retf
0x00000000000a7bea : add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret 0xffff
0x000000000013119f : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000001d01ee : add byte ptr [rax], al ; add dh, ah ; out dx, al ; call qword ptr [rdx]
0x0000000000066956 : add byte ptr [rax], al ; add dh, al ; test esp, esp ; idiv bh ; jmp qword ptr [rax]
0x00000000000e729d : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000002540c : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x000000000011ba4d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000000fe8e7 : add byte ptr [rax], al ; add dh, dh ; ret 0x7420
0x0000000000194ad1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000000f198d : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000f5084 : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000b1c60 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x00000000000b1c69 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000646f5 : add byte ptr [rax], al ; add dh, dh ; ret 0xf50
0x00000000001d0d46 : add byte ptr [rax], al ; add dh, dl ; add byte ptr [rax], al ; hlt ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001d9e92 : add byte ptr [rax], al ; add dword ptr [eax], eax ; call 0x271d93ea
0x00000000001d7e86 : add byte ptr [rax], al ; add dword ptr [r8], r8d ; xor al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x00000000001d7d86 : add byte ptr [rax], al ; add dword ptr [rax], r8d ; add al, 0x99 ; hlt ; call qword ptr [rax]
0x00000000000ee023 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x000000000007be5e : add byte ptr [rax], al ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000001d9c86 : add byte ptr [rax], al ; add dword ptr gs:[rax], eax ; and al, 0x1c ; cmc ; call rdx
0x00000000001be2be : add byte ptr [rax], al ; add eax, r13d ; jmp qword ptr [rax]
0x000000000015482b : add byte ptr [rax], al ; add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x00000000001d8347 : add byte ptr [rax], al ; add qword ptr [rax], r8 ; add al, 0xa1 ; hlt ; jmp qword ptr [rcx]
0x00000000001d858a : add byte ptr [rax], al ; add qword ptr [rax], r8 ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000000514ee : add byte ptr [rax], al ; add rax, 1 ; pop rbx ; ret
0x00000000000d0e0e : add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000ab9f3 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000068b4c : add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x000000000018a9d8 : add byte ptr [rax], al ; add rax, rdi ; vzeroupper ; ret
0x0000000000153b01 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x00000000001567a1 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000155e71 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000152ed4 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x000000000003d86c : add byte ptr [rax], al ; add rdx, rcx ; jmp 0x3d885
0x000000000009be38 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000861b2 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000009bf4f : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000003eb18 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000021ecb : add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x00000000000581a6 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003e220 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000005891c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000199651 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000008d7eb : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000114cb4 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000000000005223b : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000117103 : add byte ptr [rax], al ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010fcac : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000000000010fed1 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000000000021d2c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000009de4d : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000238f7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003de36 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003e4ae : add byte ptr [rax], al ; addss xmm0, xmm0 ; ret
0x00000000001d338e : add byte ptr [rax], al ; and ah, dl ; int1 ; jmp rbx
0x0000000000018b7e : add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; retf
0x00000000001d4a6a : add byte ptr [rax], al ; and al, 0x13 ; add dword ptr [rax], eax ; mov al, 0x5c ; call rax
0x00000000001d5f6a : add byte ptr [rax], al ; and al, 0x28 ; add dword ptr [rax], eax ; nop ; stc ; call qword ptr [rdx]
0x00000000001bf706 : add byte ptr [rax], al ; and al, 0xaa ; in eax, dx ; call qword ptr [rax]
0x00000000001bf306 : add byte ptr [rax], al ; and al, 0xd4 ; in al, dx ; call qword ptr [rax]
0x00000000001bf506 : add byte ptr [rax], al ; and bpl, r13b ; jmp rax
0x00000000001d5666 : add byte ptr [rax], al ; and byte ptr [rdi], bl ; add dword ptr [rax], eax ; mov ah, 0xb4 ; jmp qword ptr [rcx]
0x00000000001d6666 : add byte ptr [rax], al ; and byte ptr [rdi], ch ; add dword ptr [rax], eax ; or esi, esp ; jmp qword ptr [rcx]
0x00000000001d6e2e : add byte ptr [rax], al ; and byte ptr [rdi], ch ; hlt ; call qword ptr [rdx]
0x00000000000bbad6 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000121684 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edx ; ret
0x000000000003088b : add byte ptr [rax], al ; and eax, esi ; ret
0x000000000008759e : add byte ptr [rax], al ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000001d5a8e : add byte ptr [rax], al ; and rax, qword ptr [rcx] ; add ah, bl ; sal bl, cl ; jmp rsi
0x00000000000abc1e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000b16a0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000b1384 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000001cf296 : add byte ptr [rax], al ; call 0x111cee5e
0x0000000000079522 : add byte ptr [rax], al ; call 0x125814
0x0000000000154475 : add byte ptr [rax], al ; call 0x130694
0x00000000000d43fe : add byte ptr [rax], al ; call 0x1306c4
0x00000000001d0176 : add byte ptr [rax], al ; call 0x131cf067
0x00000000000c4700 : add byte ptr [rax], al ; call 0x21164
0x00000000000d48b2 : add byte ptr [rax], al ; call 0x212cc
0x00000000001cdca6 : add byte ptr [rax], al ; call 0x221cc9a5
0x0000000000154301 : add byte ptr [rax], al ; call 0x30d74
0x0000000000127dac : add byte ptr [rax], al ; call 0xe4844
0x00000000001096ee : add byte ptr [rax], al ; call 0xe5904
0x00000000001cf0b6 : add byte ptr [rax], al ; call 0xffffffffd51cec7c
0x000000000019a7ae : add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000009676 : add byte ptr [rax], al ; call qword ptr [rdx]
0x0000000000021bb0 : add byte ptr [rax], al ; call rax
0x00000000000d1960 : add byte ptr [rax], al ; call rbx
0x00000000001a793e : add byte ptr [rax], al ; call rdi
0x0000000000042f65 : add byte ptr [rax], al ; call rdx
0x00000000001a6aee : add byte ptr [rax], al ; call rsp
0x00000000001d483e : add byte ptr [rax], al ; clc ; adc byte ptr [rcx], al ; add bh, dl ; retf
0x00000000001d7c3e : add byte ptr [rax], al ; clc ; add dword ptr [rax], r8d ; sub al, 0x7c ; hlt ; jmp qword ptr [rcx]
0x00000000001dd03e : add byte ptr [rax], al ; clc ; cwde ; add dword ptr [rax], eax ; fsubr qword ptr [rcx - 0xa] ; call rax
0x00000000001da13e : add byte ptr [rax], al ; clc ; imul eax, dword ptr [rcx], 0xf5621c00 ; jmp qword ptr [rbx]
0x00000000001cc1e6 : add byte ptr [rax], al ; clc ; in al, dx ; call qword ptr [rsi]
0x00000000001c6b36 : add byte ptr [rax], al ; clc ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000001d01c6 : add byte ptr [rax], al ; clc ; in eax, 0xee ; call qword ptr [rdx]
0x00000000000bbb54 : add byte ptr [rax], al ; clc ; jg 0xbbb58 ; int1 ; mov eax, eax ; ret
0x00000000001db33e : add byte ptr [rax], al ; clc ; jnp 0x1db34d ; add byte ptr [rcx + rbx*4], bh ; cmc ; call qword ptr [rdx]
0x00000000001cfa3e : add byte ptr [rax], al ; clc ; ret 0
0x00000000001c5606 : add byte ptr [rax], al ; clc ; xchg bh, ah ; call qword ptr [rcx]
0x00000000001d338a : add byte ptr [rax], al ; cld ; add byte ptr [rax], al ; and ah, dl ; int1 ; jmp rbx
0x00000000001d8242 : add byte ptr [rax], al ; cld ; add qword ptr [rax], rax ; cwde ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d01b2 : add byte ptr [rax], al ; cld ; in eax, 0xee ; call qword ptr [rax]
0x00000000001cf242 : add byte ptr [rax], al ; cld ; mov edx, 0x80580000 ; cli ; call qword ptr [rax]
0x00000000001da242 : add byte ptr [rax], al ; cld ; push 1 ; add byte ptr [rax + 0x62], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001d5042 : add byte ptr [rax], al ; cld ; sbb byte ptr [rcx], al ; add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdx]
0x00000000001e2caa : add byte ptr [rax], al ; cmc ; add dword ptr [rax], eax ; jo 0x1e2cf3 ; clc ; call rsi
0x0000000000130f77 : add byte ptr [rax], al ; cmova eax, edx ; add rsp, 0x28 ; ret
0x0000000000114d56 : add byte ptr [rax], al ; cmova eax, edx ; ret
0x0000000000141240 : add byte ptr [rax], al ; cmovae eax, edi ; ret
0x0000000000123449 : add byte ptr [rax], al ; cmovb rax, rdx ; ret
0x000000000003fb24 : add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000117727 : add byte ptr [rax], al ; cmove rax, rbx ; pop rbx ; ret
0x00000000000bba81 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000000bba49 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000009ec03 : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000130e38 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000a1438 : add byte ptr [rax], al ; cmovne rax, rdi ; ret
0x000000000016553b : add byte ptr [rax], al ; cmovne rax, rdx ; jmp 0x1655be
0x00000000000a1353 : add byte ptr [rax], al ; cmovne rax, rdx ; pop rbx ; ret
0x00000000000e6675 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e458f : add byte ptr [rax], al ; cmovne rdx, rax ; mov rax, rdx ; ret
0x0000000000129f6f : add byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001e019e : add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 1
0x00000000001c7782 : add byte ptr [rax], al ; cmp al, 0x40 ; add byte ptr [rax], al ; pop rax ; ret 0xffe8
0x00000000001cdff6 : add byte ptr [rax], al ; cmp al, bh ; in al, dx ; call qword ptr [rax]
0x0000000000182f36 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000001cc27e : add byte ptr [rax], al ; cmp byte ptr [rbx + 0x418c0000], cl ; in al, dx ; call qword ptr [rdx]
0x00000000001d827e : add byte ptr [rax], al ; cmp byte ptr [rbx + 1], cl ; add ah, ch ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d2b26 : add byte ptr [rax], al ; cmp byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001d71c6 : add byte ptr [rax], al ; cmp byte ptr [rdx], 1 ; add ah, dl ; hlt ; jmp qword ptr [rcx]
0x00000000001cfa06 : add byte ptr [rax], al ; cmp byte ptr [rdx], bh ; cld ; call qword ptr [rbx]
0x0000000000096eb7 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x96e88 ; ret
0x0000000000132e5e : add byte ptr [rax], al ; cmp rdx, rcx ; ja 0x132e95 ; xor eax, eax ; syscall
0x00000000001bf10e : add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; jmp rsp
0x00000000001d7cde : add byte ptr [rax], al ; cwde ; add dword ptr [r8], r8d ; or al, 0x7d ; hlt ; jmp qword ptr [rcx]
0x00000000001e29de : add byte ptr [rax], al ; cwde ; add dword ptr [rax], eax ; in al, dx ; xor bh, al ; call qword ptr [rbx]
0x00000000001d81de : add byte ptr [rax], al ; cwde ; add qword ptr [rax], rax ; or al, 0x9f ; hlt ; jmp qword ptr [rcx]
0x00000000001c8916 : add byte ptr [rax], al ; cwde ; cmp ch, bl ; jmp qword ptr [rcx]
0x00000000001df9de : add byte ptr [rax], al ; cwde ; ret 1
0x00000000001c62de : add byte ptr [rax], al ; cwde ; sub eax, dword ptr [rax] ; add ah, ch ; retf
0x00000000001dbbde : add byte ptr [rax], al ; cwde ; test byte ptr [rcx], al ; add ah, ch ; retf 0xfff5
0x00000000001c4136 : add byte ptr [rax], al ; cwde ; xor esi, esp ; call qword ptr [rdi]
0x00000000001a3a9a : add byte ptr [rax], al ; enter 0, 0 ; retf
0x00000000001a7aee : add byte ptr [rax], al ; enter 0, 0 ; retf 0
0x00000000001a4c46 : add byte ptr [rax], al ; enter 0x10, 0 ; retf
0x00000000001d3c0e : add byte ptr [rax], al ; enter 0x104, 0 ; pushfq ; test dl, dh ; call qword ptr [rdi]
0x00000000001d750e : add byte ptr [rax], al ; enter 0x13d, 0 ; pop rsp ; pop rdx ; hlt ; call qword ptr [rdx]
0x00000000001d840e : add byte ptr [rax], al ; enter 0x14c, 0 ; sbb al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001d970e : add byte ptr [rax], al ; enter 0x15f, 0 ; cmp al, 0xf3 ; hlt ; call rsi
0x00000000001db30e : add byte ptr [rax], al ; enter 0x17b, 0 ; sbb al, 0x99 ; cmc ; call qword ptr [rdi]
0x00000000001a4446 : add byte ptr [rax], al ; enter 0xa, 0 ; retf
0x00000000001cf40e : add byte ptr [rax], al ; enter 0xbc, 0 ; or al, 0xf3 ; sti ; jmp qword ptr [rax]
0x00000000001a4846 : add byte ptr [rax], al ; enter 0xd, 0 ; retf
0x00000000001d2a0e : add byte ptr [rax], al ; enter 0xf2, 0 ; sub al, 0x2f ; int1 ; jmp qword ptr [rcx]
0x00000000001d2b0e : add byte ptr [rax], al ; enter 0xf3, 0 ; sbb al, 0x31 ; int1 ; jmp qword ptr [rcx]
0x00000000001d2c0e : add byte ptr [rax], al ; enter 0xf4, 0 ; pushfq ; cmp al, 0xf1 ; jmp qword ptr [rdi]
0x00000000001a7cee : add byte ptr [rax], al ; enter 1, 0 ; retf 1
0x00000000001a7eee : add byte ptr [rax], al ; enter 2, 0 ; retf 2
0x00000000001a80ee : add byte ptr [rax], al ; enter 3, 0 ; retf 3
0x00000000001a82ee : add byte ptr [rax], al ; enter 4, 0 ; retf 4
0x00000000001a84ee : add byte ptr [rax], al ; enter 5, 0 ; retf 5
0x00000000001a86ee : add byte ptr [rax], al ; enter 6, 0 ; retf 6
0x00000000001a88ee : add byte ptr [rax], al ; enter 7, 0 ; retf 7
0x00000000001a8aee : add byte ptr [rax], al ; enter 8, 0 ; retf 8
0x00000000001a8cee : add byte ptr [rax], al ; enter 9, 0 ; retf 9
0x00000000001c3d22 : add byte ptr [rax], al ; fadd qword ptr [rip + 0x63880000] ; std ; jmp qword ptr [rdx]
0x00000000001d1592 : add byte ptr [rax], al ; fcom qword ptr [rcx - 0x10] ; call qword ptr [rdx]
0x00000000001d511e : add byte ptr [rax], al ; fcomp dword ptr [rcx] ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x00000000001c6b1e : add byte ptr [rax], al ; fdiv dword ptr [rbx] ; add byte ptr [rax], al ; in al, dx ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001daa22 : add byte ptr [rax], al ; fdiv qword ptr [rdx + 1] ; add al, bl ; jg 0x1daa29 ; call qword ptr [rax]
0x00000000001d2b22 : add byte ptr [rax], al ; fdivr st(3), st(0) ; add byte ptr [rax], al ; cmp byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x000000000003dd7e : add byte ptr [rax], al ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x00000000001c64e6 : add byte ptr [rax], al ; fmul dword ptr [rdi] ; cli ; call qword ptr [rdi]
0x00000000001cc122 : add byte ptr [rax], al ; fmul qword ptr [rcx + 0x3db80000] ; in al, dx ; call qword ptr [rdi]
0x00000000001d0122 : add byte ptr [rax], al ; fmul st(1), st(0) ; add byte ptr [rax], al ; fsub st(5) ; out dx, al ; jmp qword ptr [rax]
0x00000000001cd962 : add byte ptr [rax], al ; fmul st(5), st(0) ; cld ; call qword ptr [rdx]
0x00000000001cd922 : add byte ptr [rax], al ; fsub qword ptr [rcx - 0x1a380000] ; in al, dx ; call qword ptr [rdi]
0x00000000001d0126 : add byte ptr [rax], al ; fsub st(5) ; out dx, al ; jmp qword ptr [rax]
0x00000000001d1b22 : add byte ptr [rax], al ; fsubr st(3), st(0) ; add byte ptr [rax], al ; in eax, 0xf0 ; call qword ptr [rbx]
0x00000000001c4fce : add byte ptr [rax], al ; fsubr st(6), st(0) ; call qword ptr [rax]
0x00000000001c500a : add byte ptr [rax], al ; fsubr st(6), st(0) ; jmp rdx
0x00000000001c3eda : add byte ptr [rax], al ; hlt ; adc al, 0xe6 ; jmp qword ptr [rdx]
0x00000000001c6b4a : add byte ptr [rax], al ; hlt ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001d018a : add byte ptr [rax], al ; hlt ; in eax, 0xee ; call qword ptr [rax]
0x00000000001bf82e : add byte ptr [rax], al ; hlt ; in eax, dx ; jmp qword ptr [rax]
0x00000000001d0d4a : add byte ptr [rax], al ; hlt ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001da03a : add byte ptr [rax], al ; hlt ; push 0x60b00001 ; cmc ; jmp qword ptr [rsi]
0x00000000001cf93a : add byte ptr [rax], al ; hlt ; rol dword ptr [rax], 0 ; xor ch, 0xfb ; call qword ptr [rdx]
0x00000000001be48e : add byte ptr [rax], al ; hlt ; sbb ebp, eax ; call qword ptr [rax]
0x00000000001bf5d6 : add byte ptr [rax], al ; hlt ; sub ebp, ebp ; jmp rsp
0x00000000001dbc3a : add byte ptr [rax], al ; hlt ; test byte ptr [rcx], al ; add byte ptr [rax - 0x34], al ; cmc ; jmp rsp
0x00000000001bf6b6 : add byte ptr [rax], al ; hlt ; xchg ch, ch ; call rax
0x00000000001bf08e : add byte ptr [rax], al ; hlt ; xchg eax, ebp ; in al, dx ; call rax
0x00000000001c693a : add byte ptr [rax], al ; hlt ; xor dword ptr [rax], eax ; add al, ah ; fucom st(7) ; call qword ptr [rsi]
0x00000000001bec96 : add byte ptr [rax], al ; imul bl ; jmp rax
0x00000000001da292 : add byte ptr [rax], al ; imul r8, qword ptr [rcx], 0 ; fsub dword ptr [rdx - 0xb] ; jmp qword ptr [rbx]
0x00000000001da08a : add byte ptr [rax], al ; imul r8d, dword ptr [rcx], 0xf5612000 ; jmp qword ptr [rbx]
0x00000000001bf3d6 : add byte ptr [rax], al ; in al, 0 ; in eax, dx ; jmp qword ptr [rax]
0x00000000001c562a : add byte ptr [rax], al ; in al, 0x1e ; add byte ptr [rax], al ; nop ; xchg edi, esp ; call qword ptr [rax]
0x00000000001bf5ce : add byte ptr [rax], al ; in al, 0x29 ; in eax, dx ; call rax
0x00000000001d2aea : add byte ptr [rax], al ; in al, 0x30 ; int1 ; jmp qword ptr [rcx]
0x00000000001beea6 : add byte ptr [rax], al ; in al, 0x4c ; in al, dx ; jmp rax
0x00000000001da12a : add byte ptr [rax], al ; in al, 0x69 ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001befc6 : add byte ptr [rax], al ; in al, 0x6c ; in al, dx ; jmp rax
0x00000000001db92a : add byte ptr [rax], al ; in al, 0x81 ; add dword ptr [rax], eax ; mov al, 0xba ; cmc ; call rdx
0x00000000001bf2c6 : add byte ptr [rax], al ; in al, 0xca ; in al, dx ; call rsp
0x00000000001d013a : add byte ptr [rax], al ; in al, 0xe5 ; out dx, al ; call qword ptr [rax]
0x00000000001d212a : add byte ptr [rax], al ; in al, 0xe9 ; add byte ptr [rax], al ; add byte ptr [rax], 0xf1 ; call qword ptr [rax]
0x00000000001c3832 : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; add byte ptr [rax], bh ; in al, 0xe5 ; call qword ptr [rsi]
0x00000000001d8332 : add byte ptr [rax], al ; in al, dx ; add qword ptr [r8], rax ; call 0x221d77e6
0x00000000001cc596 : add byte ptr [rax], al ; in al, dx ; call rbx
0x00000000001bed8e : add byte ptr [rax], al ; in al, dx ; call rsp
0x00000000001c6b22 : add byte ptr [rax], al ; in al, dx ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001d0162 : add byte ptr [rax], al ; in al, dx ; in eax, 0xee ; call qword ptr [rax]
0x00000000001cf332 : add byte ptr [rax], al ; in al, dx ; mov ebx, 0xd2b80000 ; sti ; call qword ptr [rax]
0x00000000001c8e32 : add byte ptr [rax], al ; in al, dx ; push rsi ; add byte ptr [rax], al ; sbb byte ptr [rdx - 0x15], ah ; call qword ptr [rax]
0x00000000001c62e2 : add byte ptr [rax], al ; in al, dx ; retf
0x00000000001c6b32 : add byte ptr [rax], al ; in al, dx ; xor eax, dword ptr [rax] ; add al, bh ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000001d1b26 : add byte ptr [rax], al ; in eax, 0xf0 ; call qword ptr [rbx]
0x00000000001bf61e : add byte ptr [rax], al ; in eax, dx ; call rsp
0x00000000001bf7f6 : add byte ptr [rax], al ; in eax, dx ; in eax, dx ; jmp rsp
0x00000000001bf58e : add byte ptr [rax], al ; in eax, dx ; jmp rax
0x000000000000c637 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001db7b2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [rcx], 0 ; test al, 0xb2 ; cmc ; call rdi
0x00000000001da38e : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; or al, 0x64 ; cmc ; call qword ptr [rdx]
0x00000000001da0b2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; imul eax, dword ptr [rcx], 0xf5615800 ; jmp qword ptr [rbx]
0x00000000001d24b2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; in eax, dx ; add byte ptr [rax], al ; js 0x1d24d5 ; int1 ; call rsi
0x00000000001cf0b2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov ecx, 0xbae80000 ; sti ; call rsp
0x00000000001ce362 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or ch, ch ; call qword ptr [rax]
0x00000000001cf9b2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; ret 0
0x00000000001335a0 : add byte ptr [rax], al ; je 0x1335b5 ; ret
0x00000000001bef66 : add byte ptr [rax], al ; je 0x1befd4 ; in al, dx ; jmp qword ptr [rax]
0x00000000001bf2d6 : add byte ptr [rax], al ; je 0x1bf2aa ; in al, dx ; call qword ptr [rax]
0x00000000001bf826 : add byte ptr [rax], al ; je 0x1bf821 ; in eax, dx ; jmp rsp
0x00000000001ceaba : add byte ptr [rax], al ; je 0x1cea7a ; add byte ptr [rax], al ; push rax ; sub ch, ch ; call rsp
0x00000000001d06ba : add byte ptr [rax], al ; je 0x1d0696 ; add byte ptr [rax], al ; sal byte ptr [rbx - 0x11], 1 ; call qword ptr [rax]
0x00000000001d55ba : add byte ptr [rax], al ; je 0x1d55e5 ; add dword ptr [rax], eax ; mov al, 0xb3 ; jmp qword ptr [rcx]
0x00000000001d8fba : add byte ptr [rax], al ; je 0x1d901d ; add dword ptr [rax], eax ; nop ; retf
0x00000000001da2ba : add byte ptr [rax], al ; je 0x1da332 ; add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001dab86 : add byte ptr [rax], al ; je 0x1dab95 ; add byte ptr [rbx + rax*4 - 0xb], dl ; call qword ptr [rsi]
0x000000000009c936 : add byte ptr [rax], al ; je 0x9c945 ; ret
0x00000000000bd4e0 : add byte ptr [rax], al ; je 0xbd4f5 ; ret
0x00000000000c7af8 : add byte ptr [rax], al ; je 0xc7b03 ; ret
0x00000000000d08c4 : add byte ptr [rax], al ; je 0xd0938 ; lea rax, [rdi - 0x10] ; ret
0x00000000000e6866 : add byte ptr [rax], al ; je 0xe6854 ; mov eax, 1 ; ret
0x0000000000195663 : add byte ptr [rax], al ; jg 0x195676 ; neg eax ; ret
0x00000000000bcdd3 : add byte ptr [rax], al ; jg 0xbcddf ; neg eax ; ret
0x0000000000192419 : add byte ptr [rax], al ; jl 0x192426 ; neg eax ; ret
0x00000000001cc252 : add byte ptr [rax], al ; jl 0x1cc29c ; in al, dx ; call qword ptr [rdx]
0x00000000001cf4c2 : add byte ptr [rax], al ; jl 0x1cf48c ; add byte ptr [rax], al ; js 0x1cf543 ; out dx, al ; jmp qword ptr [rbx]
0x00000000001d01c2 : add byte ptr [rax], al ; jl 0x1d0199 ; add byte ptr [rax], al ; clc ; in eax, 0xee ; call qword ptr [rdx]
0x00000000001d4ec2 : add byte ptr [rax], al ; jl 0x1d4ee6 ; add dword ptr [rax], eax ; cwde ; pushfq ; call qword ptr [rax]
0x00000000001d58c2 : add byte ptr [rax], al ; jl 0x1d58ee ; add dword ptr [rax], eax ; pop rax ; ret
0x000000000015cb9e : add byte ptr [rax], al ; jmp 0x15cb70
0x000000000006e99e : add byte ptr [rax], al ; jmp 0x6b466
0x000000000006f2fb : add byte ptr [rax], al ; jmp 0x6b575
0x000000000006f687 : add byte ptr [rax], al ; jmp 0x6b8b4
0x0000000000078efc : add byte ptr [rax], al ; jmp 0x751eb
0x00000000000a7beb : add byte ptr [rax], al ; jmp 0xa3e88
0x00000000000a7c8d : add byte ptr [rax], al ; jmp 0xa3f77
0x00000000000a7e84 : add byte ptr [rax], al ; jmp 0xa4102
0x00000000000a7e6a : add byte ptr [rax], al ; jmp 0xa48c0
0x00000000000a8015 : add byte ptr [rax], al ; jmp 0xa4a7e
0x000000000003ecdf : add byte ptr [rax], al ; jmp rax
0x0000000000152edb : add byte ptr [rax], al ; jmp rcx
0x000000000010f4d5 : add byte ptr [rax], al ; jne 0x10f4f1 ; add rsp, 0x28 ; ret
0x000000000010f63e : add byte ptr [rax], al ; jne 0x10f694 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010f6fa : add byte ptr [rax], al ; jne 0x10f70b ; add rsp, 0x18 ; ret
0x000000000010f74c : add byte ptr [rax], al ; jne 0x10f75d ; add rsp, 0x18 ; ret
0x000000000010fdc5 : add byte ptr [rax], al ; jne 0x10fe13 ; add rsp, 0x58 ; ret
0x000000000010ffea : add byte ptr [rax], al ; jne 0x11003b ; add rsp, 0x58 ; ret
0x0000000000110715 : add byte ptr [rax], al ; jne 0x11076b ; add rsp, 0x68 ; ret
0x0000000000110841 : add byte ptr [rax], al ; jne 0x1108b5 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000115d1c : add byte ptr [rax], al ; jne 0x115d43 ; add rsp, 0x38 ; ret
0x0000000000115d77 : add byte ptr [rax], al ; jne 0x115d8f ; add rsp, 0x18 ; ret
0x0000000000116af9 : add byte ptr [rax], al ; jne 0x116b5b ; add rsp, 0x38 ; ret
0x0000000000116b99 : add byte ptr [rax], al ; jne 0x116bfb ; add rsp, 0x38 ; ret
0x0000000000116c4b : add byte ptr [rax], al ; jne 0x116ccd ; add rsp, 0x38 ; ret
0x0000000000116d1b : add byte ptr [rax], al ; jne 0x116d9d ; add rsp, 0x38 ; ret
0x0000000000116e14 : add byte ptr [rax], al ; jne 0x116e2f ; add rsp, 0x28 ; ret
0x0000000000117883 : add byte ptr [rax], al ; jne 0x117894 ; add rsp, 0x38 ; ret
0x000000000011795e : add byte ptr [rax], al ; jne 0x1179a5 ; add rsp, 0x68 ; ret
0x0000000000118b02 : add byte ptr [rax], al ; jne 0x118b4d ; add rsp, 0x38 ; ret
0x0000000000118bd1 : add byte ptr [rax], al ; jne 0x118c1d ; add rsp, 0x38 ; ret
0x000000000012182a : add byte ptr [rax], al ; jne 0x121853 ; add rsp, 0x78 ; ret
0x00000000001231c8 : add byte ptr [rax], al ; jne 0x1231d9 ; add rsp, 0x18 ; ret
0x000000000012375d : add byte ptr [rax], al ; jne 0x1237b3 ; add rsp, 0x58 ; ret
0x000000000013119a : add byte ptr [rax], al ; jne 0x13124e ; leave ; ret
0x0000000000134222 : add byte ptr [rax], al ; jne 0x13423d ; add rsp, 0x28 ; ret
0x0000000000134282 : add byte ptr [rax], al ; jne 0x13429d ; add rsp, 0x28 ; ret
0x000000000013b3fb : add byte ptr [rax], al ; jne 0x13b460 ; add rsp, 0x38 ; ret
0x000000000013b4c5 : add byte ptr [rax], al ; jne 0x13b4d6 ; add rsp, 0x38 ; ret
0x000000000013b542 : add byte ptr [rax], al ; jne 0x13b553 ; add rsp, 0x28 ; ret
0x000000000014138a : add byte ptr [rax], al ; jne 0x1413a2 ; add rsp, 0x18 ; ret
0x000000000014318e : add byte ptr [rax], al ; jne 0x14319f ; add rsp, 0x18 ; ret
0x000000000014bad5 : add byte ptr [rax], al ; jne 0x14bae8 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000014ea36 : add byte ptr [rax], al ; jne 0x14ea7c ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000150179 : add byte ptr [rax], al ; jne 0x15018a ; add rsp, 0x58 ; ret
0x00000000001545a9 : add byte ptr [rax], al ; jne 0x154634 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000157b51 : add byte ptr [rax], al ; jne 0x157b64 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157ebd : add byte ptr [rax], al ; jne 0x157ee8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000158113 : add byte ptr [rax], al ; jne 0x158138 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000158243 : add byte ptr [rax], al ; jne 0x158268 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000159d2f : add byte ptr [rax], al ; jne 0x159d40 ; add rsp, 0x78 ; ret
0x0000000000159d95 : add byte ptr [rax], al ; jne 0x159da6 ; add rsp, 0x78 ; ret
0x0000000000159e05 : add byte ptr [rax], al ; jne 0x159e16 ; add rsp, 0x78 ; ret
0x0000000000159e75 : add byte ptr [rax], al ; jne 0x159e86 ; add rsp, 0x78 ; ret
0x0000000000159ed6 : add byte ptr [rax], al ; jne 0x159ee7 ; add rsp, 0x78 ; ret
0x0000000000159f3a : add byte ptr [rax], al ; jne 0x159f4b ; add rsp, 0x78 ; ret
0x0000000000159fa5 : add byte ptr [rax], al ; jne 0x159fb6 ; add rsp, 0x78 ; ret
0x000000000015a01f : add byte ptr [rax], al ; jne 0x15a030 ; add rsp, 0x78 ; ret
0x000000000015a5fd : add byte ptr [rax], al ; jne 0x15a630 ; add rsp, 0x28 ; ret
0x000000000015c4df : add byte ptr [rax], al ; jne 0x15c4f0 ; add rsp, 0x48 ; ret
0x000000000015c536 : add byte ptr [rax], al ; jne 0x15c57c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015c5b6 : add byte ptr [rax], al ; jne 0x15c5fb ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015c676 : add byte ptr [rax], al ; jne 0x15c6be ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015ca76 : add byte ptr [rax], al ; jne 0x15cabd ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015caf6 : add byte ptr [rax], al ; jne 0x15cb3c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015cc96 : add byte ptr [rax], al ; jne 0x15cce2 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015cd16 : add byte ptr [rax], al ; jne 0x15cd5c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015d946 : add byte ptr [rax], al ; jne 0x15d98e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015d9c6 : add byte ptr [rax], al ; jne 0x15da0e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015da46 : add byte ptr [rax], al ; jne 0x15da8e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015dac6 : add byte ptr [rax], al ; jne 0x15db0e ; add rsp, 0x10 ; pop rbx ; ret
0x000000000016341c : add byte ptr [rax], al ; jne 0x163454 ; add rsp, 0x18 ; ret
0x0000000000163893 : add byte ptr [rax], al ; jne 0x1638cd ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000163913 : add byte ptr [rax], al ; jne 0x16394d ; add rsp, 0x10 ; pop rbx ; ret
0x000000000016649d : add byte ptr [rax], al ; jne 0x166516 ; add rsp, 0x58 ; ret
0x0000000000166575 : add byte ptr [rax], al ; jne 0x1665f9 ; add rsp, 0x68 ; ret
0x0000000000166744 : add byte ptr [rax], al ; jne 0x16678e ; add rsp, 0x78 ; ret
0x00000000001667cb : add byte ptr [rax], al ; jne 0x16683b ; add rsp, 0x38 ; ret
0x000000000018ada2 : add byte ptr [rax], al ; jne 0x18acb8 ; ret
0x000000000018f1f0 : add byte ptr [rax], al ; jne 0x18f178 ; ret
0x000000000003eb5d : add byte ptr [rax], al ; jne 0x3eb6e ; add rsp, 0x18 ; ret
0x000000000003f72d : add byte ptr [rax], al ; jne 0x3f740 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000043a3d : add byte ptr [rax], al ; jne 0x43a4e ; add rsp, 0x28 ; ret
0x0000000000043b2d : add byte ptr [rax], al ; jne 0x43b3e ; add rsp, 0x28 ; ret
0x00000000000547ff : add byte ptr [rax], al ; jne 0x54843 ; leave ; ret
0x000000000007bca1 : add byte ptr [rax], al ; jne 0x7bcbf ; add rsp, 0x18 ; ret
0x000000000008a1c2 : add byte ptr [rax], al ; jne 0x8a1df ; add rsp, 0x48 ; ret
0x000000000009166f : add byte ptr [rax], al ; jne 0x916b7 ; add rsp, 0x50 ; pop rbx ; ret
0x00000000000cbe0d : add byte ptr [rax], al ; jne 0xcbe3d ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d1517 : add byte ptr [rax], al ; jne 0xd152a ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000d5ebf : add byte ptr [rax], al ; jne 0xd5eed ; add rsp, 0x28 ; ret
0x00000000000d5ff0 : add byte ptr [rax], al ; jne 0xd6010 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000dc272 : add byte ptr [rax], al ; jne 0xdc283 ; add rsp, 0x18 ; ret
0x00000000000ded82 : add byte ptr [rax], al ; jne 0xded93 ; add rsp, 0x18 ; ret
0x00000000000e0e79 : add byte ptr [rax], al ; jne 0xe0ed3 ; add rsp, 0x38 ; ret
0x00000000000e5103 : add byte ptr [rax], al ; jne 0xe514a ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e59a9 : add byte ptr [rax], al ; jne 0xe5a03 ; add rsp, 0x38 ; ret
0x00000000000e5a39 : add byte ptr [rax], al ; jne 0xe5a93 ; add rsp, 0x38 ; ret
0x00000000000e5cc9 : add byte ptr [rax], al ; jne 0xe5d2b ; add rsp, 0x38 ; ret
0x00000000000e5d69 : add byte ptr [rax], al ; jne 0xe5dcb ; add rsp, 0x38 ; ret
0x00000000000e6657 : add byte ptr [rax], al ; jne 0xe66a7 ; ret
0x00000000000e66be : add byte ptr [rax], al ; jne 0xe66ab ; mov eax, 0xfa ; ret
0x00000000000e66fe : add byte ptr [rax], al ; jne 0xe66ab ; mov eax, 0xfffa ; ret
0x00000000001e421e : add byte ptr [rax], al ; jno 0x1e422b ; add byte ptr [rax], al ; retf 5
0x00000000001e592a : add byte ptr [rax], al ; jnp 0x1e593a ; add byte ptr [rax], al ; ret 4
0x00000000001d0cb6 : add byte ptr [rax], al ; jo 0x1d0c98 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdx]
0x00000000001d10b6 : add byte ptr [rax], al ; jo 0x1d109c ; add byte ptr [rax], al ; push rsp ; sbb dh, al ; jmp qword ptr [rcx]
0x00000000001da1b6 : add byte ptr [rax], al ; jo 0x1da22d ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; idiv eax ; jmp qword ptr [rbx]
0x00000000001e6072 : add byte ptr [rax], al ; jo 0x1e6081 ; add byte ptr [rax], al ; retf 7
0x00000000001e631e : add byte ptr [rax], al ; jp 0x1e632f ; add byte ptr [rax], al ; ret
0x00000000001cf4c6 : add byte ptr [rax], al ; js 0x1cf53f ; out dx, al ; jmp qword ptr [rbx]
0x00000000001cf7be : add byte ptr [rax], al ; js 0x1cf78b ; add byte ptr [rax], al ; or al, 0xf3 ; sti ; call rsp
0x00000000001d24b6 : add byte ptr [rax], al ; js 0x1d24d1 ; int1 ; call rsi
0x00000000001d49be : add byte ptr [rax], al ; js 0x1d49dd ; add dword ptr [rax], eax ; cld ; call qword ptr [rbx]
0x00000000001d65be : add byte ptr [rax], al ; js 0x1d65f9 ; add dword ptr [rax], eax ; in al, dx ; or esp, esi ; jmp qword ptr [rcx]
0x00000000001dc0be : add byte ptr [rax], al ; js 0x1dc054 ; add dword ptr [rax], eax ; mov edi, gs ; cmc ; call qword ptr [rbx]
0x00000000001e18be : add byte ptr [rax], al ; js 0x1e18aa ; add dword ptr [rax], eax ; in al, dx ; retf 0xfff7
0x00000000000e68b5 : add byte ptr [rax], al ; js 0xe68c5 ; ret
0x000000000014cd6d : add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000019389e : add byte ptr [rax], al ; lea rax, [rdi + 0xa] ; ret
0x00000000001938ae : add byte ptr [rax], al ; lea rax, [rdi + 0xb] ; ret
0x00000000001938be : add byte ptr [rax], al ; lea rax, [rdi + 0xc] ; ret
0x00000000001938ce : add byte ptr [rax], al ; lea rax, [rdi + 0xd] ; ret
0x00000000001938de : add byte ptr [rax], al ; lea rax, [rdi + 0xe] ; ret
0x00000000001937fd : add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x000000000019381e : add byte ptr [rax], al ; lea rax, [rdi + 1] ; ret
0x000000000019382e : add byte ptr [rax], al ; lea rax, [rdi + 2] ; ret
0x000000000019383e : add byte ptr [rax], al ; lea rax, [rdi + 3] ; ret
0x000000000019384e : add byte ptr [rax], al ; lea rax, [rdi + 4] ; ret
0x000000000019385e : add byte ptr [rax], al ; lea rax, [rdi + 5] ; ret
0x000000000019386e : add byte ptr [rax], al ; lea rax, [rdi + 6] ; ret
0x00000000001937aa : add byte ptr [rax], al ; lea rax, [rdi + 7] ; ret
0x000000000019387e : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x000000000019388e : add byte ptr [rax], al ; lea rax, [rdi + 9] ; ret
0x00000000000d079b : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000d08fe : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x00000000000d091e : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x00000000000d090e : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000019380e : add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x0000000000021c8e : add byte ptr [rax], al ; lea rax, [rip + 0x191b34] ; ret
0x0000000000021c9e : add byte ptr [rax], al ; lea rax, [rip + 0x193971] ; ret
0x000000000004f00e : add byte ptr [rax], al ; lea rsi, [rip + 0x349] ; call rax
0x000000000008d607 : add byte ptr [rax], al ; lea rsi, [rip - 0x100] ; call rax
0x000000000008ed25 : add byte ptr [rax], al ; lea rsi, [rip - 0x181e] ; call rax
0x000000000008075f : add byte ptr [rax], al ; lea rsi, [rip - 0x198] ; call rax
0x000000000008f12c : add byte ptr [rax], al ; lea rsi, [rip - 0x1c25] ; call rax
0x000000000008f432 : add byte ptr [rax], al ; lea rsi, [rip - 0x1f2b] ; call rax
0x000000000008f795 : add byte ptr [rax], al ; lea rsi, [rip - 0x228e] ; call rax
0x000000000008d8fc : add byte ptr [rax], al ; lea rsi, [rip - 0x3f5] ; call rax
0x00000000001cf02a : add byte ptr [rax], al ; leave ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001311a0 : add byte ptr [rax], al ; leave ; ret
0x00000000001da1f2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; push 1 ; add byte ptr [rax + 0x62], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001e02f2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x00000000001c4ff2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb byte ptr [rax], al ; add byte ptr [rax], bh ; fsubr st(6), st(0) ; call qword ptr [rsi]
0x00000000001d10f2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb esi, eax ; jmp rsi
0x00000000001d61f2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sub al, byte ptr [rcx] ; add byte ptr [rax], cl ; add dh, ah ; jmp qword ptr [rcx]
0x00000000001cdff2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; test al, 0 ; add byte ptr [rax], bh ; clc ; in al, dx ; call qword ptr [rax]
0x00000000001ced42 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebp ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001bf15e : add byte ptr [rax], al ; lodsd eax, dword ptr fs:[rsi] ; in al, dx ; call rax
0x00000000001cf026 : add byte ptr [rax], al ; loopne 0x1cefeb ; add byte ptr [rax], al ; leave ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001cf526 : add byte ptr [rax], al ; loopne 0x1cf4f0 ; add byte ptr [rax], al ; add al, 0xa0 ; out dx, al ; jmp rbx
0x00000000001d014e : add byte ptr [rax], al ; loopne 0x1d013c ; out dx, al ; call qword ptr [rdx]
0x00000000001d275e : add byte ptr [rax], al ; loopne 0x1d2787 ; int1 ; jmp qword ptr [rcx]
0x00000000001e2326 : add byte ptr [rax], al ; loopne 0x1e231e ; add dword ptr [rax], eax ; xchg eax, esp ; adc al, bh ; call qword ptr [rbx]
0x00000000001d4efa : add byte ptr [rax], al ; mov ah, 0x17 ; add dword ptr [rax], eax ; jo 0x1d4ea7 ; call qword ptr [rax]
0x00000000001beeb6 : add byte ptr [rax], al ; mov ah, 0x4d ; in al, dx ; call qword ptr [rax]
0x00000000001d92fa : add byte ptr [rax], al ; mov ah, 0x5b ; add dword ptr [rax], eax ; xor dl, bl ; hlt ; call rsi
0x00000000001bf1de : add byte ptr [rax], al ; mov ah, 0xb8 ; in al, dx ; jmp qword ptr [rax]
0x00000000001cfdfa : add byte ptr [rax], al ; mov ah, 0xc6 ; add byte ptr [rax], al ; adc bh, dl ; out dx, al ; jmp qword ptr [rdi]
0x00000000001c371e : add byte ptr [rax], al ; mov ah, 0xe8 ; std ; jmp qword ptr [rax]
0x00000000001d2afa : add byte ptr [rax], al ; mov ah, 0xf3 ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001d51f6 : add byte ptr [rax], al ; mov al, 0x1a ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rcx]
0x00000000001d55f6 : add byte ptr [rax], al ; mov al, 0x1e ; add dword ptr [rax], eax ; add al, 0xb4 ; jmp qword ptr [rcx]
0x00000000001da2f6 : add byte ptr [rax], al ; mov al, 0x6b ; add dword ptr [rax], eax ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001deff6 : add byte ptr [rax], al ; mov al, 0xb8 ; add dword ptr [rax], eax ; push rsp ; sbb al, 0xf7 ; call qword ptr [rsi]
0x00000000001c45f6 : add byte ptr [rax], al ; mov al, 0xe ; add byte ptr [rax], al ; pop rbx ; std ; jmp qword ptr [rdi]
0x000000000018131e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x000000000017cfee : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000143936 : add byte ptr [rax], al ; mov byte ptr [r10], 0 ; ret
0x00000000001d8fce : add byte ptr [rax], al ; mov byte ptr [rax + 1], bl ; add ah, bh ; retf
0x00000000001c77ce : add byte ptr [rax], al ; mov byte ptr [rax], al ; add ah, cl ; ret
0x0000000000123d63 : add byte ptr [rax], al ; mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x00000000001da2ce : add byte ptr [rax], al ; mov byte ptr [rbx + 1], ch ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001d82ce : add byte ptr [rax], al ; mov byte ptr [rbx + 1], cl ; add byte ptr [rax - 0xc], bl ; jmp qword ptr [rcx]
0x00000000001c3d26 : add byte ptr [rax], al ; mov byte ptr [rbx - 3], ah ; jmp qword ptr [rdx]
0x000000000017efbe : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000edb96 : add byte ptr [rax], al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x000000000008a61e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000b7e9e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b689e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000b786e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x00000000000a846e : add byte ptr [rax], al ; mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000001d79ce : add byte ptr [rax], al ; mov byte ptr [rdx + 1], al ; add ah, bl ; jno 0x1d79d4 ; jmp rsp
0x00000000000b756e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008432b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017effe : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000017f01e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017f00e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017efee : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000010eb4e : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000b788e : add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000a865e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x00000000000b78ae : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b78be : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b789e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000908cc : add byte ptr [rax], al ; mov dword ptr [rip + 0x35a9d8], eax ; ret
0x000000000014dbbf : add byte ptr [rax], al ; mov dword ptr [rsi + 8], eax ; ret
0x000000000014dc5e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x000000000014dc7e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x000000000014dc6e : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x000000000010f3c4 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000014484c : add byte ptr [rax], al ; mov dword ptr [rsp], edx ; call 0x212c7
0x00000000000e1650 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000e171a : add byte ptr [rax], al ; mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000b68ae : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000007be4e : add byte ptr [rax], al ; mov eax, 0x10 ; ret
0x0000000000115dc5 : add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x0000000000140aa6 : add byte ptr [rax], al ; mov eax, 0x100 ; ret
0x000000000010fbde : add byte ptr [rax], al ; mov eax, 0x102 ; syscall
0x0000000000111d6e : add byte ptr [rax], al ; mov eax, 0x107 ; syscall
0x0000000000111cae : add byte ptr [rax], al ; mov eax, 0x10a ; syscall
0x000000000012253e : add byte ptr [rax], al ; mov eax, 0x110 ; syscall
0x0000000000121994 : add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x000000000012259e : add byte ptr [rax], al ; mov eax, 0x11b ; syscall
0x000000000012220e : add byte ptr [rax], al ; mov eax, 0x123 ; syscall
0x00000000001109ce : add byte ptr [rax], al ; mov eax, 0x124 ; syscall
0x0000000000110a2e : add byte ptr [rax], al ; mov eax, 0x125 ; syscall
0x000000000012232e : add byte ptr [rax], al ; mov eax, 0x126 ; syscall
0x000000000012262e : add byte ptr [rax], al ; mov eax, 0x12c ; syscall
0x000000000012214e : add byte ptr [rax], al ; mov eax, 0x131 ; syscall
0x000000000012274e : add byte ptr [rax], al ; mov eax, 0x14a ; syscall
0x000000000012277e : add byte ptr [rax], al ; mov eax, 0x14b ; syscall
0x000000000009aeee : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000001109fe : add byte ptr [rax], al ; mov eax, 0x16 ; syscall
0x0000000000103e4e : add byte ptr [rax], al ; mov eax, 0x18 ; syscall
0x000000000011bbde : add byte ptr [rax], al ; mov eax, 0x1b ; syscall
0x00000000001ce2fe : add byte ptr [rax], al ; mov eax, 0x1c0000ab ; or ch, ch ; jmp qword ptr [rcx]
0x00000000001237de : add byte ptr [rax], al ; mov eax, 0x1e ; syscall
0x000000000012386e : add byte ptr [rax], al ; mov eax, 0x1f ; syscall
0x000000000011096e : add byte ptr [rax], al ; mov eax, 0x20 ; syscall
0x000000000011099e : add byte ptr [rax], al ; mov eax, 0x21 ; syscall
0x00000000000e495e : add byte ptr [rax], al ; mov eax, 0x22 ; syscall
0x00000000000e4a1e : add byte ptr [rax], al ; mov eax, 0x23 ; syscall
0x00000000000d5e4e : add byte ptr [rax], al ; mov eax, 0x26 ; syscall
0x0000000000122ebe : add byte ptr [rax], al ; mov eax, 0x29 ; syscall
0x00000000001d1ffe : add byte ptr [rax], al ; mov eax, 0x2c0000e8 ; div eax ; call rsi
0x000000000012296e : add byte ptr [rax], al ; mov eax, 0x33 ; syscall
0x00000000000e4e2e : add byte ptr [rax], al ; mov eax, 0x3b ; syscall
0x000000000004f366 : add byte ptr [rax], al ; mov eax, 0x3e ; mov edi, ebx ; syscall
0x00000000000e453e : add byte ptr [rax], al ; mov eax, 0x3f ; syscall
0x00000000001236de : add byte ptr [rax], al ; mov eax, 0x40 ; syscall
0x00000000001236ae : add byte ptr [rax], al ; mov eax, 0x41 ; syscall
0x000000000012364e : add byte ptr [rax], al ; mov eax, 0x44 ; syscall
0x000000000012367e : add byte ptr [rax], al ; mov eax, 0x47 ; syscall
0x000000000011062d : add byte ptr [rax], al ; mov eax, 0x48 ; syscall
0x000000000011076e : add byte ptr [rax], al ; mov eax, 0x49 ; syscall
0x0000000000118c8e : add byte ptr [rax], al ; mov eax, 0x4d ; syscall
0x0000000000110b1e : add byte ptr [rax], al ; mov eax, 0x51 ; syscall
0x0000000000111d9e : add byte ptr [rax], al ; mov eax, 0x54 ; syscall
0x0000000000111cde : add byte ptr [rax], al ; mov eax, 0x59 ; syscall
0x000000000010fabe : add byte ptr [rax], al ; mov eax, 0x5a ; syscall
0x000000000010faee : add byte ptr [rax], al ; mov eax, 0x5b ; syscall
0x000000000011140e : add byte ptr [rax], al ; mov eax, 0x5d ; syscall
0x000000000011143e : add byte ptr [rax], al ; mov eax, 0x5e ; syscall
0x00000000000d2a2e : add byte ptr [rax], al ; mov eax, 0x60 ; syscall
0x00000000000e456e : add byte ptr [rax], al ; mov eax, 0x64 ; syscall
0x00000000000e58fe : add byte ptr [rax], al ; mov eax, 0x66 ; syscall
0x000000000012238e : add byte ptr [rax], al ; mov eax, 0x67 ; syscall
0x00000000000e591e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall
0x00000000000e590e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall
0x00000000000e592e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall
0x00000000000e5b6e : add byte ptr [rax], al ; mov eax, 0x6d ; syscall
0x00000000000e58ee : add byte ptr [rax], al ; mov eax, 0x6e ; syscall
0x00000000000e5b9e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall
0x00000000000e5bfe : add byte ptr [rax], al ; mov eax, 0x70 ; syscall
0x00000000000e593e : add byte ptr [rax], al ; mov eax, 0x73 ; syscall
0x00000000000e5c2e : add byte ptr [rax], al ; mov eax, 0x76 ; syscall
0x00000000000e5c5e : add byte ptr [rax], al ; mov eax, 0x78 ; syscall
0x000000000012191e : add byte ptr [rax], al ; mov eax, 0x7a ; syscall
0x000000000012194e : add byte ptr [rax], al ; mov eax, 0x7b ; syscall
0x00000000000e5bce : add byte ptr [rax], al ; mov eax, 0x7c ; syscall
0x00000000001220ee : add byte ptr [rax], al ; mov eax, 0x7d ; syscall
0x00000000000e66ce : add byte ptr [rax], al ; mov eax, 0x7d00 ; ret
0x00000000000e66de : add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x000000000012211e : add byte ptr [rax], al ; mov eax, 0x7e ; syscall
0x000000000003f1b3 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000014167e : add byte ptr [rax], al ; mov eax, 0x7fffffff ; ret
0x000000000003f200 : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x000000000012256e : add byte ptr [rax], al ; mov eax, 0x86 ; syscall
0x000000000010f99e : add byte ptr [rax], al ; mov eax, 0x8a ; syscall
0x0000000000103d8e : add byte ptr [rax], al ; mov eax, 0x8e ; syscall
0x0000000000103dbe : add byte ptr [rax], al ; mov eax, 0x8f ; syscall
0x0000000000103dee : add byte ptr [rax], al ; mov eax, 0x90 ; syscall
0x0000000000103e1e : add byte ptr [rax], al ; mov eax, 0x91 ; syscall
0x0000000000103e7e : add byte ptr [rax], al ; mov eax, 0x92 ; syscall
0x0000000000103eae : add byte ptr [rax], al ; mov eax, 0x93 ; syscall
0x0000000000103ede : add byte ptr [rax], al ; mov eax, 0x94 ; syscall
0x000000000011bc6e : add byte ptr [rax], al ; mov eax, 0x96 ; syscall
0x000000000011bc9e : add byte ptr [rax], al ; mov eax, 0x97 ; syscall
0x000000000011bcce : add byte ptr [rax], al ; mov eax, 0x98 ; syscall
0x000000000012204e : add byte ptr [rax], al ; mov eax, 0x9a ; syscall
0x000000000012244e : add byte ptr [rax], al ; mov eax, 0x9b ; syscall
0x000000000011bade : add byte ptr [rax], al ; mov eax, 0xa ; syscall
0x00000000001171ce : add byte ptr [rax], al ; mov eax, 0xa1 ; syscall
0x00000000000d2b0e : add byte ptr [rax], al ; mov eax, 0xa4 ; syscall
0x00000000001218be : add byte ptr [rax], al ; mov eax, 0xa6 ; syscall
0x000000000011767e : add byte ptr [rax], al ; mov eax, 0xa7 ; syscall
0x00000000001176ae : add byte ptr [rax], al ; mov eax, 0xa8 ; syscall
0x0000000000116eee : add byte ptr [rax], al ; mov eax, 0xaa ; syscall
0x000000000012177e : add byte ptr [rax], al ; mov eax, 0xac ; syscall
0x00000000001d58fe : add byte ptr [rax], al ; mov eax, 0xac000121 ; ret
0x00000000001d70fe : add byte ptr [rax], al ; mov eax, 0xac000139 ; hlt ; jmp qword ptr [rcx]
0x00000000001e19fe : add byte ptr [rax], al ; mov eax, 0xac0001e2 ; xchg eax, edx ; sti ; jmp qword ptr [rdx]
0x000000000012217e : add byte ptr [rax], al ; mov eax, 0xae ; syscall
0x00000000001221ae : add byte ptr [rax], al ; mov eax, 0xb0 ; syscall
0x00000000001218ee : add byte ptr [rax], al ; mov eax, 0xbb ; syscall
0x00000000000f40fe : add byte ptr [rax], al ; mov eax, 0xc ; ret
0x000000000011f98e : add byte ptr [rax], al ; mov eax, 0xc6 ; syscall
0x000000000011f86e : add byte ptr [rax], al ; mov eax, 0xc7 ; syscall
0x00000000000d296e : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall
0x00000000001306d0 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000001ce3fe : add byte ptr [rax], al ; mov eax, 0xcc0000ac ; or ch, ch ; call qword ptr [rcx]
0x00000000001deafe : add byte ptr [rax], al ; mov eax, 0xcc0001b3 ; add bh, dh ; call qword ptr [rdi]
0x00000000001221de : add byte ptr [rax], al ; mov eax, 0xd5 ; syscall
0x00000000001e1afe : add byte ptr [rax], al ; mov eax, 0xdc0001e3 ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x000000000003ee8e : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000012207e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall
0x00000000000e6b43 : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000e670e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x00000000001222fe : add byte ptr [rax], al ; mov eax, 0xfd ; syscall
0x000000000012235e : add byte ptr [rax], al ; mov eax, 0xff ; syscall
0x000000000003d2bc : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003eefc : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000054a3b : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001101de : add byte ptr [rax], al ; mov eax, 1 ; syscall
0x0000000000054d04 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000012e80e : add byte ptr [rax], al ; mov eax, 7 ; ret
0x000000000018470e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000008fb1e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000015df3e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000efeae : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x4c] ; ret
0x00000000000893be : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000008938e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000400fe : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x3ab0a2] ; ret
0x0000000000164c70 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c05f : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000003ee59 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000134d2e : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x000000000002256c : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000127f7d : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000064272 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000618d1 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000007c475 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; ret
0x0000000000115b65 : add byte ptr [rax], al ; mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000000878d0 : add byte ptr [rax], al ; mov eax, r10d ; pop rbx ; ret
0x00000000000e4c8b : add byte ptr [rax], al ; mov eax, r13d ; syscall
0x000000000008275d : add byte ptr [rax], al ; mov eax, r8d ; pop rbx ; ret
0x0000000000130b4c : add byte ptr [rax], al ; mov eax, r9d ; syscall
0x00000000000b68de : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000127da7 : add byte ptr [rax], al ; mov edi, 0xf ; call 0xe4849
0x00000000001400ce : add byte ptr [rax], al ; mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x0000000000051c68 : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x0000000000169a3b : add byte ptr [rax], al ; mov edi, eax ; mov eax, 0x3e ; syscall
0x0000000000115df7 : add byte ptr [rax], al ; mov edi, ebx ; mov eax, 0x10 ; syscall
0x000000000004f36b : add byte ptr [rax], al ; mov edi, ebx ; syscall
0x00000000000e4dee : add byte ptr [rax], al ; mov edi, edx ; mov eax, esi ; syscall
0x000000000010f0c8 : add byte ptr [rax], al ; mov edi, edx ; syscall
0x0000000000163a0b : add byte ptr [rax], al ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000121a46 : add byte ptr [rax], al ; mov edx, 8 ; syscall
0x0000000000173efe : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000b68ce : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000818d8 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x81870
0x0000000000087e96 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x87e3a
0x000000000008800b : add byte ptr [rax], al ; mov edx, eax ; jmp 0x87fb1
0x0000000000130786 : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000000693fb : add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x00000000001cf3aa : add byte ptr [rax], al ; mov esp, 0x1f800000 ; out dx, al ; jmp rdx
0x00000000001cfa02 : add byte ptr [rax], al ; mov esp, 0x380000c2 ; cmp bh, ah ; call qword ptr [rbx]
0x00000000001c5602 : add byte ptr [rax], al ; mov esp, 0xf800001e ; xchg bh, ah ; call qword ptr [rcx]
0x00000000001c575e : add byte ptr [rax], al ; mov esp, edi ; call qword ptr [rdx]
0x00000000001bf04e : add byte ptr [rax], al ; mov gs, esp ; call qword ptr [rax]
0x00000000001663f3 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000001663ab : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000016686e : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000017f03e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017f05e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017f06e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017f07e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017f08e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017f09e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017f0ae : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017f04e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017f02e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000015e40a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000b78ce : add byte ptr [rax], al ; mov qword ptr [rdi - 1], rdx ; ret
0x00000000000b78ee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b790e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b791e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b792e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b793e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b78fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000b78de : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000054a58 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000000880a9 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000009088c : add byte ptr [rax], al ; mov qword ptr [rip + 0x35a9f3], rax ; ret
0x000000000009086c : add byte ptr [rax], al ; mov qword ptr [rip + 0x35aa0b], rax ; ret
0x000000000014dbfc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000014dbcc : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x0000000000162d6e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000438a6 : add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000159689 : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000002163f : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x2160f
0x00000000000878f9 : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x8788f
0x0000000000088349 : add byte ptr [rax], al ; mov r10d, eax ; jmp 0x882df
0x00000000000d9f2e : add byte ptr [rax], al ; mov r10d, eax ; jmp 0xd9efd
0x00000000000dc3ce : add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xdc3a4
0x00000000000dc3ce : add byte ptr [rax], al ; mov r10d, ecx ; jmp 0xdc3a6
0x000000000005cf8e : add byte ptr [rax], al ; mov r11, qword ptr [rbp - 0x530] ; jmp rax
0x0000000000084f26 : add byte ptr [rax], al ; mov r8, qword ptr [rdx + 0x48] ; jmp 0x84ef8
0x000000000005c40a : add byte ptr [rax], al ; mov r8d, 1 ; jmp rax
0x000000000003edba : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000003ef1e : add byte ptr [rax], al ; mov rax, 0xf ; syscall
0x00000000000d0e2e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000d0e3e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000d0e4e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000d0e5e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000d0e6e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000d0e7e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000d0e8e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00000000000860de : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000130016 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000011fa9e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000439c0 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000086bce : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000008fe0e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000015cc16 : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000163621 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x288f26] ; call qword ptr [rax]
0x0000000000162fd4 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x289573] ; call qword ptr [rax]
0x000000000008fdee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x35c869] ; ret
0x000000000002bdbe : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3c0c69] ; ret
0x000000000002389e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3ccc31] ; ret
0x000000000014d8bf : add byte ptr [rax], al ; mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000018e8ce : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x000000000008b884 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f150 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043d8c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000003d25c : add byte ptr [rax], al ; mov rax, rcx ; ret
0x0000000000081ec4 : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000016379a : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000007f7a3 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000009547e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000130a22 : add byte ptr [rax], al ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000bb55f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011de39 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x0000000000043039 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000009cd36 : add byte ptr [rax], al ; mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x000000000003189d : add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x00000000000d1998 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000012d853 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x129b27
0x000000000019b8a6 : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x0000000000157f81 : add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000150f77 : add byte ptr [rax], al ; mov rdi, rbp ; call 0x15d217
0x0000000000035066 : add byte ptr [rax], al ; mov rdi, rbp ; call 0x212cf
0x000000000014e69f : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000803fb : add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000346ad : add byte ptr [rax], al ; mov rdi, rbx ; call 0x21107
0x0000000000132122 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x8eb57
0x00000000001585ea : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000007d25f : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000015c4cc : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000b690e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000c6fba : add byte ptr [rax], al ; mov rdx, r12 ; sub ecx, eax ; call 0x53239
0x000000000009ba03 : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r8 ; call rax
0x000000000002a7a7 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x2a764
0x0000000000114f6d : add byte ptr [rax], al ; mov rdx, rsi ; xor esi, esi ; syscall
0x000000000007360f : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x377948] ; call rax
0x000000000006b356 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37fc01] ; call rax
0x000000000006b026 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37ff31] ; call rax
0x0000000000067e64 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3830f3] ; call rax
0x000000000005e6ad : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x38c8aa] ; call rax
0x000000000005b480 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x38fad7] ; call rax
0x00000000000d1bad : add byte ptr [rax], al ; mov rsi, rbp ; call rbx
0x0000000000130ed3 : add byte ptr [rax], al ; mov rsi, rbp ; mov edi, ebx ; mov eax, ecx ; syscall
0x00000000000d1e7f : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, r12 ; call rbx
0x000000000009af4e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000009b746 : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x00000000000401c3 : add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x000000000009c6de : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r12 ; call rax
0x0000000000081dc4 : add byte ptr [rax], al ; mov rsi, rdi ; jmp 0x81d9c
0x00000000001cc282 : add byte ptr [rax], al ; mov word ptr [rcx - 0x14], es ; call qword ptr [rdx]
0x000000000017efde : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017efce : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x0000000000115ec2 : add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x00000000000b787e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000001c81d2 : add byte ptr [rax], al ; mov word ptr [rdx], cs ; add al, cl ; retf
0x00000000001d54d2 : add byte ptr [rax], al ; mov word ptr [rip - 0x5117ffff], ds ; call rdi
0x0000000000044834 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000b794e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b795e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001be4de : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; and ebp, eax ; jmp rax
0x00000000001cf97a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; sti ; call qword ptr [rbx]
0x00000000001bf59e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; call qword ptr [rax]
0x00000000001bf7b6 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; loop 0x1bf7ad ; call rax
0x00000000001e18ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; loope 0x1e18f7 ; add byte ptr [rax], dh ; retf
0x00000000001d26ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; add byte ptr [rax], al ; push rax ; and cl, dh ; call qword ptr [rdx]
0x00000000001d0cba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdx]
0x00000000001bf2de : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001d01ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000001d52ea : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rcx] ; add al, dh ; test al, 0xf3 ; jmp qword ptr [rcx]
0x000000000007d414 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000002e77d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000002e27e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000012f866 : add byte ptr [rax], al ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x0000000000156837 : add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000001567ff : add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000152f8f : add byte ptr [rax], al ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000152fa8 : add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x000000000010f3ab : add byte ptr [rax], al ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x000000000014dc11 : add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000008d17e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000000bba8e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000017408e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000017476e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000001746fe : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001d75d6 : add byte ptr [rax], al ; nop ; add dword ptr ds:[rax], eax ; add al, 0x5d ; hlt ; call rsi
0x00000000001c71d6 : add byte ptr [rax], al ; nop ; cmp al, byte ptr [rax] ; add byte ptr [rbx + rax], al ; cli ; jmp qword ptr [rcx]
0x00000000001d74d6 : add byte ptr [rax], al ; nop ; cmp eax, 0x59740001 ; hlt ; jmp rcx
0x00000000001225fc : add byte ptr [rax], al ; nop ; mov eax, 0x11f ; syscall
0x000000000012268c : add byte ptr [rax], al ; nop ; mov eax, 0x134 ; syscall
0x000000000012271c : add byte ptr [rax], al ; nop ; mov eax, 0x13f ; syscall
0x000000000011bbad : add byte ptr [rax], al ; nop ; mov eax, 0x1c ; syscall
0x00000000000e483d : add byte ptr [rax], al ; nop ; mov eax, 0x25 ; syscall
0x0000000000122e8c : add byte ptr [rax], al ; nop ; mov eax, 0x30 ; syscall
0x000000000012286d : add byte ptr [rax], al ; nop ; mov eax, 0x31 ; syscall
0x00000000001229cc : add byte ptr [rax], al ; nop ; mov eax, 0x32 ; syscall
0x000000000012293d : add byte ptr [rax], al ; nop ; mov eax, 0x34 ; syscall
0x0000000000110aed : add byte ptr [rax], al ; nop ; mov eax, 0x50 ; syscall
0x000000000010fbac : add byte ptr [rax], al ; nop ; mov eax, 0x53 ; syscall
0x0000000000111d3c : add byte ptr [rax], al ; nop ; mov eax, 0x57 ; syscall
0x0000000000111c7c : add byte ptr [rax], al ; nop ; mov eax, 0x58 ; syscall
0x00000000001113dd : add byte ptr [rax], al ; nop ; mov eax, 0x5c ; syscall
0x000000000012250c : add byte ptr [rax], al ; nop ; mov eax, 0x63 ; syscall
0x00000000000e5b3c : add byte ptr [rax], al ; nop ; mov eax, 0x79 ; syscall
0x0000000000121b2c : add byte ptr [rax], al ; nop ; mov eax, 0x87 ; syscall
0x000000000010f96c : add byte ptr [rax], al ; nop ; mov eax, 0x89 ; syscall
0x000000000011bc3c : add byte ptr [rax], al ; nop ; mov eax, 0x95 ; syscall
0x000000000011764c : add byte ptr [rax], al ; nop ; mov eax, 0x99 ; syscall
0x00000000001220bc : add byte ptr [rax], al ; nop ; mov eax, 0x9f ; syscall
0x000000000012226c : add byte ptr [rax], al ; nop ; mov eax, 0xb1 ; syscall
0x000000000012241c : add byte ptr [rax], al ; nop ; mov eax, 0xb4 ; syscall
0x000000000011f8fc : add byte ptr [rax], al ; nop ; mov eax, 0xc2 ; syscall
0x000000000011f95c : add byte ptr [rax], al ; nop ; mov eax, 0xc3 ; syscall
0x000000000011f83c : add byte ptr [rax], al ; nop ; mov eax, 0xc4 ; syscall
0x000000000011f9ec : add byte ptr [rax], al ; nop ; mov eax, 0xc5 ; syscall
0x00000000001222cc : add byte ptr [rax], al ; nop ; mov eax, 0xfe ; syscall
0x0000000000134d3d : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x00000000001cf4d6 : add byte ptr [rax], al ; nop ; mov ebp, 0x76940000 ; out dx, al ; call rsp
0x000000000015452d : add byte ptr [rax], al ; nop ; ret
0x00000000001d01d6 : add byte ptr [rax], al ; nop ; retf 0
0x00000000001d52d6 : add byte ptr [rax], al ; nop ; sbb eax, dword ptr [rcx] ; add ah, dl ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001c562e : add byte ptr [rax], al ; nop ; xchg edi, esp ; call qword ptr [rax]
0x0000000000131889 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x000000000015e169 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000081642 : add byte ptr [rax], al ; nop dword ptr [rax] ; mov eax, edi ; ret
0x00000000001d5652 : add byte ptr [rax], al ; or al, 0x1f ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf3 ; jmp qword ptr [rcx]
0x00000000001c6252 : add byte ptr [rax], al ; or al, 0x2b ; add byte ptr [rax], al ; pop rax ; retf 0xffe7
0x00000000001d6652 : add byte ptr [rax], al ; or al, 0x2f ; add dword ptr [rax], eax ; or rsi, rsp ; jmp qword ptr [rcx]
0x00000000001c6f52 : add byte ptr [rax], al ; or al, 0x38 ; add byte ptr [rax], al ; sub byte ptr [rax - 0x18], dl ; call qword ptr [rdx]
0x00000000001da152 : add byte ptr [rax], al ; or al, 0x6a ; add dword ptr [rax], eax ; cmp byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001cc652 : add byte ptr [rax], al ; or al, 0x8f ; add byte ptr [rax], al ; push rdi ; in al, dx ; call qword ptr [rcx]
0x00000000001cee52 : add byte ptr [rax], al ; or al, 0xb7 ; add byte ptr [rax], al ; sbb al, bl ; cld ; call qword ptr [rax]
0x00000000001dff52 : add byte ptr [rax], al ; or al, 0xc8 ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 9], ch ; call rax
0x00000000001d6e2a : add byte ptr [rax], al ; or al, 0xe6 ; add byte ptr [rax], al ; and byte ptr [rdi], ch ; hlt ; call qword ptr [rdx]
0x00000000001cf7c2 : add byte ptr [rax], al ; or al, 0xf3 ; sti ; call rsp
0x00000000001cf412 : add byte ptr [rax], al ; or al, 0xf3 ; sti ; jmp qword ptr [rax]
0x00000000001e3aa6 : add byte ptr [rax], al ; or al, 3 ; add byte ptr [rax], al ; retf
0x00000000001e264e : add byte ptr [rax], al ; or bh, ch ; add dword ptr [rax], eax ; sbb r15b, al ; jmp qword ptr [rcx]
0x00000000001db74e : add byte ptr [rax], al ; or byte ptr [rax - 0x4ec3ffff], al ; cmc ; call rdx
0x000000000014997f : add byte ptr [rax], al ; or byte ptr [rax - 0x77], 0xe7 ; call 0x166458
0x0000000000018baa : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001cc24e : add byte ptr [rax], al ; or byte ptr [rbx + 0x417c0000], cl ; in al, dx ; call qword ptr [rdx]
0x000000000003f642 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; ret 0xc289
0x00000000001d594e : add byte ptr [rax], al ; or byte ptr [rdx], ah ; add dword ptr [rax], eax ; sbb al, 0xc4 ; jmp qword ptr [rcx]
0x00000000001d01ef : add byte ptr [rax], al ; out 0xee, al ; call qword ptr [rdx]
0x00000000001cf52b : add byte ptr [rax], al ; out dx, al ; jmp rbx
0x000000000013105a : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x00000000001c709e : add byte ptr [rax], al ; pop rax ; cmp dword ptr [rax], eax ; add byte ptr [rsp + rdi*2 - 0x18], bl ; call rdi
0x00000000001da09e : add byte ptr [rax], al ; pop rax ; imul eax, dword ptr [rcx], 0xf5613c00 ; jmp qword ptr [rbx]
0x00000000001cc39e : add byte ptr [rax], al ; pop rax ; mov word ptr [rax], es ; add ah, bl ; in al, dx ; call qword ptr [rsi]
0x00000000001c409e : add byte ptr [rax], al ; pop rax ; or dword ptr [rax], eax ; add byte ptr [rax + rbp - 0x1a], cl ; call rcx
0x00000000001cf99e : add byte ptr [rax], al ; pop rax ; ret 0
0x00000000001c7786 : add byte ptr [rax], al ; pop rax ; ret 0xffe8
0x00000000001c6256 : add byte ptr [rax], al ; pop rax ; retf 0xffe7
0x00000000001d679e : add byte ptr [rax], al ; pop rax ; xor byte ptr [rcx], al ; add byte ptr [rdi + rcx], cl ; hlt ; jmp qword ptr [rcx]
0x000000000011d1ee : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x000000000014f039 : add byte ptr [rax], al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f4034 : add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000012416f : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000043b7c : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000051f33 : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000132674 : add byte ptr [rax], al ; pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000007ec34 : add byte ptr [rax], al ; pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x000000000002bf1a : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x0000000000040389 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003f2f1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003f45c : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002cb47 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000001c45fa : add byte ptr [rax], al ; pop rbx ; std ; jmp qword ptr [rdi]
0x00000000001bbe2e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x00000000001d337a : add byte ptr [rax], al ; pop rcx ; loopne 0x1d3368 ; jmp qword ptr [rbx]
0x00000000001c70a2 : add byte ptr [rax], al ; pop rsp ; jl 0x1c7094 ; call rdi
0x00000000001cdca2 : add byte ptr [rax], al ; pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; call 0x221cc9a9
0x00000000001da1a2 : add byte ptr [rax], al ; pop rsp ; push 1 ; add byte ptr [rax + 0x62], cl ; cmc ; jmp qword ptr [rbx]
0x00000000001cd4d2 : add byte ptr [rax], al ; pop rsp ; retf
0x00000000001e01a2 : add byte ptr [rax], al ; pop rsp ; retf 1
0x00000000001e2da2 : add byte ptr [rax], al ; pop rsp ; test byte ptr [rcx], 0 ; js 0x1e2df2 ; clc ; call rbx
0x00000000001d01ae : add byte ptr [rax], al ; push -0x3ffff36 ; in eax, 0xee ; call qword ptr [rax]
0x00000000001d62ae : add byte ptr [rax], al ; push 0x1c00012b ; add esi, esp ; jmp qword ptr [rcx]
0x00000000001d8792 : add byte ptr [rax], al ; push rax ; add dword ptr [rax], eax ; clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001d8396 : add byte ptr [rax], al ; push rax ; add qword ptr [rax], r8 ; je 0x1d8348 ; hlt ; jmp qword ptr [rcx]
0x00000000001d26ee : add byte ptr [rax], al ; push rax ; and cl, dh ; call qword ptr [rdx]
0x00000000001d0d0e : add byte ptr [rax], al ; push rax ; cld ; jmp qword ptr [rbx]
0x00000000001db696 : add byte ptr [rax], al ; push rax ; jg 0x1db6a5 ; add byte ptr [rbx + rbp*4 - 0xb], al ; call qword ptr [rbx]
0x00000000001bcb3e : add byte ptr [rax], al ; push rax ; jge 0x1bcb44 ; jmp qword ptr [rax]
0x00000000001bc3dc : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001d0296 : add byte ptr [rax], al ; push rax ; retf
0x00000000001ceabe : add byte ptr [rax], al ; push rax ; sub ch, ch ; call rsp
0x00000000001cc656 : add byte ptr [rax], al ; push rdi ; in al, dx ; call qword ptr [rcx]
0x00000000001bef16 : add byte ptr [rax], al ; push rsi ; in al, dx ; call rsp
0x00000000001d849a : add byte ptr [rax], al ; push rsp ; add qword ptr [r8], r8 ; loopne 0x1d844d ; hlt ; jmp qword ptr [rcx]
0x00000000001d5b9a : add byte ptr [rax], al ; push rsp ; and al, 1 ; add al, al ; out 0xf3, eax ; jmp rax
0x00000000001bf39e : add byte ptr [rax], al ; push rsp ; clc ; in al, dx ; call rsp
0x00000000001bec16 : add byte ptr [rax], al ; push rsp ; fucomip st(3) ; call qword ptr [rax]
0x00000000001ca09a : add byte ptr [rax], al ; push rsp ; imul eax, dword ptr [rax], 0xebabd000 ; call qword ptr [rsi]
0x00000000001bedb6 : add byte ptr [rax], al ; push rsp ; in al, dx ; jmp qword ptr [rax]
0x00000000001bec4e : add byte ptr [rax], al ; push rsp ; loope 0x1bec43 ; call rsp
0x00000000001be726 : add byte ptr [rax], al ; push rsp ; push -0x18 ; jmp qword ptr [rax]
0x00000000001d019a : add byte ptr [rax], al ; push rsp ; retf 0
0x00000000001c786a : add byte ptr [rax], al ; push rsp ; retf 0xffe8
0x00000000001bf2b6 : add byte ptr [rax], al ; push rsp ; retf 0xffec
0x00000000001d10ba : add byte ptr [rax], al ; push rsp ; sbb dh, al ; jmp qword ptr [rcx]
0x00000000001d529a : add byte ptr [rax], al ; push rsp ; sbb eax, dword ptr [rcx] ; add byte ptr [rax - 0x58], dl ; jmp qword ptr [rcx]
0x00000000001d629a : add byte ptr [rax], al ; push rsp ; sub eax, dword ptr [rcx] ; add byte ptr [rax], dl ; add esi, esp ; call qword ptr [rsi]
0x00000000001d82e2 : add byte ptr [rax], al ; pushfq ; add qword ptr [r8], rax ; js 0x1d8293 ; hlt ; jmp qword ptr [rcx]
0x00000000001d2c12 : add byte ptr [rax], al ; pushfq ; cmp al, 0xf1 ; jmp qword ptr [rdi]
0x00000000001da2e2 : add byte ptr [rax], al ; pushfq ; imul eax, dword ptr [rcx], 0 ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001d1ae2 : add byte ptr [rax], al ; pushfq ; jrcxz 0x1d1af0 ; add byte ptr [rax], bh ; in eax, 0xf0 ; jmp qword ptr [rdi]
0x00000000001cc1e2 : add byte ptr [rax], al ; pushfq ; mov al, byte ptr [rax] ; add al, bh ; in al, dx ; call qword ptr [rsi]
0x00000000001cf2e2 : add byte ptr [rax], al ; pushfq ; mov ebx, 0xa1080000 ; cli ; call qword ptr [rax]
0x00000000001d02e2 : add byte ptr [rax], al ; pushfq ; retf
0x00000000001e01e2 : add byte ptr [rax], al ; pushfq ; retf 1
0x00000000001c64e2 : add byte ptr [rax], al ; pushfq ; sub eax, 0xfd80000 ; cli ; call qword ptr [rdi]
0x00000000001d4f16 : add byte ptr [rax], al ; rcl byte ptr [rdi], 1 ; add dword ptr [rax], eax ; adc al, 0x44 ; stc ; call qword ptr [rax]
0x00000000001cd5ce : add byte ptr [rax], al ; rcl cl, 0xec ; call rsi
0x00000000001c5006 : add byte ptr [rax], al ; rcr byte ptr [rax], 0 ; add byte ptr [rsp + rbx*8 - 0x1a], al ; jmp rdx
0x00000000001d1606 : add byte ptr [rax], al ; rcr dh, 0 ; add ah, dl ; xchg eax, esi ; call qword ptr [rax]
0x0000000000000977 : add byte ptr [rax], al ; ret
0x0000000000006386 : add byte ptr [rax], al ; ret 0
0x0000000000009a96 : add byte ptr [rax], al ; ret 0x10
0x000000000000db5e : add byte ptr [rax], al ; ret 0x19
0x00000000001a690e : add byte ptr [rax], al ; ret 0x1d4
0x00000000001a70a6 : add byte ptr [rax], al ; ret 0x1d5
0x000000000000938e : add byte ptr [rax], al ; ret 0x1f
0x00000000001a5916 : add byte ptr [rax], al ; ret 0x24
0x0000000000006cee : add byte ptr [rax], al ; ret 0x2e
0x00000000001a5e06 : add byte ptr [rax], al ; ret 0x33
0x0000000000006eb6 : add byte ptr [rax], al ; ret 0x3f
0x000000000000fe86 : add byte ptr [rax], al ; ret 0x40
0x00000000000080e6 : add byte ptr [rax], al ; ret 0x47
0x000000000000812e : add byte ptr [rax], al ; ret 0x48
0x00000000001a443e : add byte ptr [rax], al ; ret 0xa
0x00000000001a483e : add byte ptr [rax], al ; ret 0xd
0x00000000001a7ce2 : add byte ptr [rax], al ; ret 1
0x0000000000000fca : add byte ptr [rax], al ; ret 2
0x00000000001a80e2 : add byte ptr [rax], al ; ret 3
0x00000000001a82e2 : add byte ptr [rax], al ; ret 4
0x00000000001a84e2 : add byte ptr [rax], al ; ret 5
0x00000000001a3fe6 : add byte ptr [rax], al ; ret 6
0x0000000000001852 : add byte ptr [rax], al ; ret 7
0x00000000000019ea : add byte ptr [rax], al ; ret 8
0x00000000001a8ce2 : add byte ptr [rax], al ; ret 9
0x0000000000000e06 : add byte ptr [rax], al ; retf
0x00000000000047f6 : add byte ptr [rax], al ; retf 0
0x000000000001157e : add byte ptr [rax], al ; retf 0x10
0x00000000001a4d9e : add byte ptr [rax], al ; retf 0x11
0x000000000001d7de : add byte ptr [rax], al ; retf 0x1b45
0x000000000001dbb6 : add byte ptr [rax], al ; retf 0x1b47
0x000000000001e306 : add byte ptr [rax], al ; retf 0x1b4b
0x00000000001a6946 : add byte ptr [rax], al ; retf 0x1d4
0x00000000001a70e6 : add byte ptr [rax], al ; retf 0x1d5
0x00000000000099d6 : add byte ptr [rax], al ; retf 0x21
0x00000000001a5956 : add byte ptr [rax], al ; retf 0x24
0x000000000000b326 : add byte ptr [rax], al ; retf 0x2e
0x00000000001a5e46 : add byte ptr [rax], al ; retf 0x33
0x000000000000efce : add byte ptr [rax], al ; retf 0x3a
0x00000000001a9dc7 : add byte ptr [rax], al ; retf 0x3b9a
0x0000000000009df6 : add byte ptr [rax], al ; retf 0x44
0x0000000000003f16 : add byte ptr [rax], al ; retf 0x46
0x00000000001bbe6e : add byte ptr [rax], al ; retf 0x49f2
0x00000000000080b6 : add byte ptr [rax], al ; retf 0x57
0x00000000001a459e : add byte ptr [rax], al ; retf 0xb
0x00000000001a499e : add byte ptr [rax], al ; retf 0xe
0x00000000000062ae : add byte ptr [rax], al ; retf 1
0x00000000001a7ef2 : add byte ptr [rax], al ; retf 2
0x000000000000118e : add byte ptr [rax], al ; retf 3
0x00000000001a3e46 : add byte ptr [rax], al ; retf 4
0x000000000000d64e : add byte ptr [rax], al ; retf 5
0x00000000001a86f2 : add byte ptr [rax], al ; retf 6
0x00000000001a88f2 : add byte ptr [rax], al ; retf 7
0x000000000001142e : add byte ptr [rax], al ; retf 8
0x00000000001a8cf2 : add byte ptr [rax], al ; retf 9
0x00000000001a82de : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000001a46e6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000001d8206 : add byte ptr [rax], al ; ror byte ptr [rdx + 1], 0 ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d4506 : add byte ptr [rax], al ; ror byte ptr [rip - 0x74bffff], 0xf2 ; jmp qword ptr [rcx]
0x00000000001d06be : add byte ptr [rax], al ; sal byte ptr [rbx - 0x11], 1 ; call qword ptr [rax]
0x0000000000142746 : add byte ptr [rax], al ; sar rdx, 4 ; add edx, 1 ; syscall
0x00000000001e5cf2 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; retf 4
0x00000000001d24f2 : add byte ptr [rax], al ; sbb al, 0x13 ; int1 ; call rsp
0x00000000001d5962 : add byte ptr [rax], al ; sbb al, 0x22 ; add dword ptr [rax], eax ; cmp ah, al ; jmp qword ptr [rcx]
0x00000000001d2b12 : add byte ptr [rax], al ; sbb al, 0x31 ; int1 ; jmp qword ptr [rcx]
0x00000000001d7162 : add byte ptr [rax], al ; sbb al, 0x3a ; add dword ptr [rax], eax ; hlt ; jmp qword ptr [rcx]
0x00000000001d9e62 : add byte ptr [rax], al ; sbb al, 0x67 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], al ; jmp rdi
0x00000000001da062 : add byte ptr [rax], al ; sbb al, 0x69 ; add dword ptr [rax], eax ; call 0x241d95d6
0x00000000001ce302 : add byte ptr [rax], al ; sbb al, 8 ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001e65ee : add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; retf
0x00000000001cee56 : add byte ptr [rax], al ; sbb al, bl ; cld ; call qword ptr [rax]
0x00000000001e1e5e : add byte ptr [rax], al ; sbb bh, ah ; add dword ptr [rax], eax ; or al, 0x8f ; sti ; jmp qword ptr [rdx]
0x00000000001ce35e : add byte ptr [rax], al ; sbb byte ptr [rax + rax - 0x12f79400], ch ; call qword ptr [rax]
0x00000000001d8c5e : add byte ptr [rax], al ; sbb byte ptr [rbp + 1], dl ; add ah, cl ; mov bh, 0xf4 ; jmp rax
0x00000000001dab5e : add byte ptr [rax], al ; sbb byte ptr [rcx + rax], dh ; cmp al, 0x83 ; cmc ; call qword ptr [rbx]
0x00000000001cf3ae : add byte ptr [rax], al ; sbb byte ptr [rdi], 0xee ; jmp rdx
0x00000000001c8e36 : add byte ptr [rax], al ; sbb byte ptr [rdx - 0x15], ah ; call qword ptr [rax]
0x00000000001cd95e : add byte ptr [rax], al ; sbb byte ptr [rdx - 0x32240000], ah ; cld ; call qword ptr [rdx]
0x00000000001d015e : add byte ptr [rax], al ; sbb dl, cl ; add byte ptr [rax], al ; in al, dx ; in eax, 0xee ; call qword ptr [rax]
0x00000000001d5286 : add byte ptr [rax], al ; sbb eax, dword ptr [rcx] ; add byte ptr [rax + rbp*4], dh ; jmp qword ptr [rcx]
0x00000000001da206 : add byte ptr [rax], al ; shr byte ptr [rdx + 1], 0 ; mov ah, 0xf7 ; clc ; jmp qword ptr [rbx]
0x000000000009651e : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000010ea56 : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000001bf3a6 : add byte ptr [rax], al ; sti ; in al, dx ; jmp qword ptr [rax]
0x00000000001de1aa : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; push rax ; fdecstp ; call qword ptr [rdi]
0x00000000001bed96 : add byte ptr [rax], al ; sub ah, ch ; jmp qword ptr [rax]
0x00000000001d5372 : add byte ptr [rax], al ; sub al, 0x1c ; add dword ptr [rax], eax ; clc ; stosb byte ptr [rdi], al ; jmp qword ptr [rsi]
0x00000000001d2a12 : add byte ptr [rax], al ; sub al, 0x2f ; int1 ; jmp qword ptr [rcx]
0x00000000001d8472 : add byte ptr [rax], al ; sub al, 0x4d ; add dword ptr [rax], eax ; test al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001db372 : add byte ptr [rax], al ; sub al, 0x7c ; add dword ptr [rax], eax ; cwde ; cdq ; cmc ; call qword ptr [rcx]
0x00000000001d0172 : add byte ptr [rax], al ; sub al, 0xca ; add byte ptr [rax], al ; call 0x131cf06b
0x00000000001d3b72 : add byte ptr [rax], al ; sub al, 4 ; add dword ptr [rax], eax ; call 0xffffffffe11d2def
0x00000000001d3b72 : add byte ptr [rax], al ; sub al, 4 ; add dword ptr [rax], eax ; call 0xffffffffe11d2df0
0x00000000001e44ca : add byte ptr [rax], al ; sub al, byte ptr [rdx] ; add byte ptr [rax], al ; ret 8
0x00000000001ca3c6 : add byte ptr [rax], al ; sub byte ptr [rax + rax], 0x44 ; ret
0x00000000001c6f56 : add byte ptr [rax], al ; sub byte ptr [rax - 0x18], dl ; call qword ptr [rdx]
0x00000000001e40c2 : add byte ptr [rax], al ; sub byte ptr [rbx], al ; add byte ptr [rax], al ; retf 6
0x00000000001da0c6 : add byte ptr [rax], al ; sub byte ptr [rcx + 1], 0 ; je 0x1da138 ; cmc ; jmp qword ptr [rbx]
0x0000000000190d2c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000003db84 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000001163d2 : add byte ptr [rax], al ; sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000140e60 : add byte ptr [rax], al ; sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000008f0d6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000000bb2e1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000f29c1 : add byte ptr [rax], al ; sub rcx, rax ; add rdx, rcx ; jmp 0xf2963
0x00000000001c40a2 : add byte ptr [rax], al ; sub sil, r12b ; call rcx
0x00000000000013be : add byte ptr [rax], al ; syscall
0x00000000001d10ee : add byte ptr [rax], al ; test al, 0xd9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb esi, eax ; jmp rsi
0x00000000001d24ee : add byte ptr [rax], al ; test al, 0xed ; add byte ptr [rax], al ; sbb al, 0x13 ; int1 ; call rsp
0x00000000001d0ca6 : add byte ptr [rax], al ; test al, 0xf2 ; out dx, eax ; call qword ptr [rax]
0x00000000001e4946 : add byte ptr [rax], al ; test al, 8 ; add byte ptr [rax], al ; ret
0x00000000001d0eca : add byte ptr [rax], al ; test byte ptr [rax + rsi*8], al ; jmp rcx
0x00000000001be6de : add byte ptr [rax], al ; test byte ptr [rax - 0x18], ch ; jmp qword ptr [rax]
0x00000000001c4fca : add byte ptr [rax], al ; test byte ptr [rax], bl ; add byte ptr [rax], al ; fsubr st(6), st(0) ; call qword ptr [rax]
0x00000000001be646 : add byte ptr [rax], al ; test byte ptr [rbp - 0x18], bl ; jmp rsp
0x00000000001d14ca : add byte ptr [rax], al ; test byte ptr [rcx - 0x10], cl ; jmp qword ptr [rcx]
0x00000000001da1ca : add byte ptr [rax], al ; test byte ptr [rdx + 1], ch ; add byte ptr [rax + 0x62], dl ; cmc ; jmp qword ptr [rbx]
0x00000000001d81ca : add byte ptr [rax], al ; test byte ptr [rdx + 1], cl ; add al, dh ; sahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d0aa2 : add byte ptr [rax], al ; test byte ptr [rdx - 0x3f680000], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001cd5ca : add byte ptr [rax], al ; test byte ptr [rsi - 0x2e400000], bl ; in al, dx ; call rsi
0x000000000014db1f : add byte ptr [rax], al ; test eax, eax ; je 0x14db38 ; xor eax, eax ; ret
0x000000000008721d : add byte ptr [rax], al ; test ecx, ecx ; je 0x8725a ; mov eax, edx ; pop rbx ; ret
0x0000000000130e9d : add byte ptr [rax], al ; test rax, rax ; je 0x130ed7 ; call rax
0x00000000001c4636 : add byte ptr [rax], al ; test rsi, rsp ; jmp rax
0x000000000018a67e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000001dcb8a : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rax], eax ; and byte ptr [rbp - 0xa], al ; jmp qword ptr [rsi]
0x00000000001d7dda : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr [rax], r8d ; jo 0x1d7d84 ; hlt ; jmp qword ptr [rcx]
0x00000000001becb6 : add byte ptr [rax], al ; xchg eax, esp ; add ebp, esp ; call rsp
0x00000000001d71da : add byte ptr [rax], al ; xchg eax, esp ; cmp al, byte ptr [rcx] ; add al, dh ; hlt ; jmp qword ptr [rcx]
0x00000000001da0da : add byte ptr [rax], al ; xchg eax, esp ; imul eax, dword ptr [rcx], 0xf5619000 ; jmp qword ptr [rbx]
0x00000000001e1bda : add byte ptr [rax], al ; xchg eax, esp ; in al, 1 ; add byte ptr [rax], dh ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x00000000001bee6e : add byte ptr [rax], al ; xchg eax, esp ; in al, dx ; jmp rax
0x00000000001cf4da : add byte ptr [rax], al ; xchg eax, esp ; jbe 0x1cf4d2 ; call rsp
0x00000000001be28e : add byte ptr [rax], al ; xchg eax, esp ; jmp rdi
0x00000000001cf9da : add byte ptr [rax], al ; xchg eax, esp ; ret 0
0x00000000001d3376 : add byte ptr [rax], al ; xor ah, bh ; add byte ptr [rax], al ; pop rcx ; loopne 0x1d336c ; jmp qword ptr [rbx]
0x00000000001c6b47 : add byte ptr [rax], al ; xor al, 0 ; add ah, dh ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001bf656 : add byte ptr [rax], al ; xor al, 0x40 ; in eax, dx ; jmp rsp
0x00000000001bf81e : add byte ptr [rax], al ; xor al, 0xf2 ; in eax, dx ; call rax
0x00000000001bf3f6 : add byte ptr [rax], al ; xor al, 5 ; in eax, dx ; jmp rsp
0x00000000001df9a6 : add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001dc276 : add byte ptr [rax], al ; xor byte ptr [rbx - 0x77bffff], cl ; cmc ; call rsp
0x00000000001da076 : add byte ptr [rax], al ; xor byte ptr [rcx + 1], ch ; add byte ptr [rcx], al ; cmc ; jmp qword ptr [rbx]
0x00000000001dcb76 : add byte ptr [rax], al ; xor byte ptr [rcx + rax - 0x9bbac00], dl ; call rcx
0x00000000001ceec6 : add byte ptr [rax], al ; xor byte ptr [rdi - 0x65bc0000], 0xed ; call qword ptr [rbx]
0x00000000001d7176 : add byte ptr [rax], al ; xor byte ptr [rdx], bh ; add dword ptr [rax], eax ; hlt ; jmp qword ptr [rcx]
0x00000000001d6576 : add byte ptr [rax], al ; xor byte ptr [rsi], ch ; add dword ptr [rax], eax ; je 0x1d6590 ; hlt ; jmp qword ptr [rcx]
0x00000000001cf93e : add byte ptr [rax], al ; xor ch, 0xfb ; call qword ptr [rdx]
0x00000000000ba8ee : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000001cf976 : add byte ptr [rax], al ; xor dl, al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; sti ; call qword ptr [rbx]
0x00000000001cfcae : add byte ptr [rax], al ; xor dl, dl ; out dx, al ; jmp rdx
0x00000000000df0c6 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d140c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000123484 : add byte ptr [rax], al ; xor eax, eax ; call 0x10f766
0x0000000000163af8 : add byte ptr [rax], al ; xor eax, eax ; call 0x10fd76
0x0000000000164454 : add byte ptr [rax], al ; xor eax, eax ; call 0x1106c6
0x00000000001638be : add byte ptr [rax], al ; xor eax, eax ; jmp 0x16388c
0x000000000016393e : add byte ptr [rax], al ; xor eax, eax ; jmp 0x16390c
0x000000000014e47e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000009d620 : add byte ptr [rax], al ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000014e436 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x00000000000431dc : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000042e83 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000003fb2e : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000011010e : add byte ptr [rax], al ; xor eax, eax ; syscall
0x000000000018a5ca : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000000443f6 : add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000001542da : add byte ptr [rax], al ; xor ebp, ebp ; call 0x30d76
0x000000000007b5ee : add byte ptr [rax], al ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x00000000001d2aff : add byte ptr [rax], al ; xor ecx, esi ; jmp qword ptr [rcx]
0x0000000000021bde : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x0000000000115f9a : add byte ptr [rax], al ; xor edi, edi ; syscall
0x00000000000681f3 : add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x0000000000130e1f : add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x000000000007ec6e : add byte ptr [rax], al ; xor esi, esi ; mov rax, rsi ; ret
0x000000000004360c : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r9 ; call rdx
0x00000000000be63e : add byte ptr [rax], al ; xor r15d, r15d ; jmp 0xbe616
0x00000000000690cb : add byte ptr [rax], al ; xor r15d, r15d ; jmp rax
0x000000000002bce6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x00000000000bcdde : add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001d827f : add byte ptr [rax], bh ; add qword ptr [r8], rax ; in al, dx ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001cdff7 : add byte ptr [rax], bh ; clc ; in al, dx ; call qword ptr [rax]
0x00000000001cfa07 : add byte ptr [rax], bh ; cmp bh, ah ; call qword ptr [rbx]
0x00000000001c4ff7 : add byte ptr [rax], bh ; fsubr st(6), st(0) ; call qword ptr [rsi]
0x00000000001c3837 : add byte ptr [rax], bh ; in al, 0xe5 ; call qword ptr [rsi]
0x00000000001d1ae7 : add byte ptr [rax], bh ; in eax, 0xf0 ; jmp qword ptr [rdi]
0x00000000001da617 : add byte ptr [rax], bh ; insb byte ptr [rdi], dx ; cmc ; call rsp
0x00000000001d5047 : add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdx]
0x00000000001d8d7f : add byte ptr [rax], bh ; push rsi ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff4
0x000000000004c88c : add byte ptr [rax], bh ; ret
0x00000000001d2b27 : add byte ptr [rax], bh ; xor ecx, esi ; jmp qword ptr [rcx]
0x00000000001cee57 : add byte ptr [rax], bl ; fdivr st(4) ; call qword ptr [rax]
0x00000000001dab5f : add byte ptr [rax], bl ; je 0x1dab6c ; add byte ptr [rbx + rax*4], bh ; cmc ; call qword ptr [rbx]
0x00000000001ce35f : add byte ptr [rax], bl ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or ch, ch ; call qword ptr [rax]
0x00000000001e1e5f : add byte ptr [rax], bl ; out 1, eax ; add byte ptr [rdi + rcx*4], cl ; sti ; jmp qword ptr [rdx]
0x00000000001dff57 : add byte ptr [rax], bl ; push -9 ; call rax
0x00000000001dfa5f : add byte ptr [rax], bl ; ret
0x00000000001df95f : add byte ptr [rax], bl ; ret 1
0x00000000001d015f : add byte ptr [rax], bl ; retf 0
0x00000000001c45b7 : add byte ptr [rax], bl ; test esi, esp ; call qword ptr [rdx]
0x00000000001d9e67 : add byte ptr [rax], ch ; cmc ; jmp rdi
0x00000000001d81f7 : add byte ptr [rax], ch ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d1bc7 : add byte ptr [rax], ch ; out 0xf0, al ; jmp qword ptr [rdi]
0x0000000000195bdd : add byte ptr [rax], cl ; add bh, dh ; fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x00000000001985fc : add byte ptr [rax], cl ; add bh, dh ; fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x00000000001d0293 : add byte ptr [rax], cl ; add byte ptr [rax], al ; push rax ; retf
0x00000000001d02df : add byte ptr [rax], cl ; add byte ptr [rax], al ; pushfq ; retf
0x00000000001db74f : add byte ptr [rax], cl ; add byte ptr [rcx], 0 ; cmp al, 0xb1 ; cmc ; call rdx
0x0000000000195976 : add byte ptr [rax], cl ; add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000001d61f7 : add byte ptr [rax], cl ; add dh, ah ; jmp qword ptr [rcx]
0x00000000001d594f : add byte ptr [rax], cl ; and al, byte ptr [rcx] ; add byte ptr [rsp + rax*8], bl ; jmp qword ptr [rcx]
0x00000000001da04f : add byte ptr [rax], cl ; imul eax, dword ptr [rcx], 0xf560cc00 ; jmp qword ptr [rbx]
0x00000000001cc24f : add byte ptr [rax], cl ; mov eax, dword ptr [rax] ; add byte ptr [rcx + rax*2 - 0x14], bh ; call qword ptr [rdx]
0x00000000001d8567 : add byte ptr [rax], cl ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x0000000000030514 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001e264f : add byte ptr [rax], cl ; out dx, eax ; add dword ptr [rax], eax ; sbb r15b, al ; jmp qword ptr [rcx]
0x00000000001cf94f : add byte ptr [rax], cl ; ret 0
0x00000000001db4c7 : add byte ptr [rax], cl ; sahf ; cmc ; call qword ptr [rdi]
0x00000000001d6577 : add byte ptr [rax], dh ; add dword ptr cs:[rax], eax ; je 0x1d658f ; hlt ; jmp qword ptr [rcx]
0x00000000001d3377 : add byte ptr [rax], dh ; cld ; add byte ptr [rax], al ; pop rcx ; loopne 0x1d336b ; jmp qword ptr [rbx]
0x00000000001d7177 : add byte ptr [rax], dh ; cmp al, byte ptr [rcx] ; add byte ptr [rdx + rcx*2 - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001da077 : add byte ptr [rax], dh ; imul eax, dword ptr [rcx], 0xf5610400 ; jmp qword ptr [rbx]
0x00000000000ba8ef : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000000c82f : add byte ptr [rax], dh ; ret
0x00000000001cf977 : add byte ptr [rax], dh ; ret 0
0x00000000001e05af : add byte ptr [rax], dh ; ret 0xfffb
0x00000000001e18ef : add byte ptr [rax], dh ; retf
0x00000000001c621f : add byte ptr [rax], dh ; retf 0xffe7
0x00000000001cfcaf : add byte ptr [rax], dh ; shr dh, cl ; jmp rdx
0x00000000001d7f4f : add byte ptr [rax], dh ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000001e1bdf : add byte ptr [rax], dh ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x0000000000008cd7 : add byte ptr [rax], dl ; adc r8b, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000000463d : add byte ptr [rax], dl ; add ah, bh ; retf 0x1b
0x00000000000045dd : add byte ptr [rax], dl ; add al, bh ; retf 0x1b
0x000000000004f022 : add byte ptr [rax], dl ; add byte ptr [rax + 0x38], bh ; syscall
0x00000000001cfa27 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add ah, ah ; ret 0
0x00000000001cfa13 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add al, dl ; ret 0
0x00000000001d015b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], bl ; retf 0
0x00000000001cf94b : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], cl ; ret 0
0x00000000001cf973 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0
0x00000000001c575b : add byte ptr [rax], dl ; add byte ptr [rax], al ; mov esp, edi ; call qword ptr [rdx]
0x000000000000460d : add byte ptr [rax], dl ; add byte ptr [rax], al ; retf
0x0000000000006f95 : add byte ptr [rax], dl ; add byte ptr [rax], dl ; retf
0x00000000001d629f : add byte ptr [rax], dl ; add esi, esp ; call qword ptr [rsi]
0x00000000001d8257 : add byte ptr [rax], dl ; add qword ptr [r8], rax ; mov ah, 0x9f ; hlt ; jmp qword ptr [rcx]
0x00000000001db2ff : add byte ptr [rax], dl ; cdq ; cmc ; call qword ptr [rdi]
0x00000000001e2b57 : add byte ptr [rax], dl ; hlt ; add dword ptr [rax], eax ; mov ah, 0x37 ; clc ; call qword ptr [rdi]
0x00000000001e2357 : add byte ptr [rax], dl ; in al, dx ; add dword ptr [rax], eax ; add al, 0x11 ; clc ; jmp qword ptr [rcx]
0x00000000001d7c2f : add byte ptr [rax], dl ; jl 0x1d7c2b ; jmp qword ptr [rcx]
0x00000000001da2bf : add byte ptr [rax], dl ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000000305f4 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000000f4e7 : add byte ptr [rax], dl ; ret 0x15
0x00000000001cd37f : add byte ptr [rax], dl ; ret 0xffec
0x0000000000006f97 : add byte ptr [rax], dl ; retf
0x00000000001cfdff : add byte ptr [rax], dl ; xlatb ; out dx, al ; jmp qword ptr [rdi]
0x00000000001e0228 : add byte ptr [rax], r8b ; add ah, ah ; retf 1
0x0000000000024e04 : add byte ptr [rax], r8b ; add al, ch ; ret
0x00000000000514ed : add byte ptr [rax], r8b ; add rax, 1 ; pop rbx ; ret
0x000000000011dd2d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008759d : add byte ptr [rax], r8b ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000001096ed : add byte ptr [rax], r8b ; call 0xe5905
0x000000000003dd7d : add byte ptr [rax], r8b ; fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x0000000000143935 : add byte ptr [rax], r8b ; mov byte ptr [r10], 0 ; ret
0x00000000000edb95 : add byte ptr [rax], r8b ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a853d : add byte ptr [rax], r8b ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000140aa5 : add byte ptr [rax], r8b ; mov eax, 0x100 ; ret
0x000000000010fbdd : add byte ptr [rax], r8b ; mov eax, 0x102 ; syscall
0x0000000000111d6d : add byte ptr [rax], r8b ; mov eax, 0x107 ; syscall
0x0000000000111cad : add byte ptr [rax], r8b ; mov eax, 0x10a ; syscall
0x000000000012253d : add byte ptr [rax], r8b ; mov eax, 0x110 ; syscall
0x000000000012259d : add byte ptr [rax], r8b ; mov eax, 0x11b ; syscall
0x000000000012220d : add byte ptr [rax], r8b ; mov eax, 0x123 ; syscall
0x00000000001109cd : add byte ptr [rax], r8b ; mov eax, 0x124 ; syscall
0x0000000000110a2d : add byte ptr [rax], r8b ; mov eax, 0x125 ; syscall
0x000000000012232d : add byte ptr [rax], r8b ; mov eax, 0x126 ; syscall
0x000000000012262d : add byte ptr [rax], r8b ; mov eax, 0x12c ; syscall
0x000000000012214d : add byte ptr [rax], r8b ; mov eax, 0x131 ; syscall
0x000000000012274d : add byte ptr [rax], r8b ; mov eax, 0x14a ; syscall
0x000000000012277d : add byte ptr [rax], r8b ; mov eax, 0x14b ; syscall
0x000000000009b16d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000001109fd : add byte ptr [rax], r8b ; mov eax, 0x16 ; syscall
0x0000000000103e4d : add byte ptr [rax], r8b ; mov eax, 0x18 ; syscall
0x000000000011bbdd : add byte ptr [rax], r8b ; mov eax, 0x1b ; syscall
0x00000000001237dd : add byte ptr [rax], r8b ; mov eax, 0x1e ; syscall
0x000000000012386d : add byte ptr [rax], r8b ; mov eax, 0x1f ; syscall
0x000000000011096d : add byte ptr [rax], r8b ; mov eax, 0x20 ; syscall
0x000000000011099d : add byte ptr [rax], r8b ; mov eax, 0x21 ; syscall
0x00000000000d5e4d : add byte ptr [rax], r8b ; mov eax, 0x26 ; syscall
0x0000000000122ebd : add byte ptr [rax], r8b ; mov eax, 0x29 ; syscall
0x000000000012296d : add byte ptr [rax], r8b ; mov eax, 0x33 ; syscall
0x00000000000e453d : add byte ptr [rax], r8b ; mov eax, 0x3f ; syscall
0x00000000001236dd : add byte ptr [rax], r8b ; mov eax, 0x40 ; syscall
0x00000000001236ad : add byte ptr [rax], r8b ; mov eax, 0x41 ; syscall
0x000000000012367d : add byte ptr [rax], r8b ; mov eax, 0x47 ; syscall
0x0000000000118c8d : add byte ptr [rax], r8b ; mov eax, 0x4d ; syscall
0x0000000000110b1d : add byte ptr [rax], r8b ; mov eax, 0x51 ; syscall
0x0000000000111d9d : add byte ptr [rax], r8b ; mov eax, 0x54 ; syscall
0x0000000000111cdd : add byte ptr [rax], r8b ; mov eax, 0x59 ; syscall
0x000000000010faed : add byte ptr [rax], r8b ; mov eax, 0x5b ; syscall
0x000000000011140d : add byte ptr [rax], r8b ; mov eax, 0x5d ; syscall
0x000000000011143d : add byte ptr [rax], r8b ; mov eax, 0x5e ; syscall
0x00000000000e456d : add byte ptr [rax], r8b ; mov eax, 0x64 ; syscall
0x000000000012238d : add byte ptr [rax], r8b ; mov eax, 0x67 ; syscall
0x00000000000e5b6d : add byte ptr [rax], r8b ; mov eax, 0x6d ; syscall
0x00000000000e5b9d : add byte ptr [rax], r8b ; mov eax, 0x6f ; syscall
0x00000000000e5bfd : add byte ptr [rax], r8b ; mov eax, 0x70 ; syscall
0x00000000000e5c2d : add byte ptr [rax], r8b ; mov eax, 0x76 ; syscall
0x00000000000e5c5d : add byte ptr [rax], r8b ; mov eax, 0x78 ; syscall
0x000000000012191d : add byte ptr [rax], r8b ; mov eax, 0x7a ; syscall
0x000000000012194d : add byte ptr [rax], r8b ; mov eax, 0x7b ; syscall
0x00000000001220ed : add byte ptr [rax], r8b ; mov eax, 0x7d ; syscall
0x000000000012211d : add byte ptr [rax], r8b ; mov eax, 0x7e ; syscall
0x000000000014167d : add byte ptr [rax], r8b ; mov eax, 0x7fffffff ; ret
0x000000000012256d : add byte ptr [rax], r8b ; mov eax, 0x86 ; syscall
0x000000000010f99d : add byte ptr [rax], r8b ; mov eax, 0x8a ; syscall
0x0000000000103dbd : add byte ptr [rax], r8b ; mov eax, 0x8f ; syscall
0x0000000000103ded : add byte ptr [rax], r8b ; mov eax, 0x90 ; syscall
0x0000000000103e1d : add byte ptr [rax], r8b ; mov eax, 0x91 ; syscall
0x0000000000103e7d : add byte ptr [rax], r8b ; mov eax, 0x92 ; syscall
0x0000000000103ead : add byte ptr [rax], r8b ; mov eax, 0x93 ; syscall
0x0000000000103edd : add byte ptr [rax], r8b ; mov eax, 0x94 ; syscall
0x000000000011bc6d : add byte ptr [rax], r8b ; mov eax, 0x96 ; syscall
0x000000000011bc9d : add byte ptr [rax], r8b ; mov eax, 0x97 ; syscall
0x000000000011bccd : add byte ptr [rax], r8b ; mov eax, 0x98 ; syscall
0x000000000012204d : add byte ptr [rax], r8b ; mov eax, 0x9a ; syscall
0x000000000012244d : add byte ptr [rax], r8b ; mov eax, 0x9b ; syscall
0x000000000011badd : add byte ptr [rax], r8b ; mov eax, 0xa ; syscall
0x00000000001171cd : add byte ptr [rax], r8b ; mov eax, 0xa1 ; syscall
0x000000000011767d : add byte ptr [rax], r8b ; mov eax, 0xa7 ; syscall
0x00000000001176ad : add byte ptr [rax], r8b ; mov eax, 0xa8 ; syscall
0x0000000000116eed : add byte ptr [rax], r8b ; mov eax, 0xaa ; syscall
0x000000000012177d : add byte ptr [rax], r8b ; mov eax, 0xac ; syscall
0x000000000012217d : add byte ptr [rax], r8b ; mov eax, 0xae ; syscall
0x00000000001221ad : add byte ptr [rax], r8b ; mov eax, 0xb0 ; syscall
0x00000000001218ed : add byte ptr [rax], r8b ; mov eax, 0xbb ; syscall
0x000000000011f98d : add byte ptr [rax], r8b ; mov eax, 0xc6 ; syscall
0x000000000011f86d : add byte ptr [rax], r8b ; mov eax, 0xc7 ; syscall
0x00000000001221dd : add byte ptr [rax], r8b ; mov eax, 0xd5 ; syscall
0x000000000012207d : add byte ptr [rax], r8b ; mov eax, 0xe4 ; syscall
0x00000000001222fd : add byte ptr [rax], r8b ; mov eax, 0xfd ; syscall
0x000000000012235d : add byte ptr [rax], r8b ; mov eax, 0xff ; syscall
0x000000000008ff4d : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000e7185 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x0000000000140e75 : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000008fb1d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000134d2d : add byte ptr [rax], r8b ; mov eax, edi ; bswap eax ; ret
0x00000000000b68cd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000084f25 : add byte ptr [rax], r8b ; mov r8, qword ptr [rdx + 0x48] ; jmp 0x84ef9
0x0000000000130015 : add byte ptr [rax], r8b ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000b7b3d : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000b690d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000159cb5 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014c7cd : add byte ptr [rax], r8b ; pop rbx ; ret
0x000000000003566d : add byte ptr [rax], r8b ; ret
0x000000000010118d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000f4235 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ea1d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x000000000003fb2d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000081dcd : add byte ptr [rax], r8b ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000bcddd : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x000000000010f4d6 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x00000000001654b3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008a1c3 : add byte ptr [rbp + 0x11], dh ; add rsp, 0x48 ; ret
0x000000000007bca2 : add byte ptr [rbp + 0x12], dh ; add rsp, 0x18 ; ret
0x00000000000e48c0 : add byte ptr [rbp + 0x12], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d5ff1 : add byte ptr [rbp + 0x13], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000109e8 : add byte ptr [rbp + 0x15], ah ; add byte ptr [rax], al ; retf
0x0000000000158114 : add byte ptr [rbp + 0x18], dh ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000043ffe : add byte ptr [rbp + 0x19], al ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x0000000000115d1d : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000158857 : add byte ptr [rbp + 0x1d], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012182b : add byte ptr [rbp + 0x1d], dh ; add rsp, 0x78 ; ret
0x0000000000157ebe : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000140176 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d5ec0 : add byte ptr [rbp + 0x22], dh ; add rsp, 0x28 ; ret
0x00000000000cbe0e : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000015a5fe : add byte ptr [rbp + 0x27], dh ; add rsp, 0x28 ; ret
0x000000000019583e : add byte ptr [rbp + 0x29], al ; ret
0x0000000000198246 : add byte ptr [rbp + 0x29], al ; retf
0x00000000000a7419 : add byte ptr [rbp + 0x29], cl ; ret
0x00000000000cab4f : add byte ptr [rbp + 0x29], cl ; ret 0x8d4c
0x00000000000cbce5 : add byte ptr [rbp + 0x29d675db], al ; ret
0x00000000000cbc17 : add byte ptr [rbp + 0x29dc75db], al ; ret
0x000000000016341d : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x18 ; ret
0x0000000000163894 : add byte ptr [rbp + 0x2d], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012373f : add byte ptr [rbp + 0x2e], dh ; mov eax, 0x42 ; syscall
0x000000000014cf7a : add byte ptr [rbp + 0x30], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014275e : add byte ptr [rbp + 0x30], dh ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000008abda : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000009c60f : add byte ptr [rbp + 0x31], al ; in al, 0xe9 ; ret 0xfffe
0x000000000002bce7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000009f26f : add byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x39], cl ; ret
0x000000000012383f : add byte ptr [rbp + 0x31], al ; sar byte ptr [rax + 0x1d], cl ; syscall
0x00000000000e470f : add byte ptr [rbp + 0x31], al ; sar byte ptr [rax + 0x3d], cl ; syscall
0x000000000012e13b : add byte ptr [rbp + 0x32], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a1faf : add byte ptr [rbp + 0x38], al ; ret 0x870f
0x000000000015c5b7 : add byte ptr [rbp + 0x38], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000cbc6b : add byte ptr [rbp + 0x390a74db], al ; ret
0x0000000000143927 : add byte ptr [rbp + 0x39], al ; retf
0x00000000000cb91e : add byte ptr [rbp + 0x39], cl ; retf
0x0000000000197882 : add byte ptr [rbp + 0x39], cl ; retf 0xbf41
0x000000000014ea37 : add byte ptr [rbp + 0x39], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000004ecb1 : add byte ptr [rbp + 0x39], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015ca77 : add byte ptr [rbp + 0x3a], dh ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e5104 : add byte ptr [rbp + 0x3a], dh ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x000000000015c677 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000091670 : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x50 ; pop rbx ; ret
0x000000000011795f : add byte ptr [rbp + 0x3b], dh ; add rsp, 0x68 ; ret
0x0000000000054800 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x00000000001175e4 : add byte ptr [rbp + 0x3e], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000166745 : add byte ptr [rbp + 0x3e], dh ; add rsp, 0x78 ; ret
0x000000000015cc97 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000118b03 : add byte ptr [rbp + 0x3f], dh ; add rsp, 0x38 ; ret
0x0000000000118bd2 : add byte ptr [rbp + 0x40], dh ; add rsp, 0x38 ; ret
0x000000000011d1ef : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000000a18e5 : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000013992a : add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000f4035 : add byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x0000000000141468 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000010fdc6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000010ffeb : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x000000000015cb7a : add byte ptr [rbp + 0x47], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008dae7 : add byte ptr [rbp + 0x47], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000e6658 : add byte ptr [rbp + 0x47], dh ; ret
0x000000000007b5de : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x000000000015cc09 : add byte ptr [rbp + 0x48], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000158384 : add byte ptr [rbp + 0x48], dh ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000010f63f : add byte ptr [rbp + 0x49], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012375e : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x58 ; ret
0x0000000000110716 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x00000000000e0e7a : add byte ptr [rbp + 0x4e], dh ; add rsp, 0x38 ; ret
0x00000000000e5cca : add byte ptr [rbp + 0x56], dh ; add rsp, 0x38 ; ret
0x000000000008bf4d : add byte ptr [rbp + 0x58d48c0], al ; ret
0x000000000013b3fc : add byte ptr [rbp + 0x59], dh ; add rsp, 0x38 ; ret
0x000000000004ee3f : add byte ptr [rbp + 0x5a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000efcb8 : add byte ptr [rbp + 0x63], cl ; ret
0x0000000000160362 : add byte ptr [rbp + 0x63], cl ; retf
0x0000000000089757 : add byte ptr [rbp + 0x63], cl ; retf 0xc148
0x00000000001667cc : add byte ptr [rbp + 0x64], dh ; add rsp, 0x38 ; ret
0x000000000015c72a : add byte ptr [rbp + 0x66], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000110842 : add byte ptr [rbp + 0x67], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000000000016649e : add byte ptr [rbp + 0x6d], dh ; add rsp, 0x58 ; ret
0x000000000004ed61 : add byte ptr [rbp + 0x6e], dh ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e311e : add byte ptr [rbp + 0x76], dh ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000116c4c : add byte ptr [rbp + 0x76], dh ; add rsp, 0x38 ; ret
0x0000000000166576 : add byte ptr [rbp + 0x78], dh ; add rsp, 0x68 ; ret
0x00000000001545aa : add byte ptr [rbp + 0x7e], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000115d78 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x18 ; ret
0x000000000015861e : add byte ptr [rbp + 0xe], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000a402f : add byte ptr [rbp + 0xf], al ; mov dh, 0x54 ; syscall
0x00000000000a43cf : add byte ptr [rbp + 0xf], al ; mov dh, 0x64 ; syscall
0x00000000000da7b8 : add byte ptr [rbp + 0xf], al ; ret
0x00000000000533ef : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x00000000000532df : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000116e15 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x00000000000a361d : add byte ptr [rbp + 1], al ; ret
0x00000000000d3beb : add byte ptr [rbp + 1], cl ; ret 0x894c
0x00000000000d3f8f : add byte ptr [rbp + 1], cl ; ret 0xf983
0x00000000000f788c : add byte ptr [rbp + 1], cl ; retf 0xc8b
0x000000000000c9e7 : add byte ptr [rbp + 2], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004396a : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x000000000003eb5e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x0000000000043a3e : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000000000117884 : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000015c4e0 : add byte ptr [rbp + 5], dh ; add rsp, 0x48 ; ret
0x000000000015017a : add byte ptr [rbp + 5], dh ; add rsp, 0x58 ; ret
0x0000000000159d30 : add byte ptr [rbp + 5], dh ; add rsp, 0x78 ; ret
0x000000000010eb29 : add byte ptr [rbp + 5], dh ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000157b52 : add byte ptr [rbp + 6], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003f72e : add byte ptr [rbp + 6], dh ; add rsp, 0x40 ; pop rbx ; ret
0x00000000001e4e13 : add byte ptr [rbp + 8], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 8
0x00000000001c2e2f : add byte ptr [rbp + rax - 6], al ; call rax
0x00000000001c3147 : add byte ptr [rbp + rax*4 - 6], al ; call rsp
0x00000000001cfcab : add byte ptr [rbp + rax*8], ah ; add byte ptr [rax], dh ; shr dh, cl ; jmp rdx
0x00000000001c64e3 : add byte ptr [rbp + rbp + 0xfd80000], bl ; cli ; call qword ptr [rdi]
0x00000000001bfa87 : add byte ptr [rbp + rbp - 0x12], dh ; jmp qword ptr [rax]
0x00000000001bf15f : add byte ptr [rbp + rbp*4 - 0x14], ah ; call rax
0x00000000001bf7f7 : add byte ptr [rbp + rbp*8 - 0x13], al ; jmp rsp
0x00000000001d24b3 : add byte ptr [rbp + rbp*8], ch ; add byte ptr [rax + 0x12], bh ; int1 ; call rsi
0x00000000001d54d3 : add byte ptr [rbp + rbx - 0x5117ffff], cl ; call rdi
0x00000000001c304f : add byte ptr [rbp + rbx*2 - 6], dl ; call qword ptr [rax]
0x00000000001c2a1f : add byte ptr [rbp + rbx*4 - 7], al ; jmp qword ptr [rax]
0x00000000001a4837 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x000000000008b9c8 : add byte ptr [rbp + rcx*4 + 0x25], cl ; clc ; retf 0x35
0x000000000008b296 : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0x35c4
0x000000000009680b : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000019782d : add byte ptr [rbp + rcx*4 + 0x47], al ; add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000086d3e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000086e38 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000014cd6e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call qword ptr [rax]
0x000000000014c9d9 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x2c ; call qword ptr [rax]
0x0000000000086f32 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x0000000000051caf : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x161f
0x000000000019c32f : add byte ptr [rbp + rcx*4 + 5], cl ; retf 0x189
0x00000000001db4c3 : add byte ptr [rbp + rdi*2 + 1], bh ; add byte ptr [rax], cl ; sahf ; cmc ; call qword ptr [rdi]
0x00000000001bf207 : add byte ptr [rbp + rdi*4 - 0x14], al ; jmp rsp
0x00000000001c773b : add byte ptr [rbp + rdi*4 - 0x18], dl ; jmp qword ptr [rcx]
0x00000000001dda6b : add byte ptr [rbp + rdi*4 - 0xa], dh ; jmp qword ptr [rsi]
0x00000000001c19af : add byte ptr [rbp + rdi*4 - 0xa], dh ; jmp rax
0x00000000001cf4c3 : add byte ptr [rbp + rdi*4], bh ; add byte ptr [rax + 0x70], bh ; out dx, al ; jmp qword ptr [rbx]
0x00000000001dcc93 : add byte ptr [rbp + rdx*4 + 1], cl ; add byte ptr [rax + 0x47], bl ; idiv bh ; ret 0
0x00000000001c2297 : add byte ptr [rbp + rsi - 8], dh ; jmp rax
0x00000000001e2cab : add byte ptr [rbp + rsi*8 + 1], ah ; add byte ptr [rax + 0x38], dh ; clc ; call rsi
0x00000000001be25f : add byte ptr [rbp + rsi*8 - 0x19], ah ; jmp rsp
0x00000000001af44c : add byte ptr [rbp - 0x10], bh ; jmp qword ptr [rax]
0x00000000001af3c8 : add byte ptr [rbp - 0x10], dh ; call qword ptr [rax]
0x00000000001bef67 : add byte ptr [rbp - 0x14], dh ; jmp qword ptr [rax]
0x00000000001bea37 : add byte ptr [rbp - 0x17], dh ; jmp rax
0x00000000001be4ef : add byte ptr [rbp - 0x18], dh ; jmp qword ptr [rax]
0x000000000019a734 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x00000000000e66bf : add byte ptr [rbp - 0x20], dh ; mov eax, 0xfa ; ret
0x00000000000e689d : add byte ptr [rbp - 0x36], dh ; jmp 0xe684d
0x000000000019aa5a : add byte ptr [rbp - 0x3d], bl ; nop dword ptr [rax] ; ret
0x00000000001a4ae3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x00000000000e67c3 : add byte ptr [rbp - 0x53], dh ; mov eax, 0x40 ; ret
0x00000000000cc4a7 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000048656 : add byte ptr [rbp - 0x57f2fad], cl ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8348
0x00000000000e66ff : add byte ptr [rbp - 0x60], dh ; mov eax, 0xfffa ; ret
0x0000000000052f6f : add byte ptr [rbp - 0x75], cl ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x48f8
0x00000000000655f9 : add byte ptr [rbp - 0x75], cl ; je 0x6562a ; and byte ptr [rax + 1], cl ; ret
0x00000000000f9552 : add byte ptr [rbp - 0x76268b40], al ; ret 0xe281
0x0000000000197ca7 : add byte ptr [rbp - 0x76b33cb5], cl ; retf
0x00000000000f6ce9 : add byte ptr [rbp - 0x77], al ; adc byte ptr [r8 - 0x77], r9b ; fucomip st(0) ; retf 0xf2a5
0x00000000001990a7 : add byte ptr [rbp - 0x77], al ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x00000000001503dd : add byte ptr [rbp - 0x77], al ; ret
0x00000000000f2cad : add byte ptr [rbp - 0x77], al ; retf
0x0000000000052205 : add byte ptr [rbp - 0x77], al ; retf 0x8341
0x0000000000130dff : add byte ptr [rbp - 0x77], cl ; ret
0x00000000000c19df : add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x00000000000fb99a : add byte ptr [rbp - 0x77], cl ; ret 0x8349
0x00000000000c9124 : add byte ptr [rbp - 0x77], cl ; ret 0xc149
0x00000000000684df : add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cab18 : add byte ptr [rbp - 0x77], cl ; retf 0x634d
0x00000000000f798d : add byte ptr [rbp - 0x77], cl ; retf 0x8b48
0x00000000000caf1a : add byte ptr [rbp - 0x77], cl ; retf 0x8d44
0x000000000011c719 : add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x00000000000caf42 : add byte ptr [rbp - 0x77], cl ; retf 0xc283
0x000000000010a878 : add byte ptr [rbp - 0x78], al ; jl 0x10a8a2 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009be15 : add byte ptr [rbp - 0x7ad98140], al ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000bebe0 : add byte ptr [rbp - 0x7b], al ; in al, 0x75 ; ret 0x8945
0x000000000009b860 : add byte ptr [rbp - 0x7b], cl ; in al, 0x74 ; ret 0x8b49
0x00000000000a818f : add byte ptr [rbp - 0x7c], al ; sal byte ptr [rbp + rsi*2 + 0x44], 0x38 ; ret 0x4153
0x00000000000ee2df : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000f3897 : add byte ptr [rbp - 0x7ce6872e], al ; ret 0x4101
0x0000000000051507 : add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x00000000000916c5 : add byte ptr [rbp - 0xcf98740], al ; ret
0x0000000000145785 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x00000000001d5123 : add byte ptr [rbp - 0xd], ch ; jmp qword ptr [rcx]
0x000000000000d407 : add byte ptr [rbp], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001cdca3 : add byte ptr [rbp], bl ; add al, ch ; in al, dx ; jmp qword ptr [rcx]
0x0000000000186769 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000009a7c4 : add byte ptr [rbx + 0x19], dh ; lea rax, [rdx - 8] ; ret
0x00000000000893bf : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000bc095 : add byte ptr [rbx + 0x2b], 4 ; mov byte ptr [rsp + rbx*8 - 0xd], dh ; ret
0x000000000012424d : add byte ptr [rbx + 0x2ca2ac0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000008fe87 : add byte ptr [rbx + 0x35da1505], al ; add byte ptr [rcx], al ; ret
0x00000000001400cf : add byte ptr [rbx + 0x3b83f], cl ; add byte ptr [rax], al ; syscall
0x000000000002bf1b : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x00000000000def9f : add byte ptr [rbx + 0x43391843], cl ; or al, 0x7c ; ret 0x850f
0x00000000000b68df : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000018135f : add byte ptr [rbx + 0x48028901], cl ; lea eax, [rdx + 3] ; ret
0x000000000018470f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x00000000000e4922 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x18 ; ret
0x00000000000b8d0f : add byte ptr [rbx + 0x48178916], cl ; lea eax, [rdi + 4] ; ret
0x00000000000a81e9 : add byte ptr [rbx + 0x48], bl ; mov dword ptr [rdi], edx ; ret
0x000000000007ec35 : add byte ptr [rbx + 0x48], bl ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000173eff : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000993af : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000005e75c : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000004038a : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000352a1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003f45d : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000008a1ff : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x00000000000fb0e8 : add byte ptr [rbx + 0x634801c2], al ; retf 0x3949
0x00000000000b6fc9 : add byte ptr [rbx + 0x63], cl ; or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000002e27f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000010eb3f : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000008938f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x000000000011d424 : add byte ptr [rbx + 0x94801e1], al ; retf 0x8949
0x00000000000fb1b7 : add byte ptr [rbx + 0xa4b3], cl ; add cl, ch ; ret 0xfff8
0x000000000009ec7d : add byte ptr [rbx + 0xb491], cl ; add bh, dh ; ret 0
0x000000000008759f : add byte ptr [rbx + 0xf89cfe1], al ; ret
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x00000000001e592b : add byte ptr [rbx + 6], bh ; add byte ptr [rax], al ; ret 4
0x00000000001e3777 : add byte ptr [rbx + rax + 0x3a30000], al ; add byte ptr [rax], al ; retf
0x000000000019241a : add byte ptr [rbx + rax - 9], bh ; fadd st(3) ; ret
0x00000000001c1ccf : add byte ptr [rbx + rax*2 - 9], dl ; jmp rax
0x00000000001540c6 : add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x00000000001dab8b : add byte ptr [rbx + rax*4 - 0xb], dl ; call qword ptr [rsi]
0x00000000001dab63 : add byte ptr [rbx + rax*4], bh ; cmc ; call qword ptr [rbx]
0x00000000001c71db : add byte ptr [rbx + rax], al ; cli ; jmp qword ptr [rcx]
0x00000000001c2657 : add byte ptr [rbx + rax], al ; stc ; call qword ptr [rax]
0x00000000001d62b3 : add byte ptr [rbx + rax], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001e3aa7 : add byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; retf
0x00000000001d629b : add byte ptr [rbx + rbp + 1], dl ; add byte ptr [rax], dl ; add esi, esp ; call qword ptr [rsi]
0x00000000001c0c0f : add byte ptr [rbx + rbp - 0xb], dl ; call qword ptr [rax]
0x00000000001da2e3 : add byte ptr [rbx + rbp*2 + 0x63480001], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001da2bb : add byte ptr [rbx + rbp*2 + 1], dh ; add byte ptr [rax], dl ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001dd7ab : add byte ptr [rbx + rbp*4 - 0xa], al ; call qword ptr [rbx]
0x00000000001db69b : add byte ptr [rbx + rbp*4 - 0xb], al ; call qword ptr [rbx]
0x00000000001c6253 : add byte ptr [rbx + rbp], cl ; add byte ptr [rax], al ; pop rax ; retf 0xffe7
0x00000000001d529b : add byte ptr [rbx + rbx + 1], dl ; add byte ptr [rax - 0x58], dl ; jmp qword ptr [rcx]
0x00000000001d52eb : add byte ptr [rbx + rbx - 0x570fffff], ah ; jmp qword ptr [rcx]
0x00000000001d92fb : add byte ptr [rbx + rbx*2 - 0x25cfffff], dh ; hlt ; call rsi
0x00000000001c45fb : add byte ptr [rbx + rbx*2 - 3], al ; jmp qword ptr [rdi]
0x00000000001d666b : add byte ptr [rbx + rcx - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001d82bb : add byte ptr [rbx + rcx*2 + 1], dh ; add byte ptr [rax - 0x60], al ; hlt ; jmp qword ptr [rcx]
0x00000000001d82e3 : add byte ptr [rbx + rcx*2 - 0x5f87ffff], bl ; hlt ; jmp qword ptr [rcx]
0x00000000000e1d9d : add byte ptr [rbx + rcx*4 + 0x25], cl ; ret
0x00000000000e059a : add byte ptr [rbx + rcx*4 + 0x35], cl ; out dx, al ; ret 0x30
0x0000000000084f27 : add byte ptr [rbx + rcx*4 + 0x42], cl ; jmp 0x84ef7
0x00000000000549d7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000052bb7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001505e6 : add byte ptr [rbx + rcx*4 + 0x5e], cl ; sbb byte ptr [rcx + 0x31], cl ; retf 0x314d
0x000000000010471f : add byte ptr [rbx + rcx*4 + 0x6f], cl ; sbb al, ch ; lahf ; retf
0x00000000000f6d3f : add byte ptr [rbx + rcx*4 + 0xc], al ; ret 0x8545
0x00000000000d58a5 : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret
0x00000000001dc25b : add byte ptr [rbx + rcx*4], dl ; add dword ptr [rax], eax ; nop ; clc ; cmc ; call qword ptr [rax]
0x00000000001bf2d7 : add byte ptr [rbx + rcx*8 - 0x14], dh ; call qword ptr [rax]
0x00000000001db2fb : add byte ptr [rbx + rdi*2 - 0x66efffff], dh ; cmc ; call qword ptr [rdi]
0x00000000001cf2e3 : add byte ptr [rbx + rdi*4 - 0x5ef80000], bl ; cli ; call qword ptr [rax]
0x00000000001cf2bb : add byte ptr [rbx + rdi*4], dh ; add al, dh ; cmc ; in eax, dx ; call qword ptr [rax]
0x00000000001c1107 : add byte ptr [rbx + rdi*4], dl ; cmc ; jmp rax
0x00000000001bf3a7 : add byte ptr [rbx + rdi*8 - 0x14], al ; jmp qword ptr [rax]
0x00000000001bd144 : add byte ptr [rbx + rdi*8], bh ; jmp rax
0x00000000001d4afb : add byte ptr [rbx + rdx - 0x7f0fffff], dh ; call rsp
0x00000000001bf6ef : add byte ptr [rbx + rdx*4], al ; in eax, dx ; call rsp
0x00000000001c659b : add byte ptr [rbx + rdx*8 - 0x19], dh ; call qword ptr [rcx]
0x00000000001d4a6b : add byte ptr [rbx + rdx], ah ; add dword ptr [rax], eax ; mov al, 0x5c ; call rax
0x00000000001d24f3 : add byte ptr [rbx + rdx], bl ; int1 ; call rsp
0x00000000001ceabb : add byte ptr [rbx + rsi*4], dh ; add byte ptr [rax + 0x2a], dl ; in eax, dx ; call rsp
0x00000000001d2afb : add byte ptr [rbx + rsi*8 + 0x31000000], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001d9713 : add byte ptr [rbx + rsi*8], bh ; hlt ; call rsi
0x00000000001cf7c3 : add byte ptr [rbx + rsi*8], cl ; sti ; call rsp
0x00000000001cf413 : add byte ptr [rbx + rsi*8], cl ; sti ; jmp qword ptr [rax]
0x00000000001bf0ef : add byte ptr [rbx - 0x14], ah ; push qword ptr [rax] ; retf
0x00000000000844b8 : add byte ptr [rbx - 0x14f3db8c], cl ; ret 0x5590
0x00000000001602d6 : add byte ptr [rbx - 0x16efdbac], cl ; ret
0x0000000000136623 : add byte ptr [rbx - 0x16f7dbbc], cl ; ret 0xfffd
0x00000000000bbb08 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000000bbb16 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000bbb0f : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000bbb24 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000bbb1d : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000bbb01 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000015df9b : add byte ptr [rbx - 0x3d], bl ; nop ; ret
0x000000000014128c : add byte ptr [rbx - 0x3d], bl ; nop ; xor eax, eax ; ret
0x00000000000847e9 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000011f7fb : add byte ptr [rbx - 0x3f7ac7c0], cl ; cmove eax, edx ; ret
0x0000000000145bc6 : add byte ptr [rbx - 0x3f7ae7c0], cl ; jne 0x145bd9 ; ret
0x000000000015e507 : add byte ptr [rbx - 0x3f7cb7f8], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x00000000000bbd7e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x00000000000685c1 : add byte ptr [rbx - 0x51f43], al ; call qword ptr [rax]
0x00000000000401da : add byte ptr [rbx - 0x6af00008], al ; ret 0xd521
0x00000000000f20a6 : add byte ptr [rbx - 0x72bed3af], cl ; add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000001bcb80 : add byte ptr [rbx - 0x740f0004], cl ; cld ; jmp rax
0x0000000000125e5a : add byte ptr [rbx - 0x74b7fe3f], al ; push rsp ; retf 0x8b40
0x00000000000439c4 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000001055d7 : add byte ptr [rbx - 0x76b7fd07], al ; ret 0x940f
0x00000000000a3eda : add byte ptr [rbx - 0x76bbc01e], al ; jmp 0xffffffffc18b0970
0x00000000000a4284 : add byte ptr [rbx - 0x76bbc01e], al ; loope 0xa4217 ; retf 0xc180
0x0000000000121f5f : add byte ptr [rbx - 0x76be0007], al ; retf 0x3074
0x000000000002dbb0 : add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x000000000012bf3f : add byte ptr [rbx - 0x76bee7b8], cl ; retf 0x8341
0x0000000000051f34 : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000140ecd : add byte ptr [rbx - 0x77], dl ; retf
0x0000000000140e61 : add byte ptr [rbx - 0x77bffe12], al ; ja 0x140e72 ; ret
0x0000000000078a26 : add byte ptr [rbx - 0x78f0d006], al ; retf
0x00000000000ac0c4 : add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000000676dc : add byte ptr [rbx - 0x7af00008], al ; retf
0x0000000000194c76 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x00000000000f6141 : add byte ptr [rbx - 0x7bf0f505], al ; ret 0
0x00000000000363e5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000039eb1 : add byte ptr [rbx - 0x7bf0fc06], al ; retf 0xd
0x000000000003a116 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x00000000000392c4 : add byte ptr [rbx - 0x7bf0fc08], al ; retf 6
0x000000000003715c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000036512 : add byte ptr [rbx - 0x7bf0fe06], al ; retf
0x000000000003657e : add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x000000000003932f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000000000393d2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000008d187 : add byte ptr [rbx - 0x7c2e76ed], cl ; retf 0x8320
0x00000000000e97e7 : add byte ptr [rbx - 0x7cb7f3bd], cl ; ret
0x000000000011c4f7 : add byte ptr [rbx - 0x7cb7fe18], al ; ret 0x8001
0x000000000011bdef : add byte ptr [rbx - 0x7d], dl ; call qword ptr [rcx]
0x000000000015f4be : add byte ptr [rbx - 0xb343], cl ; dec dword ptr [rax - 0x77] ; ret
0x00000000001da2fb : add byte ptr [rbx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001d8503 : add byte ptr [rbx - 0xc], ch ; jmp qword ptr [rcx]
0x00000000001bd258 : add byte ptr [rbx - 5], dh ; call qword ptr [rax + 0x20fffb72]
0x00000000001c1e27 : add byte ptr [rbx - 9], ah ; call rsp
0x00000000001bd058 : add byte ptr [rbx], 0xfb ; call rax
0x00000000001d3af5 : add byte ptr [rbx], 2 ; ret 0xe0a
0x00000000001defc1 : add byte ptr [rbx], 3 ; retf 0xa09
0x00000000000080af : add byte ptr [rbx], ah ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x57
0x00000000001da2d3 : add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rbx]
0x000000000000efc7 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x3a
0x00000000000d131b : add byte ptr [rbx], cl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000001c306f : add byte ptr [rbx], dh ; cli ; jmp rax
0x00000000001c1aa7 : add byte ptr [rbx], dl ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001bf0e7 : add byte ptr [rbx], dl ; in al, dx ; call qword ptr [rbx + rcx*8]
0x00000000001c0187 : add byte ptr [rbx], dl ; int1 ; call rax
0x0000000000115df8 : add byte ptr [rcx + 0x10b8df], cl ; add byte ptr [rax], al ; syscall
0x0000000000121ef7 : add byte ptr [rcx + 0x145], bh ; mov eax, ecx ; syscall
0x000000000014dc2b : add byte ptr [rcx + 0x146349c1], cl ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000a85ff : add byte ptr [rcx + 0x146349c2], cl ; nop ; add rdx, r8 ; jmp rdx
0x0000000000197073 : add byte ptr [rcx + 0x21], cl ; ret
0x0000000000197c30 : add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x00000000000e4908 : add byte ptr [rcx + 0x22b8c7], cl ; add byte ptr [rax], al ; syscall
0x00000000000dcb1c : add byte ptr [rcx + 0x29], al ; ret
0x000000000005baa6 : add byte ptr [rcx + 0x29], al ; retf 0x8944
0x0000000000069773 : add byte ptr [rcx + 0x29], al ; retf 0x8948
0x000000000003fbe8 : add byte ptr [rcx + 0x29], al ; retf 0xc989
0x00000000001981dd : add byte ptr [rcx + 0x29], cl ; fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x0000000000062c75 : add byte ptr [rcx + 0x29], cl ; ret
0x0000000000185665 : add byte ptr [rcx + 0x29], cl ; retf
0x00000000000b6bb1 : add byte ptr [rcx + 0x29], cl ; retf 0x394d
0x00000000000fd6cf : add byte ptr [rcx + 0x29f631da], cl ; retf 0x6348
0x0000000000085eaf : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x0000000000085e16 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x000000000017f01f : add byte ptr [rcx + 0x3518911], cl ; ret
0x000000000013f770 : add byte ptr [rcx + 0x39], al ; ret 0x840f
0x00000000000eb77e : add byte ptr [rcx + 0x39], al ; retf
0x00000000000b192f : add byte ptr [rcx + 0x39], cl ; ret
0x00000000000ef508 : add byte ptr [rcx + 0x39], cl ; retf 0x1bd
0x0000000000169a3c : add byte ptr [rcx + 0x3eb8c7], cl ; add byte ptr [rax], al ; syscall
0x0000000000164c71 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000017efff : add byte ptr [rcx + 0x4518811], cl ; ret
0x00000000000b78af : add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000090850 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000142988 : add byte ptr [rcx + 0x480575d0], cl ; add esp, 0x18 ; ret
0x0000000000117804 : add byte ptr [rcx + 0x480575d0], cl ; add esp, 0x58 ; ret
0x0000000000103cc6 : add byte ptr [rcx + 0x5b595a0a], cl ; ret
0x000000000011c59a : add byte ptr [rcx + 0x5b], bl ; pop rbp ; pop r12 ; ret
0x000000000008d170 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x000000000013105b : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x000000000008432c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000016c89e : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000002e77e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000018ffdc : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000b6758 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000067bef : add byte ptr [rcx + 0x63], cl ; ret
0x000000000014484d : add byte ptr [rcx + 0x6ae82414], cl ; retf 0xffed
0x00000000000d3954 : add byte ptr [rcx + 0x76bc2], al ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000000306bf : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x000000000003e33f : add byte ptr [rcx + 0x7fffff], ch ; je 0x3e33a ; ret
0x0000000000103f7f : add byte ptr [rcx + 0xcb], bh ; mov eax, ecx ; syscall
0x0000000000103f7e : add byte ptr [rcx + 0xcb], dil ; mov eax, ecx ; syscall
0x0000000000065e48 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x00000000000f984e : add byte ptr [rcx + 0xf], al ; mov dh, 0xc ; and al, 0x89 ; retf 0xe183
0x00000000000dcebd : add byte ptr [rcx + 0xf], al ; ret
0x000000000006a269 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000005d5c2 : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000003fb8c : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x394c
0x000000000006282f : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000199360 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xd231
0x0000000000198cd5 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff31
0x00000000001970e3 : add byte ptr [rcx + 0xf], cl ; ret
0x0000000000197bf8 : add byte ptr [rcx + 0xf], cl ; ret 0x8341
0x0000000000197ea1 : add byte ptr [rcx + 0xf], cl ; ret 0x8349
0x000000000012de1e : add byte ptr [rcx + 0xf], cl ; sub byte ptr [rcx], r13b ; ret 0x8941
0x000000000005c88a : add byte ptr [rcx + 1], al ; ret 0x8949
0x00000000001d58c3 : add byte ptr [rcx + 1], bh ; add byte ptr [rax - 0x3d], bl ; jmp qword ptr [rcx]
0x00000000001988f4 : add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000000bb0cf : add byte ptr [rcx + 1], cl ; ret
0x00000000000420a5 : add byte ptr [rcx + 1], cl ; ret 0x149
0x0000000000076436 : add byte ptr [rcx + 1], cl ; ret 0x3b45
0x00000000001e4547 : add byte ptr [rcx + 2], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000000db57 : add byte ptr [rcx + 2], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x19
0x00000000001e421f : add byte ptr [rcx + 3], dh ; add byte ptr [rax], al ; retf 5
0x00000000001e4eff : add byte ptr [rcx + 6], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000195986 : add byte ptr [rcx + 9], cl ; fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000019768f : add byte ptr [rcx + 9], cl ; ret
0x000000000009082d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000001be2bf : add byte ptr [rcx + rax - 0x18], al ; jmp qword ptr [rax]
0x0000000000031402 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000001cc253 : add byte ptr [rcx + rax*2 - 0x14], bh ; call qword ptr [rdx]
0x00000000001c299f : add byte ptr [rcx + rax*4], dl ; stc ; jmp rsp
0x00000000001bf22f : add byte ptr [rcx + rax*8 - 0x14], dl ; call rsp
0x00000000001cf8eb : add byte ptr [rcx + rax*8 - 0x40400000], ah ; out dx, al ; call qword ptr [rax]
0x00000000001c19e7 : add byte ptr [rcx + rax*8 - 0xa], ah ; jmp qword ptr [rax]
0x00000000001d8348 : add byte ptr [rcx + rax], cl ; add al, 0xa1 ; hlt ; jmp qword ptr [rcx]
0x000000000010ffcc : add byte ptr [rcx + rbp - 0x48], dh ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000001c1baf : add byte ptr [rcx + rbp - 9], dl ; call rsp
0x00000000001da0db : add byte ptr [rcx + rbp*2 + 0x61900001], dl ; cmc ; jmp qword ptr [rbx]
0x00000000001da103 : add byte ptr [rcx + rbp*2 + 0x61c80001], bh ; cmc ; jmp qword ptr [rbx]
0x00000000001da0b3 : add byte ptr [rcx + rbp*2 + 1], ch ; add byte ptr [rax + 0x61], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001dcffb : add byte ptr [rcx + rbp*2 - 0xa], al ; call rdx
0x00000000001da063 : add byte ptr [rcx + rbp*2], bl ; add dword ptr [rax], eax ; call 0x241d95d5
0x00000000001d3d7b : add byte ptr [rcx + rbp*4 - 0xe], dh ; call rcx
0x00000000001c210f : add byte ptr [rcx + rbp*8 - 9], dh ; jmp qword ptr [rax]
0x00000000001c3727 : add byte ptr [rcx + rbp*8], al ; std ; jmp rsp
0x00000000001d50d3 : add byte ptr [rcx + rbx - 0x5b27ffff], cl ; call qword ptr [rcx]
0x00000000001d74db : add byte ptr [rcx + rbx*2 - 0xc], dh ; jmp rcx
0x00000000001d7d8b : add byte ptr [rcx + rbx*4], al ; hlt ; call qword ptr [rax]
0x00000000001db343 : add byte ptr [rcx + rbx*4], bh ; cmc ; call qword ptr [rdx]
0x00000000001db313 : add byte ptr [rcx + rbx*4], bl ; cmc ; call qword ptr [rdi]
0x00000000001d657b : add byte ptr [rcx + rcx - 0xc], dh ; jmp qword ptr [rcx]
0x000000000008e304 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000001d70ab : add byte ptr [rcx + rcx*2], ah ; hlt ; jmp rax
0x00000000001599d1 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x307f
0x0000000000144986 : add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x30e9
0x00000000001445bb : add byte ptr [rcx + rcx*4 + 0x24], cl ; retf 0x30e9
0x00000000000e1651 : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 0x18 ; ret
0x00000000000e171b : add byte ptr [rcx + rcx*4 + 0x32], ah ; add rsp, 8 ; ret
0x0000000000144ae0 : add byte ptr [rcx + rcx*4 + 0x3c], cl ; ret 0x55e9
0x0000000000093da1 : add byte ptr [rcx + rcx*4 + 0x5c], cl ; and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x00000000001475f6 : add byte ptr [rcx + rcx*4 + 0x6d], al ; adc byte ptr [rax - 0x77], cl ; retf
0x00000000000a84b7 : add byte ptr [rcx + rcx*4 + 7], al ; add rax, rdi ; ret
0x00000000000e08bf : add byte ptr [rcx + rcx*4 - 0x10], cl ; call rax
0x000000000002c58a : add byte ptr [rcx + rcx*4 - 0x11], cl ; call r12
0x00000000000e4c8c : add byte ptr [rcx + rcx*4 - 0x18], al ; syscall
0x000000000003189e : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000d1999 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000000c6fbb : add byte ptr [rcx + rcx*4 - 0x1e], cl ; sub ecx, eax ; call 0x53238
0x0000000000115b66 : add byte ptr [rcx + rcx*4 - 0x30], al ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000000878d1 : add byte ptr [rcx + rcx*4 - 0x30], al ; pop rbx ; ret
0x0000000000130b4d : add byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x00000000000a80a2 : add byte ptr [rcx + rcx*4 - 0x3f], cl ; mov qword ptr [rdx], rcx ; ret
0x000000000008275e : add byte ptr [rcx + rcx*4 - 0x40], al ; pop rbx ; ret
0x000000000018e8cf : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x0000000000022891 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rax ; call 0x9eb69
0x000000000012d854 : add byte ptr [rcx + rcx*4 - 1], cl ; call 0x129b26
0x000000000019b8a7 : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000023469 : add byte ptr [rcx + rcx*4 - 1], cl ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000009ba04 : add byte ptr [rcx + rcx*4 - 6], cl ; mov rdi, r8 ; call rax
0x000000000002c6e1 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000001cf02b : add byte ptr [rcx + rcx*8 - 0x13], al ; jmp qword ptr [rbx]
0x000000000009e5cf : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x00000000001e65ef : add byte ptr [rcx + rcx], bl ; add byte ptr [rax], al ; retf
0x0000000000096eb8 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x96e87 ; ret
0x00000000001d4583 : add byte ptr [rcx + rdi*8 - 0xe], bl ; jmp qword ptr [rcx]
0x00000000001d704b : add byte ptr [rcx + rdi], al ; add dword ptr [rax], eax ; mov al, 0x47 ; hlt ; call qword ptr [rdx]
0x00000000001c3477 : add byte ptr [rcx + rdx - 3], dh ; jmp rax
0x00000000001c21bf : add byte ptr [rcx + rdx - 8], ah ; jmp qword ptr [rax]
0x00000000001c06df : add byte ptr [rcx + rdx*2 - 0xd], dl ; jmp rax
0x00000000001c370f : add byte ptr [rcx + rdx*8 - 3], al ; call rsp
0x00000000001dbceb : add byte ptr [rcx + rdx*8], dh ; cmc ; jmp rsp
0x00000000001e235b : add byte ptr [rcx + rdx], al ; clc ; jmp qword ptr [rcx]
0x000000000000c638 : add byte ptr [rcx + rdx], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001c034f : add byte ptr [rcx + rsi - 0xe], ah ; jmp rax
0x00000000001db753 : add byte ptr [rcx + rsi*4], bh ; cmc ; call rdx
0x00000000001d2b13 : add byte ptr [rcx + rsi], bl ; int1 ; jmp qword ptr [rcx]
0x00000000001bec4f : add byte ptr [rcx - 0x15], dl ; call rsp
0x00000000000ecfad : add byte ptr [rcx - 0x1b], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000024e7 : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x0000000000055835 : add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000015ee14 : add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x0000000000143937 : add byte ptr [rcx - 0x3a], al ; add al, byte ptr [rax] ; ret
0x00000000001d58eb : add byte ptr [rcx - 0x3c6fffff], ah ; jmp qword ptr [rcx]
0x000000000013c462 : add byte ptr [rcx - 0x3f], cl ; retf 0x6411
0x000000000010eb4f : add byte ptr [rcx - 0x3fcefb89], cl ; ret
0x00000000000297ff : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000003efe2 : add byte ptr [rcx - 0x46], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000a7e7f : add byte ptr [rcx - 0x46], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xa4107
0x000000000019584e : add byte ptr [rcx - 0x48], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000005c40b : add byte ptr [rcx - 0x48], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000e6867 : add byte ptr [rcx - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001415e7 : add byte ptr [rcx - 0x6535ff12], al ; cmp ecx, dword ptr [rax - 0x7d] ; ret 0xeb01
0x00000000001484bf : add byte ptr [rcx - 0x73], al ; ret
0x0000000000042117 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000011de3a : add byte ptr [rcx - 0x75], cl ; jge 0x11de45 ; call r12
0x000000000011de6a : add byte ptr [rcx - 0x75], cl ; jge 0x11de75 ; call r12
0x000000000019c2cf : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000005053b : add byte ptr [rcx - 0x75], cl ; ret 0x4440
0x0000000000050b8e : add byte ptr [rcx - 0x75], cl ; ret 0xb940
0x00000000000a8587 : add byte ptr [rcx - 0x776b7f1], cl ; ret
0x00000000000268de : add byte ptr [rcx - 0x77], al ; ret
0x00000000000f2c73 : add byte ptr [rcx - 0x77], al ; ret 0x3944
0x0000000000029bc6 : add byte ptr [rcx - 0x77], al ; ret 0x5be9
0x00000000000878fa : add byte ptr [rcx - 0x77], al ; ret 0x8beb
0x00000000000c1437 : add byte ptr [rcx - 0x77], al ; ret 0x9848
0x00000000000f2c25 : add byte ptr [rcx - 0x77], al ; ret 0xc141
0x00000000000d9f2f : add byte ptr [rcx - 0x77], al ; ret 0xc4eb
0x0000000000021640 : add byte ptr [rcx - 0x77], al ; ret 0xc5eb
0x00000000000675ef : add byte ptr [rcx - 0x77], al ; retf
0x00000000000c6ba2 : add byte ptr [rcx - 0x77], al ; retf 0x8948
0x00000000000e4796 : add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000dc3cf : add byte ptr [rcx - 0x77], al ; retf 0xcbeb
0x00000000000522e0 : add byte ptr [rcx - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000197b6f : add byte ptr [rcx - 0x77], cl ; fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x00000000000c8b87 : add byte ptr [rcx - 0x77], cl ; fmul qword ptr [rax - 0x75] ; pop rbp ; mov al, 0x89 ; ret 0xff25
0x000000000002c98b : add byte ptr [rcx - 0x77], cl ; push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000521ca : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000033bd8 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000019b901 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000195854 : add byte ptr [rcx - 0x77], cl ; ret 0x8948
0x000000000014d162 : add byte ptr [rcx - 0x77], cl ; ret 0x8b48
0x00000000000c63b4 : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000197737 : add byte ptr [rcx - 0x77], cl ; ret 0x94d
0x0000000000196895 : add byte ptr [rcx - 0x77], cl ; retf
0x00000000001225cf : add byte ptr [rcx - 0x77], cl ; retf 0x1eb8
0x000000000012208f : add byte ptr [rcx - 0x77], cl ; retf 0x2db8
0x0000000000121aff : add byte ptr [rcx - 0x77], cl ; retf 0x2eb8
0x000000000012265f : add byte ptr [rcx - 0x77], cl ; retf 0x2fb8
0x0000000000122eef : add byte ptr [rcx - 0x77], cl ; retf 0x35b8
0x00000000001226bf : add byte ptr [rcx - 0x77], cl ; retf 0x36b8
0x000000000012299f : add byte ptr [rcx - 0x77], cl ; retf 0x37b8
0x00000000000e475f : add byte ptr [rcx - 0x77], cl ; retf 0x3db8
0x000000000011146f : add byte ptr [rcx - 0x77], cl ; retf 0x4b8
0x00000000001501d3 : add byte ptr [rcx - 0x77], cl ; retf 0x8948
0x000000000010e626 : add byte ptr [rcx - 0x77], cl ; retf 0x8b
0x000000000007bd5f : add byte ptr [rcx - 0x77], cl ; retf 0x8b8
0x0000000000111c4f : add byte ptr [rcx - 0x77], cl ; retf 0x9b8
0x000000000012247f : add byte ptr [rcx - 0x77], cl ; retf 0x9db8
0x00000000001223bf : add byte ptr [rcx - 0x77], cl ; retf 0xa5b8
0x000000000012229f : add byte ptr [rcx - 0x77], cl ; retf 0xafb8
0x000000000009f248 : add byte ptr [rcx - 0x77], cl ; retf 0xb941
0x0000000000111d0f : add byte ptr [rcx - 0x77], cl ; retf 0xbb8
0x000000000011fa1f : add byte ptr [rcx - 0x77], cl ; retf 0xbcb8
0x000000000011f9bf : add byte ptr [rcx - 0x77], cl ; retf 0xbdb8
0x000000000011f89f : add byte ptr [rcx - 0x77], cl ; retf 0xbeb8
0x000000000011f92f : add byte ptr [rcx - 0x77], cl ; retf 0xc0b8
0x000000000011bc0f : add byte ptr [rcx - 0x77], cl ; retf 0xd8b8
0x00000000001237af : add byte ptr [rcx - 0x77], cl ; retf 0xdcb8
0x000000000012223f : add byte ptr [rcx - 0x77], cl ; retf 0xe9b8
0x000000000019940a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000003fb4f : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7b], 1 ; test byte ptr [rdi], 0x94 ; ret 0x854d
0x00000000000c08b7 : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000199519 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x0000000000083de3 : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4c04
0x00000000000f45f0 : add byte ptr [rcx - 0x7d], al ; ret
0x0000000000021768 : add byte ptr [rcx - 0x7d], al ; retf
0x000000000019974f : add byte ptr [rcx - 0x7d], al ; retf 0x4801
0x000000000019991f : add byte ptr [rcx - 0x7d], al ; retf 0xb801
0x000000000005ca7f : add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000040bb7 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000046b67 : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000009f2d9 : add byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x00000000000bff9f : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x0000000000090a6f : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000016623f : add byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000000000a4165 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c01
0x0000000000076459 : add byte ptr [rcx - 0x7d], cl ; ret 0x4c04
0x00000000000a1b5f : add byte ptr [rcx - 0x7d], cl ; ret 0x4d01
0x0000000000040e2e : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x0000000000169eef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x000000000012d5e7 : add byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000000a8bbf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000011d3e2 : add byte ptr [rcx - 0x7d], cl ; retf
0x000000000007641b : add byte ptr [rcx - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 1 ; ret 0x3b45
0x000000000010a8a2 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x000000000010d76f : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x0000000000144630 : add byte ptr [rcx - 0x80], al ; jmp qword ptr [rsi]
0x000000000014a6bf : add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000012f7d7 : add byte ptr [rcx - 0x876b], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000013e4c1 : add byte ptr [rcx - 0xa], al ; ret
0x0000000000197d1c : add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x0000000000197aa4 : add byte ptr [rcx - 0xa], al ; ret 0x7407
0x000000000004676b : add byte ptr [rcx - 0xa], al ; ret 0x7501
0x00000000001da0cb : add byte ptr [rcx - 0xb], dh ; jmp qword ptr [rbx]
0x00000000001c08e7 : add byte ptr [rcx - 0xc], dh ; call qword ptr [rax]
0x00000000001d839b : add byte ptr [rcx - 0xc], dh ; jmp qword ptr [rcx]
0x00000000001bbe2f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000ac292 : add byte ptr [rcx - 9], cl ; ret 1
0x00000000000ac2b8 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000001d8473 : add byte ptr [rcx*2 - 0x5d57ffff], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000029d44 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x000000000004f171 : add byte ptr [rcx], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001db751 : add byte ptr [rcx], 0 ; cmp al, 0xb1 ; cmc ; call rdx
0x00000000001db7b5 : add byte ptr [rcx], 0 ; test al, 0xb2 ; cmc ; call rdi
0x00000000001cc849 : add byte ptr [rcx], 2 ; ret 0xe0a
0x00000000001b1dcb : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001d3749 : add byte ptr [rcx], al ; add ah, al ; or edx, esi ; jmp rdx
0x00000000000d59e6 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000009b5ad : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; retf
0x0000000000030889 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000115ec0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov word ptr [rdi + 0x16], ax ; ret
0x0000000000140aa9 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000bb2df : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000432df : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001da07b : add byte ptr [rcx], al ; cmc ; jmp qword ptr [rbx]
0x00000000001d834b : add byte ptr [rcx], al ; hlt ; jmp qword ptr [rcx]
0x00000000000305d4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000015df2f : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000008fe8d : add byte ptr [rcx], al ; ret
0x00000000000c948a : add byte ptr [rcx], al ; retf 0x8d49
0x000000000003dd62 : add byte ptr [rcx], al ; retf 0xfe0d
0x00000000001da0a3 : add byte ptr [rcx], bh ; cmc ; jmp qword ptr [rbx]
0x00000000000cbbf7 : add byte ptr [rcx], bh ; ret
0x0000000000040120 : add byte ptr [rcx], bh ; ret 0x237f
0x00000000000faccb : add byte ptr [rcx], bh ; ret 0x427e
0x00000000000fcf0b : add byte ptr [rcx], bh ; retf 0x8944
0x00000000000086df : add byte ptr [rcx], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000057b2d : add byte ptr [rcx], ch ; ret
0x00000000000d8d78 : add byte ptr [rcx], ch ; ret 0x2941
0x00000000000dd2f9 : add byte ptr [rcx], ch ; ret 0x858b
0x00000000000dd251 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000daf95 : add byte ptr [rcx], ch ; ret 0x894c
0x00000000000d8e3d : add byte ptr [rcx], ch ; ret 0x8b48
0x00000000000db97c : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000de53e : add byte ptr [rcx], ch ; ret 0x8d45
0x00000000000570e0 : add byte ptr [rcx], ch ; ret 0x9848
0x00000000001163d3 : add byte ptr [rcx], ch ; ret 0xc085
0x00000000000d8e00 : add byte ptr [rcx], ch ; ret 0xc889
0x00000000000da41f : add byte ptr [rcx], ch ; ret 0xd089
0x00000000000d2e41 : add byte ptr [rcx], ch ; ret 0xd129
0x0000000000151858 : add byte ptr [rcx], ch ; ror dword ptr [rcx + 0x700f66d2], 1 ; ret 0x4800
0x0000000000134dc1 : add byte ptr [rcx], cl ; clc ; bswap eax ; ret
0x0000000000111a91 : add byte ptr [rcx], cl ; retf 0xea81
0x0000000000198eb2 : add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x000000000013a74d : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x00000000000ff5e5 : add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ror dword ptr [rcx - 0x73], 0x14 ; ret 0x1ceb
0x00000000000d566c : add byte ptr [rcx], dh ; dec dword ptr [rbx + rbp + 0x1d] ; retf 0x3185
0x0000000000195978 : add byte ptr [rcx], dh ; dec dword ptr [rcx + 9] ; retf 0xf883
0x00000000000228ba : add byte ptr [rcx], dh ; dec dword ptr [rcx + rcx*4 - 0xe] ; call 0x9eb68
0x00000000001066dc : add byte ptr [rcx], dh ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000000556a9 : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000000000bf3b5 : add byte ptr [rcx], dh ; imul cl ; ret 0xfffc
0x00000000001542db : add byte ptr [rcx], dh ; in eax, dx ; call 0x30d75
0x000000000011ba6c : add byte ptr [rcx], dh ; inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x00000000001d2b00 : add byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x000000000003e15f : add byte ptr [rcx], dh ; leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000000213b3 : add byte ptr [rcx], dh ; push qword ptr [rcx] ; shr al, 0x13 ; retf 5
0x00000000000d1194 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00000000000431dd : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000abbdc : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000000306cf : add byte ptr [rcx], dh ; rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x000000000004ddd7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x000000000016711e : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x73], 5 ; push rcx ; retf
0x000000000009d621 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000008ce9f : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x8ceb9 ; ret
0x000000000004475c : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000f6152 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bb382 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000018f18f : add byte ptr [rcx], dh ; ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000001401f7 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x0000000000164455 : add byte ptr [rcx], dh ; shr al, 0x63 ; ret 0xfffa
0x0000000000163af9 : add byte ptr [rcx], dh ; shr al, 0x6f ; ret 0xfffa
0x0000000000123485 : add byte ptr [rcx], dh ; shr al, 0xd3 ; ret 0xfffe
0x000000000007ec6f : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000000cbcbe : add byte ptr [rcx], dil ; ret
0x000000000000463b : add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add ah, bh ; retf 0x1b
0x00000000000045db : add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add al, bh ; retf 0x1b
0x000000000000460b : add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add byte ptr [rax], al ; retf
0x0000000000006f93 : add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add byte ptr [rax], dl ; retf
0x0000000000133f5e : add byte ptr [rcx], sil ; test byte ptr [rax - 0x77], 0xf0 ; ret
0x0000000000171d4a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000127da8 : add byte ptr [rdi + 0xf], bh ; call 0xe4848
0x00000000001c0404 : add byte ptr [rdi + 1], 0 ; test byte ptr [rsi - 0xe], bl ; call rax
0x00000000001d9e93 : add byte ptr [rdi + 1], cl ; add al, ch ; cmc ; jmp qword ptr [rsi]
0x00000000000bcdd4 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001e3ec3 : add byte ptr [rdi + 4], dh ; add byte ptr [rax], al ; adc byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x0000000000195664 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x000000000011ce5e : add byte ptr [rdi + rax - 0xd], dh ; ret
0x00000000001d7e9b : add byte ptr [rdi + rax*2 + 1], dl ; add byte ptr [rax - 0x66], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001c23ef : add byte ptr [rdi + rax*4 - 8], ah ; jmp rsp
0x00000000001bf737 : add byte ptr [rdi + rax*8], al ; in eax, dx ; jmp rax
0x00000000001d66a3 : add byte ptr [rdi + rbp + 1], bl ; add al, bl ; or esi, esp ; jmp qword ptr [rcx]
0x00000000001c278f : add byte ptr [rdi + rbp - 7], al ; call rax
0x00000000001c1097 : add byte ptr [rdi + rbp*4], ah ; cmc ; jmp rax
0x00000000001d26eb : add byte ptr [rdi + rbp*8 + 0x20500000], ah ; int1 ; call qword ptr [rdx]
0x00000000001d2a13 : add byte ptr [rdi + rbp], ch ; int1 ; jmp qword ptr [rcx]
0x00000000001d6653 : add byte ptr [rdi + rbp], cl ; add dword ptr [rax], eax ; or rsi, rsp ; jmp qword ptr [rcx]
0x00000000001be88f : add byte ptr [rdi + rbx - 0x17], ah ; jmp rsp
0x00000000001c087f : add byte ptr [rdi + rbx*2 - 0xc], ah ; call rsp
0x00000000001d820b : add byte ptr [rdi + rbx*4 - 0xc], al ; jmp qword ptr [rcx]
0x00000000001d8233 : add byte ptr [rdi + rbx*4 - 0xc], bh ; jmp qword ptr [rcx]
0x00000000001d81e3 : add byte ptr [rdi + rbx*4], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001bec17 : add byte ptr [rdi + rbx*8 - 0x15], dl ; call qword ptr [rax]
0x00000000001d5653 : add byte ptr [rdi + rbx], cl ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf3 ; jmp qword ptr [rcx]
0x0000000000167147 : add byte ptr [rdi + rcx + 0x44], cl ; retf 0x8d48
0x0000000000021fdf : add byte ptr [rdi + rcx - 0x42], cl ; retf 0x4a8d
0x000000000005ecb5 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000000f959d : add byte ptr [rdi + rcx - 0x4a], al ; or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000001be58f : add byte ptr [rdi + rcx*2 - 0x18], al ; jmp rsp
0x00000000001cc653 : add byte ptr [rdi + rcx*4], cl ; add byte ptr [rax], al ; push rdi ; in al, dx ; call qword ptr [rcx]
0x00000000001e1e63 : add byte ptr [rdi + rcx*4], cl ; sti ; jmp qword ptr [rdx]
0x00000000001d06bb : add byte ptr [rdi + rcx*8], dh ; add al, dl ; jae 0x1d06ba ; call qword ptr [rax]
0x00000000000304d4 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x00000000001d67a3 : add byte ptr [rdi + rcx], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001c3317 : add byte ptr [rdi + rdi - 5], dl ; jmp qword ptr [rax]
0x00000000001c1c97 : add byte ptr [rdi + rdi - 9], al ; dec dword ptr [rax] ; retf 1
0x00000000001df65b : add byte ptr [rdi + rdi*4], dl ; add dword ptr [rax], eax ; nop ; idiv r15d ; ret 2
0x00000000001bf907 : add byte ptr [rdi + rdi*8], dh ; in eax, dx ; jmp rax
0x00000000001c32ff : add byte ptr [rdi + rdi], ah ; sti ; jmp rsp
0x00000000001c27df : add byte ptr [rdi + rdi], dh ; stc ; call qword ptr [rax]
0x00000000001d4efb : add byte ptr [rdi + rdx - 0x638fffff], dh ; call qword ptr [rax]
0x00000000001c1faf : add byte ptr [rdi + rdx*4 - 9], dl ; jmp rsp
0x00000000001d0e93 : add byte ptr [rdi + rdx*8], cl ; add al, bl ; add esi, eax ; call rdx
0x00000000001c0a8f : add byte ptr [rdi + rdx], dl ; cmc ; call rsp
0x00000000001da7eb : add byte ptr [rdi + rsi*2 - 0xb], al ; call rdx
0x00000000001cee53 : add byte ptr [rdi + rsi*4], cl ; add byte ptr [rax], al ; sbb al, bl ; cld ; call qword ptr [rax]
0x00000000001af48c : add byte ptr [rdi - 0x10], bh ; jmp qword ptr [rax]
0x00000000001482fc : add byte ptr [rdi - 0x3fce0013], cl ; ret
0x00000000001bd968 : add byte ptr [rdi - 0x696f0005], dl ; sti ; jmp qword ptr [rax]
0x000000000019a26a : add byte ptr [rdi - 0x76b7ffff], dh ; ret
0x00000000001bd6c0 : add byte ptr [rdi - 5], al ; jmp qword ptr [rax]
0x00000000001c1b57 : add byte ptr [rdi - 9], al ; call rsp
0x00000000001db45b : add byte ptr [rdi*2 - 0x636fffff], dl ; cmc ; jmp rax
0x00000000000013b7 : add byte ptr [rdi], al ; add eax, 0x50d0000 ; add byte ptr [rax], al ; syscall
0x00000000001e4dbb : add byte ptr [rdi], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000003e4a0 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000001d9e63 : add byte ptr [rdi], bl ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], al ; jmp rdi
0x000000000012f867 : add byte ptr [rdi], cl ; adc dword ptr [rbp - 0x78], eax ; call rax
0x0000000000156838 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x20], eax ; ret
0x0000000000156800 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; ret
0x0000000000152f90 : add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x0000000000152fa9 : add byte ptr [rdi], cl ; adc dword ptr [rdx], eax ; ret
0x000000000010f3ac : add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x000000000014dc12 : add byte ptr [rdi], cl ; adc dword ptr [rsi + 8], eax ; ret
0x000000000003ee66 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x00000000001736c6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000000bb9d7 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000001746ff : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000123401 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000125064 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x124ff5 ; loopne 0x125075 ; ret
0x000000000003066d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x305fe ; loopne 0x3067e ; ret
0x000000000010eb0f : add byte ptr [rdi], cl ; mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x000000000017476f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000e80d6 : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e98f7 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d9fef : add byte ptr [rdi], cl ; mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002868b : add byte ptr [rdi], cl ; mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x0000000000029794 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x000000000002977f : add byte ptr [rdi], cl ; mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000000297a9 : add byte ptr [rdi], cl ; mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x00000000000bba8f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000a9e5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000008d17f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000018ad2f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ac33f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000ac0ff : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000ac10f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000ac0ef : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000a824f : add byte ptr [rdi], cl ; mov esi, 0x74c08407 ; xor dword ptr [rcx], edi ; ret 0x2d74
0x00000000000a82ef : add byte ptr [rdi], cl ; mov esi, 0x89c63907 ; ret 0xb8
0x00000000000abc0f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000abc3f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000abc2f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000abc1f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000003e2a7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000e310d : add byte ptr [rdi], cl ; ret
0x00000000001073f9 : add byte ptr [rdi], cl ; ret 0x1ae9
0x000000000003fb25 : add byte ptr [rdi], cl ; ret 0x66c3
0x0000000000130f78 : add byte ptr [rdi], cl ; ret 0x8348
0x00000000001093f2 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000140a8b : add byte ptr [rdi], cl ; ret 0xb8c3
0x000000000002cc8b : add byte ptr [rdi], cl ; ret 0xc083
0x00000000000de830 : add byte ptr [rdi], cl ; ret 0xf001
0x00000000000da1b3 : add byte ptr [rdi], cl ; ret 0xf801
0x00000000000d395a : add byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000114d57 : add byte ptr [rdi], cl ; ret 0xfc3
0x000000000014f2af : add byte ptr [rdi], cl ; retf 0x1689
0x0000000000060f13 : add byte ptr [rdi], cl ; retf 0x45e9
0x000000000018565f : add byte ptr [rdi], cl ; sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000010ed20 : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xa0], eax ; syscall
0x000000000003ee4b : add byte ptr [rdi], cl ; sub dword ptr [rsp + 0xf0], eax ; syscall
0x00000000000c809e : add byte ptr [rdi], cl ; test byte ptr [rax + 0x14c0000], ah ; ret 0x28b
0x000000000008b2e1 : add byte ptr [rdi], cl ; test byte ptr [rax - 0x18000000], dl ; ret
0x000000000010be4f : add byte ptr [rdi], cl ; test byte ptr [rbx], dl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013119b : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x37000000], esp ; ret
0x000000000005b93e : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; adc eax, 0x83490000 ; ret
0x00000000000859c6 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x0000000000195eba : add byte ptr [rdi], cl ; test dword ptr [rdi], ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000078121 : add byte ptr [rdi], cl ; test eax, esi ; retf
0x000000000014ff93 : add byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x77000000], esp ; retf 0x894c
0x0000000000157fdb : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x000000000005546f : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000efea1 : add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000097f1e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000013c01f : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0x920f
0x000000000018a22d : add byte ptr [rdi], cl ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000023c2c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfae9
0x00000000000662b5 : add byte ptr [rdi], cl ; xchg edi, ebx ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000659f4 : add byte ptr [rdi], cl ; xchg esp, esi ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000001d87ab : add byte ptr [rdi], dl ; hlt ; jmp qword ptr [rcx]
0x000000000000f830 : add byte ptr [rdx + 0x12], al ; add byte ptr [rax], al ; retf 1
0x000000000015945b : add byte ptr [rdx + 0x3c], ch ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000018131f : add byte ptr [rdx + 0x48028801], cl ; lea eax, [rdx] ; ret
0x000000000017cfef : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x00000000000b8ccf : add byte ptr [rdx + 0x48178816], cl ; lea eax, [rdi + 1] ; ret
0x00000000000ebb6e : add byte ptr [rdx + 0x63], cl ; add al, 0xba ; add rax, rdx ; jmp rax
0x00000000001542fd : add byte ptr [rdx + 5], bh ; call 0x30d78
0x00000000001e65eb : add byte ptr [rdx + 5], dh ; add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; retf
0x00000000001e4c13 : add byte ptr [rdx + 7], al ; add byte ptr [rax], al ; ret
0x00000000001e631f : add byte ptr [rdx + 7], bh ; add byte ptr [rax], al ; ret
0x0000000000121a47 : add byte ptr [rdx + 8], bh ; syscall
0x0000000000000fc3 : add byte ptr [rdx + rax + 0x2be0000], bh ; add byte ptr [rax], al ; ret 2
0x000000000008424b : add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000001d0aa3 : add byte ptr [rdx + rax*4 - 0x3f680000], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001cfa03 : add byte ptr [rdx + rax*8 + 0x3a380000], bh ; cld ; call qword ptr [rbx]
0x000000000009ec69 : add byte ptr [rdx + rax*8 - 0xd], dh ; ret
0x00000000001c2def : add byte ptr [rdx + rax], al ; cli ; call rax
0x0000000000006ce7 : add byte ptr [rdx + rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2e
0x00000000001d61f3 : add byte ptr [rdx + rbp + 0x2080001], ch ; hlt ; jmp qword ptr [rcx]
0x000000000009ec2b : add byte ptr [rdx + rbp - 9], dh ; ret 0
0x00000000001da1cb : add byte ptr [rdx + rbp*2 + 0x62500001], al ; cmc ; jmp qword ptr [rbx]
0x00000000001da1f3 : add byte ptr [rdx + rbp*2 + 0x62580001], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001da1a3 : add byte ptr [rdx + rbp*2 + 1], bl ; add byte ptr [rax + 0x62], cl ; cmc ; jmp qword ptr [rbx]
0x00000000001be727 : add byte ptr [rdx + rbp*2 - 0x18], dl ; jmp qword ptr [rax]
0x00000000001d7833 : add byte ptr [rdx + rbp*2 - 0xc], cl ; jmp rax
0x00000000001da153 : add byte ptr [rdx + rbp*2], cl ; add dword ptr [rax], eax ; cmp byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001bf707 : add byte ptr [rdx + rbp*4], ah ; in eax, dx ; call qword ptr [rax]
0x000000000003e344 : add byte ptr [rdx + rbp*8 - 0xd], dh ; ret
0x00000000001d10bb : add byte ptr [rdx + rbx - 0x10], dl ; jmp qword ptr [rcx]
0x00000000001d51e3 : add byte ptr [rdx + rbx - 0x5877ffff], bl ; jmp qword ptr [rcx]
0x00000000001c0aef : add byte ptr [rdx + rbx - 0xb], al ; call qword ptr [rax]
0x00000000001e2653 : add byte ptr [rdx + rbx - 8], cl ; jmp qword ptr [rcx]
0x00000000001d7513 : add byte ptr [rdx + rbx*2 - 0xc], bl ; call qword ptr [rdx]
0x00000000001ceecb : add byte ptr [rdx + rbx*4 - 0x13], al ; call qword ptr [rbx]
0x00000000001d7eb3 : add byte ptr [rdx + rbx*4 - 0xc], ch ; jmp qword ptr [rcx]
0x00000000001d7e8b : add byte ptr [rdx + rbx*4], dh ; hlt ; jmp qword ptr [rcx]
0x00000000000a0b73 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000001a4437 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x00000000001be577 : add byte ptr [rdx + rcx*2 - 0x18], dl ; call qword ptr [rax]
0x00000000001d81f3 : add byte ptr [rdx + rcx*2 - 0x60d7ffff], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001d81cb : add byte ptr [rdx + rcx*2 - 0x610fffff], al ; hlt ; jmp qword ptr [rcx]
0x00000000001d717b : add byte ptr [rdx + rcx*2 - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001df8d3 : add byte ptr [rdx + rcx*2 - 9], ch ; jmp rsi
0x00000000001cc1e3 : add byte ptr [rdx + rcx*4 + 0x40f80000], bl ; in al, dx ; call qword ptr [rsi]
0x00000000001c01ef : add byte ptr [rdx + rcx*4], al ; int1 ; jmp qword ptr [rax]
0x00000000001d01eb : add byte ptr [rdx + rcx*8 - 0x1a000000], ah ; out dx, al ; call qword ptr [rdx]
0x00000000001d014b : add byte ptr [rdx + rcx*8], al ; add byte ptr [rax], al ; loopne 0x1d013f ; out dx, al ; call qword ptr [rdx]
0x00000000001d01c3 : add byte ptr [rdx + rcx*8], bh ; add al, bh ; in eax, 0xee ; call qword ptr [rdx]
0x00000000001d0173 : add byte ptr [rdx + rcx*8], ch ; add byte ptr [rax], al ; call 0x131cf06a
0x00000000001d019b : add byte ptr [rdx + rcx*8], dl ; add al, dh ; in eax, 0xee ; call qword ptr [rdx]
0x00000000001d71db : add byte ptr [rdx + rdi + 0x4af00001], dl ; hlt ; jmp qword ptr [rcx]
0x000000000002b550 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000002b54f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000001c30d7 : add byte ptr [rdx + rdi*2], ah ; cli ; call rsp
0x00000000001d7163 : add byte ptr [rdx + rdi], bl ; add dword ptr [rax], eax ; hlt ; jmp qword ptr [rcx]
0x00000000001c015f : add byte ptr [rdx + rdx*2], ah ; int1 ; call qword ptr [rax]
0x00000000001e099b : add byte ptr [rdx + rdx*8 + 1], dl ; add byte ptr [rax - 0x65], ah ; idiv edi ; retf
0x00000000001bf9df : add byte ptr [rdx + rdx], dh ; out dx, al ; jmp rax
0x00000000001c17b7 : add byte ptr [rdx + rsi*2 - 0xa], dh ; call qword ptr [rax]
0x00000000001c0d87 : add byte ptr [rdx + rsi*2 - 0xb], al ; jmp rax
0x00000000001d554b : add byte ptr [rdx + rsi*4], ah ; jmp qword ptr [rcx]
0x00000000001bf827 : add byte ptr [rdx + rsi*8 - 0x13], dh ; jmp rsp
0x00000000001bf81f : add byte ptr [rdx + rsi*8], dh ; in eax, dx ; call rax
0x00000000001cd9fb : add byte ptr [rdx - 0x15b00000], dh ; in al, dx ; jmp rdx
0x0000000000034d49 : add byte ptr [rdx - 0x3a], al ; and eax, 0xfbe82fff ; ret 0xfffe
0x00000000001bd750 : add byte ptr [rdx - 0x666f0005], bl ; sti ; jmp qword ptr [rax]
0x00000000001da130 : add byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001d843b : add byte ptr [rdx - 0xc], dl ; jmp qword ptr [rcx]
0x00000000001c040f : add byte ptr [rdx - 0xe], dl ; jmp qword ptr [rax]
0x0000000000163a0c : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000a1b4c : add byte ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000046519 : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000118097 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015f1c5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add cl, ch ; retf 0xfffc
0x0000000000030626 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000014579e : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000012a15b : add byte ptr [rdx], al ; call rcx
0x0000000000030534 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000002627 : add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x0000000000165537 : add byte ptr [rdx], bh ; cmovne rax, rdx ; jmp 0x1655c2
0x00000000001d5963 : add byte ptr [rdx], bl ; add dword ptr [rax], eax ; cmp ah, al ; jmp qword ptr [rcx]
0x00000000001da143 : add byte ptr [rdx], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001d8413 : add byte ptr [rdx], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001bcf50 : add byte ptr [rdx], bl ; sti ; jmp rax
0x000000000011e25f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001c0b9f : add byte ptr [rdx], dh ; cmc ; jmp qword ptr [rax]
0x0000000000000764 : add byte ptr [rdx], dl ; retf
0x00000000001b1deb : add byte ptr [rip + 0x10], al ; retf 8
0x00000000001bd1a8 : add byte ptr [rip + 0x3ee0fffb], bh ; sti ; call rax
0x000000000007f7a0 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x0000000000121685 : add byte ptr [rip - 0x1000], ah ; or eax, edx ; ret
0x0000000000195d66 : add byte ptr [rsi + 0x41], ah ; and eax, 0x21487fff ; ret 0xcae9
0x0000000000197652 : add byte ptr [rsi + 0x41], ah ; cmp eax, 0x89497fff ; ret
0x000000000019772b : add byte ptr [rsi + 0x63], cl ; and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x0000000000130787 : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000000e4c87 : add byte ptr [rsi + 0x81], bh ; mov eax, r13d ; syscall
0x0000000000159047 : add byte ptr [rsi + 0xe], bh ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000018a25d : add byte ptr [rsi + 0xf], ah ; cmp ah, byte ptr [rbx + 0x1f] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000018a372 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rax], al ; retf 0xf66
0x00000000001902e4 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000011c146 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; shl byte ptr [rsi + 0xf], cl ; retf 0x67a
0x00000000000ef7f2 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; enter 0xf66, -0x2c ; ret
0x000000000003eb0e : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000005ed5a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000003ea4f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x37e8
0x000000000005ed83 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x0000000000091ab7 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000061c1b : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x6be8
0x000000000009147f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000003ead9 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xade8
0x000000000005ed21 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000061bbd : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000000ac01c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000abb44 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000d07af : add byte ptr [rsi + 0xf], ah ; xlatb ; retf 0x8548
0x0000000000091ab6 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000000693fc : add byte ptr [rsi + 1], bh ; jmp rax
0x00000000001bdfaf : add byte ptr [rsi + rax - 0x19], al ; call rax
0x000000000009c937 : add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000001d7ddb : add byte ptr [rsi + rax*2 - 0x668fffff], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001c29c7 : add byte ptr [rsi + rax*4 - 7], al ; call rsp
0x00000000001c315f : add byte ptr [rsi + rax*4], al ; cli ; call qword ptr [rax]
0x00000000001cfdfb : add byte ptr [rsi + rax*8 - 0x28f00000], dh ; out dx, al ; jmp qword ptr [rdi]
0x00000000001c112f : add byte ptr [rsi + rax*8], al ; cmc ; jmp qword ptr [rax]
0x00000000001bf61f : add byte ptr [rsi + rbp - 0x13], al ; call rsp
0x00000000001bedb7 : add byte ptr [rsi + rbp - 0x14], dl ; jmp qword ptr [rax]
0x00000000001be9df : add byte ptr [rsi + rbp*2 - 0x17], al ; jmp rax
0x00000000001c095f : add byte ptr [rsi + rbp*4 - 0xc], dh ; jmp qword ptr [rax]
0x00000000001d55e3 : add byte ptr [rsi + rbx - 0x4c17ffff], bl ; jmp qword ptr [rcx]
0x00000000001c2737 : add byte ptr [rsi + rbx - 7], dh ; call rsp
0x00000000001cd5cb : add byte ptr [rsi + rbx*4 - 0x2e400000], al ; in al, dx ; call rsi
0x00000000001d555b : add byte ptr [rsi + rbx], dl ; add dword ptr [rax], eax ; mov dl, 0xf3 ; call qword ptr [rcx]
0x00000000001d858b : add byte ptr [rsi + rcx*2 + 1], al ; add byte ptr [rax - 0x5c], al ; hlt ; jmp qword ptr [rcx]
0x00000000001df9e3 : add byte ptr [rsi + rcx*2 - 9], bh ; call qword ptr [rdx]
0x00000000001bf04f : add byte ptr [rsi + rcx*4 - 0x14], ah ; call qword ptr [rax]
0x00000000001cc593 : add byte ptr [rsi + rcx*4], cl ; add byte ptr [rax + 0x4e], cl ; in al, dx ; call rbx
0x00000000001e05ab : add byte ptr [rsi + rcx*8 + 1], ah ; add byte ptr [rax], dh ; ret 0xfffb
0x00000000001c45b3 : add byte ptr [rsi + rcx], ch ; add byte ptr [rax], bl ; test esi, esp ; call qword ptr [rdx]
0x00000000001d8d93 : add byte ptr [rsi + rdx*2 + 1], cl ; add al, bl ; ret 0xfff4
0x00000000001d8dbb : add byte ptr [rsi + rdx*2 + 1], dh ; add al, dl ; ret
0x00000000001bef17 : add byte ptr [rsi + rdx*2 - 0x14], al ; call rsp
0x00000000001c240f : add byte ptr [rsi + rdx*4 - 8], dl ; call qword ptr [rax]
0x00000000001d0dd3 : add byte ptr [rsi + rdx*8 - 0x15080000], cl ; sti ; jmp rsi
0x00000000001c22a7 : add byte ptr [rsi + rsi - 8], dl ; call qword ptr [rax]
0x000000000002a310 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000000000002a30f : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000001e2da3 : add byte ptr [rsi + rsi*8 + 1], bl ; add byte ptr [rax + 0x3f], bh ; clc ; call rbx
0x00000000001bec97 : add byte ptr [rsi + rsi*8 - 0x15], al ; jmp rax
0x00000000001af46c : add byte ptr [rsi - 0x10], bh ; jmp qword ptr [rax]
0x00000000001bfb5f : add byte ptr [rsi - 0x12], dh ; jmp qword ptr [rax]
0x00000000001bf58f : add byte ptr [rsi - 0x13], ah ; jmp rax
0x00000000001bed8f : add byte ptr [rsi - 0x14], al ; call rsp
0x00000000001bf10f : add byte ptr [rsi - 0x14], al ; jmp rsp
0x00000000001225fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x11f ; syscall
0x000000000012268d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x134 ; syscall
0x000000000012271d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x13f ; syscall
0x0000000000122e8d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x30 ; syscall
0x00000000001229cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x32 ; syscall
0x000000000010fbad : add byte ptr [rsi - 0x70], ah ; mov eax, 0x53 ; syscall
0x0000000000111c1d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x56 ; syscall
0x0000000000111d3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x57 ; syscall
0x0000000000111c7d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x58 ; syscall
0x000000000012250d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x63 ; syscall
0x00000000000e5b3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x79 ; syscall
0x0000000000121b2d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x87 ; syscall
0x000000000010f96d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x89 ; syscall
0x000000000011bc3d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x95 ; syscall
0x000000000011764d : add byte ptr [rsi - 0x70], ah ; mov eax, 0x99 ; syscall
0x00000000001220bd : add byte ptr [rsi - 0x70], ah ; mov eax, 0x9f ; syscall
0x000000000011719d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xa3 ; syscall
0x000000000012226d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb1 ; syscall
0x000000000012241d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xb4 ; syscall
0x000000000011f8fd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc2 ; syscall
0x000000000011f95d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc3 ; syscall
0x000000000011f83d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc4 ; syscall
0x000000000011f9ed : add byte ptr [rsi - 0x70], ah ; mov eax, 0xc5 ; syscall
0x00000000001222cd : add byte ptr [rsi - 0x70], ah ; mov eax, 0xfe ; syscall
0x00000000000400ed : add byte ptr [rsi - 0x70], ah ; mov eax, dword ptr [rip + 0x3ab0b6] ; ret
0x000000000003e9fd : add byte ptr [rsi - 0x70], ah ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x00000000000e4d9d : add byte ptr [rsi - 0x70], ah ; pop rdi ; mov eax, 0x3a ; syscall
0x0000000000147a16 : add byte ptr [rsi - 0x7b], ah ; sal byte ptr [rcx + rcx + 0x48], 0x39 ; ret 0x850f
0x000000000013ec45 : add byte ptr [rsi - 0x7d], ah ; call qword ptr [rax]
0x00000000001bcd6c : add byte ptr [rsi - 3], al ; call qword ptr [rax + 0x20fffd46]
0x00000000001cdd8b : add byte ptr [rsi], al ; add byte ptr [rax - 0xb], ah ; in al, dx ; jmp rbx
0x00000000000fa1b3 : add byte ptr [rsi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001d01db : add byte ptr [rsi], al ; out dx, al ; call qword ptr [rax]
0x00000000001d5548 : add byte ptr [rsi], bl ; add dword ptr [rax], eax ; and al, 0xb2 ; jmp qword ptr [rcx]
0x00000000001d6e2b : add byte ptr [rsi], cl ; add byte ptr [rax], al ; and byte ptr [rdi], ch ; hlt ; call qword ptr [rdx]
0x00000000001112eb : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add bl, ch ; retf 0xf66
0x0000000000116095 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000006f2f8 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; outsd dx, dword ptr [rsi] ; ret 0xffff
0x000000000009793b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; retf
0x00000000001d5b9b : add byte ptr [rsp + 1], dl ; add al, al ; out 0xf3, eax ; jmp rax
0x000000000008e935 : add byte ptr [rsp + rax - 0x58], dh ; add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000001c14f7 : add byte ptr [rsp + rax*2 - 0xa], dh ; call rsp
0x00000000001dcb7b : add byte ptr [rsp + rax*2 - 0xa], dl ; call rcx
0x00000000001d4ee3 : add byte ptr [rsp + rax*2], bh ; stc ; call qword ptr [rax]
0x00000000001d4f1b : add byte ptr [rsp + rax*2], dl ; stc ; call qword ptr [rax]
0x00000000001c3627 : add byte ptr [rsp + rax*8], al ; std ; jmp rax
0x00000000001d5953 : add byte ptr [rsp + rax*8], bl ; jmp qword ptr [rcx]
0x00000000001d3b73 : add byte ptr [rsp + rax], ch ; add dword ptr [rax], eax ; call 0xffffffffe11d2dee
0x00000000001d3b73 : add byte ptr [rsp + rax], ch ; add dword ptr [rax], eax ; call 0xffffffffe11d2def
0x00000000001deffb : add byte ptr [rsp + rbx - 9], dl ; call qword ptr [rsi]
0x00000000001bfd57 : add byte ptr [rsp + rbx*8 - 0x11], dl ; call rax
0x00000000001c500b : add byte ptr [rsp + rbx*8 - 0x1a], al ; jmp rdx
0x00000000001d9c8b : add byte ptr [rsp + rbx], ah ; cmc ; call rdx
0x00000000001d5373 : add byte ptr [rsp + rbx], ch ; add dword ptr [rax], eax ; clc ; stosb byte ptr [rdi], al ; jmp qword ptr [rsi]
0x00000000001d66e3 : add byte ptr [rsp + rcx - 0xc], cl ; jmp qword ptr [rcx]
0x00000000000bd4e1 : add byte ptr [rsp + rcx - 0xd], dh ; ret
0x0000000000119b71 : add byte ptr [rsp + rcx - 9], dh ; ret 0xfc07
0x00000000001d83fb : add byte ptr [rsp + rcx*2 - 0x5dffffff], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001d83d3 : add byte ptr [rsp + rcx*2 - 0x5e37ffff], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001cc38b : add byte ptr [rsp + rcx*4], al ; add al, dl ; in al, dx ; call qword ptr [rsi]
0x00000000001c29ff : add byte ptr [rsp + rcx*4], al ; stc ; jmp rsp
0x00000000001c2bbf : add byte ptr [rsp + rcx*8], ah ; stc ; call rax
0x00000000001c70a3 : add byte ptr [rsp + rdi*2 - 0x18], bl ; call rdi
0x00000000001c184f : add byte ptr [rsp + rdi*2 - 0xa], ah ; call qword ptr [rax]
0x00000000001db373 : add byte ptr [rsp + rdi*2], ch ; add dword ptr [rax], eax ; cwde ; cdq ; cmc ; call qword ptr [rcx]
0x00000000001d7c43 : add byte ptr [rsp + rdi*2], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001db993 : add byte ptr [rsp + rdi*4], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001c0057 : add byte ptr [rsp + rdi*8 - 0x10], dh ; call rax
0x00000000001bf8df : add byte ptr [rsp + rdi*8], dh ; in eax, dx ; call rsp
0x00000000001e073b : add byte ptr [rsp + rdx*4 - 9], al ; call rax
0x00000000001c0f47 : add byte ptr [rsp + rdx*4], dh ; cmc ; jmp rsp
0x00000000001cf233 : add byte ptr [rsp + rdx*8 - 0x13], cl ; jmp qword ptr [rsi]
0x00000000001ddc9b : add byte ptr [rsp + rdx*8 - 0xa], dl ; jmp qword ptr [rsi]
0x00000000001bf307 : add byte ptr [rsp + rdx*8], ah ; in al, dx ; call qword ptr [rax]
0x0000000000026fcc : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000001dabfb : add byte ptr [rsp + rsi*2 - 0x7c3fffff], dh ; cmc ; call qword ptr [rbx]
0x00000000001dabcb : add byte ptr [rsp + rsi*2 - 0x7c5fffff], al ; cmc ; call qword ptr [rbx]
0x00000000001d55fb : add byte ptr [rsp + rsi*4], al ; jmp qword ptr [rcx]
0x00000000001e1bdb : add byte ptr [rsp - 0x6ecfffff], dl ; sti ; jmp qword ptr [rdx]
0x00000000001c1adf : add byte ptr [rsp - 9], dh ; push qword ptr [rax] ; ret
0x00000000001d1bc3 : add byte ptr [rsp], bh ; add byte ptr [rax], ch ; out 0xf0, al ; jmp qword ptr [rdi]
0x00000000001da393 : add byte ptr [rsp], cl ; cmc ; call qword ptr [rdx]
0x0000000000103cc5 : add byte ptr cs:[rcx + 0x5b595a0a], cl ; ret
0x000000000010e625 : add byte ptr cs:[rcx - 0x77], cl ; retf 0x8b
0x00000000001180f7 : add byte ptr ds:[rax - 0x73], cl ; push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x000000000011ce5d : add byte ptr ds:[rdi + rax - 0xd], dh ; ret
0x000000000003f9aa : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000159b68 : add byte ptr gs:[rax - 0x7d], cl ; ret
0x00000000000878f8 : add byte ptr gs:[rax], al ; mov r10d, eax ; jmp 0x87890
0x00000000000bebdf : add byte ptr gs:[rbp - 0x7b], al ; in al, 0x75 ; ret 0x8945
0x000000000013eec3 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000efea0 : add byte ptr gs:[rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x000000000007e695 : add byte ptr ss:[rax + 0x29], cl ; retf 0x8948
0x000000000007d8e2 : add byte ptr ss:[rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000008508d : add byte ptr ss:[rax - 0x39], cl ; ret
0x000000000007f78e : add byte ptr ss:[rax - 0x39], cl ; ret 0xffff
0x00000000000809d7 : add byte ptr ss:[rax - 0x77], cl ; ret
0x000000000008031c : add byte ptr ss:[rax - 0x77], cl ; ret 0x2948
0x000000000007edc7 : add byte ptr ss:[rax - 0x77], cl ; ret 0x8948
0x00000000000801d9 : add byte ptr ss:[rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x00000000001a4843 : add ch, al ; or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000000f4e09 : add ch, al ; push rcx ; ret
0x0000000000045c37 : add ch, al ; ret
0x000000000018a8ae : add ch, al ; std ; je 0x18a91b ; and ch, al ; std ; xlatb ; ret
0x000000000018a99c : add ch, al ; std ; je 0x18aa09 ; and ch, al ; std ; xlatb ; ret
0x000000000018a942 : add ch, al ; std ; xlatb ; ret
0x000000000018a94e : add ch, al ; std ; xlatb ; ret 0xc085
0x000000000018e50f : add ch, al ; std ; xlatb ; retf 0xc985
0x00000000001e4c0f : add ch, bl ; add al, byte ptr [rax] ; add byte ptr [rdx + 7], al ; add byte ptr [rax], al ; ret
0x00000000000e9742 : add ch, bl ; cdq ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000449cb : add ch, bl ; jrcxz 0x44a3c ; nop ; xor eax, eax ; ret
0x00000000001ad53c : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001ad53d : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000d3af1 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000846aa : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000065e83 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000001cb79b : add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000001bf3d9 : add ch, ch ; jmp qword ptr [rax]
0x00000000001bf3c9 : add ch, ch ; jmp rax
0x00000000001af2ec : add ch, ch ; out dx, eax ; call qword ptr [rax]
0x000000000005d406 : add ch, cl ; retf
0x000000000003f856 : add cl, 0xe9 ; add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000011c7af : add cl, bl ; retf 0xc9d9
0x00000000001ac90a : add cl, bl ; retf 0xea91
0x00000000000b345c : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x00000000000bd10d : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000daed3 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000006666a : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000002953e : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000140686 : add cl, byte ptr [rax + 0x39] ; ret 0x1472
0x0000000000065bb0 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000140694 : add cl, byte ptr [rax + 0x39] ; ret 0xc019
0x0000000000029798 : add cl, byte ptr [rax + 0x39] ; retf
0x0000000000140660 : add cl, byte ptr [rax + 0x39] ; retf 0x3a72
0x000000000017194a : add cl, byte ptr [rax + 0x39] ; retf 0x820f
0x000000000018f024 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000009480b : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000094488 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000085fb4 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000000000085ed3 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x00000000000250dc : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x0000000000029ad6 : add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x00000000000b345d : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x00000000000a857f : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000084f0f : add cl, byte ptr [rax - 0x77] ; ret
0x00000000001055da : add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x00000000001506e4 : add cl, byte ptr [rax - 0x77] ; retf
0x000000000008fb02 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000011937e : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000000f3d4b : add cl, byte ptr [rax - 0x7bf0afad] ; ret
0x000000000012eccc : add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000044323 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000000b63d0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000001185a9 : add cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x00000000000e808e : add cl, byte ptr [rax - 0x7d] ; ret 0x8401
0x00000000000e85ac : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x00000000000b6433 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000005459d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x000000000015dc45 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x00000000000ef52e : add cl, byte ptr [rax - 9] ; fld qword ptr [rbx + 0x394903e5] ; retf 0xf4c
0x00000000000cab22 : add cl, byte ptr [rbp + 0x29] ; ret 0x8b47
0x0000000000104658 : add cl, byte ptr [rbp - 0x77] ; ret
0x0000000000057b62 : add cl, byte ptr [rbp - 0x77] ; retf
0x0000000000174542 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000069cbc : add cl, byte ptr [rcx + 0x29] ; ror dword ptr [rbp - 0x77], 1 ; retf
0x000000000002c848 : add cl, byte ptr [rcx + 0x39] ; retf
0x000000000007c78a : add cl, byte ptr [rcx + 0x440f48c3] ; rol dword ptr [rax], 1 ; ret
0x00000000001093f9 : add cl, byte ptr [rcx + 0x440f48c7] ; retf 0x40
0x000000000014f073 : add cl, byte ptr [rcx + 0x55ff41da] ; adc byte ptr [rcx], bh ; ret
0x00000000000e17fe : add cl, byte ptr [rcx - 0x3b7cb710] ; ret
0x000000000002620a : add cl, byte ptr [rcx - 0x7d] ; ret
0x00000000000f4397 : add cl, byte ptr [rcx - 0x7d] ; ret 0x3910
0x00000000000e72b3 : add cl, byte ptr [rcx] ; ret 0xd889
0x0000000000141bab : add cl, byte ptr [rdi + rcx + 0x44] ; retf 0xc683
0x00000000000304f4 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x0000000000033c51 : add cl, byte ptr [rdi] ; retf 0x8b48
0x000000000012c779 : add cl, byte ptr [rdi] ; test ah, ah ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000000ec7d9 : add cl, byte ptr [rdi] ; xchg byte ptr [rbp - 0x16000002], dh ; retf
0x0000000000106693 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000018a263 : add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000018a14b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001cde65 : add cl, byte ptr [rsi + rcx + 8] ; ret
0x00000000001dd573 : add cl, byte ptr [rsi + rcx - 0x40] ; add dword ptr [rdx], eax ; retf
0x00000000000f1a79 : add cl, ch ; cmp eax, 0xf7fffffc ; ret 0
0x000000000006ece1 : add cl, ch ; leave ; retf
0x000000000006f2fc : add cl, ch ; outsd dx, dword ptr [rsi] ; ret 0xffff
0x00000000000a7e9b : add cl, ch ; pop rbp ; ret 0xffff
0x00000000000a8016 : add cl, ch ; pop rsi ; retf 0xffff
0x00000000000a7c2b : add cl, ch ; push rbx ; ret 0xffff
0x00000000000a7ea6 : add cl, ch ; push rdx ; ret 0xffff
0x0000000000029805 : add cl, ch ; ret
0x00000000000a7f3a : add cl, ch ; ret 0xfff4
0x00000000000fb1bd : add cl, ch ; ret 0xfff8
0x0000000000050a74 : add cl, ch ; ret 0xfffa
0x0000000000028fb8 : add cl, ch ; ret 0xfffd
0x00000000000a7eb1 : add cl, ch ; ret 0xffff
0x000000000002c7c7 : add cl, ch ; retf
0x00000000000707e0 : add cl, ch ; retf 0xffb0
0x00000000000762e0 : add cl, ch ; retf 0xffd7
0x0000000000094116 : add cl, ch ; retf 0xfffc
0x00000000000556b7 : add cl, ch ; retf 0xfffe
0x00000000000a7cff : add cl, ch ; stc ; ret
0x0000000000071371 : add cl, ch ; xchg eax, ecx ; retf
0x00000000000a7bec : add cl, ch ; xchg eax, edx ; ret 0xffff
0x000000000000151f : add cl, cl ; add eax, 0 ; add byte ptr [rax], al ; retf
0x00000000001311a1 : add cl, cl ; ret
0x00000000001d2131 : add cl, dh ; call qword ptr [rax]
0x00000000001ac7c3 : add cl, dh ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000001ac7c2 : add cl, sil ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000001d61f9 : add dh, ah ; jmp qword ptr [rcx]
0x00000000001d01f0 : add dh, ah ; out dx, al ; call qword ptr [rdx]
0x000000000004fb69 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x00000000001a84eb : add dh, al ; add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x00000000000edb97 : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x0000000000066958 : add dh, al ; test esp, esp ; idiv bh ; jmp qword ptr [rax]
0x00000000001b16fb : add dh, bh ; jmp rdi
0x00000000001ab5fe : add dh, bh ; movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000001a7937 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001746f3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000008424d : add dh, bl ; ret
0x000000000009eca6 : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000000ba92b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001bd304 : add dh, byte ptr [rbp - 5] ; call qword ptr [rdx + 0x22fffb74]
0x00000000001d3fa6 : add dh, byte ptr [rbx + 0x48180e0a] ; ret
0x00000000001cb7e9 : add dh, byte ptr [rbx + 0xa] ; ret
0x00000000000e9728 : add dh, byte ptr [rcx] ; rol byte ptr [rbx - 0x6bf0fe02], 0xc0 ; ret
0x00000000001c6764 : add dh, byte ptr [rsi + rcx + 0x80e4910] ; ret
0x000000000005c15a : add dh, byte ptr [rsi - 0x76b7ffc8] ; ret 0x2948
0x0000000000092548 : add dh, dh ; ret
0x000000000002540e : add dh, dh ; ret 0x4801
0x000000000009a0ef : add dh, dh ; ret 0x4804
0x000000000011ba4f : add dh, dh ; ret 0x7404
0x00000000000f6785 : add dh, dh ; ret 0x7420
0x00000000001936a7 : add dh, dh ; ret 0x7501
0x00000000001936b4 : add dh, dh ; ret 0x7502
0x00000000000dfe6f : add dh, dh ; ret 0x7504
0x00000000000f198f : add dh, dh ; ret 0x7508
0x0000000000193679 : add dh, dh ; ret 0x7510
0x0000000000193686 : add dh, dh ; ret 0x7520
0x00000000000f5086 : add dh, dh ; ret 0x7540
0x000000000009a410 : add dh, dh ; ret 0xf02
0x000000000002e6d8 : add dh, dh ; ret 0xf04
0x0000000000092479 : add dh, dh ; ret 0xf08
0x00000000000b1c62 : add dh, dh ; ret 0xf20
0x0000000000062689 : add dh, dh ; ret 0xf40
0x000000000006266f : add dh, dh ; ret 0xf50
0x00000000001d0d48 : add dh, dl ; add byte ptr [rax], al ; hlt ; out dx, eax ; jmp qword ptr [rbx]
0x00000000000d010b : add dil, r15b ; ret
0x000000000009ec56 : add dil, sil ; ret 0
0x00000000001e5927 : add dl, ah ; add eax, dword ptr [rax] ; add byte ptr [rbx + 6], bh ; add byte ptr [rax], al ; ret 4
0x00000000001e1751 : add dl, byte ptr [rsi + rcx + 8] ; ret
0x000000000003e03f : add dl, dh ; mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x00000000001d9e95 : add dword ptr [eax], eax ; call 0x271d93e7
0x00000000001d9e94 : add dword ptr [eax], eax ; call 0x271d93e8
0x00000000001c08cd : add dword ptr [eax], eax ; in al, 0x60 ; hlt ; call rsp
0x00000000001c08e5 : add dword ptr [eax], eax ; je 0x1c0951 ; hlt ; call qword ptr [rax]
0x00000000001d9e65 : add dword ptr [eax], eax ; sub byte ptr [rbx - 0xb], al ; jmp rdi
0x000000000007fbc7 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000000ee2e1 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000007d105 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x0000000000024023 : add dword ptr [r8 - 0x7d], r9d ; ret
0x00000000000f613e : add dword ptr [r8], eax ; add byte ptr [rbx - 0x7bf0f505], al ; ret 0
0x00000000000bc112 : add dword ptr [r8], eax ; cmove rax, rdx ; ret
0x00000000000f356d : add dword ptr [r8], r8d ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x00000000001d7ce1 : add dword ptr [r8], r8d ; or al, 0x7d ; hlt ; jmp qword ptr [rcx]
0x00000000001c0405 : add dword ptr [r8], r8d ; test byte ptr [rsi - 0xe], bl ; call rax
0x00000000001d7e89 : add dword ptr [r8], r8d ; xor al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x00000000000ef840 : add dword ptr [r9 + 0x39], r9d ; ret 0x860f
0x00000000000e7c94 : add dword ptr [r9 + 0xf], r8d ; xchg eax, esp ; ret 0x5c3c
0x00000000000a30e7 : add dword ptr [r9 - 0x77], ecx ; retf
0x00000000000a36cf : add dword ptr [rax + 0x19], ecx ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000000edc2d : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x0000000000181321 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000006113a : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x00000000000610ff : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x00000000000a2fef : add dword ptr [rax + 0x29], ecx ; ret 0x8d49
0x00000000000e6663 : add dword ptr [rax + 0x30], ecx ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000e4b14 : add dword ptr [rax + 0x38], edi ; syscall
0x000000000002ac88 : add dword ptr [rax + 0x39480742], ecx ; retf
0x0000000000029b05 : add dword ptr [rax + 0x39480750], ecx ; retf
0x0000000000052863 : add dword ptr [rax + 0x39], ecx ; bnd jne 0x52860 ; xor eax, eax ; ret
0x0000000000029916 : add dword ptr [rax + 0x39], ecx ; ret
0x000000000019b0b2 : add dword ptr [rax + 0x39], ecx ; ret 0x5a74
0x00000000001128a3 : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000019b151 : add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x00000000000a6757 : add dword ptr [rax + 0x39], ecx ; ret 0x8840
0x0000000000040e7f : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x000000000006051a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000012990b : add dword ptr [rax + 0x39], ecx ; ret 0x8d0f
0x0000000000112896 : add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x00000000000455a3 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000004552d : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x00000000000cbb0a : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x0000000000052563 : add dword ptr [rax + 0x39], ecx ; ret 0xef75
0x0000000000029783 : add dword ptr [rax + 0x39], ecx ; retf
0x00000000000bc080 : add dword ptr [rax + 0x39], ecx ; retf 0x1c74
0x0000000000133403 : add dword ptr [rax + 0x39], ecx ; retf 0xd274
0x000000000013f70c : add dword ptr [rax + 0x39], ecx ; retf 0xdc75
0x00000000000c855e : add dword ptr [rax + 0x39], ecx ; retf 0xec75
0x000000000019ae14 : add dword ptr [rax + 0x39], ecx ; sal dword ptr [rsi + rsi*2 + 0x48], 0x89 ; ret 0xc148
0x000000000002b6c0 : add dword ptr [rax + 0x39], r9d ; ret
0x0000000000120752 : add dword ptr [rax + 0x428b1043], ecx ; js 0x1206eb ; ret 0xe8c1
0x00000000001207e4 : add dword ptr [rax + 0x428b1043], ecx ; js 0x12077d ; ret 0xe8c1
0x0000000000120ba1 : add dword ptr [rax + 0x428b1043], ecx ; js 0x120b3a ; ret 0xe8c1
0x0000000000120c33 : add dword ptr [rax + 0x428b1043], ecx ; js 0x120bcc ; ret 0xe8c1
0x000000000011c09f : add dword ptr [rax + 0x63], ecx ; ret 0x8941
0x00000000000fb0eb : add dword ptr [rax + 0x63], ecx ; retf 0x3949
0x00000000000c8274 : add dword ptr [rax + 0x63], ecx ; retf 0xc283
0x0000000000119503 : add dword ptr [rax + 0xf], ecx ; mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x00000000001956e0 : add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x000000000006d29c : add dword ptr [rax + 1], ecx ; ret
0x000000000002199f : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000003cfca : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000edbe0 : add dword ptr [rax + 1], edi ; ret
0x00000000000955de : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000198a82 : add dword ptr [rax + 9], ecx ; ret 0xb941
0x000000000011d427 : add dword ptr [rax + 9], ecx ; retf 0x8949
0x000000000019655b : add dword ptr [rax + 9], ecx ; retf 0xb841
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000131aae : add dword ptr [rax + rax], eax ; cmovne rax, rdx ; ret
0x00000000000eb0f0 : add dword ptr [rax + rax], eax ; or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x0000000000115ca0 : add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x00000000001e3554 : add dword ptr [rax + rdi*4], ecx ; add dword ptr [rbx + 0x4b702], esi ; ret 0x504
0x00000000001ac3bb : add dword ptr [rax + rdx*4 + 0x16], edi ; out dx, al ; out 0x78, al ; jnp 0x1ac427 ; retf
0x000000000005cb03 : add dword ptr [rax - 0x4e743], eax ; jmp qword ptr [rax]
0x0000000000031d33 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000009a7d4 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x00000000000a14c3 : add dword ptr [rax - 0x73], ecx ; imul eax, dword ptr [rcx], 0x5d5b8675 ; ret
0x000000000007fbc8 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x0000000000125e5d : add dword ptr [rax - 0x75], ecx ; push rsp ; retf 0x8b40
0x00000000000b3436 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000090731 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x35ab97 ; ret
0x000000000017cf82 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000125f2d : add dword ptr [rax - 0x77], ecx ; fucomip st(0) ; retf 0xefb1
0x0000000000082968 : add dword ptr [rax - 0x77], ecx ; jb 0x8299d ; mov byte ptr [rcx], dil ; ret
0x000000000008a224 : add dword ptr [rax - 0x77], ecx ; jb 0x8a259 ; mov byte ptr [rcx], dil ; ret
0x000000000008a314 : add dword ptr [rax - 0x77], ecx ; jb 0x8a349 ; mov byte ptr [rcx], dil ; ret
0x000000000014780e : add dword ptr [rax - 0x77], ecx ; or ecx, dword ptr [rcx + rcx*4 + 0x3c] ; ret 0x2e66
0x000000000011464d : add dword ptr [rax - 0x77], ecx ; out dx, eax ; call 0x21106
0x0000000000059863 : add dword ptr [rax - 0x77], ecx ; push rcx ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000008a24d : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000003543c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000024587 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x000000000008bba6 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000015eedb : add dword ptr [rax - 0x77], ecx ; ret 0x6348
0x0000000000198f64 : add dword ptr [rax - 0x77], ecx ; ret 0x8949
0x00000000000f0505 : add dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000e8ab8 : add dword ptr [rax - 0x77], ecx ; ret 0x9aeb
0x00000000000d1078 : add dword ptr [rax - 0x77], ecx ; retf
0x0000000000058a3c : add dword ptr [rax - 0x77], ecx ; retf 0x8948
0x00000000000c0ae6 : add dword ptr [rax - 0x77], ecx ; retf 0xc148
0x0000000000140e64 : add dword ptr [rax - 0x78], eax ; ja 0x140e6f ; ret
0x000000000009d5f7 : add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000000a1761 : add dword ptr [rax - 0x7c], eax ; test byte ptr [rcx + 0xf], 0x95 ; ret 0x3844
0x00000000000f3dff : add dword ptr [rax - 0x7d], ecx ; call 0xffffffffcb488312
0x0000000000182f3a : add dword ptr [rax - 0x7d], ecx ; fdivr st(7) ; ret
0x0000000000024024 : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a5420 : add dword ptr [rax - 0x7d], ecx ; ret 0x2901
0x00000000000c8836 : add dword ptr [rax - 0x7d], ecx ; ret 0x4501
0x00000000000412e9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000f5385 : add dword ptr [rax - 0x7d], ecx ; ret 0x4820
0x00000000000df074 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000c074e : add dword ptr [rax - 0x7d], ecx ; ret 0x6610
0x000000000011c4fa : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x00000000000e80da : add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x000000000007d106 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000031d7e : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000107173 : add dword ptr [rax - 0x7d], ecx ; ret 0x8901
0x0000000000024b76 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000007d757 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000004237b : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x000000000004f5ad : add dword ptr [rax - 0x7f], ecx ; ret
0x0000000000059ee6 : add dword ptr [rax - 0x94343], eax ; jmp qword ptr [rax]
0x00000000000e4a0d : add dword ptr [rax - 1], edi ; jmp 0xe49df
0x0000000000034e70 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x00000000001be515 : add dword ptr [rax], 0xe827a400 ; jmp rsp
0x00000000001244f3 : add dword ptr [rax], 1 ; ret
0x00000000001c0a8e : add dword ptr [rax], eax ; adc al, 0x17 ; cmc ; call rsp
0x00000000001c1aa6 : add dword ptr [rax], eax ; adc al, 0x23 ; idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001d4f1a : add dword ptr [rax], eax ; adc al, 0x44 ; stc ; call qword ptr [rax]
0x00000000001c0186 : add dword ptr [rax], eax ; adc al, 0x63 ; int1 ; call rax
0x00000000001d87aa : add dword ptr [rax], eax ; adc al, 0xa7 ; hlt ; jmp qword ptr [rcx]
0x00000000001c1106 : add dword ptr [rax], eax ; adc al, 0xbb ; cmc ; jmp rax
0x00000000001da2be : add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001d629e : add dword ptr [rax], eax ; adc byte ptr [rbx], al ; hlt ; call qword ptr [rsi]
0x00000000001c21be : add dword ptr [rax], eax ; adc eax, edi ; jmp qword ptr [rax]
0x00000000001d593e : add dword ptr [rax], eax ; add ah, al ; jmp qword ptr [rcx]
0x00000000001e235a : add dword ptr [rax], eax ; add al, 0x11 ; clc ; jmp qword ptr [rcx]
0x00000000001c1af6 : add dword ptr [rax], eax ; add al, 0x25 ; idiv edi ; insb byte ptr [rdi], dx ; ret
0x00000000001c0106 : add dword ptr [rax], eax ; add al, 0x38 ; int1 ; jmp qword ptr [rax]
0x00000000001c0ce6 : add dword ptr [rax], eax ; add al, 0x40 ; cmc ; jmp rax
0x00000000001c0d26 : add dword ptr [rax], eax ; add al, 0x50 ; cmc ; jmp qword ptr [rax]
0x00000000001d75da : add dword ptr [rax], eax ; add al, 0x5d ; hlt ; call rsi
0x00000000001da07a : add dword ptr [rax], eax ; add al, 0x61 ; cmc ; jmp qword ptr [rbx]
0x00000000001c01ee : add dword ptr [rax], eax ; add al, 0x8a ; int1 ; jmp qword ptr [rax]
0x00000000001d7d8a : add dword ptr [rax], eax ; add al, 0x99 ; hlt ; call qword ptr [rax]
0x00000000001d834a : add dword ptr [rax], eax ; add al, 0xa1 ; hlt ; jmp qword ptr [rcx]
0x00000000001c0956 : add dword ptr [rax], eax ; add al, 0xad ; hlt ; jmp rsp
0x00000000001d55fa : add dword ptr [rax], eax ; add al, 0xb4 ; jmp qword ptr [rcx]
0x00000000001c112e : add dword ptr [rax], eax ; add al, 0xc6 ; cmc ; jmp qword ptr [rax]
0x00000000001c3726 : add dword ptr [rax], eax ; add al, 0xe9 ; std ; jmp rsp
0x000000000010e605 : add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000ff7fe : add dword ptr [rax], eax ; add al, ch ; retf 0xffe0
0x00000000000292ab : add dword ptr [rax], eax ; add al, ch ; sbb eax, 0x89000071 ; retf 0xe283
0x0000000000140aaa : add dword ptr [rax], eax ; add bl, al ; nop ; ret
0x000000000017efac : add dword ptr [rax], eax ; add bl, al ; ret
0x000000000007ed04 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000118292 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e675a : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x1674
0x00000000000e619f : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000193551 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; retf 0xd975
0x00000000000a317c : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000c6bdc : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000f7430 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000000fc8f5 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0xc148
0x0000000000068c65 : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; clc ; jmp rax
0x0000000000090ffa : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000014887a : add dword ptr [rax], eax ; add byte ptr [rax - 0x171876b8], al ; retf 0x1db
0x000000000015e8e1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000144e73 : add dword ptr [rax], eax ; add byte ptr [rax - 0x6af0dc07], al ; ret 0xf980
0x0000000000029538 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000009623d : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000012ecc7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000014d8be : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and al, 0x28 ; call rax
0x0000000000130a21 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; pop rbp ; clc ; leave ; ret
0x00000000000837bb : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [rax - 0x77], cl ; retf 0x8348
0x000000000016686d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x00000000000f356e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000009b745 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x000000000014e69e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000803fa : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000089b3a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a103d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000faf48 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000002a7a6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000029d45 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8966
0x00000000000bb55e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000114f6c : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; xor esi, esi ; syscall
0x0000000000084289 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x0000000000085b68 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; retf
0x0000000000096880 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000063e88 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c80dc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002a402 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000018537d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000095ed5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000009e8de : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000018c3af : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001852d1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000003cc93 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x0000000000082eae : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000009b783 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x6be2
0x0000000000022c21 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001a793a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001a6aea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001a6912 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a690a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000001a70a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000001a694a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001a6942 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d4
0x00000000001a70e2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1d5
0x00000000001179d0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000003fb22 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x0000000000195661 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x195678 ; neg eax ; ret
0x00000000000bcdd1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xbcde1 ; neg eax ; ret
0x0000000000192417 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x192428 ; neg eax ; ret
0x000000000015cb9c : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x15cb72
0x00000000000a7c8b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xa3f79
0x000000000005b7eb : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000e68b3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; js 0xe68c7 ; ret
0x00000000001306ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000e6b41 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x0000000000153023 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000009c05d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000693f9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov esi, 1 ; jmp rax
0x0000000000054a56 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000014dbfa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012d851 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x129b29
0x000000000007d25d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000156835 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000001567fd : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000152f8d : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000152fa6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x000000000014e4f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x00000000000526f8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d33e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000130814 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000052544 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000011014e : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000681f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor esi, esi ; jmp rax
0x00000000000690c9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor r15d, r15d ; jmp rax
0x0000000000043ffc : add dword ptr [rax], eax ; add byte ptr [rbp + 0x19], al ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x000000000008abd8 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000197880 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x39], cl ; retf 0xbf41
0x00000000000f9550 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x76268b40], al ; ret 0xe281
0x00000000001990a5 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000f2cab : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; retf
0x00000000000ab7e8 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000007c639 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000004f172 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fb0e6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x634801c2], al ; retf 0x3949
0x00000000000f613f : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0f505], al ; ret 0
0x000000000003932d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000005c888 : add dword ptr [rax], eax ; add byte ptr [rcx + 1], al ; ret 0x8949
0x0000000000076434 : add dword ptr [rax], eax ; add byte ptr [rcx + 1], cl ; ret 0x3b45
0x00000000001e421d : add dword ptr [rax], eax ; add byte ptr [rcx + 3], dh ; add byte ptr [rax], al ; retf 5
0x0000000000055833 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x00000000000f2c71 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3944
0x00000000001501d1 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; retf 0x8948
0x00000000000f45ee : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000005ca7d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; retf 0xe9ff
0x0000000000076419 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 1 ; ret 0x3b45
0x000000000010d9b9 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x000000000014462e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rsi]
0x000000000014acd5 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x0000000000197d1a : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x00000000000ff93a : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x00000000000ff959 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000d2d59 : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x000000000013a74b : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x0000000000163af7 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0x6f ; ret 0xfffa
0x0000000000140a5f : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x66c3
0x0000000000140a89 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xb8c3
0x0000000000121a45 : add dword ptr [rax], eax ; add byte ptr [rdx + 8], bh ; syscall
0x00000000001da12e : add dword ptr [rax], eax ; add byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x000000000018a940 : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret
0x000000000018a94c : add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x00000000000ff8e6 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7420
0x00000000001936a5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000000001936b2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000000001936bf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000193677 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000193684 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000193691 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000002e6d6 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x0000000000119d3d : add dword ptr [rax], eax ; add rsp, 0x80 ; ret
0x00000000001d9c8a : add dword ptr [rax], eax ; and al, 0x1c ; cmc ; call rdx
0x00000000001c32fe : add dword ptr [rax], eax ; and al, 0x3f ; sti ; jmp rsp
0x00000000001d70aa : add dword ptr [rax], eax ; and al, 0x49 ; hlt ; jmp rax
0x00000000001c015e : add dword ptr [rax], eax ; and al, 0x52 ; int1 ; call qword ptr [rax]
0x00000000001c238e : add dword ptr [rax], eax ; and al, 0x7d ; clc ; jmp rsp
0x00000000001d82aa : add dword ptr [rax], eax ; and al, 0xa0 ; hlt ; jmp qword ptr [rcx]
0x00000000001c1096 : add dword ptr [rax], eax ; and al, 0xaf ; cmc ; jmp rax
0x00000000001d554a : add dword ptr [rax], eax ; and al, 0xb2 ; jmp qword ptr [rcx]
0x00000000001dcb8e : add dword ptr [rax], eax ; and byte ptr [rbp - 0xa], al ; jmp qword ptr [rsi]
0x00000000001da08e : add dword ptr [rax], eax ; and byte ptr [rcx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001dcad6 : add dword ptr [rax], eax ; call 0x181dc121
0x00000000001d55e6 : add dword ptr [rax], eax ; call 0x221d49a5
0x00000000001d8336 : add dword ptr [rax], eax ; call 0x221d77e2
0x00000000001da066 : add dword ptr [rax], eax ; call 0x241d95d2
0x00000000001d6a16 : add dword ptr [rax], eax ; call 0x271d5e39
0x00000000001d9e96 : add dword ptr [rax], eax ; call 0x271d93e6
0x00000000001d54d6 : add dword ptr [rax], eax ; call 0xffffffffd81d4890
0x00000000001d3b76 : add dword ptr [rax], eax ; call 0xffffffffe11d2deb
0x00000000001d3b76 : add dword ptr [rax], eax ; call 0xffffffffe11d2dec
0x00000000001d8796 : add dword ptr [rax], eax ; clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001d5376 : add dword ptr [rax], eax ; clc ; stosb byte ptr [rdi], al ; jmp qword ptr [rsi]
0x00000000001d49c2 : add dword ptr [rax], eax ; cld ; call qword ptr [rbx]
0x00000000001d8fd2 : add dword ptr [rax], eax ; cld ; retf
0x000000000009dc93 : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000009d7b7 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000001d5966 : add dword ptr [rax], eax ; cmp ah, al ; jmp qword ptr [rcx]
0x00000000001d4ee2 : add dword ptr [rax], eax ; cmp al, 0x44 ; stc ; call qword ptr [rax]
0x00000000001da0a2 : add dword ptr [rax], eax ; cmp al, 0x61 ; cmc ; jmp qword ptr [rbx]
0x00000000001dab62 : add dword ptr [rax], eax ; cmp al, 0x83 ; cmc ; call qword ptr [rbx]
0x00000000001db342 : add dword ptr [rax], eax ; cmp al, 0x99 ; cmc ; call qword ptr [rdx]
0x00000000001db752 : add dword ptr [rax], eax ; cmp al, 0xb1 ; cmc ; call rdx
0x00000000001d9712 : add dword ptr [rax], eax ; cmp al, 0xf3 ; hlt ; call rsi
0x00000000001da156 : add dword ptr [rax], eax ; cmp byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001db376 : add dword ptr [rax], eax ; cwde ; cdq ; cmc ; call qword ptr [rcx]
0x00000000001de126 : add dword ptr [rax], eax ; cwde ; fdiv st(6) ; jmp qword ptr [rbx]
0x00000000001d8246 : add dword ptr [rax], eax ; cwde ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d5656 : add dword ptr [rax], eax ; cwde ; mov ah, 0xf3 ; jmp qword ptr [rcx]
0x00000000001d4ec6 : add dword ptr [rax], eax ; cwde ; pushfq ; call qword ptr [rax]
0x00000000001d5a92 : add dword ptr [rax], eax ; fcom st(0), st(2) ; jmp rsi
0x00000000001d79d2 : add dword ptr [rax], eax ; fdiv qword ptr [rcx - 0xc] ; jmp rsp
0x00000000001daa26 : add dword ptr [rax], eax ; fdivr dword ptr [rdi - 0xb] ; call qword ptr [rax]
0x00000000001d66a6 : add dword ptr [rax], eax ; fmul dword ptr [rbx] ; hlt ; jmp qword ptr [rcx]
0x00000000001da296 : add dword ptr [rax], eax ; fsub dword ptr [rdx - 0xb] ; jmp qword ptr [rbx]
0x00000000001dcfd2 : add dword ptr [rax], eax ; fsub qword ptr [rdi - 0xa] ; jmp rdx
0x00000000001dd042 : add dword ptr [rax], eax ; fsubr qword ptr [rcx - 0xa] ; call rax
0x00000000001c024e : add dword ptr [rax], eax ; hlt ; adc esi, edx ; call qword ptr [rax]
0x00000000001d7166 : add dword ptr [rax], eax ; hlt ; jmp qword ptr [rcx]
0x00000000001c1996 : add dword ptr [rax], eax ; hlt ; mov ah, 0xf6 ; call rsp
0x00000000001c0976 : add dword ptr [rax], eax ; hlt ; mov dl, 0xf4 ; jmp qword ptr [rax]
0x00000000001c36a6 : add dword ptr [rax], eax ; hlt ; retf
0x00000000001c1ac6 : add dword ptr [rax], eax ; in al, 0x23 ; idiv edi ; hlt ; ret 1
0x00000000001c08ce : add dword ptr [rax], eax ; in al, 0x60 ; hlt ; call rsp
0x00000000001da11a : add dword ptr [rax], eax ; in al, 0x61 ; cmc ; jmp qword ptr [rbx]
0x00000000001bfb06 : add dword ptr [rax], eax ; in al, 0xa2 ; out dx, al ; call qword ptr [rax]
0x00000000001dc59a : add dword ptr [rax], eax ; in al, 0xf ; idiv bh ; retf 0
0x00000000001d8282 : add dword ptr [rax], eax ; in al, dx ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d65c2 : add dword ptr [rax], eax ; in al, dx ; or esp, esi ; jmp qword ptr [rcx]
0x00000000001dbbe2 : add dword ptr [rax], eax ; in al, dx ; retf 0xfff5
0x00000000001e18c2 : add dword ptr [rax], eax ; in al, dx ; retf 0xfff7
0x00000000001e29e2 : add dword ptr [rax], eax ; in al, dx ; xor bh, al ; call qword ptr [rbx]
0x00000000001dc932 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmp dh, dh ; call qword ptr [rdi]
0x00000000001d5122 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x00000000001e1842 : add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; retf 0xfff7
0x00000000001da7ea : add dword ptr [rax], eax ; ja 0x1da7e9 ; call rdx
0x00000000001c0d86 : add dword ptr [rax], eax ; jb 0x1c0d85 ; jmp rax
0x00000000001bfa86 : add dword ptr [rax], eax ; je 0x1bfabc ; out dx, al ; jmp qword ptr [rax]
0x00000000001bfb5e : add dword ptr [rax], eax ; je 0x1bfb0d ; out dx, al ; jmp qword ptr [rax]
0x00000000001c095e : add dword ptr [rax], eax ; je 0x1c0915 ; hlt ; jmp qword ptr [rax]
0x00000000001c08e6 : add dword ptr [rax], eax ; je 0x1c0950 ; hlt ; call qword ptr [rax]
0x00000000001c2296 : add dword ptr [rax], eax ; je 0x1c22d4 ; clc ; jmp rax
0x00000000001c3476 : add dword ptr [rax], eax ; je 0x1c3490 ; std ; jmp rax
0x00000000001d657a : add dword ptr [rax], eax ; je 0x1d658c ; hlt ; jmp qword ptr [rcx]
0x00000000001d74da : add dword ptr [rax], eax ; je 0x1d753c ; hlt ; jmp rcx
0x00000000001d839a : add dword ptr [rax], eax ; je 0x1d8344 ; hlt ; jmp qword ptr [rcx]
0x00000000001da0ca : add dword ptr [rax], eax ; je 0x1da134 ; cmc ; jmp qword ptr [rbx]
0x00000000001c184e : add dword ptr [rax], eax ; jl 0x1c184e ; call qword ptr [rax]
0x00000000001d8232 : add dword ptr [rax], eax ; jl 0x1d81da ; hlt ; jmp qword ptr [rcx]
0x0000000000051506 : add dword ptr [rax], eax ; jne 0x51505 ; pop rbx ; ret
0x00000000001d4efe : add dword ptr [rax], eax ; jo 0x1d4ea3 ; call qword ptr [rax]
0x00000000001d7dde : add dword ptr [rax], eax ; jo 0x1d7d80 ; hlt ; jmp qword ptr [rcx]
0x00000000001e2cae : add dword ptr [rax], eax ; jo 0x1e2cef ; clc ; call rsi
0x00000000001d82e6 : add dword ptr [rax], eax ; js 0x1d828f ; hlt ; jmp qword ptr [rcx]
0x00000000001e2da6 : add dword ptr [rax], eax ; js 0x1e2dee ; clc ; call rbx
0x00000000001d820a : add dword ptr [rax], eax ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d7102 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001da1e2 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; idiv eax ; jmp qword ptr [rbx]
0x00000000001db082 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; nop ; cmc ; jmp qword ptr [rdi]
0x00000000001d5902 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret
0x00000000001e1442 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; ret 0xfff7
0x00000000001e1a02 : add dword ptr [rax], eax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; sti ; jmp qword ptr [rdx]
0x00000000001d849e : add dword ptr [rax], eax ; loopne 0x1d8449 ; hlt ; jmp qword ptr [rcx]
0x00000000001c32f6 : add dword ptr [rax], eax ; mov ah, 0x13 ; sti ; call rax
0x00000000001e2b5a : add dword ptr [rax], eax ; mov ah, 0x37 ; clc ; call qword ptr [rdi]
0x00000000001c1cb6 : add dword ptr [rax], eax ; mov ah, 0x41 ; idiv edi ; retf 1
0x00000000001c0d16 : add dword ptr [rax], eax ; mov ah, 0x4f ; cmc ; jmp rsp
0x00000000001c06fe : add dword ptr [rax], eax ; mov ah, 0x59 ; jmp rax
0x00000000001c234e : add dword ptr [rax], eax ; mov ah, 0x5c ; clc ; call rax
0x00000000001c0de6 : add dword ptr [rax], eax ; mov ah, 0x7b ; cmc ; call qword ptr [rax]
0x00000000001d825a : add dword ptr [rax], eax ; mov ah, 0x9f ; hlt ; jmp qword ptr [rcx]
0x00000000001bfb46 : add dword ptr [rax], eax ; mov ah, 0xa5 ; out dx, al ; jmp rsp
0x00000000001d566a : add dword ptr [rax], eax ; mov ah, 0xb4 ; jmp qword ptr [rcx]
0x00000000001c33be : add dword ptr [rax], eax ; mov ah, 0xc6 ; cld ; jmp rax
0x00000000001da20a : add dword ptr [rax], eax ; mov ah, 0xf7 ; clc ; jmp qword ptr [rbx]
0x00000000001d704e : add dword ptr [rax], eax ; mov al, 0x47 ; hlt ; call qword ptr [rdx]
0x00000000001d4a6e : add dword ptr [rax], eax ; mov al, 0x5c ; call rax
0x00000000001da03e : add dword ptr [rax], eax ; mov al, 0x60 ; cmc ; jmp qword ptr [rsi]
0x00000000001d55be : add dword ptr [rax], eax ; mov al, 0xb3 ; jmp qword ptr [rcx]
0x00000000001db92e : add dword ptr [rax], eax ; mov al, 0xba ; cmc ; call rdx
0x00000000001d7236 : add dword ptr [rax], eax ; mov byte ptr [rbx - 0xc], cl ; jmp qword ptr [rdx]
0x00000000001d555e : add dword ptr [rax], eax ; mov dl, 0xf3 ; call qword ptr [rcx]
0x00000000001dc0c2 : add dword ptr [rax], eax ; mov edi, gs ; cmc ; call qword ptr [rbx]
0x00000000000a80a1 : add dword ptr [rax], eax ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00000000001d51fa : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rcx]
0x00000000001d858e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001da1ba : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; idiv eax ; jmp qword ptr [rbx]
0x00000000001c236e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x1c2370 ; call rsp
0x00000000001c236d : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x1c2371 ; call rsp
0x00000000001bfafe : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rsp
0x00000000001c367e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xfffd
0x00000000001c0ade : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb ebp, esi ; jmp rax
0x00000000001da2e6 : add dword ptr [rax], eax ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001c1e26 : add dword ptr [rax], eax ; movsxd rsi, edi ; call rsp
0x00000000001dc25e : add dword ptr [rax], eax ; nop ; clc ; cmc ; call qword ptr [rax]
0x00000000001df65e : add dword ptr [rax], eax ; nop ; idiv r15d ; ret 2
0x000000000011719c : add dword ptr [rax], eax ; nop ; mov eax, 0xa3 ; syscall
0x00000000001db45e : add dword ptr [rax], eax ; nop ; pushfq ; cmc ; jmp rax
0x00000000001d58ee : add dword ptr [rax], eax ; nop ; ret
0x00000000001d8fbe : add dword ptr [rax], eax ; nop ; retf
0x00000000001d5f6e : add dword ptr [rax], eax ; nop ; stc ; call qword ptr [rdx]
0x00000000001da392 : add dword ptr [rax], eax ; or al, 0x64 ; cmc ; call qword ptr [rdx]
0x00000000001d7ce2 : add dword ptr [rax], eax ; or al, 0x7d ; hlt ; jmp qword ptr [rcx]
0x00000000001e1e62 : add dword ptr [rax], eax ; or al, 0x8f ; sti ; jmp qword ptr [rdx]
0x00000000001d81e2 : add dword ptr [rax], eax ; or al, 0x9f ; hlt ; jmp qword ptr [rcx]
0x00000000001d67a2 : add dword ptr [rax], eax ; or al, 0xf ; hlt ; jmp qword ptr [rcx]
0x00000000001d66e2 : add dword ptr [rax], eax ; or al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001dfd16 : add dword ptr [rax], eax ; or byte ptr [rcx - 9], ah ; jmp qword ptr [rax]
0x00000000001d61f6 : add dword ptr [rax], eax ; or byte ptr [rdx], al ; hlt ; jmp qword ptr [rcx]
0x00000000001d666a : add dword ptr [rax], eax ; or esi, esp ; jmp qword ptr [rcx]
0x00000000001d6656 : add dword ptr [rax], eax ; or rsi, rsp ; jmp qword ptr [rcx]
0x00000000001dcc96 : add dword ptr [rax], eax ; pop rax ; idiv r15b ; ret 0
0x00000000001d58c6 : add dword ptr [rax], eax ; pop rax ; ret
0x00000000001c3586 : add dword ptr [rax], eax ; pop rax ; std ; jmp rax
0x00000000000a81e8 : add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000000352a0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001c087e : add dword ptr [rax], eax ; pop rdi ; hlt ; call rsp
0x00000000001d7512 : add dword ptr [rax], eax ; pop rsp ; pop rdx ; hlt ; call qword ptr [rdx]
0x00000000001d8d82 : add dword ptr [rax], eax ; pop rsp ; ret 0xfff4
0x00000000001d7832 : add dword ptr [rax], eax ; push -0xc ; jmp rax
0x00000000001de1ae : add dword ptr [rax], eax ; push rax ; fdecstp ; call qword ptr [rdi]
0x00000000001d529e : add dword ptr [rax], eax ; push rax ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001c22a6 : add dword ptr [rax], eax ; push rsp ; clc ; call qword ptr [rax]
0x00000000001bfd56 : add dword ptr [rax], eax ; push rsp ; fsub st(7), st(0) ; call rax
0x00000000001c06de : add dword ptr [rax], eax ; push rsp ; push rcx ; jmp rax
0x00000000001c2486 : add dword ptr [rax], eax ; push rsp ; ret
0x00000000001deffa : add dword ptr [rax], eax ; push rsp ; sbb al, 0xf7 ; call qword ptr [rsi]
0x00000000001c1bae : add dword ptr [rax], eax ; push rsp ; sub edi, esi ; call rsp
0x00000000001c0c0e : add dword ptr [rax], eax ; push rsp ; sub esi, ebp ; call qword ptr [rax]
0x00000000001c240e : add dword ptr [rax], eax ; push rsp ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000001d71a2 : add dword ptr [rax], eax ; pushfq ; hlt ; jmp qword ptr [rcx]
0x00000000001da192 : add dword ptr [rax], eax ; pushfq ; idiv eax ; jmp qword ptr [rbx]
0x00000000001d3c12 : add dword ptr [rax], eax ; pushfq ; test dl, dh ; call qword ptr [rdi]
0x00000000001d4ba2 : add dword ptr [rax], eax ; pushfq ; xchg ebx, esi ; call rdx
0x00000000001dfc4e : add dword ptr [rax], eax ; rcr byte ptr [rbx - 9], 1 ; call qword ptr [rdi]
0x00000000001c061e : add dword ptr [rax], eax ; ret
0x00000000001e3343 : add dword ptr [rax], eax ; ret 0x502
0x00000000001c368e : add dword ptr [rax], eax ; retf
0x00000000001da142 : add dword ptr [rax], eax ; sbb al, 0x62 ; cmc ; jmp qword ptr [rbx]
0x00000000001db312 : add dword ptr [rax], eax ; sbb al, 0x99 ; cmc ; call qword ptr [rdi]
0x00000000001d8412 : add dword ptr [rax], eax ; sbb al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001db992 : add dword ptr [rax], eax ; sbb al, 0xbc ; cmc ; jmp qword ptr [rdx]
0x00000000001d5952 : add dword ptr [rax], eax ; sbb al, 0xc4 ; jmp qword ptr [rcx]
0x00000000001d62b2 : add dword ptr [rax], eax ; sbb al, 3 ; hlt ; jmp qword ptr [rcx]
0x00000000001dff56 : add dword ptr [rax], eax ; sbb byte ptr [rdx - 9], ch ; call rax
0x00000000001c0aee : add dword ptr [rax], eax ; sbb r14b, bpl ; call qword ptr [rax]
0x00000000001e2652 : add dword ptr [rax], eax ; sbb r15b, al ; jmp qword ptr [rcx]
0x00000000001d5b9e : add dword ptr [rax], eax ; shl bh, 0xf3 ; jmp rax
0x00000000001e2f1e : add dword ptr [rax], eax ; shl byte ptr [rdi], 1 ; sti ; call rax
0x00000000001db69a : add dword ptr [rax], eax ; stosd dword ptr [rdi], eax ; cmc ; call qword ptr [rbx]
0x00000000001da2d2 : add dword ptr [rax], eax ; sub al, 0x63 ; cmc ; jmp qword ptr [rbx]
0x00000000001d7c42 : add dword ptr [rax], eax ; sub al, 0x7c ; hlt ; jmp qword ptr [rcx]
0x00000000001d9e66 : add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], al ; jmp rdi
0x00000000001dcc06 : add dword ptr [rax], eax ; sub byte ptr [rsi - 0xa], al ; jmp qword ptr [rbx]
0x00000000001d8476 : add dword ptr [rax], eax ; test al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001db7b6 : add dword ptr [rax], eax ; test al, 0xb2 ; cmc ; call rdi
0x00000000001dc27a : add dword ptr [rax], eax ; test al, bh ; cmc ; call rsp
0x00000000001c2226 : add dword ptr [rax], eax ; test byte ptr [rbx], ch ; clc ; jmp qword ptr [rax]
0x00000000001c0406 : add dword ptr [rax], eax ; test byte ptr [rsi - 0xe], bl ; call rax
0x00000000001c23ee : add dword ptr [rax], eax ; xchg eax, edi ; jmp rsp
0x00000000001e232a : add dword ptr [rax], eax ; xchg eax, esp ; adc al, bh ; call qword ptr [rbx]
0x00000000001da16a : add dword ptr [rax], eax ; xchg eax, esp ; idiv eax ; jmp qword ptr [rbx]
0x00000000001c0526 : add dword ptr [rax], eax ; xchg eax, esp ; jl 0x1c0521 ; call rax
0x00000000001c0526 : add dword ptr [rax], eax ; xchg eax, esp ; jl 0x1c0522 ; call rax
0x00000000001c04d6 : add dword ptr [rax], eax ; xchg eax, esp ; jne 0x1c04d1 ; call rsp
0x00000000001c04d6 : add dword ptr [rax], eax ; xchg eax, esp ; jne 0x1c04d2 ; call rsp
0x00000000001db05a : add dword ptr [rax], eax ; xchg eax, esp ; nop ; cmc ; call qword ptr [rbx]
0x00000000001d4e8a : add dword ptr [rax], eax ; xchg eax, esp ; pushfq ; call qword ptr [rbx]
0x00000000001bfa7e : add dword ptr [rax], eax ; xchg eax, esp ; sub al, 0xee ; call rax
0x00000000001c338e : add dword ptr [rax], eax ; xchg eax, esp ; xchg esp, edi ; call qword ptr [rax]
0x00000000001d4842 : add dword ptr [rax], eax ; xlatb ; retf
0x00000000001bf9de : add dword ptr [rax], eax ; xor al, 0x12 ; out dx, al ; jmp rax
0x00000000001c0b9e : add dword ptr [rax], eax ; xor al, 0x22 ; cmc ; jmp qword ptr [rax]
0x00000000001c0f46 : add dword ptr [rax], eax ; xor al, 0x94 ; cmc ; jmp rsp
0x00000000001c332e : add dword ptr [rax], eax ; xor al, 0x95 ; sti ; call rsp
0x00000000001d7e8a : add dword ptr [rax], eax ; xor al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x00000000001d528a : add dword ptr [rax], eax ; xor al, 0xa8 ; jmp qword ptr [rcx]
0x00000000001dbcea : add dword ptr [rax], eax ; xor al, 0xd1 ; cmc ; jmp rsp
0x00000000001bf8de : add dword ptr [rax], eax ; xor al, 0xfc ; in eax, dx ; call rsp
0x00000000001bf906 : add dword ptr [rax], eax ; xor al, 0xff ; in eax, dx ; jmp rax
0x00000000001d92fe : add dword ptr [rax], eax ; xor dl, bl ; hlt ; call rsi
0x00000000001c034e : add dword ptr [rax], eax ; xor edx, esi ; jmp rax
0x00000000000a8303 : add dword ptr [rax], edi ; adc al, 7 ; je 0xa8307 ; ret
0x00000000000eac0e : add dword ptr [rax], esi ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001d7d89 : add dword ptr [rax], r8d ; add al, 0x99 ; hlt ; call qword ptr [rax]
0x00000000001d7ddd : add dword ptr [rax], r8d ; jo 0x1d7d81 ; hlt ; jmp qword ptr [rcx]
0x00000000001d7c41 : add dword ptr [rax], r8d ; sub al, 0x7c ; hlt ; jmp qword ptr [rcx]
0x00000000000a3e56 : add dword ptr [rbp + 0x19], eax ; fild dword ptr [rcx - 0x7d] ; ret
0x000000000004aed6 : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x00000000000a4ec6 : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x8303
0x00000000000a6cc2 : add dword ptr [rbp + 0x19], ecx ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000000a6cae : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8303
0x00000000000a7175 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8304
0x00000000000a3e41 : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000a41df : add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000a1eda : add dword ptr [rbp + 0x29], eax ; retf
0x00000000000a24ba : add dword ptr [rbp + 0x29], eax ; retf 0x634d
0x00000000000a1f7a : add dword ptr [rbp + 0x38], eax ; ret 0x3075
0x00000000000a1fda : add dword ptr [rbp + 0x38], eax ; ret 0x850f
0x00000000000a682a : add dword ptr [rbp + 0x38], eax ; retf 0x2475
0x00000000000a2b32 : add dword ptr [rbp + 0x38], eax ; retf 0x2775
0x00000000000a21f2 : add dword ptr [rbp + 0x38], eax ; retf 0x2875
0x00000000000a687a : add dword ptr [rbp + 0x38], eax ; retf 0x6675
0x00000000000a2252 : add dword ptr [rbp + 0x38], eax ; retf 0x7875
0x00000000000a2b8a : add dword ptr [rbp + 0x38], eax ; retf 0x7d75
0x0000000000129e2c : add dword ptr [rbp + 0x38], ebx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000044084 : add dword ptr [rbp + 0x39], ecx ; ret
0x000000000010fb4a : add dword ptr [rbp + 0x43], esi ; mov eax, 0x10c ; syscall
0x00000000001ac904 : add dword ptr [rbp + 0x6c], ebx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x000000000015c622 : add dword ptr [rbp + 0xb], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000145f58 : add dword ptr [rbp + rsi - 9], esi ; ret 0
0x0000000000131c65 : add dword ptr [rbp - 0x18], esi ; mov rax, rdi ; ret
0x0000000000052540 : add dword ptr [rbp - 0x23], esi ; mov eax, 1 ; ret
0x00000000001180fc : add dword ptr [rbp - 0x2f], esi ; ret
0x0000000000062150 : add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x00000000000cc449 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000043ea0 : add dword ptr [rbp - 0x77], ecx ; retf
0x00000000000a14c7 : add dword ptr [rbp - 0x7a], esi ; pop rbx ; pop rbp ; ret
0x00000000000595b2 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000000fed25 : add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000a14b4 : add dword ptr [rbp - 0xf], esi ; pop rbx ; pop rbp ; ret
0x00000000000a1304 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000a13c4 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000001accea : add dword ptr [rbp - 9], 0x8d626770 ; rcl byte ptr [rdi], cl ; retf
0x00000000001745b2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000004aed3 : add dword ptr [rbx + 0x194501fa], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x00000000001ab8ca : add dword ptr [rbx + 0x1e40293b], ebp ; cli ; test bh, dl ; retf 0xdf7f
0x00000000000a1efa : add dword ptr [rbx + 0x294803e0], eax ; ret 0x148
0x00000000000a5440 : add dword ptr [rbx + 0x294803e0], eax ; ret 0x14c
0x00000000000ed6aa : add dword ptr [rbx + 0x294803e0], eax ; ret 0x8d48
0x000000000000279a : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x0000000000102e27 : add dword ptr [rbx + 0x394101c0], eax ; ret 0x6348
0x00000000001e3557 : add dword ptr [rbx + 0x4b702], esi ; ret 0x504
0x00000000000efca6 : add dword ptr [rbx + 0x634901e8], eax ; retf 0x144
0x000000000012f26a : add dword ptr [rbx + rcx*4 + 0x2c], ecx ; ret 0x894c
0x0000000000124a22 : add dword ptr [rbx + rcx*4 + 0x7a], ecx ; sub byte ptr [rcx], bh ; ret
0x0000000000068552 : add dword ptr [rbx - 0x4ef43], eax ; jmp qword ptr [rax]
0x000000000003c9be : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000e80ee : add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xeb01
0x000000000013e28b : add dword ptr [rbx - 0x877b], ecx ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x0000000000044321 : add dword ptr [rbx], eax ; add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x00000000001db9be : add dword ptr [rbx], eax ; ret
0x00000000001e340f : add dword ptr [rbx], ecx ; ret
0x000000000006422f : add dword ptr [rcx + 0x38700a0d], ecx ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000000ca986 : add dword ptr [rcx + 0x39], eax ; ret
0x0000000000102e2a : add dword ptr [rcx + 0x39], eax ; ret 0x6348
0x0000000000041d42 : add dword ptr [rcx + 0x39], ecx ; ret
0x00000000000ef841 : add dword ptr [rcx + 0x39], ecx ; ret 0x860f
0x00000000000ef9a5 : add dword ptr [rcx + 0x39], ecx ; ret 0xdf77
0x000000000008f6ac : add dword ptr [rcx + 0x58b4803], ecx ; retf 0x35e1
0x00000000000efca9 : add dword ptr [rcx + 0x63], ecx ; retf 0x144
0x0000000000047670 : add dword ptr [rcx + 0xf], eax ; mov esi, 0x8941240c ; retf
0x0000000000142260 : add dword ptr [rcx + 0xf], eax ; xchg eax, edi ; ret 0xf631
0x00000000000e7c95 : add dword ptr [rcx + 0xf], eax ; xchg eax, esp ; ret 0x5c3c
0x000000000012db13 : add dword ptr [rcx + 0xf], ecx ; mov esi, 0x89482404 ; ret 0xe883
0x000000000010f33a : add dword ptr [rcx + 0xf], ecx ; ret
0x000000000011d933 : add dword ptr [rcx + 9], ecx ; ret
0x00000000001503ce : add dword ptr [rcx + 9], ecx ; retf
0x000000000011d3e6 : add dword ptr [rcx + rcx*4 + 0x5f], ecx ; or byte ptr [rcx - 0x77], cl ; retf
0x00000000000420ba : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x00000000001167f3 : add dword ptr [rcx - 0x76b6ffd3], esp ; retf 0x8b
0x00000000000b3476 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000007cefe : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000002868f : add dword ptr [rcx - 0x77], eax ; retf
0x00000000000a6a51 : add dword ptr [rcx - 0x77], ecx ; ret
0x00000000000f82f6 : add dword ptr [rcx - 0x77], ecx ; ret 0xc149
0x00000000000a303f : add dword ptr [rcx - 0x77], ecx ; retf
0x000000000002dda8 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000002f8f7 : add dword ptr [rcx - 0x7d], eax ; dec dword ptr [rip - 0x7cb79d8c] ; ret
0x00000000000c8832 : add dword ptr [rcx - 0x7d], eax ; in al, dx ; add dword ptr [rax - 0x7d], ecx ; ret 0x4501
0x000000000006c7ca : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000062d41 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x0000000000140f13 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x00000000001c0de5 : add dword ptr [rcx], 0xf57bb400 ; call qword ptr [rax]
0x00000000001db92d : add dword ptr [rcx], 0xf5bab000 ; call rdx
0x00000000000d07fb : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x0000000000140a91 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x000000000010fead : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000001956de : add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x00000000001956dc : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000000000131c64 : add dword ptr [rcx], eax ; jne 0x131c57 ; mov rax, rdi ; ret
0x00000000000faffb : add dword ptr [rcx], eax ; retf 0x3948
0x00000000000ed73c : add dword ptr [rcx], ebp ; ret 0x6348
0x00000000000fd65c : add dword ptr [rcx], ebp ; retf
0x00000000000efedd : add dword ptr [rcx], ebx ; rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x000000000008c6b3 : add dword ptr [rcx], ecx ; retf 0xd284
0x0000000000142b40 : add dword ptr [rcx], edi ; ret
0x000000000006b619 : add dword ptr [rcx], edi ; ret 0x850f
0x00000000000f20ad : add dword ptr [rcx], edi ; ret 0x8e0f
0x000000000010f158 : add dword ptr [rcx], edi ; ret 0x8f0f
0x0000000000145ea1 : add dword ptr [rcx], edi ; ret 0xaf7c
0x0000000000145dc5 : add dword ptr [rcx], edi ; ret 0xb37f
0x00000000000fad0d : add dword ptr [rcx], edi ; ret 0xce75
0x0000000000060013 : add dword ptr [rcx], edi ; retf
0x00000000000f0330 : add dword ptr [rcx], edi ; retf 0xeb7f
0x00000000001ac815 : add dword ptr [rcx], edx ; cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000000bb992 : add dword ptr [rdi + 0x15], esi ; jb 0xbb9a0 ; mov byte ptr [rdi], cl ; ret
0x000000000015df20 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000015df30 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000015dfc3 : add dword ptr [rdi + 0x28], esi ; ret
0x000000000019adaa : add dword ptr [rdi + 3], esi ; ret
0x00000000000a37fb : add dword ptr [rdi + rcx - 0x4a], eax ; ret
0x00000000000a0d4c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001dfc23 : add dword ptr [rdi], 2 ; ret
0x00000000001d4382 : add dword ptr [rdi], 3 ; retf 0xa02
0x000000000009ed87 : add dword ptr [rdi], ecx ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000000ee025 : add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x00000000000305d5 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x000000000002ac80 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000a722d : add dword ptr [rdi], ecx ; mov dh, 0x45 ; ret
0x00000000000a3f3c : add dword ptr [rdi], ecx ; mov dh, 0x55 ; ret
0x0000000000095df3 : add dword ptr [rdi], ecx ; ret 0x8948
0x00000000001546b1 : add dword ptr [rdi], ecx ; retf 0xc80f
0x00000000000d8a5b : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000000bbd81 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000019b8fb : add dword ptr [rdi], ecx ; test bl, al ; add eax, 0x89490000 ; ret 0x8349
0x000000000017edfe : add dword ptr [rdi], ecx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000285f1 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000012e5e3 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x0000000000140e85 : add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x0000000000105aa8 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000050fee : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x0000000000050ffc : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x00000000000b3434 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x0000000000192c9c : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000007bdee : add dword ptr [rdx + 4], 1 ; ret
0x000000000007be60 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000001925cd : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000012428b : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000001ac4ef : add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000001d19bc : add dword ptr [rdx], 0x4a ; ret
0x00000000001cd760 : add dword ptr [rdx], 0x5a ; ret
0x0000000000140f1e : add dword ptr [rdx], eax ; pop rbx ; ret
0x00000000001c86e6 : add dword ptr [rdx], eax ; ret 0xe0a
0x00000000001dd577 : add dword ptr [rdx], eax ; retf
0x00000000001e31cf : add dword ptr [rdx], ecx ; jne 0x1e31dc ; retf
0x00000000001e3466 : add dword ptr [rdx], ecx ; jne 0x1e3473 ; retf
0x0000000000140f1d : add dword ptr [rdx], r8d ; pop rbx ; ret
0x000000000008fe88 : add dword ptr [rip + 0x35da15], 1 ; ret
0x000000000011b18c : add dword ptr [rip - 0x7af0ff00], ebp ; ret 0
0x000000000007f728 : add dword ptr [rsi + 0x48], esi ; mov eax, edx ; pop rbx ; ret
0x00000000000b33c5 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x00000000001cb797 : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000000b3447 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000008e939 : add dword ptr [rsp - 0x7d], esi ; retf 0x4c01
0x00000000001d65c1 : add dword ptr cs:[rax], eax ; in al, dx ; or esp, esi ; jmp qword ptr [rcx]
0x00000000001d6579 : add dword ptr cs:[rax], eax ; je 0x1d658d ; hlt ; jmp qword ptr [rcx]
0x00000000001d75d9 : add dword ptr ds:[rax], eax ; add al, 0x5d ; hlt ; call rsi
0x000000000018de47 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000ff958 : add dword ptr fs:[rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000001d9c89 : add dword ptr gs:[rax], eax ; and al, 0x1c ; cmc ; call rdx
0x00000000000bce05 : add dword ptr ss:[eax], eax ; cmovne rax, rdx ; ret
0x00000000000bce06 : add dword ptr ss:[rax], eax ; cmovne rax, rdx ; ret
0x0000000000001521 : add eax, 0 ; add byte ptr [rax], al ; retf
0x00000000001401d6 : add eax, 0x10 ; ret
0x00000000001b1dec : add eax, 0x10 ; retf 8
0x00000000000a0810 : add eax, 0x1090b ; cmove rax, rdx ; ret
0x00000000000bd430 : add eax, 0x12d0b ; cmove rax, rdx ; ret
0x00000000000bd210 : add eax, 0x1341b ; cmove rax, rdx ; ret
0x000000000009dd90 : add eax, 0x1359b ; cmove rax, rdx ; ret
0x00000000000bce04 : add eax, 0x13667 ; cmovne rax, rdx ; ret
0x000000000009dc90 : add eax, 0x1398b ; cmove rax, rdx ; ret
0x000000000009dcc0 : add eax, 0x13afb ; cmove rax, rdx ; ret
0x00000000000bced0 : add eax, 0x13d2b ; cmove rax, rdx ; ret
0x0000000000068ea4 : add eax, 0x1410000 ; ret 0x8949
0x00000000000bc110 : add eax, 0x1438b ; cmove rax, rdx ; ret
0x00000000000c80a2 : add eax, 0x14c0000 ; ret 0x28b
0x00000000000d5f2e : add eax, 0x16d ; ret
0x000000000002f0f1 : add eax, 0x184b83 ; ret
0x000000000003eb60 : add eax, 0x18c48348 ; ret
0x0000000000021c92 : add eax, 0x191b34 ; ret
0x0000000000021ca2 : add eax, 0x193971 ; ret
0x000000000009ad4f : add eax, 0x1ba0035 ; add byte ptr [rax], al ; add cl, ch ; retf
0x000000000009eb37 : add eax, 0x1c274 ; cmove rax, rdx ; ret
0x000000000009f131 : add eax, 0x1c32a ; cmovne rax, rdx ; ret
0x000000000009ee31 : add eax, 0x1c60a ; cmovne rax, rdx ; ret
0x000000000009ecc1 : add eax, 0x1c79a ; cmovne rax, rdx ; ret
0x000000000009ed9b : add eax, 0x1cad0 ; cmovne rax, rdx ; ret
0x000000000009e064 : add eax, 0x1d327 ; cmovne rax, rdx ; ret
0x000000000009ddb4 : add eax, 0x1d537 ; cmovne rax, rdx ; ret
0x000000000009d884 : add eax, 0x1d9c7 ; cmovne rax, rdx ; ret
0x000000000018a62a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x0000000000163625 : add eax, 0x288f26 ; call qword ptr [rax]
0x0000000000162fd8 : add eax, 0x289573 ; call qword ptr [rax]
0x000000000016648a : add eax, 0x28a019 ; call qword ptr [rax]
0x0000000000043a40 : add eax, 0x28c48348 ; ret
0x000000000009df53 : add eax, 0x29000000 ; ret
0x0000000000159981 : add eax, 0x291502 ; pop rbx ; ret
0x0000000000159952 : add eax, 0x291531 ; pop rbx ; ret
0x00000000001598c1 : add eax, 0x29162a ; pop rbx ; ret
0x0000000000159892 : add eax, 0x291659 ; pop rbx ; ret
0x0000000000159801 : add eax, 0x2917da ; pop rbx ; ret
0x00000000001597d2 : add eax, 0x291809 ; pop rbx ; ret
0x0000000000159749 : add eax, 0x29183a ; pop rbx ; ret
0x00000000001596c2 : add eax, 0x2918c1 ; pop rbx ; ret
0x0000000000026d1f : add eax, 0x29480000 ; ret 0x349
0x000000000014c7fa : add eax, 0x2a375d ; add rsp, 8 ; ret
0x0000000000145c92 : add eax, 0x2a5351 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000013d3f0 : add eax, 0x2af5ab ; add rsp, 8 ; ret
0x000000000003105e : add eax, 0x2b9 ; add byte ptr [rax - 0x75], cl ; pop rsp ; retf
0x00000000001310d9 : add eax, 0x2be1a2 ; pop rbp ; ret
0x000000000017ee84 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x0000000000124de2 : add eax, 0x2c6071 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011c620 : add eax, 0x2d1d5b ; add rsp, 0x18 ; ret
0x000000000011c5cc : add eax, 0x2d1def ; pop rbp ; pop r12 ; ret
0x000000000011bdd8 : add eax, 0x2d2553 ; add rsp, 8 ; ret
0x000000000011bd79 : add eax, 0x2d25d2 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118000 : add eax, 0x2d48db ; add rsp, 8 ; ret
0x0000000000117ebe : add eax, 0x2d6235 ; ret
0x0000000000117cde : add eax, 0x2d6415 ; ret
0x0000000000117ae0 : add eax, 0x2d6613 ; add rsp, 8 ; ret
0x0000000000106894 : add eax, 0x2e45cf ; mov r8, rax ; call r12
0x00000000001542d8 : add eax, 0x31000000 ; in eax, dx ; call 0x30d78
0x00000000000d13de : add eax, 0x31c73d ; add rsp, 8 ; ret
0x00000000001c8a20 : add eax, 0x3400e4e ; ret
0x000000000009cd4b : add eax, 0x34e1f8 ; call qword ptr [rax]
0x000000000009cc86 : add eax, 0x34e2bd ; call qword ptr [rax]
0x000000000009cbcb : add eax, 0x34e378 ; call qword ptr [rax]
0x000000000009de19 : add eax, 0x34fbca ; ret
0x000000000009ddff : add eax, 0x34fbe4 ; add rsp, 8 ; ret
0x0000000000097050 : add eax, 0x353e7b ; mov qword ptr [rax], rdi ; ret
0x0000000000097061 : add eax, 0x35689e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000094048 : add eax, 0x356d73 ; xor edi, edi ; call qword ptr [rax]
0x0000000000090dc6 : add eax, 0x35a105 ; mov qword ptr [rax], rdx ; ret
0x00000000000908b8 : add eax, 0x35a9d3 ; ret
0x00000000000908cf : add eax, 0x35a9d8 ; ret
0x0000000000090890 : add eax, 0x35a9f3 ; ret
0x0000000000090870 : add eax, 0x35aa0b ; ret
0x0000000000090756 : add eax, 0x35ab8d ; ret
0x0000000000090746 : add eax, 0x35ab95 ; ret
0x00000000000906f6 : add eax, 0x35ab9d ; ret
0x00000000000906e6 : add eax, 0x35abb5 ; ret
0x000000000008fdf2 : add eax, 0x35c869 ; ret
0x0000000000090d71 : add eax, 0x35cb8e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000908e5 : add eax, 0x35d042 ; ret
0x000000000008feed : add eax, 0x35d9b2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000a86e0 : add eax, 0x37bb ; cmove rax, rdx ; ret
0x0000000000117886 : add eax, 0x38c48348 ; ret
0x000000000004013c : add eax, 0x3ab06b ; mov eax, edx ; ret
0x0000000000040101 : add eax, 0x3ab0a2 ; ret
0x00000000000400f1 : add eax, 0x3ab0b6 ; ret
0x0000000000044602 : add eax, 0x3ac03f ; add rsp, 8 ; ret
0x000000000003019f : add eax, 0x3bac3c ; mov qword ptr [rax], rdx ; ret
0x000000000002bdc2 : add eax, 0x3c0c69 ; ret
0x00000000000238a2 : add eax, 0x3ccc31 ; ret
0x0000000000023892 : add eax, 0x3ccc51 ; ret
0x000000000018a64a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000131058 : add eax, 0x41000000 ; pop rsp ; pop rbp ; ret
0x00000000001335c8 : add eax, 0x440f4800 ; ret 0x90c3
0x0000000000167146 : add eax, 0x440f4c00 ; retf 0x8d48
0x0000000000087792 : add eax, 0x4488b41 ; and eax, 1 ; mov edx, eax ; jmp 0x87756
0x0000000000131963 : add eax, 0x450f4800 ; ret 0x66c3
0x0000000000131b58 : add eax, 0x450f4800 ; ret 0x90c3
0x000000000007f7a1 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x0000000000090dc7 : add eax, 0x480035a1 ; mov dword ptr [rax], edx ; ret
0x00000000001813b8 : add eax, 0x48054289 ; lea eax, [rdx + 8] ; ret
0x000000000017d068 : add eax, 0x48054289 ; mov eax, edi ; ret
0x00000000000b6966 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000015c4e2 : add eax, 0x48c48348 ; ret
0x00000000000013b9 : add eax, 0x50d0000 ; add byte ptr [rax], al ; syscall
0x0000000000181439 : add eax, 0x5428948 ; lea rax, [rdx + 0xc] ; ret
0x000000000017d0a9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000001e6071 : add eax, 0x5700000 ; add byte ptr [rax], al ; retf 7
0x0000000000164c8d : add eax, 0x5894800 ; ret 0x2878
0x0000000000117808 : add eax, 0x58c48348 ; ret
0x00000000001542fc : add eax, 0x5ba00 ; add byte ptr [rax], al ; call 0x30d79
0x00000000001a84dd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000008426a : add eax, 0x5c415d5b ; ret
0x00000000001a84ed : add eax, 0x5c80000 ; add byte ptr [rax], al ; retf 5
0x0000000000131b00 : add eax, 0x5cf3b ; cmovne rax, rdx ; ret
0x0000000000108c7d : add eax, 0x5d000000 ; pop r12 ; ret
0x0000000000131a30 : add eax, 0x5d02b ; cmovne rax, rdx ; ret
0x0000000000131960 : add eax, 0x5d0fb ; cmovne rax, rdx ; ret
0x0000000000131b55 : add eax, 0x5d386 ; cmovne rax, rdx ; ret
0x000000000018aa73 : add eax, 0x60 ; add rax, rdi ; ret
0x000000000018a66a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x0000000000131adf : add eax, 0x6133c ; cmovne rax, rdx ; ret
0x0000000000131a0f : add eax, 0x6142c ; cmovne rax, rdx ; ret
0x000000000013193f : add eax, 0x614fc ; cmovne rax, rdx ; ret
0x0000000000131b9f : add eax, 0x6184c ; cmovne rax, rdx ; ret
0x00000000001c3d25 : add eax, 0x63880000 ; std ; jmp qword ptr [rdx]
0x00000000000ef7f1 : add eax, 0x6f0f6600 ; enter 0xf66, -0x2c ; ret
0x00000000000cbc6a : add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000cbc16 : add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x00000000001e3f55 : add eax, 0x7800000 ; add byte ptr [rax], al ; ret 1
0x0000000000159d32 : add eax, 0x78c48348 ; ret
0x00000000000f68ba : add eax, 0x7b8b4828 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000010a8a0 : add eax, 0x80410000 ; jmp qword ptr [rdi]
0x00000000000b716e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x0000000000184f6d : add eax, 0x83480000 ; ret 0x4910
0x0000000000187ac1 : add eax, 0x83480000 ; ret 0xe910
0x0000000000184ec1 : add eax, 0x83480000 ; ret 0xeb10
0x0000000000094618 : add eax, 0x83480000 ; retf 0x4801
0x00000000001813bb : add eax, 0x8428d48 ; ret
0x00000000000876d7 : add eax, 0x8901e083 ; ret 0xd089
0x0000000000103808 : add eax, 0x892c4389 ; ret 0x7b83
0x000000000003ee68 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000198bc6 : add eax, 0x89480000 ; ret 0x8949
0x00000000000d347d : add eax, 0x89489066 ; ret
0x00000000000e0d90 : add eax, 0x8948fff4 ; ret 0x8948
0x000000000019b8ff : add eax, 0x89490000 ; ret 0x8349
0x00000000000ab368 : add eax, 0x894d0000 ; retf
0x00000000001e65ed : add eax, 0x91c0000 ; add byte ptr [rax], al ; retf
0x000000000011f6ea : add eax, 0x960e9 ; pop rbx ; ret
0x00000000000b8822 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000015982e : add eax, 0xa0 ; pop rbx ; ret
0x00000000001598ee : add eax, 0xa8 ; pop rbx ; ret
0x00000000000a07e0 : add eax, 0xb4bb ; cmove rax, rdx ; ret
0x00000000000cb919 : add eax, 0xb5748b41 ; add byte ptr [rbp + 0x39], cl ; retf
0x000000000019101a : add eax, 0xc0310000 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x000000000018143d : add eax, 0xc428d48 ; ret
0x00000000000b7fad : add eax, 0xc478d48 ; ret
0x000000000009ec00 : add eax, 0xcd6b ; cmove rax, rdx ; ret
0x00000000000bd495 : add eax, 0xd1bc6 ; je 0xbd464 ; ret
0x00000000000bd495 : add eax, 0xd1bc6 ; je 0xbd466 ; ret
0x00000000000b8dfd : add eax, 0xd478d48 ; ret
0x0000000000029802 : add eax, 0xe9000000 ; ret
0x0000000000161efc : add eax, 0xebcf894d ; retf 0x8b48
0x000000000009ec65 : add eax, 0xebf36 ; je 0x9ec34 ; ret
0x000000000009ec65 : add eax, 0xebf36 ; je 0x9ec36 ; ret
0x000000000009f1a0 : add eax, 0xef8cb ; cmovne rax, rdx ; ret
0x000000000009eea0 : add eax, 0xefbab ; cmovne rax, rdx ; ret
0x000000000009ed30 : add eax, 0xefd3b ; cmovne rax, rdx ; ret
0x000000000009ed85 : add eax, 0xf0166 ; cmovne rax, rdx ; ret
0x000000000009f17f : add eax, 0xf3ccc ; cmovne rax, rdx ; ret
0x000000000009ee7f : add eax, 0xf3fac ; cmovne rax, rdx ; ret
0x000000000009ed0f : add eax, 0xf413c ; cmovne rax, rdx ; ret
0x000000000009edcf : add eax, 0xf462c ; cmovne rax, rdx ; ret
0x000000000004fc43 : add eax, 0xf486e800 ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000001745a3 : add eax, 0xf7f0ff3 ; ret
0x0000000000066303 : add eax, 0xf8834800 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000131a91 : add eax, 0xfff8999a ; cmovne rax, rdx ; ret
0x00000000001319c1 : add eax, 0xfff89a8a ; cmovne rax, rdx ; ret
0x00000000001318f1 : add eax, 0xfff89b5a ; cmovne rax, rdx ; ret
0x0000000000131b6b : add eax, 0xfff89cf0 ; cmovne rax, rdx ; ret
0x00000000001e340a : add eax, 0xffff0000 ; add dword ptr [rbx], ecx ; ret
0x00000000001e31ca : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1e31e1 ; retf
0x00000000001e3461 : add eax, 0xffff0000 ; add dword ptr [rdx], ecx ; jne 0x1e3478 ; retf
0x000000000010f5a4 : add eax, 0xffffff47 ; cmove rax, rdx ; ret
0x00000000000a8301 : add eax, 1 ; cmp byte ptr [rdi + rax], dl ; je 0xa8309 ; ret
0x00000000001244db : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000001245dc : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000514f1 : add eax, 1 ; pop rbx ; ret
0x0000000000022c05 : add eax, 1 ; push rax ; call rbx
0x000000000009eecb : add eax, 1 ; ret
0x00000000000d0df8 : add eax, 2 ; ret
0x00000000000d0e11 : add eax, 3 ; ret
0x00000000000efee3 : add eax, 8 ; ret
0x0000000000021f29 : add eax, dword ptr [0] ; ret
0x00000000000e233d : add eax, dword ptr [rax + rax*8 + 0x3948ee75] ; retf
0x0000000000092681 : add eax, dword ptr [rax + rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000013190e : add eax, dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x00000000000c7706 : add eax, dword ptr [rax] ; add al, ch ; ret 0xf68c
0x0000000000093c00 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000000924f6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000014742a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000139de0 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x2e66
0x0000000000097449 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000097610 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000021f85 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c7ebc : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000018510d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187c61 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185131 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000435cf : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000237e4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000153dce : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000123e46 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000130e36 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000000000a7c28 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0xa3e8a
0x000000000011d1ec : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x00000000000d0e53 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001108ce : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000186108 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001e5929 : add eax, dword ptr [rax] ; add byte ptr [rbx + 6], bh ; add byte ptr [rax], al ; ret 4
0x00000000000d58a3 : add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0xd], cl ; ret
0x00000000000bbd7c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x000000000005d5c0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x00000000001599cf : add eax, dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x307f
0x000000000005a6cf : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000002163e : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret 0xc5eb
0x0000000000198eb0 : add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x0000000000130785 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x0000000000092477 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000001176f7 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000bba60 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a6cde : add eax, dword ptr [rbx + 0x194801fb] ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000000a3721 : add eax, dword ptr [rbx + 0x194801ff] ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000000a7172 : add eax, dword ptr [rbx + 0x194d01f8] ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8304
0x00000000000a41dc : add eax, dword ptr [rbx + 0x194d01fa] ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x000000000017ee49 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000001defc2 : add eax, dword ptr [rbx] ; retf 0xa09
0x000000000012584a : add eax, dword ptr [rcx + rdx] ; ret
0x00000000000286d0 : add eax, dword ptr [rcx - 0x77] ; retf
0x000000000011649a : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000010f8cb : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001bf905 : add eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*8], dh ; in eax, dx ; jmp rax
0x0000000000125626 : add eax, dword ptr [rdx + rcx] ; ret
0x000000000017ef49 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000001d3af6 : add eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000167145 : add eax, dword ptr [rip + 0x440f4c00] ; retf 0x8d48
0x00000000001c8062 : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000018dc3f : add eax, dword ptr cs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000efea5 : add eax, eax ; ret
0x000000000018ab41 : add eax, eax ; vzeroupper ; ret
0x00000000001be2c1 : add eax, ebp ; jmp qword ptr [rax]
0x0000000000031404 : add eax, ebp ; jmp rax
0x0000000000034ea6 : add eax, ebp ; push rsp ; ret 0xfffe
0x00000000000a1057 : add eax, ebp ; ret
0x0000000000095798 : add eax, ebp ; ret 0xffd4
0x000000000005192f : add eax, ebp ; retf
0x00000000000e7560 : add eax, ebp ; retf 0xf39c
0x0000000000034e66 : add eax, ebp ; xchg eax, esp ; ret 0xfffe
0x0000000000131be7 : add eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000018e248 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x00000000000687d0 : add eax, ecx ; jmp rax
0x00000000000ab9f9 : add eax, ecx ; ret
0x000000000018e5dd : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000018a4a6 : add eax, ecx ; vzeroupper ; ret
0x000000000018ab3e : add eax, edi ; add rax, r8 ; vzeroupper ; ret
0x00000000000ab9f6 : add eax, edi ; add rax, rcx ; ret
0x000000000018a4a3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x00000000000ac21a : add eax, edi ; add rax, rsi ; ret
0x000000000014166b : add eax, edi ; cmovs eax, edx ; ret
0x000000000005bd72 : add eax, edi ; jmp rax
0x00000000000a8486 : add eax, edi ; mov qword ptr [rdi], rdx ; ret
0x000000000007d6ef : add eax, edi ; mov rdx, r8 ; jmp 0x7d6c3
0x00000000000a8474 : add eax, edi ; ret
0x000000000018a3b0 : add eax, edi ; sub rax, r8 ; ret
0x000000000018e695 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x000000000018a15a : add eax, edi ; sub rax, rsi ; ret
0x000000000018a61a : add eax, edi ; vzeroupper ; ret
0x000000000010f50d : add eax, edx ; cmp rdi, rsi ; ja 0x10f508 ; ret
0x0000000000022410 : add eax, edx ; jmp rax
0x000000000014ec4e : add eax, edx ; ret
0x00000000000b17b6 : add eax, edx ; sub rax, rdi ; ret
0x00000000000d0afb : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000001176f5 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000005be10 : add eax, esi ; jmp rax
0x00000000000ac21d : add eax, esi ; ret
0x00000000001be2c0 : add eax, r13d ; jmp qword ptr [rax]
0x000000000005e998 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000034e64 : add ebp, 1 ; call 0x21105
0x00000000000dca48 : add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015ab04 : add ebp, dword ptr [rcx] ; add byte ptr [rbx + rax*4 + 0x38], ah ; add al, 0x75 ; ret
0x00000000000d1732 : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000011c598 : add ebp, dword ptr [rip + 0x5d5b5900] ; pop r12 ; ret
0x00000000000fd527 : add ebp, eax ; ret
0x00000000001046e3 : add ebp, eax ; xlatb ; retf
0x00000000001ab457 : add ebp, ebp ; retf
0x000000000013fe7a : add ebp, ecx ; retf
0x0000000000003276 : add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x00000000001becb9 : add ebp, esp ; call rsp
0x00000000000f502c : add ebx, 0x10 ; call 0x212cd
0x0000000000034ea4 : add ebx, 1 ; call 0x21105
0x0000000000166872 : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000008e341 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000013006c : add ebx, eax ; nop ; xor eax, eax ; ret
0x0000000000052c01 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000018acfb : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000140e68 : add ebx, eax ; nop word ptr [rax + rax] ; ret
0x0000000000121887 : add ebx, eax ; xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000000038b6 : add ebx, ebp ; in al, 0xee ; jne 0x389c ; ret 0x975
0x00000000001bd015 : add ebx, edi ; call qword ptr [rax]
0x0000000000134e43 : add ebx, esi ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000174763 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000124f1f : add ebx, esi ; ret
0x00000000000bb977 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0xbb96c ; ret
0x00000000000e98fa : add ecx, dword ptr [r8 - 0x7d] ; ret
0x00000000000b34ca : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x000000000013aadc : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000a1efd : add ecx, dword ptr [rax + 0x29] ; ret 0x148
0x00000000000a5443 : add ecx, dword ptr [rax + 0x29] ; ret 0x14c
0x000000000012cd1e : add ecx, dword ptr [rax + 0x29] ; ret 0x3949
0x000000000012cccf : add ecx, dword ptr [rax + 0x29] ; ret 0x394c
0x00000000000a0b5f : add ecx, dword ptr [rax + 0x29] ; ret 0x8949
0x00000000000ed6ad : add ecx, dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000002b6fd : add ecx, dword ptr [rax + 0x39] ; ret
0x00000000000297ad : add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000198edf : add ecx, dword ptr [rax + 0x39] ; retf 0x1f77
0x000000000004201e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000135519 : add ecx, dword ptr [rax + 9] ; ret 0x850f
0x0000000000196a35 : add ecx, dword ptr [rax + 9] ; retf
0x0000000000123e9d : add ecx, dword ptr [rax - 0x42] ; ret
0x00000000000a4f8d : add ecx, dword ptr [rax - 0x49f0c4ec] ; push rbp ; ret 0x5488
0x000000000019a7a2 : add ecx, dword ptr [rax - 0x73] ; insb byte ptr [rdi], dx ; ret
0x0000000000046098 : add ecx, dword ptr [rax - 0x73] ; lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000015997e : add ecx, dword ptr [rax - 0x75] ; add eax, 0x291502 ; pop rbx ; ret
0x00000000001598be : add ecx, dword ptr [rax - 0x75] ; add eax, 0x29162a ; pop rbx ; ret
0x00000000001597fe : add ecx, dword ptr [rax - 0x75] ; add eax, 0x2917da ; pop rbx ; ret
0x0000000000159746 : add ecx, dword ptr [rax - 0x75] ; add eax, 0x29183a ; pop rbx ; ret
0x0000000000118d44 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x00000000000b34ce : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x0000000000024113 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x0000000000173584 : add ecx, dword ptr [rax - 0x77] ; ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000013f9b3 : add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x00000000000dc325 : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000430f9 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000053770 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000197831 : add ecx, dword ptr [rbp - 0x77] ; retf
0x0000000000197e77 : add ecx, dword ptr [rbp - 0x77] ; retf 0x2148
0x00000000001744d2 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000015482d : add ecx, dword ptr [rbx + 0xf0c2454] ; retf 0x5089
0x00000000000b6904 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000ef534 : add ecx, dword ptr [rcx + 0x39] ; retf 0xf4c
0x000000000012e70c : add ecx, dword ptr [rcx - 0x75] ; sbb byte ptr [rax + 1], r9b ; ret 0x8948
0x00000000000b34cb : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x00000000000dc94a : add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000003d248 : add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x000000000013ec96 : add ecx, dword ptr [rdi] ; test byte ptr [rbx - 0x7d000000], dh ; ret 0x8103
0x000000000013ec3f : add ecx, dword ptr [rdi] ; test dl, ah ; add byte ptr [rax], al ; add byte ptr [rsi - 0x7d], ah ; call qword ptr [rax]
0x00000000000b7130 : add ecx, dword ptr [rdi] ; test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x00000000000cc44f : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000cc4ad : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000000dce28 : add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001c5ff1 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000166b89 : add ecx, dword ptr [rsp + 8] ; call rax
0x00000000000617c9 : add ecx, eax ; mov eax, r9d ; ret
0x000000000007a87f : add ecx, ebp ; retf
0x00000000000675c6 : add ecx, ebp ; retf 0xffe8
0x0000000000027d35 : add ecx, ebp ; retf 0xfff6
0x000000000016c76b : add ecx, ebx ; jmp r9
0x000000000018ffe2 : add ecx, ebx ; jmp rcx
0x000000000011cbac : add ecx, ebx ; ret
0x000000000011c7c8 : add ecx, ebx ; ret 0x3941
0x00000000000a8462 : add ecx, ecx ; jmp rcx
0x00000000000bba34 : add ecx, esi ; jmp rcx
0x0000000000153add : add edi, 0x10 ; jmp rcx
0x000000000014e47a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000001567a4 : add edi, 0x58 ; jmp rcx
0x0000000000155e74 : add edi, 0x68 ; jmp rcx
0x0000000000152ed7 : add edi, 0xc8 ; jmp rcx
0x00000000001686e6 : add edi, 1 ; mov rdx, rax ; jmp 0x16868d
0x00000000000e8ab6 : add edi, 1 ; mov rdx, rax ; jmp 0xe8a5d
0x0000000000103848 : add edi, dword ptr [rcx] ; retf 0x840f
0x000000000004094f : add edi, dword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x00000000001185c6 : add edi, eax ; add bl, byte ptr [rax + rsi + 0x34] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000a0c6c : add edi, eax ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x0000000000121fcd : add edi, ebp ; xor eax, eax ; ret
0x00000000001bd059 : add edi, ebx ; call rax
0x000000000002e784 : add edi, ebx ; jmp rdi
0x00000000001c2659 : add edi, ecx ; call qword ptr [rax]
0x000000000016c768 : add edi, edx ; add r9, r11 ; jmp r9
0x00000000001c71dd : add edi, edx ; jmp qword ptr [rcx]
0x000000000003ca4c : add edi, edx ; jmp rdi
0x00000000001411c5 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000014274c : add edx, 1 ; syscall
0x00000000000ac128 : add edx, eax ; jl 0xac197 ; add rax, rdi ; ret
0x00000000000ac138 : add edx, eax ; jl 0xac199 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ac158 : add edx, eax ; jl 0xac199 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ac178 : add edx, eax ; jl 0xac199 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000a8536 : add edx, eax ; jmp rdx
0x00000000000539d2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000440f6 : add edx, eax ; xor eax, eax ; mov dword ptr [rsi], r10d ; pop rbp ; ret
0x00000000000fb4d9 : add edx, ebp ; jmp rdx
0x000000000003d86f : add edx, ecx ; jmp 0x3d882
0x0000000000050c16 : add edx, ecx ; jmp 0x50c2a
0x0000000000050f17 : add edx, ecx ; jmp 0x50f2a
0x0000000000086b20 : add edx, ecx ; jmp 0x86b32
0x00000000000f29c7 : add edx, ecx ; jmp 0xf295d
0x000000000003c763 : add edx, edi ; jmp rdx
0x00000000000fbf0c : add edx, edx ; jmp rdx
0x00000000000521ec : add edx, esi ; cmp r9d, 0x2f ; jmp rdx
0x0000000000197731 : add edx, esp ; jmp rdx
0x0000000000154e75 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000ba989 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000131da4 : add esi, dword ptr [rbp - 0x6b] ; mov rax, rdi ; ret
0x00000000000446fc : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000286ca : add esi, dword ptr [rdi + 0xf] ; mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x000000000002cb06 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000141288 : add esi, eax ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000a81e6 : add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001d0e99 : add esi, eax ; call rdx
0x0000000000050913 : add esi, eax ; jmp qword ptr [rax]
0x000000000002e285 : add esi, eax ; jmp rsi
0x000000000015db83 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000174683 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000bb4d5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000165da3 : add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000010f77c : add esi, ebx ; ret
0x0000000000096522 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000003f859 : add esi, ebx ; stosq qword ptr [rdi], rax ; ret
0x000000000019241c : add esi, edi ; fadd st(3) ; ret
0x00000000000bbb3e : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000014102b : add esi, edi ; mov eax, r8d ; ret
0x000000000016c765 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000000f676b : add esi, esi ; ret
0x0000000000107048 : add esi, esi ; ret 0xf01
0x00000000000fccdc : add esi, esi ; ret 0xf04
0x00000000001d62a1 : add esi, esp ; call qword ptr [rsi]
0x00000000001d62b5 : add esi, esp ; jmp qword ptr [rcx]
0x000000000008a2d6 : add esp, 0x10 ; movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000008ded1 : add esp, 0x10 ; pop rbx ; jmp rax
0x000000000002cc73 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003f24e : add esp, 0x10 ; pop rbx ; ret
0x0000000000086825 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bb2dd : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000007b66c : add esp, 0x1010 ; pop rbx ; ret
0x000000000007b4a6 : add esp, 0x1018 ; pop rbx ; pop rbp ; ret
0x0000000000167318 : add esp, 0x110 ; pop rbx ; ret
0x000000000003eeae : add esp, 0x118 ; ret
0x0000000000111384 : add esp, 0x130 ; pop rbx ; ret
0x000000000003f67e : add esp, 0x140 ; pop rbx ; ret
0x000000000003ed90 : add esp, 0x148 ; ret
0x00000000001331ed : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000091879 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000080c48 : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007bce6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000097276 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000058e37 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044695 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003eb62 : add esp, 0x18 ; ret
0x000000000009d367 : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008e9bd : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000003ea84 : add esp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000008e58d : add esp, 0x20 ; pop rbx ; jmp rax
0x000000000008e9f6 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000003e6c9 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003e9d8 : add esp, 0x20 ; pop rbx ; ret
0x0000000000021ece : add esp, 0x28 ; jmp rax
0x0000000000021a3e : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004ecb5 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003e223 : add esp, 0x28 ; ret
0x000000000002398d : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005891f : add esp, 0x30 ; pop rbx ; ret
0x0000000000199654 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000003cf94 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001431f0 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000004ee43 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000e0e7e : add esp, 0x38 ; ret
0x000000000003f732 : add esp, 0x40 ; pop rbx ; ret
0x0000000000124ea8 : add esp, 0x40 ; ret
0x000000000011e7fe : add esp, 0x418 ; ret
0x0000000000058782 : add esp, 0x450 ; pop rbx ; ret
0x00000000000e6b12 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000158388 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000008a1c7 : add esp, 0x48 ; ret
0x00000000001546e4 : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005223e : add esp, 0x50 ; pop rbx ; ret
0x0000000000162ea4 : add esp, 0x520 ; pop rbx ; ret
0x0000000000150075 : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000142762 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000010fdca : add esp, 0x58 ; ret
0x000000000010273b : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014cbf0 : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000117106 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010fcaf : add esp, 0x68 ; ret
0x00000000000bd734 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001160b5 : add esp, 0x70 ; pop rbx ; ret
0x00000000001550c9 : add esp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010fed4 : add esp, 0x78 ; ret
0x000000000006426e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x000000000008768f : add esp, 0x80 ; mov eax, edx ; ret
0x000000000007c471 : add esp, 0x80 ; mov eax, esi ; pop rbx ; ret
0x000000000004f433 : add esp, 0x80 ; pop rbx ; ret
0x000000000007bea9 : add esp, 0x80 ; ret
0x0000000000042e7f : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000011f58d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000003f458 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000021d2f : add esp, 0x98 ; ret
0x00000000001234bc : add esp, 0xa0 ; pop rbx ; ret
0x0000000000040206 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000040500 : add esp, 0xa8 ; ret
0x000000000002bf16 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x0000000000157ca5 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000007c038 : add esp, 0xd0 ; pop rbx ; ret
0x000000000007e0d4 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000004fd81 : add esp, 0xd8 ; ret
0x00000000000d2c2f : add esp, 0xe0 ; pop rbx ; ret
0x000000000012e2f9 : add esp, 0xf8 ; pop rbx ; pop rbp ; ret
0x000000000009de50 : add esp, 8 ; jmp rax
0x00000000001410cd : add esp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000005e938 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000022558 : add esp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000004fcb4 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007c17a : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000011dd20 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000009df02 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000034ba1 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000083813 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000153d93 : add esp, 8 ; movzx eax, al ; add eax, 1 ; ret
0x0000000000121ac6 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014fe87 : add esp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000004f466 : add esp, 8 ; movzx eax, al ; ret
0x0000000000145caa : add esp, 8 ; movzx eax, ax ; ret
0x000000000014ec49 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000015c45c : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000042da3 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000022d41 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003ddf7 : add esp, 8 ; ret
0x0000000000162a71 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000015e344 : add esp, 8 ; shr eax, 0x1f ; ret
0x000000000008fbbd : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001acb4b : add esp, dword ptr [rbx + 0x74] ; or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000195b23 : add esp, dword ptr [rsi + 0x41] ; and eax, 0x21487fff ; ret 0x8949
0x00000000000d9ff2 : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000001d849d : add qword ptr [r8], r8 ; loopne 0x1d844a ; hlt ; jmp qword ptr [rcx]
0x00000000001d8475 : add qword ptr [r8], r8 ; test al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001d82a9 : add qword ptr [r8], rax ; and al, 0xa0 ; hlt ; jmp qword ptr [rcx]
0x00000000001d8335 : add qword ptr [r8], rax ; call 0x221d77e3
0x00000000001d8281 : add qword ptr [r8], rax ; in al, dx ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d82e5 : add qword ptr [r8], rax ; js 0x1d8290 ; hlt ; jmp qword ptr [rcx]
0x00000000001d8259 : add qword ptr [r8], rax ; mov ah, 0x9f ; hlt ; jmp qword ptr [rcx]
0x00000000001c04d5 : add qword ptr [r8], rax ; xchg eax, esp ; jne 0x1c04d2 ; call rsp
0x00000000001c04d5 : add qword ptr [r8], rax ; xchg eax, esp ; jne 0x1c04d3 ; call rsp
0x00000000000e77fd : add qword ptr [r9 - 0x77], rcx ; ret
0x0000000000029aba : add qword ptr [rax + 0x39], rcx ; retf
0x000000000014780d : add qword ptr [rax - 0x77], rcx ; or ecx, dword ptr [rcx + rcx*4 + 0x3c] ; ret 0x2e66
0x00000000001d8349 : add qword ptr [rax], r8 ; add al, 0xa1 ; hlt ; jmp qword ptr [rcx]
0x00000000001d8399 : add qword ptr [rax], r8 ; je 0x1d8345 ; hlt ; jmp qword ptr [rcx]
0x00000000001d858d : add qword ptr [rax], r8 ; movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001d8411 : add qword ptr [rax], r8 ; sbb al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001c0525 : add qword ptr [rax], r8 ; xchg eax, esp ; jl 0x1c0522 ; call rax
0x00000000001c0525 : add qword ptr [rax], r8 ; xchg eax, esp ; jl 0x1c0523 ; call rax
0x000000000014462d : add qword ptr [rax], rax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rsi]
0x00000000001d8245 : add qword ptr [rax], rax ; cwde ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d8231 : add qword ptr [rax], rax ; jl 0x1d81db ; hlt ; jmp qword ptr [rcx]
0x00000000001d8209 : add qword ptr [rax], rax ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d81e1 : add qword ptr [rax], rax ; or al, 0x9f ; hlt ; jmp qword ptr [rcx]
0x000000000002868e : add qword ptr [rcx - 0x77], r8 ; retf
0x0000000000131c63 : add qword ptr [rcx], r8 ; jne 0x131c58 ; mov rax, rdi ; ret
0x000000000017edfd : add qword ptr [rdi], rcx ; test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000440f5 : add r10d, eax ; xor eax, eax ; mov dword ptr [rsi], r10d ; pop rbp ; ret
0x0000000000127021 : add r11b, r13b ; retf
0x0000000000174762 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000034e63 : add r13, 1 ; call 0x21106
0x00000000001746f2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000174682 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001686e5 : add r15, 1 ; mov rdx, rax ; jmp 0x16868e
0x00000000000e8ab5 : add r15, 1 ; mov rdx, rax ; jmp 0xe8a5e
0x000000000004094e : add r15, qword ptr [rsp + 8] ; mov rsi, r15 ; call r14
0x0000000000189cf0 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186184 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000286cf : add r8, qword ptr [rcx - 0x77] ; retf
0x00000000001c315d : add r8b, byte ptr [r8] ; add al, 0x86 ; cli ; call qword ptr [rax]
0x00000000001c304d : add r8b, byte ptr [r8] ; push rsp ; pop rbp ; cli ; call qword ptr [rax]
0x00000000001c3145 : add r8b, byte ptr [r8] ; test edx, r15d ; call rsp
0x00000000000cb2d9 : add r8b, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001c3125 : add r8b, byte ptr [rax] ; hlt ; jg 0x1c312b ; call qword ptr [rax]
0x00000000001c317d : add r8b, byte ptr [rax] ; in al, 0x86 ; cli ; jmp qword ptr [rax]
0x00000000001c370d : add r8b, byte ptr [rax] ; sar ebp, 1 ; call rsp
0x0000000000166b88 : add r9, qword ptr [rsp + 8] ; call rax
0x000000000016c76a : add r9, r11 ; jmp r9
0x00000000001ac909 : add r9b, bl ; retf 0xea91
0x0000000000057b61 : add r9b, byte ptr [r13 - 0x77] ; retf
0x0000000000140685 : add r9b, byte ptr [r8 + 0x39] ; ret 0x1472
0x00000000000a857e : add r9b, byte ptr [r8 - 0x77] ; clc ; ret
0x000000000002b6de : add r9b, byte ptr [rax + 0x39] ; ret
0x0000000000104657 : add r9b, byte ptr [rbp - 0x77] ; ret
0x0000000000197830 : add r9d, dword ptr [r13 - 0x77] ; retf
0x000000000002b6fc : add r9d, dword ptr [rax + 0x39] ; ret
0x00000000000617c8 : add r9d, eax ; mov eax, r9d ; ret
0x000000000018da22 : add rax, -0x7cb80000 ; ret 0xe910
0x000000000017ee83 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x000000000015982d : add rax, 0xa0 ; pop rbx ; ret
0x00000000001598ed : add rax, 0xa8 ; pop rbx ; ret
0x00000000000514f0 : add rax, 1 ; pop rbx ; ret
0x00000000000d0e00 : add rax, 1 ; ret
0x00000000000d0df7 : add rax, 2 ; ret
0x00000000000d0e10 : add rax, 3 ; ret
0x0000000000021f28 : add rax, qword ptr [0] ; ret
0x0000000000021f27 : add rax, qword ptr fs:[0] ; ret
0x0000000000031403 : add rax, r13 ; jmp rax
0x000000000018ab40 : add rax, r8 ; vzeroupper ; ret
0x0000000000131be6 : add rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000018e247 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x00000000000687cf : add rax, rcx ; jmp rax
0x00000000000ab9f8 : add rax, rcx ; ret
0x000000000018e5dc : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000018a4a5 : add rax, rcx ; vzeroupper ; ret
0x000000000018ab3d : add rax, rdi ; add rax, r8 ; vzeroupper ; ret
0x00000000000ab9f5 : add rax, rdi ; add rax, rcx ; ret
0x000000000018a4a2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x00000000000ac219 : add rax, rdi ; add rax, rsi ; ret
0x000000000005bd71 : add rax, rdi ; jmp rax
0x00000000000a8485 : add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8473 : add rax, rdi ; ret
0x000000000018a3af : add rax, rdi ; sub rax, r8 ; ret
0x000000000018e694 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x000000000018a159 : add rax, rdi ; sub rax, rsi ; ret
0x000000000018a619 : add rax, rdi ; vzeroupper ; ret
0x000000000002240f : add rax, rdx ; jmp rax
0x00000000000b17b5 : add rax, rdx ; sub rax, rdi ; ret
0x000000000005be0f : add rax, rsi ; jmp rax
0x00000000000ac21c : add rax, rsi ; ret
0x00000000000f502b : add rbx, 0x10 ; call 0x212ce
0x0000000000034ea3 : add rbx, 1 ; call 0x21106
0x0000000000029ad9 : add rcx, qword ptr [rax + 0x39] ; retf
0x000000000003d247 : add rcx, qword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x000000000018ffe1 : add rcx, r11 ; jmp rcx
0x00000000000a8461 : add rcx, r9 ; jmp rcx
0x00000000000bba33 : add rcx, rsi ; jmp rcx
0x0000000000153adc : add rdi, 0x10 ; jmp rcx
0x000000000014e479 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000001567a3 : add rdi, 0x58 ; jmp rcx
0x0000000000155e73 : add rdi, 0x68 ; jmp rcx
0x0000000000152ed6 : add rdi, 0xc8 ; jmp rcx
0x000000000003ca4b : add rdi, r10 ; jmp rdi
0x000000000002e783 : add rdi, r11 ; jmp rdi
0x000000000016c767 : add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000001411c4 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000000fbf0b : add rdx, r10 ; jmp rdx
0x0000000000197730 : add rdx, r12 ; jmp rdx
0x00000000000a8606 : add rdx, r8 ; jmp rdx
0x00000000000539d1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000ac127 : add rdx, rax ; jl 0xac198 ; add rax, rdi ; ret
0x00000000000ac126 : add rdx, rax ; jl 0xac199 ; add rax, rdi ; ret
0x00000000000a8535 : add rdx, rax ; jmp rdx
0x00000000000fb4d8 : add rdx, rbp ; jmp rdx
0x000000000003d86e : add rdx, rcx ; jmp 0x3d883
0x0000000000050c15 : add rdx, rcx ; jmp 0x50c2b
0x0000000000050f16 : add rdx, rcx ; jmp 0x50f2b
0x0000000000086b1f : add rdx, rcx ; jmp 0x86b33
0x00000000000f29c6 : add rdx, rcx ; jmp 0xf295e
0x000000000003c762 : add rdx, rdi ; jmp rdx
0x00000000000521eb : add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x0000000000154e74 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000131da3 : add rsi, qword ptr [rbp - 0x6b] ; mov rax, rdi ; ret
0x000000000002e284 : add rsi, r8 ; jmp rsi
0x000000000015db82 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000008ded0 : add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000002cc72 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003f24d : add rsp, 0x10 ; pop rbx ; ret
0x000000000007b66b : add rsp, 0x1010 ; pop rbx ; ret
0x000000000007b4a5 : add rsp, 0x1018 ; pop rbx ; pop rbp ; ret
0x0000000000167317 : add rsp, 0x110 ; pop rbx ; ret
0x000000000003eead : add rsp, 0x118 ; ret
0x0000000000111383 : add rsp, 0x130 ; pop rbx ; ret
0x000000000003f67d : add rsp, 0x140 ; pop rbx ; ret
0x000000000003ed8f : add rsp, 0x148 ; ret
0x00000000001331ec : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000091878 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000080c47 : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000007bce5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000097275 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000044694 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003eb61 : add rsp, 0x18 ; ret
0x000000000009d366 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008e9bc : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x000000000003ea83 : add rsp, 0x20 ; movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000008e58c : add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000008e9f5 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000003e6c8 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003e9d7 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000021ecd : add rsp, 0x28 ; jmp rax
0x000000000004ecb4 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003e222 : add rsp, 0x28 ; ret
0x000000000002398c : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005891e : add rsp, 0x30 ; pop rbx ; ret
0x0000000000199653 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000004ee42 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000e0e7d : add rsp, 0x38 ; ret
0x000000000003f731 : add rsp, 0x40 ; pop rbx ; ret
0x0000000000124ea7 : add rsp, 0x40 ; ret
0x000000000011e7fd : add rsp, 0x418 ; ret
0x0000000000058781 : add rsp, 0x450 ; pop rbx ; ret
0x0000000000158387 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000008a1c6 : add rsp, 0x48 ; ret
0x00000000001546e3 : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005223d : add rsp, 0x50 ; pop rbx ; ret
0x0000000000162ea3 : add rsp, 0x520 ; pop rbx ; ret
0x0000000000142761 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000010fdc9 : add rsp, 0x58 ; ret
0x000000000010273a : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000117105 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000000000010fcae : add rsp, 0x68 ; ret
0x00000000000bd733 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001160b4 : add rsp, 0x70 ; pop rbx ; ret
0x000000000010fed3 : add rsp, 0x78 ; ret
0x000000000008768e : add rsp, 0x80 ; mov eax, edx ; ret
0x000000000004f432 : add rsp, 0x80 ; pop rbx ; ret
0x000000000007bea8 : add rsp, 0x80 ; ret
0x000000000011f58c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x000000000003f457 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000021d2e : add rsp, 0x98 ; ret
0x00000000001234bb : add rsp, 0xa0 ; pop rbx ; ret
0x0000000000040205 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000000000404ff : add rsp, 0xa8 ; ret
0x0000000000157ca4 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000007c037 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000007e0d3 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000004fd80 : add rsp, 0xd8 ; ret
0x00000000000d2c2e : add rsp, 0xe0 ; pop rbx ; ret
0x000000000012e2f8 : add rsp, 0xf8 ; pop rbx ; pop rbp ; ret
0x000000000009de4f : add rsp, 8 ; jmp rax
0x00000000001410cc : add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000005e937 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000022557 : add rsp, 8 ; mov eax, edi ; neg eax ; ret
0x000000000004fcb3 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000007c179 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000011dd1f : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000009df01 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000034ba0 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000083812 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000121ac5 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000014fe86 : add rsp, 8 ; movzx eax, al ; pop rbx ; pop rbp ; ret
0x000000000004f465 : add rsp, 8 ; movzx eax, al ; ret
0x0000000000145ca9 : add rsp, 8 ; movzx eax, ax ; ret
0x000000000014ec48 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000015c45b : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000022d40 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003ddf6 : add rsp, 8 ; ret
0x0000000000162a70 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000015e343 : add rsp, 8 ; shr eax, 0x1f ; ret
0x000000000008fbbc : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f4746 : add sil, sil ; ret
0x000000000009a0ee : add sil, sil ; ret 0x4804
0x00000000000dfe6e : add sil, sil ; ret 0x7504
0x00000000001245f3 : add word ptr [rax], 1 ; ret
0x00000000001c087d : add word ptr [rax], ax ; pop rdi ; hlt ; call rsp
0x000000000009ed86 : add word ptr [rdi], cx ; add byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000012428a : add word ptr [rdx + rax*2], 1 ; ret
0x000000000003e163 : addps xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000003e1db : addps xmm0, xmm0 ; ret
0x000000000003e162 : addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000003e1da : addsd xmm0, xmm0 ; ret
0x000000000003e4b0 : addss xmm0, xmm0 ; ret
0x00000000001d3390 : and ah, dl ; int1 ; jmp rbx
0x00000000000b3c81 : and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000196a43 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 9], cl ; ret
0x00000000000bd2e6 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000018b80 : and al, 0 ; add byte ptr [rax], al ; retf
0x00000000000d5e21 : and al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000aea75 : and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a0b72 : and al, 0 ; je 0xa0b88 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001643c1 : and al, 0x10 ; call 0x1106c4
0x00000000001643c0 : and al, 0x10 ; call 0x1106c5
0x000000000014c700 : and al, 0x10 ; call qword ptr [rax]
0x0000000000025167 : and al, 0x10 ; call rax
0x00000000001672db : and al, 0x10 ; call rdx
0x000000000003dbb7 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x0000000000148297 : and al, 0x10 ; mov eax, 0x81 ; syscall
0x0000000000115b39 : and al, 0x10 ; mov eax, r10d ; syscall
0x0000000000163c8b : and al, 0x10 ; mov edi, ebx ; xor eax, eax ; call 0x1106c8
0x0000000000163c8a : and al, 0x10 ; mov edi, ebx ; xor eax, eax ; call 0x1106c9
0x00000000000a8553 : and al, 0x10 ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x0000000000038a38 : and al, 0x10 ; mov qword ptr [rsp + 8], rcx ; call 0x35549
0x000000000014d83e : and al, 0x10 ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000086d42 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000156b1e : and al, 0x10 ; mov rdi, rbp ; call rbx
0x000000000015c753 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001d4a6c : and al, 0x13 ; add dword ptr [rax], eax ; mov al, 0x5c ; call rax
0x0000000000157e5c : and al, 0x14 ; call qword ptr [r10]
0x0000000000046859 : and al, 0x14 ; mov qword ptr [rsp + 8], r10 ; call 0x53349
0x000000000011714d : and al, 0x14 ; syscall
0x00000000000a8505 : and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x000000000012e5e1 : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x00000000000a8483 : and al, 0x18 ; add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x00000000000f47cd : and al, 0x18 ; call 0x212c4
0x0000000000021b93 : and al, 0x18 ; call rax
0x000000000014ead7 : and al, 0x18 ; lea r12, [rsp + 0x10] ; call qword ptr [rax]
0x000000000014d1c9 : and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x000000000010ff3b : and al, 0x18 ; mov eax, 0x101 ; syscall
0x000000000012a156 : and al, 0x18 ; mov edi, 0x2000004 ; call rcx
0x0000000000117149 : and al, 0x18 ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x00000000000941af : and al, 0x18 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000022b88 : and al, 0x18 ; mov r9, r13 ; call rbx
0x0000000000086c5d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000014c29a : and al, 0x18 ; mov rdi, rbp ; call r14
0x00000000000be03f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x00000000001672d6 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000000be2b7 : and al, 0x18 ; mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000014c6fb : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012a045 : and al, 0x18 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x00000000001587f0 : and al, 0x1c ; call qword ptr [r10]
0x00000000001d9c8c : and al, 0x1c ; cmc ; call rdx
0x00000000000f480e : and al, 0x20 ; call 0x212c4
0x000000000014ccad : and al, 0x20 ; call qword ptr [rax]
0x0000000000025297 : and al, 0x20 ; call r15
0x00000000000274ce : and al, 0x20 ; call rax
0x00000000000bdce0 : and al, 0x20 ; call rbx
0x00000000001533e3 : and al, 0x20 ; call rdx
0x00000000001106f6 : and al, 0x20 ; je 0x110729 ; mov eax, 0x48 ; syscall
0x0000000000145940 : and al, 0x20 ; mov edx, r14d ; call 0x142367
0x00000000000f47c8 : and al, 0x20 ; mov qword ptr [rsp + 0x18], rsi ; call 0x212c9
0x0000000000025162 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000e0a55 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000121812 : and al, 0x20 ; syscall
0x0000000000051c6c : and al, 0x24 ; call rax
0x0000000000137d8d : and al, 0x24 ; mov dword ptr fs:[rbp], eax ; jmp 0x137d67
0x0000000000137d8c : and al, 0x24 ; mov dword ptr fs:[rbp], eax ; jmp 0x137d68
0x0000000000152d6d : and al, 0x24 ; mov dword ptr fs:[rbp], eax ; jmp 0x152d47
0x0000000000152d6c : and al, 0x24 ; mov dword ptr fs:[rbp], eax ; jmp 0x152d48
0x00000000001ab684 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000001d5f6c : and al, 0x28 ; add dword ptr [rax], eax ; nop ; stc ; call qword ptr [rdx]
0x0000000000097273 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000011487d : and al, 0x28 ; call 0x110b24
0x00000000000bdb0e : and al, 0x28 ; call r12
0x000000000014d8c4 : and al, 0x28 ; call rax
0x00000000001531f0 : and al, 0x28 ; call rcx
0x000000000015e125 : and al, 0x28 ; call rdx
0x00000000000bd954 : and al, 0x28 ; lea rcx, [rax + 4] ; call rbx
0x0000000000025292 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x000000000009a2c3 : and al, 0x28 ; mov rdi, rbp ; call rax
0x00000000000be1e9 : and al, 0x28 ; mov rdi, rbp ; call rbx
0x000000000014c9dd : and al, 0x2c ; call qword ptr [rax]
0x00000000001501cf : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; retf 0x8948
0x00000000000ccf0d : and al, 0x30 ; call r12
0x0000000000025b73 : and al, 0x30 ; call r14
0x000000000013d388 : and al, 0x30 ; call rax
0x0000000000025d4b : and al, 0x30 ; call rbx
0x0000000000115a78 : and al, 0x30 ; mov eax, 0x10 ; syscall
0x00000000000bdeee : and al, 0x30 ; mov rdi, rbp ; call rbx
0x00000000000d8a55 : and al, 0x31 ; rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x000000000012701d : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x126ff7
0x000000000012701c : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x126ff8
0x0000000000128d3d : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x128d17
0x0000000000128d3c : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x128d18
0x000000000013859d : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x138577
0x000000000013859c : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x138578
0x000000000013db9d : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x13db77
0x000000000013db9c : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x13db78
0x0000000000152a2d : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x152a07
0x0000000000152a2c : and al, 0x34 ; mov dword ptr fs:[rbp], eax ; jmp 0x152a08
0x000000000009b4dd : and al, 0x35 ; add byte ptr [rax + 1], cl ; ret
0x0000000000026fca : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000026035 : and al, 0x38 ; call r12
0x000000000002666d : and al, 0x38 ; call r14
0x0000000000029631 : and al, 0x38 ; call r15
0x000000000002587b : and al, 0x38 ; call rbx
0x00000000000bd7e8 : and al, 0x38 ; lea rcx, [rax + 1] ; call rbx
0x0000000000025587 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000025b6e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000025d46 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x000000000012180d : and al, 0x38 ; movaps xmmword ptr [rsp + 0x20], xmm0 ; syscall
0x0000000000051b27 : and al, 0x38 ; xor eax, eax ; call 0x7ddd6
0x00000000000fcc80 : and al, 0x39 ; ret
0x000000000015920a : and al, 0x3a ; call qword ptr [rax]
0x00000000001c3300 : and al, 0x3f ; sti ; jmp rsp
0x0000000000062d7c : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000002b54e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000002a30e : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000000000014d1ce : and al, 0x40 ; call qword ptr [rax]
0x0000000000027aac : and al, 0x40 ; call r15
0x000000000002a258 : and al, 0x40 ; call rbx
0x00000000000274c9 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000026030 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000026668 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002962c : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000025876 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x00000000000d17dd : and al, 0x40 ; mov rsi, rbp ; mov rdi, r12 ; call rbx
0x000000000008def8 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000003e6c7 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003e9d6 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000000001590f2 : and al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003e87b : and al, 0x48 ; add esp, 0x28 ; ret
0x0000000000199abf : and al, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000000000019976a : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x0000000000124e45 : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000124ea6 : and al, 0x48 ; add esp, 0x40 ; ret
0x000000000016631d : and al, 0x48 ; mov eax, dword ptr [rax + 0x170] ; jmp rax
0x00000000000bd2b4 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013d073 : and al, 0x48 ; mov edi, ebp ; call r12
0x000000000008ae54 : and al, 0x48 ; mov edi, ebx ; call rax
0x0000000000027aa7 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002a253 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000001d70ac : and al, 0x49 ; hlt ; jmp rax
0x00000000001155ab : and al, 0x49 ; mov edx, ecx ; mov eax, 0x146 ; syscall
0x000000000013ca53 : and al, 0x4c ; mov edi, ebp ; call r12
0x00000000000d1aa1 : and al, 0x50 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000001c0160 : and al, 0x52 ; int1 ; call qword ptr [rax]
0x00000000000fea5d : and al, 0x54 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fed23 : and al, 0x54 ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x00000000000ffb02 : and al, 0x5c ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x000000000012f6ec : and al, 0x60 ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000012f779 : and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000e07d3 : and al, 0x60 ; mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000010096c : and al, 0x60 ; mov rsi, rbp ; call 0xfcbd7
0x00000000000ff957 : and al, 0x64 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x0000000000137d8e : and al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x137d66
0x0000000000152d6e : and al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x152d46
0x00000000000ff7fc : and al, 0x68 ; add dword ptr [rax], eax ; add al, ch ; retf 0xffe0
0x0000000000163af5 : and al, 0x68 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; shr al, 0x6f ; ret 0xfffa
0x0000000000097c23 : and al, 0x68 ; call rax
0x0000000000044438 : and al, 0x75 ; add eax, 0x18c48348 ; ret
0x00000000000fb853 : and al, 0x75 ; retf 0x548d
0x00000000001c30d8 : and al, 0x7a ; cli ; call rsp
0x00000000001c2390 : and al, 0x7d ; clc ; jmp rsp
0x00000000000ffa2f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf
0x00000000000570dc : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x9848
0x000000000005f30e : and al, 0x83 ; ret
0x0000000000123aab : and al, 0x83 ; ret 0x4901
0x000000000008e93b : and al, 0x83 ; retf 0x4c01
0x00000000001443f3 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000000c7fe3 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x860f
0x00000000000c3ec0 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8948
0x000000000002bc0d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c19db : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x00000000000c63b0 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000019bc76 : and al, 0x88 ; or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x0000000000090853 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000000f9853 : and al, 0x89 ; retf 0xe183
0x0000000000033bd4 : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000000c6771 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000144920 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000014459a : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x00000000000fd68a : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000000000facc7 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x427e
0x00000000000c86b6 : and al, 0x94 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x0000000000025a8e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000019c197 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000019b8a3 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000123481 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xd3 ; ret 0xfffe
0x000000000011a20b : and al, 0xa0 ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000000d259c : and al, 0xa0 ; add byte ptr [rax], al ; add al, ch ; retf 0xffef
0x00000000000c8811 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000015a098 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000144982 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x30e9
0x00000000001445b7 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; retf 0x30e9
0x0000000000144adc : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x3c], cl ; ret 0x55e9
0x000000000002651b : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000000975 : and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000001d82ac : and al, 0xa0 ; hlt ; jmp qword ptr [rcx]
0x000000000019772e : and al, 0xa2 ; add rdx, r12 ; jmp rdx
0x0000000000025f10 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000c70bb : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x00000000000d1995 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000001bf708 : and al, 0xaa ; in eax, dx ; call qword ptr [rax]
0x00000000001c1098 : and al, 0xaf ; cmc ; jmp rax
0x00000000000d1baa : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; call rbx
0x000000000002bce3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x00000000001d554c : and al, 0xb2 ; jmp qword ptr [rcx]
0x000000000003f24b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e49e5 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e4925 : and al, 0xc ; add rsp, 0x18 ; ret
0x000000000011066b : and al, 0xc ; mov eax, 0x48 ; syscall
0x000000000008dee2 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x8a158
0x00000000000a84e4 : and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000ff938 : and al, 0xc0 ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x0000000000002229 : and al, 0xc7 ; jno 0x227a ; ret 0x1dd4
0x00000000000f9d00 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x31ff
0x00000000001c2bc0 : and al, 0xcc ; stc ; call rax
0x00000000000ec539 : and al, 0xd0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001bf308 : and al, 0xd4 ; in al, dx ; call qword ptr [rax]
0x0000000000002dfe : and al, 0xd7 ; cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x000000000003e644 : and al, 0xd8 ; ret
0x00000000000a85d2 : and al, 0xe ; mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x00000000000a86b7 : and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000fa176 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000082eac : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000000000013a749 : and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000003e63e : and al, 0xe0 ; movdqa xmm0, xmmword ptr [rsp - 0x28] ; ret
0x00000000001c2c30 : and al, 0xe0 ; stc ; call qword ptr [rax]
0x000000000003dccc : and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x00000000000a0c69 : and al, 0xe8 ; mov cl, 3 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x0000000000134b82 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x00000000000582cc : and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x000000000003dc1a : and al, 0xe8 ; ret
0x00000000000c1638 : and al, 0xe8 ; ret 0xf932
0x00000000000460f0 : and al, 0xe8 ; retf 0xd7
0x0000000000144cf8 : and al, 0xe8 ; retf 0xedc5
0x0000000000145024 : and al, 0xe8 ; sahf ; ret 0xffed
0x0000000000054bec : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a85b1 : and al, 0xec ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x00000000000a8696 : and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x0000000000118711 : and al, 0xf ; and r8, 0xfffffffffffffff0 ; mov rdx, r8 ; jmp 0x118751
0x0000000000118710 : and al, 0xf ; and r8, 0xfffffffffffffff0 ; mov rdx, r8 ; jmp 0x118752
0x00000000001187d9 : and al, 0xf ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x118819
0x00000000001187d8 : and al, 0xf ; and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x11881a
0x000000000014ec80 : and al, 0xf ; retf 0x1089
0x00000000001643bd : and al, 0xf ; sub dword ptr [rsp + 0x10], eax ; call 0x1106c8
0x00000000000caf14 : and al, 0xf ; test byte ptr [rax], bh ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0x8d44
0x000000000004027f : and al, 0xf ; xchg eax, ebp ; ret 0xd521
0x00000000000ea9de : and al, 0xf ; xchg eax, esp ; ret 0xd009
0x000000000003dc86 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; ret
0x000000000003dc14 : and al, 0xf0 ; fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x000000000011ed63 : and al, 0xf0 ; inc dword ptr [rbp - 0x164a8b40] ; retf 0xfffe
0x00000000000d1546 : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000d154c : and al, 0xf0 ; ret
0x00000000000a8599 : and al, 0xf4 ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000a84cc : and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x000000000002692e : and al, 0xf6 ; ret
0x00000000001c1ad1 : and al, 0xf7 ; dec dword ptr [rax] ; ret
0x00000000001c1ae1 : and al, 0xf7 ; push qword ptr [rax] ; ret
0x000000000009eb7f : and al, 0xf8 ; dec dword ptr [rax + 1] ; ret
0x0000000000054ba1 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000054ba7 : and al, 0xf8 ; ret
0x00000000000a857b : and al, 0xfa ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000a84ae : and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000001bd1c5 : and al, 0xfb ; jmp rax
0x0000000000054b5b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000054b61 : and al, 0xfc ; ret
0x00000000001d5b9d : and al, 1 ; add al, al ; out 0xf3, eax ; jmp rax
0x00000000001109d1 : and al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000043e49 : and al, 4 ; jne 0x43e5a ; add rsp, 0x18 ; ret
0x0000000000043e48 : and al, 4 ; jne 0x43e5b ; add rsp, 0x18 ; ret
0x00000000000b7278 : and al, 7 ; add byte ptr [rax], al ; ret
0x0000000000157fd9 : and al, 8 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8b48
0x0000000000050ffa : and al, 8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd084
0x0000000000095796 : and al, 8 ; add eax, ebp ; ret 0xffd4
0x000000000009d703 : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009d66e : and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000007f008 : and al, 8 ; add rsp, 0x18 ; ret
0x000000000008e5bd : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000038a3d : and al, 8 ; call 0x35544
0x0000000000038a3c : and al, 8 ; call 0x35545
0x000000000004685e : and al, 8 ; call 0x53344
0x000000000015c744 : and al, 8 ; call qword ptr [rax]
0x00000000000e07d8 : and al, 8 ; call r12
0x0000000000041ebf : and al, 8 ; call rax
0x00000000000941b4 : and al, 8 ; call rcx
0x000000000003dd82 : and al, 8 ; fadd st(0) ; ret
0x000000000003dd0a : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000003dc56 : and al, 8 ; fsubrp st(1) ; ret
0x0000000000141503 : and al, 8 ; jne 0x141541 ; add rsp, 0x38 ; ret
0x000000000015d1e7 : and al, 8 ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000114ced : and al, 8 ; mov eax, 0x10f ; syscall
0x0000000000121878 : and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000130fba : and al, 8 ; mov eax, 0xe6 ; syscall
0x000000000011d343 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000a0fd1 : and al, 8 ; mov rbx, rax ; call 0x9d9f7
0x00000000000a0fd0 : and al, 8 ; mov rbx, rax ; call 0x9d9f8
0x000000000007eff5 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000093da5 : and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000094031 : and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000085b50 : and al, 8 ; mov rdi, r15 ; call rax
0x0000000000040951 : and al, 8 ; mov rsi, r15 ; call r14
0x000000000003dbbb : and al, 8 ; ret
0x000000000011b835 : and al, 8 ; syscall
0x00000000000e4ac1 : and al, 8 ; test rax, rax ; je 0xe4ad1 ; call rax
0x00000000000e4ac0 : and al, 8 ; test rax, rax ; je 0xe4ad2 ; call rax
0x0000000000094139 : and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000009f0d3 : and al, bh ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000d5c32 : and al, byte ptr [rax - 0x76b7ffcf] ; retf
0x000000000015b91e : and al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003eb16 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003e21e : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000000000003de34 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000e48ee : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000aec1e : and al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f342d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x00000000000be6f1 : and al, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000121a81 : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001d5951 : and al, byte ptr [rcx] ; add byte ptr [rsp + rax*8], bl ; jmp qword ptr [rcx]
0x00000000001c2a1d : and al, byte ptr [rdx] ; add byte ptr [rbp + rbx*4 - 7], al ; jmp qword ptr [rax]
0x00000000000b644a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x0000000000109d5f : and al, ch ; retf
0x000000000011b0c0 : and al, ch ; retf 0xf402
0x00000000000f480f : and al, ch ; stosd dword ptr [rdi], eax ; retf 0xfff2
0x00000000000305d2 : and ax, 0x100 ; movzx eax, ax ; ret
0x00000000000305f2 : and ax, 0x1000 ; movzx eax, ax ; ret
0x0000000000030532 : and ax, 0x200 ; movzx eax, ax ; ret
0x00000000000305b2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x00000000000304d2 : and ax, 0x400 ; movzx eax, ax ; ret
0x0000000000030572 : and ax, 0x4000 ; movzx eax, ax ; ret
0x0000000000030512 : and ax, 0x800 ; movzx eax, ax ; ret
0x0000000000030552 : and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000065e81 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000000274cf : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x000000000000306c : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000011e0da : and bh, ch ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001aedf0 : and bl, 0xec ; call rax
0x00000000000b7857 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000001bd1c1 : and bl, bh ; call qword ptr [rax - 0x1f0004dc]
0x00000000001bcedd : and bl, bh ; call qword ptr [rax]
0x00000000001bcf1d : and bl, bh ; call rax
0x000000000007d45b : and bl, ch ; retf 0x9066
0x00000000001307af : and bl, dh ; ret
0x00000000001bcf1c : and bl, dil ; call rax
0x00000000001bf508 : and bpl, r13b ; jmp rax
0x0000000000085de9 : and byte ptr [r11 + rcx*4 + 0x75], r9b ; sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000085e19 : and byte ptr [r8 + 1], r9b ; ret
0x000000000014410f : and byte ptr [r8 - 0x7d], cl ; ret
0x0000000000093670 : and byte ptr [r8 - 0x7d], r9b ; retf
0x00000000000baca6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000d2ec6 : and byte ptr [r9 + 0x5d], r8b ; pop r14 ; pop r15 ; ret
0x0000000000085d7e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000001216dd : and byte ptr [rax + 0x21], cl ; clc ; or rax, rsi ; ret
0x000000000018a4b6 : and byte ptr [rax + 0x29], cl ; retf 0x860f
0x000000000009b309 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000018e15a : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000156844 : and byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x000000000018a62c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x0000000000040b49 : and byte ptr [rax + 1], cl ; ret
0x000000000018aaa6 : and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000ac156 : and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000061e86 : and byte ptr [rax + 9], cl ; ret 0xff83
0x00000000000b1688 : and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000b17ad : and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000b196e : and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000104420 : and byte ptr [rax + rax*8 - 0x76b2248b], al ; ret
0x00000000001bd994 : and byte ptr [rax - 0x705f0005], dl ; sti ; jmp qword ptr [rax]
0x0000000000025163 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x00000000000e0a56 : and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000008480a : and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000145f51 : and byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0x7401
0x000000000010be6e : and byte ptr [rax - 0x75], cl ; xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000007f1c7 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d4426 : and byte ptr [rax - 0x77], cl ; fimul dword ptr [rcx + rcx*4 - 0x19] ; call 0xd0ea9
0x000000000011df7f : and byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000014a8a4 : and byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret
0x000000000009d04b : and byte ptr [rax - 0x77], cl ; jae 0x9d061 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f47c9 : and byte ptr [rax - 0x77], cl ; je 0xf47fa ; sbb al, ch ; in al, dx ; retf 0xfff2
0x0000000000115789 : and byte ptr [rax - 0x77], cl ; ret
0x00000000000d74ab : and byte ptr [rax - 0x77], cl ; ret 0x1f74
0x00000000000509b7 : and byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000163762 : and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000000fd981 : and byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e2c3c : and byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000014bfe5 : and byte ptr [rax - 0x77], cl ; retf 0x1c74
0x00000000000d74ca : and byte ptr [rax - 0x77], cl ; retf 0xe575
0x000000000014c001 : and byte ptr [rax - 0x77], cl ; retf 0xe975
0x00000000000e259c : and byte ptr [rax - 0x77], cl ; retf 0xee75
0x000000000002e984 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2e998 ; call rax
0x0000000000023ea6 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000018a867 : and byte ptr [rax - 0x7d], cl ; ret 0x4820
0x00000000000638b4 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x0000000000118546 : and byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000093671 : and byte ptr [rax - 0x7d], cl ; retf
0x0000000000002ded : and byte ptr [rax - 0xc0713e4], bh ; ret
0x000000000008a972 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000001bd660 : and byte ptr [rax - 5], ch ; jmp qword ptr [rax + 0x20fffb67]
0x00000000001bd6c4 : and byte ptr [rax - 5], cl ; jmp qword ptr [rax + 0x20fffb49]
0x00000000001bd718 : and byte ptr [rax - 5], dl ; jmp qword ptr [rax + 0x20fffb51]
0x00000000001bcedc : and byte ptr [rax], 0xfb ; call qword ptr [rax]
0x0000000000002ddd : and byte ptr [rax], ah ; or edx, ebp ; clc ; ret
0x00000000000659f8 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000000e6793 : and byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000068afb : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000bbb1a : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e6774 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001df984 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000110971 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000aee6e : and byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019935e : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xd231
0x0000000000198cd3 : and byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff31
0x00000000001bcf4c : and byte ptr [rax], bl ; sti ; inc dword ptr [rax] ; sbb bh, bl ; jmp rax
0x00000000000b899c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000baca7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000001bd9ac : and byte ptr [rbp - 0x735f0005], cl ; sti ; call qword ptr [rax]
0x00000000000e0c36 : and byte ptr [rbp - 0x77], cl ; ret
0x000000000019c3b5 : and byte ptr [rbp - 0x77], cl ; retf 0x8b49
0x00000000001dcb90 : and byte ptr [rbp - 0xa], al ; jmp qword ptr [rsi]
0x00000000001bd710 : and byte ptr [rbp - 5], cl ; jmp qword ptr [rax + 0x20fffb4e]
0x00000000001ad428 : and byte ptr [rbx + 0x3d], bh ; retf
0x00000000000d32e9 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003e6cb : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001d3705 : and byte ptr [rbx + 0xab90204], al ; ret
0x0000000000085dea : and byte ptr [rbx + rcx*4 + 0x75], cl ; sbb byte ptr [rax - 0x77], cl ; retf
0x00000000001bd0f4 : and byte ptr [rbx + rdi*8 - 1], al ; and byte ptr [rsi - 5], al ; jmp qword ptr [rax]
0x00000000001bdb78 : and byte ptr [rbx - 0x756f0005], cl ; sti ; jmp qword ptr [rax]
0x00000000001bd688 : and byte ptr [rbx - 5], ch ; call qword ptr [rax + 0x10fffb6a]
0x00000000001bd6cc : and byte ptr [rbx - 5], cl ; jmp qword ptr [rax + 0x20fffb4c]
0x00000000001bd720 : and byte ptr [rbx - 5], dl ; jmp qword ptr [rax + 0x20fffb54]
0x0000000000003eb9 : and byte ptr [rbx], al ; retf 0x8aca
0x00000000001bd0a0 : and byte ptr [rbx], bh ; sti ; jmp rax
0x000000000018f85a : and byte ptr [rbx], bh ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x00000000001bcfb4 : and byte ptr [rbx], bl ; sti ; jmp qword ptr [rax]
0x0000000000010a90 : and byte ptr [rbx], ch ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001bcfe4 : and byte ptr [rbx], dl ; sti ; push rax ; adc al, 0xfb ; call rax
0x000000000005950a : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000000ef9c3 : and byte ptr [rcx + 0x39], cl ; retf 0x1489
0x00000000000d2ec7 : and byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x0000000000001dac : and byte ptr [rcx + 0x72b02084], bh ; retf
0x0000000000145941 : and byte ptr [rcx + rcx*4 - 0xe], al ; call 0x142366
0x0000000000054be9 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000008e9bf : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x0000000000043938 : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x000000000005592b : and byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000008196b : and byte ptr [rcx - 0x3b7cb7d7], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000002213 : and byte ptr [rcx - 0x4273d1ae], ah ; out dx, al ; nop ; retf 0x3844
0x00000000001bd98c : and byte ptr [rcx - 0x6f5f0005], dl ; sti ; jmp qword ptr [rax]
0x00000000000ec0b8 : and byte ptr [rcx - 0x77], al ; retf 0x8944
0x0000000000047ae5 : and byte ptr [rcx - 0x77], cl ; ret
0x0000000000085d7f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000001da090 : and byte ptr [rcx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001bd730 : and byte ptr [rcx - 5], bl ; jmp qword ptr [rax + 0x20fffb5a]
0x00000000001bd658 : and byte ptr [rcx - 5], ch ; jmp qword ptr [rax + 0x20fffb68]
0x00000000001bd6dc : and byte ptr [rcx - 5], dl ; jmp qword ptr [rax + 0x20fffb52]
0x00000000001231f1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e4b13 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x0000000000134823 : and byte ptr [rcx], ch ; retf 0x37e9
0x0000000000134a73 : and byte ptr [rcx], ch ; retf 0x38e9
0x0000000000088c13 : and byte ptr [rcx], ch ; retf 0x40e9
0x000000000012e7f6 : and byte ptr [rdi + rax + 0x5b], dh ; ret
0x00000000001bd99c : and byte ptr [rdi - 0x715f0005], cl ; sti ; jmp qword ptr [rax]
0x00000000001bd668 : and byte ptr [rdi - 5], ah ; jmp qword ptr [rax + 0x20fffb66]
0x00000000001bd6ec : and byte ptr [rdi - 5], dl ; jmp qword ptr [rax + 0x20fffb58]
0x00000000001d5668 : and byte ptr [rdi], bl ; add dword ptr [rax], eax ; mov ah, 0xb4 ; jmp qword ptr [rcx]
0x00000000001d6668 : and byte ptr [rdi], ch ; add dword ptr [rax], eax ; or esi, esp ; jmp qword ptr [rcx]
0x00000000001d6e30 : and byte ptr [rdi], ch ; hlt ; call qword ptr [rdx]
0x000000000010e7e0 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], eax ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x00000000000bb741 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000305b5 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000014deff : and byte ptr [rdi], cl ; retf 0x5089
0x000000000003dac2 : and byte ptr [rdi], cl ; retf 0xd289
0x00000000000b7549 : and byte ptr [rdi], cl ; test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x000000000007e25b : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000193680 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000015feb2 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000001185ed : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x840
0x00000000001bcfcc : and byte ptr [rdi], dl ; sti ; call qword ptr [rax]
0x00000000001bd6f4 : and byte ptr [rdx - 5], bl ; jmp qword ptr [rax + 0x20fffb5b]
0x00000000001bd650 : and byte ptr [rdx - 5], ch ; jmp qword ptr [rax + 0x20fffb69]
0x00000000001bd708 : and byte ptr [rdx - 5], cl ; jmp qword ptr [rax + 0x20fffb4b]
0x00000000000d7de7 : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001c29c5 : and byte ptr [rdx], al ; add byte ptr [rsi + rax*4 - 7], al ; call rsp
0x00000000001c3724 : and byte ptr [rdx], al ; add dword ptr [rax], eax ; add al, 0xe9 ; std ; jmp rsp
0x000000000000031b : and byte ptr [rdx], bl ; adc byte ptr [rax - 0x80], bl ; retf 0x4244
0x000000000019007a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003ea86 : and byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001c8065 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000002cc2 : and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001bd9a4 : and byte ptr [rsi - 0x725f0005], cl ; sti ; jmp qword ptr [rax]
0x00000000001bd0f8 : and byte ptr [rsi - 5], al ; jmp qword ptr [rax]
0x00000000001bd6d4 : and byte ptr [rsi - 5], cl ; jmp qword ptr [rax + 0x20fffb4f]
0x00000000001bd728 : and byte ptr [rsi - 5], dl ; jmp qword ptr [rax + 0x20fffb57]
0x00000000001bd128 : and byte ptr [rsi], bh ; sti ; inc dword ptr [rax] ; sti ; jmp rax
0x0000000000118e21 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000001b103c : and byte ptr [rsp + rsi*8], cl ; dec dword ptr [rcx] ; or esi, esp ; jmp qword ptr [rax]
0x00000000001b1070 : and byte ptr [rsp + rsi*8], cl ; dec esi ; or dh, ah ; jmp qword ptr [rax]
0x00000000001b0fa4 : and byte ptr [rsp + rsi*8], cl ; jmp qword ptr [rax]
0x00000000001b0ff8 : and byte ptr [rsp + rsi*8], cl ; jmp qword ptr [rbx]
0x00000000001b10cc : and byte ptr [rsp + rsi*8], cl ; lcall [rdx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000001b10bc : and byte ptr [rsp + rsi*8], cl ; push qword ptr [rsi + 0xa] ; hlt ; jmp qword ptr [rax]
0x00000000000d0df2 : and ch, 0xf ; je 0xd0e19 ; add rax, 2 ; ret
0x00000000000bbad8 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x000000000018e48b : and ch, al ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000018a8b3 : and ch, al ; std ; xlatb ; ret
0x000000000013a6f5 : and ch, byte ptr [rbx] ; add al, ch ; retf
0x000000000010e624 : and ch, byte ptr [rsi] ; add byte ptr [rcx - 0x77], cl ; retf 0x8b
0x00000000001bf509 : and ch, ch ; jmp rax
0x00000000000d0ddd : and cl, 0xf ; je 0xd0e05 ; ret
0x0000000000003a8e : and cl, ah ; ret
0x00000000000c9266 : and cl, byte ptr [rax + 0x63] ; rol byte ptr [rbx - 0x7cb7fa40], cl ; ret
0x0000000000051654 : and cl, byte ptr [rax - 0x7d] ; ret
0x000000000009e5d3 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000000efd3d : and cl, byte ptr [rcx + 0x63] ; retf 0x8b41
0x000000000009f2c2 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ac34d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000103b46 : and cl, ch ; ret
0x000000000004790a : and cl, ch ; retf
0x00000000001d26f1 : and cl, dh ; call qword ptr [rdx]
0x00000000001d2761 : and cl, dh ; jmp qword ptr [rcx]
0x00000000001af2f4 : and cl, dh ; out dx, eax ; push qword ptr [rax] ; out dx, eax ; call rax
0x00000000000e4dfd : and dh, ah ; mov edi, edx ; mov eax, r8d ; syscall
0x000000000011efc4 : and dh, al ; dec dword ptr [rax - 0x77] ; ret
0x00000000001c0ba1 : and dh, ch ; jmp qword ptr [rax]
0x00000000000f45c5 : and dh, dh ; ret
0x0000000000065e80 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000000d533a : and dl, byte ptr [rcx - 5] ; dec dword ptr [rax + 0x39] ; ret
0x000000000005b8bb : and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x000000000017d119 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000007ab0 : and dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001109a1 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000017975e : and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001ad1a2 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x00000000000c8fb7 : and dword ptr [rbp + 0x63], ecx ; rol byte ptr [rbx - 0x7cb6fa40], cl ; ret
0x000000000011a34b : and dword ptr [rbx - 0x10], edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000008448c : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000844e8 : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001996de : and dword ptr [rcx + 0x39], ecx ; retf
0x00000000001d5929 : and dword ptr [rcx], eax ; add ah, ah ; ret
0x00000000001d5915 : and dword ptr [rcx], eax ; add al, cl ; ret
0x00000000001d58c5 : and dword ptr [rcx], eax ; add byte ptr [rax - 0x3d], bl ; jmp qword ptr [rcx]
0x0000000000121a44 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; mov edx, 8 ; syscall
0x00000000001674b6 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x000000000008a1e0 : and dword ptr [rdi], 0xffffffcf ; ret
0x000000000003f938 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000008ff2e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x000000000018f12b : and dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000001c29fd : and dword ptr [rdx], eax ; add byte ptr [rsp + rcx*4], al ; stc ; jmp rsp
0x000000000010e6d3 : and dword ptr [rdx], esp ; add byte ptr cs:[rcx - 0x77], cl ; retf 0x8b
0x0000000000145adb : and dword ptr [rsi + 0x3948ffed], esi ; ret
0x00000000001aa259 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000b737b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x00000000001ad1a1 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000017d118 : and dword ptr fs:[rax], eax ; add byte ptr [rax - 0x7bf0ffc7], al ; retf
0x0000000000021f2b : and eax, 0 ; ret
0x0000000000130bd4 : and eax, 0x10 ; ret
0x00000000001158f3 : and eax, 0x100f ; ret
0x000000000003ddca : and eax, 0x200 ; ret
0x0000000000195b26 : and eax, 0x21487fff ; ret 0x8949
0x0000000000195d69 : and eax, 0x21487fff ; ret 0xcae9
0x000000000019853d : and eax, 0x21487fff ; retf 0x8948
0x00000000000547fc : and eax, 0x28 ; jne 0x54846 ; leave ; ret
0x00000000001635cb : and eax, 0x287170 ; ret
0x000000000005eb2d : and eax, 0x2948fffc ; ret
0x0000000000021ec8 : and eax, 0x30 ; add rsp, 0x28 ; jmp rax
0x000000000009de4a : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000021bad : and eax, 0x30 ; call rax
0x0000000000042f62 : and eax, 0x30 ; call rdx
0x000000000003ecdc : and eax, 0x30 ; jmp rax
0x0000000000051c65 : and eax, 0x30 ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x0000000000043036 : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000003189a : and eax, 0x30 ; mov rdi, r12 ; call rax
0x000000000008050a : and eax, 0x30 ; mov rdi, rbp ; call rax
0x00000000000bba5d : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000002163c : and eax, 0x3ff ; mov r10d, eax ; jmp 0x21612
0x00000000000bbaa8 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000019a733 : and eax, 0x5be17500 ; ret
0x000000000011bd7b : and eax, 0x5d5b002d ; pop r12 ; ret
0x00000000000306c2 : and eax, 0x7f ; ret
0x00000000000bbb53 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000000bbaf7 : and eax, 0x7ff80000 ; ret
0x000000000003e1a4 : and eax, 0x80 ; ret
0x000000000003e2e7 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000089392 : and eax, 0x804 ; ret
0x0000000000077f1f : and eax, 0x83000021 ; ret 0xbf08
0x0000000000027f2b : and eax, 0x833fe283 ; retf 0x4180
0x00000000000996b4 : and eax, 0x83480035 ; retf 0x4901
0x00000000001600bf : and eax, 0x89480000 ; ret
0x000000000014e127 : and eax, 0x8b000002 ; adc byte ptr [rdi], cl ; retf 0xd789
0x000000000019a24c : and eax, 0x8b486400 ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000130767 : and eax, 0xc ; cmp eax, 4 ; je 0x130778 ; ret
0x0000000000130930 : and eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000009ef46 : and eax, 0xf48000e ; ret 0xc3f3
0x0000000000034d4d : and eax, 0xfbe82fff ; ret 0xfffe
0x000000000019ada5 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x0000000000121686 : and eax, 0xfffff000 ; or eax, edx ; ret
0x0000000000134dbd : and eax, 0xffffff ; or eax, edi ; bswap eax ; ret
0x0000000000134d58 : and eax, 0xffffff ; ret
0x0000000000118584 : and eax, 0xfffffff0 ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1185c3
0x0000000000118714 : and eax, 0xfffffff0 ; mov rdx, r8 ; jmp 0x11874e
0x00000000001401d3 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000876a7 : and eax, 1 ; mov edx, eax ; jmp 0x87661
0x0000000000087797 : and eax, 1 ; mov edx, eax ; jmp 0x87751
0x00000000000875e8 : and eax, 1 ; mov edx, eax ; mov eax, edx ; ret
0x0000000000030672 : and eax, 1 ; ret
0x00000000000efee0 : and eax, 2 ; add eax, 8 ; ret
0x00000000000304f2 : and eax, 2 ; movzx eax, ax ; ret
0x0000000000052bfc : and eax, 2 ; sub eax, 1 ; ret
0x0000000000121fff : and eax, 3 ; ret
0x0000000000030592 : and eax, 4 ; movzx eax, ax ; ret
0x00000000000304b2 : and eax, 8 ; movzx eax, ax ; ret
0x000000000003e4c4 : and eax, 8 ; ret
0x00000000000e499e : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001795b5 : and eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003fdf8 : and eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000bf30f : and eax, dword ptr [rbp - 0x7b] ; in al, 0x75 ; ret
0x00000000001d5a91 : and eax, dword ptr [rcx] ; add ah, bl ; sal bl, cl ; jmp rsi
0x0000000000122211 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000017ef29 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000026d1e : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000002dc7 : and eax, ebp ; clc ; ret
0x000000000003db3f : and eax, ecx ; ret
0x00000000001216df : and eax, edi ; or rax, rsi ; ret
0x000000000003df36 : and eax, edx ; movq xmm0, rax ; ret
0x000000000003de72 : and eax, edx ; ret
0x000000000003dec0 : and eax, edx ; sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000003088d : and eax, esi ; ret
0x00000000001be4e1 : and ebp, eax ; jmp rax
0x000000000008448d : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000844e9 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130702 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x130715 ; ret
0x000000000002478d : and ebx, 0xfffffff0 ; mov rdi, rbx ; call 0x21238
0x00000000001ab954 : and ebx, dword ptr [rbx] ; xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x00000000000443f2 : and ecx, 0x3ff ; xor eax, ecx ; ret
0x00000000001915f5 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000190d28 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000875a0 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000001187dc : and ecx, 0xfffffff0 ; mov rdx, r9 ; jmp 0x118816
0x000000000014ce82 : and ecx, dword ptr [rax - 0x75] ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000011ef1a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x00000000001b0ffc : and ecx, dword ptr [rbx] ; hlt ; jmp qword ptr [rax]
0x000000000009c6a1 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call qword ptr [rdx]
0x000000000008f7cd : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x0000000000119509 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x2f3c
0x0000000000144e78 : and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000001c0061 : and ecx, esi ; jmp qword ptr [rax]
0x00000000000306d2 : and edi, 0xffffff80 ; sete al ; ret
0x0000000000086b1c : and edx, 0xfffffffc ; add rdx, rcx ; jmp 0x86b36
0x000000000003fd2d : and edx, dword ptr [rax + rax*8] ; mov qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000005b941 : and edx, dword ptr [rip - 0x7cb70000] ; ret
0x00000000001c2ec1 : and edx, edi ; call rax
0x00000000001c2ec9 : and edx, edi ; jmp qword ptr [rax]
0x0000000000002cad : and edx, esp ; bswap ebx ; clc ; ret
0x0000000000198141 : and esi, 0x9487fff ; ret 0x8b48
0x0000000000078ab4 : and esi, dword ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009b5ab : and esi, dword ptr [rip + 0x100] ; add cl, ch ; retf
0x00000000001c1ab9 : and esi, edi ; dec esp ; ret 1
0x00000000001c1ac1 : and esi, edi ; jmp rax
0x00000000001c1ac9 : and esi, edi ; push rsp ; ret 1
0x00000000001674b5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000003f937 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000118713 : and r8, 0xfffffffffffffff0 ; mov rdx, r8 ; jmp 0x11874f
0x00000000000be6f0 : and r8b, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000195b25 : and r8d, 0x21487fff ; ret 0x8949
0x0000000000195d68 : and r8d, 0x21487fff ; ret 0xcae9
0x00000000001187db : and r9, 0xfffffffffffffff0 ; mov rdx, r9 ; jmp 0x118817
0x000000000003fdf7 : and rax, qword ptr [r8] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001d5a90 : and rax, qword ptr [rcx] ; add ah, bl ; sal bl, cl ; jmp rsi
0x00000000001216de : and rax, rdi ; or rax, rsi ; ret
0x000000000003df35 : and rax, rdx ; movq xmm0, rax ; ret
0x000000000002478c : and rbx, 0xfffffffffffffff0 ; mov rdi, rbx ; call 0x21239
0x0000000000086b1b : and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x86b37
0x000000000003e2ab : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000003e2a8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000001c0242 : bnd call qword ptr [rax - 0x4bfffec7] ; adc dh, dl ; jmp rsp
0x00000000001b017e : bnd call qword ptr [rdi] ; mov cl, 0xf2 ; jmp qword ptr [rbx]
0x00000000001b061e : bnd call qword ptr [rdx] ; retf
0x00000000001afe36 : bnd call qword ptr [rip + 0xffff271] ; jb 0x1afe39 ; jmp rax
0x00000000001afe36 : bnd call qword ptr [rip + 0xffff271] ; jb 0x1afe3a ; jmp rax
0x00000000001b03a6 : bnd call rbp ; ret
0x00000000001c026a : bnd call rsp ; cmp al, byte ptr [rcx] ; add ah, dl ; sbb dl, dh ; jmp qword ptr [rax]
0x00000000001c061a : bnd call rsp ; push rax ; add dword ptr [rax], eax ; ret
0x0000000000141107 : bnd jb 0x1410fc ; mov eax, 0xffffffff ; ret
0x000000000015db47 : bnd jbe 0x15db56 ; xor eax, eax ; ret
0x00000000000be717 : bnd je 0xbe726 ; test edx, edx ; jne 0xbe718 ; ret
0x00000000001afeaa : bnd jmp rax ; insb byte ptr [rdi], dx ; ljmp [rdi] ; jne 0x1afead ; call qword ptr [rax]
0x00000000001afeaa : bnd jmp rax ; insb byte ptr [rdi], dx ; ljmp [rdi] ; jne 0x1afeae ; call qword ptr [rax]
0x00000000001afe8e : bnd jmp rax ; insb byte ptr [rdi], dx ; push qword ptr [rax] ; jns 0x1afe91 ; jmp rax
0x00000000001afe8e : bnd jmp rax ; insb byte ptr [rdi], dx ; push qword ptr [rax] ; jns 0x1afe92 ; jmp rax
0x00000000001c024a : bnd jmp rsp ; cmp dword ptr [rcx], eax ; add ah, dh ; adc esi, edx ; call qword ptr [rax]
0x0000000000052866 : bnd jne 0x5285d ; xor eax, eax ; ret
0x00000000000abcfa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x00000000000abc20 : bsf eax, eax ; add rax, rdi ; ret
0x000000000018a691 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000abc30 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000abc40 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000abc10 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x00000000000abb6f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b1163 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x000000000009eec5 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x00000000000b1656 : bsf eax, edx ; ret
0x00000000000d09e7 : bsf eax, edx ; shr rax, 2 ; ret
0x00000000000b17b2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000b1280 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x00000000000b16a2 : bsf rax, rdx ; ret
0x00000000000d09e6 : bsf rax, rdx ; shr rax, 2 ; ret
0x000000000018aa70 : bsr eax, eax ; add eax, 0x60 ; add rax, rdi ; ret
0x00000000000ac216 : bsr eax, eax ; add rax, rdi ; add rax, rsi ; ret
0x00000000000ac046 : bsr eax, eax ; add rax, rdi ; ret
0x000000000018a95f : bsr eax, eax ; add rax, rdi ; vzeroupper ; ret
0x00000000000ac0f0 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x00000000000ac100 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x00000000000ac110 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x00000000000b160b : bsr eax, esi ; add rax, rdi ; ret
0x00000000000b1519 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x00000000000b1415 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x00000000000b1386 : bsr rax, rax ; add rax, rdi ; ret
0x00000000000b160a : bsr rax, rsi ; add rax, rdi ; ret
0x00000000000b1518 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x00000000000b1414 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x00000000001568ad : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000134d32 : bswap eax ; ret
0x0000000000002caf : bswap ebx ; clc ; ret
0x0000000000053fd8 : call 0x102c7
0x0000000000123488 : call 0x10f762
0x0000000000163afc : call 0x10fd72
0x00000000001643c3 : call 0x1106c2
0x0000000000164745 : call 0x1109a2
0x000000000011487f : call 0x110b22
0x00000000001cf298 : call 0x111cee5c
0x0000000000156b55 : call 0x122d92
0x00000000000794c1 : call 0x125782
0x0000000000079524 : call 0x125812
0x000000000012d858 : call 0x129b22
0x0000000000154477 : call 0x130692
0x00000000000d4400 : call 0x1306c2
0x00000000001d0178 : call 0x131cf065
0x00000000000589d4 : call 0x134c82
0x0000000000145945 : call 0x142362
0x000000000013cc89 : call 0x148f62
0x0000000000150d1f : call 0x15cfa2
0x0000000000150f7c : call 0x15d212
0x0000000000149985 : call 0x166452
0x00000000001dcad8 : call 0x181dc11f
0x00000000001c7206 : call 0x1d3d0c
0x0000000000034d50 : call 0x21052
0x0000000000034e67 : call 0x21102
0x00000000000c4702 : call 0x21162
0x0000000000024793 : call 0x21232
0x00000000000f47cf : call 0x212c2
0x000000000003506b : call 0x212ca
0x00000000001cdca8 : call 0x221cc9a3
0x00000000001d55e8 : call 0x221d49a3
0x00000000001d8338 : call 0x221d77e0
0x00000000001da068 : call 0x241d95d0
0x00000000001d6a18 : call 0x271d5e37
0x00000000001d9e98 : call 0x271d93e4
0x00000000001542de : call 0x30d72
0x0000000000038a3f : call 0x35542
0x00000000000c6fc1 : call 0x53232
0x0000000000046860 : call 0x53342
0x000000000004721f : call 0x53492
0x000000000005bf6d : call 0x589e2
0x0000000000051b2b : call 0x7ddd2
0x0000000000063760 : call 0x80262
0x00000000000673ed : call 0x836d2
0x000000000008dee8 : call 0x8a152
0x0000000000132127 : call 0x8eb52
0x0000000000051737 : call 0x9d9f2
0x0000000000022898 : call 0x9eb62
0x00000000000d43b6 : call 0xd0ea2
0x0000000000127dae : call 0xe4842
0x00000000001096f0 : call 0xe5902
0x0000000000100971 : call 0xfcbd2
0x00000000001acafa : call 0xffffffffab2895f0
0x00000000000b71b4 : call 0xffffffffc30b71c4
0x0000000000121ffe : call 0xffffffffc316008a
0x00000000000514aa : call 0xffffffffc33e5cb4
0x00000000000514bc : call 0xffffffffc33e5cc6
0x00000000000514d8 : call 0xffffffffc33e5ce2
0x0000000000095410 : call 0xffffffffc3429c1a
0x00000000000967f9 : call 0xffffffffc342b003
0x00000000001182a2 : call 0xffffffffc34acaac
0x000000000011f678 : call 0xffffffffc34b3e82
0x00000000000673c6 : call 0xffffffffc38a73ce
0x0000000000181ce5 : call 0xffffffffc39e2bfe
0x0000000000182d65 : call 0xffffffffc39e3c7e
0x00000000000b6537 : call 0xffffffffc3dbee88
0x00000000000ef3a0 : call 0xffffffffc3e3030f
0x00000000000b6457 : call 0xffffffffc403eda8
0x00000000000b9527 : call 0xffffffffc4041e78
0x0000000000131c67 : call 0xffffffffc40ba5b8
0x00000000000f3e02 : call 0xffffffffcb48830f
0x00000000001b065c : call 0xffffffffd11af9be
0x00000000001cf0b8 : call 0xffffffffd51cec7a
0x00000000001d54d8 : call 0xffffffffd81d488e
0x000000000011dd25 : call 0xffffffffe1113a88
0x00000000001d3b78 : call 0xffffffffe11d2de9
0x00000000001d3b78 : call 0xffffffffe11d2dea
0x00000000001a949e : call 0xffffffffe8995fa4
0x00000000000984b5 : call qword ptr [ecx]
0x0000000000157e5e : call qword ptr [r10]
0x00000000001bd6ab : call qword ptr [rax + 0x10fffb66]
0x00000000001bd6a3 : call qword ptr [rax + 0x10fffb67]
0x00000000001bd69b : call qword ptr [rax + 0x10fffb68]
0x00000000001bd693 : call qword ptr [rax + 0x10fffb69]
0x00000000001bd68b : call qword ptr [rax + 0x10fffb6a]
0x00000000001bd09b : call qword ptr [rax + 0x20fffb48]
0x00000000001bd473 : call qword ptr [rax + 0x20fffb6f]
0x00000000001bd25b : call qword ptr [rax + 0x20fffb72]
0x00000000001bdb7b : call qword ptr [rax + 0x20fffb8a]
0x00000000001bd96b : call qword ptr [rax + 0x20fffb96]
0x00000000001bd753 : call qword ptr [rax + 0x20fffb99]
0x00000000001bcd6f : call qword ptr [rax + 0x20fffd46]
0x00000000001bdc4f : call qword ptr [rax - 0x1f000326]
0x00000000001bd217 : call qword ptr [rax - 0x1f0004d5]
0x00000000001bd1c3 : call qword ptr [rax - 0x1f0004dc]
0x00000000001bd037 : call qword ptr [rax - 0x1f0004f3]
0x00000000001bd04b : call qword ptr [rax - 0x1f000501]
0x00000000001af34f : call qword ptr [rax - 0x1f000fff]
0x00000000001af3b3 : call qword ptr [rax - 0x2f000340]
0x00000000001af3a3 : call qword ptr [rax - 0x2f000349]
0x00000000001af393 : call qword ptr [rax - 0x2f000352]
0x00000000001af383 : call qword ptr [rax - 0x2f00035b]
0x000000000003dfec : call qword ptr [rax - 0x3d]
0x000000000000313b : call qword ptr [rax]
0x00000000001bf0eb : call qword ptr [rbx + rcx*8]
0x000000000000369a : call qword ptr [rbx]
0x00000000001ae557 : call qword ptr [rcx - 0x1b001390]
0x00000000001b036b : call qword ptr [rcx - 0x2e000d28]
0x0000000000093c8b : call qword ptr [rcx]
0x00000000001b017f : call qword ptr [rdi]
0x00000000001bd307 : call qword ptr [rdx + 0x22fffb74]
0x0000000000009678 : call qword ptr [rdx]
0x00000000001bcccf : call qword ptr [rsi + 0x16fffd42]
0x00000000001bccd7 : call qword ptr [rsi + 0x16fffd43]
0x00000000001bccdf : call qword ptr [rsi + 0x16fffd44]
0x00000000001bccfb : call qword ptr [rsi + 0x17fffd48]
0x00000000001bd2a3 : call qword ptr [rsi + 0x26fffb71]
0x00000000001bd79b : call qword ptr [rsi + 0x26fffb98]
0x000000000002cd88 : call qword ptr [rsi]
0x00000000001b0aad : call qword ptr fs:[rax]
0x0000000000149fdd : call r10
0x0000000000026037 : call r12
0x0000000000022e90 : call r14
0x0000000000025299 : call r15
0x000000000015d173 : call r8
0x0000000000021b95 : call rax
0x0000000000022b8d : call rbx
0x000000000002d64a : call rcx
0x000000000002529a : call rdi
0x000000000002c9c3 : call rdx
0x0000000000022e91 : call rsi
0x0000000000026038 : call rsp
0x000000000016b467 : cdq ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000cbc69 : cdq ; add eax, 0x74db8500 ; or bh, byte ptr [rcx] ; ret
0x00000000000cbc15 : cdq ; add eax, 0x75db8500 ; fsubr qword ptr [rcx] ; ret
0x000000000011efc3 : cdq ; and dh, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000131a93 : cdq ; clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000001db379 : cdq ; cmc ; call qword ptr [rcx]
0x00000000001db301 : cdq ; cmc ; call qword ptr [rdi]
0x00000000001db345 : cdq ; cmc ; call qword ptr [rdx]
0x00000000001d7d8d : cdq ; hlt ; call qword ptr [rax]
0x00000000001d7de1 : cdq ; hlt ; jmp qword ptr [rcx]
0x0000000000043944 : cdq ; idiv rsi ; ret
0x00000000001aca00 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000e9744 : cdq ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001af1c1 : cdq ; out dx, eax ; jmp rax
0x0000000000154dc3 : cdq ; ret
0x00000000000e4423 : cdq ; ret 4
0x0000000000043d5a : cdq ; retf
0x000000000005b233 : cdq ; retf 0x15
0x000000000003657b : cdq ; sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000001bd799 : cdq ; sti ; call qword ptr [rsi + 0x26fffb98]
0x00000000001bd8d5 : cdq ; sti ; call rsp
0x00000000001bd8d1 : cdq ; sti ; inc dword ptr [rcx + rbx*4 - 5] ; call rsp
0x00000000001bd755 : cdq ; sti ; jmp qword ptr [rax]
0x00000000001359e9 : cdq ; sub eax, dword ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; retf
0x00000000001d4840 : clc ; adc byte ptr [rcx], al ; add bh, dl ; retf
0x000000000004a86b : clc ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x0000000000197ad9 : clc ; add al, 0x74 ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x000000000012e2fb : clc ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c1434 : clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x9848
0x000000000010f3a9 : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000bd10c : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x0000000000066669 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000009480a : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x0000000000094487 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x0000000000084f0e : clc ; add cl, byte ptr [rax - 0x77] ; ret
0x00000000000f3d4a : clc ; add cl, byte ptr [rax - 0x7bf0afad] ; ret
0x0000000000106692 : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000009fd49 : clc ; add dword ptr [rax - 0x77], ecx ; ret
0x00000000001c240d : clc ; add dword ptr [rax], eax ; push rsp ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000001d7c40 : clc ; add dword ptr [rax], r8d ; sub al, 0x7c ; hlt ; jmp qword ptr [rcx]
0x00000000000a716a : clc ; add dword ptr [rbp + 0x19], eax ; fild dword ptr [rcx - 0x7d] ; ret
0x00000000000a7174 : clc ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8304
0x000000000015c621 : clc ; add dword ptr [rbp + 0xb], esi ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000003c9bd : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x00000000000a0d4b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d8a5a : clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x00000000001401d5 : clc ; add eax, 0x10 ; ret
0x0000000000024112 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000018ab3f : clc ; add rax, r8 ; vzeroupper ; ret
0x00000000000ab9f7 : clc ; add rax, rcx ; ret
0x000000000018a4a4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000000ac21b : clc ; add rax, rsi ; ret
0x00000000000306c1 : clc ; and eax, 0x7f ; ret
0x0000000000134d57 : clc ; and eax, 0xffffff ; ret
0x0000000000134d31 : clc ; bswap eax ; ret
0x00000000001c22aa : clc ; call qword ptr [rax]
0x00000000001e232e : clc ; call qword ptr [rbx]
0x00000000001e2b5e : clc ; call qword ptr [rdi]
0x00000000001c2352 : clc ; call rax
0x00000000001e2daa : clc ; call rbx
0x00000000001e2cb2 : clc ; call rsi
0x00000000001c2372 : clc ; call rsp
0x00000000001dc261 : clc ; cmc ; call qword ptr [rax]
0x00000000001dc27d : clc ; cmc ; call rsp
0x00000000001401b1 : clc ; cmc ; je 0x1401ad ; pop rbx ; ret
0x000000000009a7d8 : clc ; cmovne rax, rcx ; ret
0x000000000014166c : clc ; cmovs eax, edx ; ret
0x0000000000003c3a : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000191599 : clc ; cmp rcx, rax ; jne 0x1915cb ; xor eax, eax ; ret
0x0000000000191598 : clc ; cmp rcx, rax ; jne 0x1915cc ; xor eax, eax ; ret
0x00000000001923d9 : clc ; cmp rcx, rax ; jne 0x19240b ; xor eax, eax ; ret
0x00000000001923d8 : clc ; cmp rcx, rax ; jne 0x19240c ; xor eax, eax ; ret
0x00000000001d8798 : clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x0000000000043942 : clc ; cqo ; idiv rsi ; ret
0x00000000001dd040 : clc ; cwde ; add dword ptr [rax], eax ; fsubr qword ptr [rcx - 0xa] ; call rax
0x00000000001c238a : clc ; dec dword ptr [rax + 0x240001f4] ; jge 0x1c2394 ; jmp rsp
0x00000000000a0d38 : clc ; dec dword ptr [rax + 0x29] ; ret
0x000000000009b1a0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000131b6e : clc ; dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x00000000001318f4 : clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000009eb80 : clc ; dec dword ptr [rax + 1] ; ret
0x00000000001c234a : clc ; dec dword ptr [rax - 0x4bfffe0e] ; pop rsp ; clc ; call rax
0x000000000003035a : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000009d0ef : clc ; dec dword ptr [rax - 0x77] ; ret 0x1b8
0x0000000000072f3f : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000730a8 : clc ; dec dword ptr [rax - 0x77] ; ret 0x850f
0x000000000007f979 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000085b6d : clc ; dec dword ptr [rax - 0x77] ; retf
0x00000000000c6a2c : clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xb
0x0000000000118a15 : clc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x000000000009fd45 : clc ; dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000009e7b2 : clc ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000001318ac : clc ; dec dword ptr [rbx + 0xb491] ; add bh, dh ; ret 0
0x00000000000c94d8 : clc ; dec dword ptr [rcx + 0xf] ; ret 0x39e9
0x00000000000a0c6d : clc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x00000000000401dc : clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x0000000000087cdd : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000001c2292 : clc ; dec esp ; out dx, al ; add dword ptr [rax], eax ; je 0x1c22d8 ; clc ; jmp rax
0x00000000001da140 : clc ; imul eax, dword ptr [rcx], 0xf5621c00 ; jmp qword ptr [rbx]
0x00000000001cdff9 : clc ; in al, dx ; call qword ptr [rax]
0x00000000001cc1e8 : clc ; in al, dx ; call qword ptr [rsi]
0x00000000001bf3a1 : clc ; in al, dx ; call rsp
0x00000000001c6b38 : clc ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000001d01c8 : clc ; in eax, 0xee ; call qword ptr [rdx]
0x00000000001c210c : clc ; in eax, 1 ; add byte ptr [rcx + rbp*8 - 9], dh ; jmp qword ptr [rax]
0x000000000002dbb2 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000001c240a : clc ; inc eax ; clc ; add dword ptr [rax], eax ; push rsp ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000001c2482 : clc ; inc eax ; std ; add dword ptr [rax], eax ; push rsp ; ret
0x00000000000a4e37 : clc ; jb 0xa4e1b ; mov rdx, rax ; jmp 0xa4dd1
0x00000000000a6a91 : clc ; jb 0xa6a75 ; mov rdx, rax ; jmp 0xa6a35
0x0000000000028427 : clc ; jg 0x283b6 ; ret 0xdb76
0x00000000000bbafa : clc ; jg 0xbbac9 ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000bbb56 : clc ; jg 0xbbb56 ; int1 ; mov eax, eax ; ret
0x00000000001c0d24 : clc ; jl 0x1c0d2f ; add byte ptr [rax + rdx*2], al ; cmc ; jmp qword ptr [rax]
0x00000000001c21c2 : clc ; jmp qword ptr [rax]
0x00000000001da16e : clc ; jmp qword ptr [rbx]
0x00000000001e235e : clc ; jmp qword ptr [rcx]
0x000000000005bd73 : clc ; jmp rax
0x00000000001e2712 : clc ; jmp rbx
0x00000000001c2392 : clc ; jmp rsp
0x000000000019555a : clc ; jne 0x195667 ; ret
0x0000000000195559 : clc ; jne 0x195668 ; ret
0x00000000001db340 : clc ; jnp 0x1db34b ; add byte ptr [rcx + rbx*4], bh ; cmc ; call qword ptr [rdx]
0x00000000001c236a : clc ; lcall [rax - 0x5bfffe0d] ; jo 0x1c2374 ; call rsp
0x000000000009f0d4 : clc ; lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e510a : clc ; leave ; ret
0x0000000000118e3b : clc ; mov byte ptr [r8 - 1], 0 ; ret
0x00000000001ab662 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000003e2a4 : clc ; mov dh, 0x16 ; add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000081e94 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000394c : clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x000000000016e1b7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016eb27 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000173a77 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016ed27 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001739e7 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016ef27 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000173957 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016e1d3 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000bb99e : clc ; mov qword ptr [rdi], rcx ; ret
0x000000000018f03d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000a8487 : clc ; mov qword ptr [rdi], rdx ; ret
0x000000000019259c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000bb58a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000007d6f0 : clc ; mov rdx, r8 ; jmp 0x7d6c2
0x0000000000054ba2 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000002255c : clc ; neg eax ; ret
0x00000000001080ef : clc ; or byte ptr [rax - 0x77], cl ; ret 0x830f
0x0000000000081eaf : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001216e0 : clc ; or rax, rsi ; ret
0x0000000000074be0 : clc ; pop rbp ; cmove r8, rdx ; jmp 0x74c01
0x0000000000092311 : clc ; pop rbp ; pop r12 ; ret
0x0000000000058596 : clc ; pop rbx ; cmovb rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000a89d6 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000084267 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000052c55 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x0000000000159a31 : clc ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x00000000000e0183 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000001c23ea : clc ; push qword ptr [rdi + rsi*8 + 1] ; add byte ptr [rdi + rax*4 - 8], ah ; jmp rsp
0x0000000000109ff6 : clc ; push qword ptr [rsi + rbx*8 + 0x39] ; ret
0x00000000001c2222 : clc ; push rax ; in al, dx ; add dword ptr [rax], eax ; test byte ptr [rbx], ch ; clc ; jmp qword ptr [rax]
0x0000000000002c85 : clc ; ret
0x00000000001cfa40 : clc ; ret 0
0x00000000001bbe32 : clc ; ret 0x6e1f
0x00000000001643c4 : clc ; ret 0xfffa
0x00000000000045e0 : clc ; retf 0x1b
0x000000000008b9cc : clc ; retf 0x35
0x000000000018b1c4 : clc ; rol ch, 1 ; jns 0x18b1a5 ; retf 0xead3
0x000000000018b314 : clc ; rol ch, 1 ; jns 0x18b2f5 ; retf 0xead3
0x000000000018b464 : clc ; rol ch, 1 ; jns 0x18b445 ; retf 0xead3
0x000000000018b5b4 : clc ; rol ch, 1 ; jns 0x18b595 ; retf 0xead3
0x000000000018b704 : clc ; rol ch, 1 ; jns 0x18b6e5 ; retf 0xead3
0x000000000018b854 : clc ; rol ch, 1 ; jns 0x18b835 ; retf 0xead3
0x000000000018b9a4 : clc ; rol ch, 1 ; jns 0x18b985 ; retf 0xead3
0x000000000018baf4 : clc ; rol ch, 1 ; jns 0x18bad5 ; retf 0xead3
0x000000000018bc44 : clc ; rol ch, 1 ; jns 0x18bc25 ; retf 0xead3
0x000000000018bd94 : clc ; rol ch, 1 ; jns 0x18bd75 ; retf 0xead3
0x000000000018bee4 : clc ; rol ch, 1 ; jns 0x18bec5 ; retf 0xead3
0x000000000018c034 : clc ; rol ch, 1 ; jns 0x18c015 ; retf 0xead3
0x000000000018c184 : clc ; rol ch, 1 ; jns 0x18c165 ; retf 0xead3
0x000000000018c2d4 : clc ; rol ch, 1 ; jns 0x18c2b5 ; retf 0xead3
0x000000000018c424 : clc ; rol ch, 1 ; jns 0x18c405 ; retf 0xead3
0x000000000018c894 : clc ; rol ch, 1 ; jns 0x18c875 ; retf 0xead3
0x000000000018ca14 : clc ; rol ch, 1 ; jns 0x18c9f5 ; retf 0xead3
0x000000000018cb94 : clc ; rol ch, 1 ; jns 0x18cb75 ; retf 0xead3
0x000000000018cd14 : clc ; rol ch, 1 ; jns 0x18ccf5 ; retf 0xead3
0x000000000018ce94 : clc ; rol ch, 1 ; jns 0x18ce75 ; retf 0xead3
0x000000000018d014 : clc ; rol ch, 1 ; jns 0x18cff5 ; retf 0xead3
0x000000000018d194 : clc ; rol ch, 1 ; jns 0x18d175 ; retf 0xead3
0x000000000018d314 : clc ; rol ch, 1 ; jns 0x18d2f5 ; retf 0xead3
0x000000000018d494 : clc ; rol ch, 1 ; jns 0x18d475 ; retf 0xead3
0x000000000018d614 : clc ; rol ch, 1 ; jns 0x18d5f5 ; retf 0xead3
0x000000000018d794 : clc ; rol ch, 1 ; jns 0x18d775 ; retf 0xead3
0x000000000018d914 : clc ; rol ch, 1 ; jns 0x18d8f5 ; retf 0xead3
0x000000000018da94 : clc ; rol ch, 1 ; jns 0x18da75 ; retf 0xead3
0x000000000018dc14 : clc ; rol ch, 1 ; jns 0x18dbf5 ; retf 0xead3
0x000000000018dd94 : clc ; rol ch, 1 ; jns 0x18dd75 ; retf 0xead3
0x0000000000134d41 : clc ; ror ax, 8 ; ret
0x00000000000438e3 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000134bfb : clc ; sar rax, 6 ; ret
0x00000000000ecf9a : clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000000d12f4 : clc ; sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x000000000005332a : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000134dd7 : clc ; shr eax, 0x18 ; ret
0x00000000000d0aff : clc ; shr rax, 2 ; ret
0x00000000001b32c0 : clc ; std ; stc ; dec eax ; cld ; stc ; jmp rax
0x00000000001d5378 : clc ; stosb byte ptr [rdi], al ; jmp qword ptr [rsi]
0x0000000000003e24 : clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x000000000012c137 : clc ; sub eax, 0x39c3950f ; ret
0x000000000018a3b1 : clc ; sub rax, r8 ; ret
0x000000000018e696 : clc ; sub rax, rdx ; vzeroupper ; ret
0x000000000018a15b : clc ; sub rax, rsi ; ret
0x00000000001307a5 : clc ; test edx, edx ; je 0x1307b9 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000018a61b : clc ; vzeroupper ; ret
0x00000000001c5608 : clc ; xchg bh, ah ; call qword ptr [rcx]
0x00000000001af184 : clc ; xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x0000000000131940 : cld ; adc al, 6 ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001d338d : cld ; add byte ptr [rax], al ; and ah, dl ; int1 ; jmp rbx
0x00000000001d3379 : cld ; add byte ptr [rax], al ; pop rcx ; loopne 0x1d3369 ; jmp qword ptr [rbx]
0x00000000000e6712 : cld ; add byte ptr [rax], al ; ret
0x00000000001c08e4 : cld ; add dword ptr [eax], eax ; je 0x1c0952 ; hlt ; call qword ptr [rax]
0x00000000001c0de4 : cld ; add dword ptr [rcx], 0xf57bb400 ; call qword ptr [rax]
0x00000000000bba5f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000001d8244 : cld ; add qword ptr [rax], rax ; cwde ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001c315c : cld ; add r8b, byte ptr [r8] ; add al, 0x86 ; cli ; call qword ptr [rax]
0x00000000001c3124 : cld ; add r8b, byte ptr [rax] ; hlt ; jg 0x1c312c ; call qword ptr [rax]
0x0000000000086b1e : cld ; add rdx, rcx ; jmp 0x86b34
0x00000000001bdc4e : cld ; call qword ptr [rax - 0x1f000326]
0x00000000001af3b2 : cld ; call qword ptr [rax - 0x2f000340]
0x00000000001af3a2 : cld ; call qword ptr [rax - 0x2f000349]
0x00000000001af392 : cld ; call qword ptr [rax - 0x2f000352]
0x00000000001af382 : cld ; call qword ptr [rax - 0x2f00035b]
0x00000000001af38a : cld ; call qword ptr [rax]
0x00000000001cfa0a : cld ; call qword ptr [rbx]
0x00000000001cd966 : cld ; call qword ptr [rdx]
0x00000000001af386 : cld ; call rax
0x0000000000051371 : cld ; cld ; dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x00000000001bdcad : cld ; cld ; jmp rax
0x00000000001bd005 : cld ; cli ; call rax
0x0000000000195652 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x195668 ; xor eax, eax ; ret
0x0000000000195651 : cld ; cmp eax, dword ptr [rsi - 4] ; jne 0x195669 ; xor eax, eax ; ret
0x0000000000058c6e : cld ; dec dword ptr [rax + 0x29] ; ret
0x0000000000051372 : cld ; dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x000000000014ef3a : cld ; dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000014ec09 : cld ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000fb3d4 : cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000000ea811 : cld ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd009
0x000000000003dd07 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000001d01b4 : cld ; in eax, 0xee ; call qword ptr [rax]
0x00000000001bf8e1 : cld ; in eax, dx ; call rsp
0x00000000001bdc4a : cld ; inc dword ptr [rax - 0x27] ; cld ; call qword ptr [rax - 0x1f000326]
0x00000000001bdc7a : cld ; inc dword ptr [rax - 0x2c] ; cld ; jmp rax
0x00000000001bcc06 : cld ; inc dword ptr [rax - 0x45] ; cld ; call qword ptr [rax]
0x00000000001bcbee : cld ; inc dword ptr [rax - 0x51] ; cld ; jmp rax
0x00000000001bcbce : cld ; inc dword ptr [rax - 0x5e] ; cld ; jmp rax
0x00000000001bcbae : cld ; inc dword ptr [rax - 0x6a] ; cld ; push qword ptr [rax] ; xchg eax, edi ; cld ; jmp qword ptr [rax]
0x00000000001bcb7e : cld ; inc dword ptr [rax] ; mov edi, esp ; push rax ; mov edi, esp ; jmp rax
0x00000000001bcb6e : cld ; inc dword ptr [rax] ; xchg esp, edi ; call rax
0x00000000000bbb3c : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000bbaaa : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001bdc6a : cld ; inc eax ; jrcxz 0x1bdc70 ; call qword ptr [rax]
0x00000000001c0aec : cld ; jae 0x1c0af7 ; add byte ptr [rdx + rbx - 0xb], al ; call qword ptr [rax]
0x00000000001be48c : cld ; jg 0x1be496 ; add ah, dh ; sbb ebp, eax ; call qword ptr [rax]
0x00000000001bcb42 : cld ; jmp qword ptr [rax]
0x00000000001d0d12 : cld ; jmp qword ptr [rbx]
0x00000000001da3aa : cld ; jmp qword ptr [rdx]
0x00000000001af3be : cld ; jmp rax
0x00000000001921e6 : cld ; jne 0x19241f ; xor eax, eax ; ret
0x0000000000195655 : cld ; jne 0x195665 ; xor eax, eax ; ret
0x0000000000195654 : cld ; jne 0x195666 ; xor eax, eax ; ret
0x0000000000195575 : cld ; jne 0x195667 ; ret
0x0000000000195574 : cld ; jne 0x195668 ; ret
0x00000000001ac3e5 : cld ; lodsb al, byte ptr [rsi] ; loop 0x1ac3b4 ; retf
0x00000000001bf04c : cld ; mov byte ptr [rax], 0 ; mov gs, esp ; call qword ptr [rax]
0x00000000001c184c : cld ; mov cl, 1 ; add byte ptr [rsp + rdi*2 - 0xa], ah ; call qword ptr [rax]
0x000000000016e942 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016eb45 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ed45 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ef45 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000bb9a6 : cld ; mov dword ptr [rdi], ecx ; ret
0x000000000018f048 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000001925ae : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000000bb598 : cld ; mov dword ptr [rdi], esi ; ret
0x00000000001cf244 : cld ; mov edx, 0x80580000 ; cli ; call qword ptr [rax]
0x00000000000bb592 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000001beeb4 : cld ; mov esp, 0x4db40000 ; in al, dx ; call qword ptr [rax]
0x000000000016e576 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173c06 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e756 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173b86 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e936 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173b06 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e396 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173c86 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000110bf7 : cld ; mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000054b5c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001c2654 : cld ; or al, byte ptr [rdx] ; add byte ptr [rbx + rax], al ; stc ; call qword ptr [rax]
0x00000000001c371c : cld ; out dx, al ; add byte ptr [rax], al ; mov ah, 0xe8 ; std ; jmp qword ptr [rax]
0x00000000001c22a4 : cld ; out dx, al ; add dword ptr [rax], eax ; push rsp ; clc ; call qword ptr [rax]
0x00000000001da244 : cld ; push 1 ; add byte ptr [rax + 0x62], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001c33a2 : cld ; push qword ptr [rax + 0x4000115] ; ret
0x00000000001bdc66 : cld ; push qword ptr [rax - 0x1e] ; cld ; inc eax ; jrcxz 0x1bdc74 ; call qword ptr [rax]
0x00000000001bcc26 : cld ; push qword ptr [rax] ; retf 0xfffc
0x00000000001bcb6a : cld ; push qword ptr [rax] ; xchg ah, bh ; inc dword ptr [rax] ; xchg esp, edi ; call rax
0x00000000001bcbb2 : cld ; push qword ptr [rax] ; xchg eax, edi ; cld ; jmp qword ptr [rax]
0x00000000001bcb82 : cld ; push rax ; mov edi, esp ; jmp rax
0x00000000001c33ca : cld ; push rsp ; adc al, byte ptr [rcx] ; add ah, al ; retf 0xfffc
0x0000000000054b62 : cld ; ret
0x00000000000575aa : cld ; ret 0x4166
0x00000000001d8fd4 : cld ; retf
0x0000000000004640 : cld ; retf 0x1b
0x0000000000048825 : cld ; retf 0x4166
0x0000000000038a40 : cld ; retf 0xffff
0x00000000001c1e3c : cld ; rol byte ptr [rcx], cl ; add ah, al ; movsxd rsi, edi ; call qword ptr [rax]
0x00000000001bf23c : cld ; rol dword ptr [rax], 1 ; add ah, ah ; ret
0x00000000001d5044 : cld ; sbb byte ptr [rcx], al ; add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdx]
0x00000000001454a8 : cld ; sbb dword ptr [rdi], eax ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000001aab03 : cld ; shr al, cl ; add al, 0x3d ; retf
0x000000000011e18a : cld ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001b32c5 : cld ; stc ; jmp rax
0x00000000001aab16 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000d048e : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xd0491 ; ret
0x0000000000193032 : cld ; vzeroupper ; ret
0x0000000000043ebd : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x000000000014be5c : cli ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000d2b87 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x148
0x000000000010f483 : cli ; add al, 0x74 ; or dword ptr [rax + 0x1c], edi ; syscall
0x00000000000d87f0 : cli ; add al, 0x75 ; ret 0x8948
0x000000000014274a : cli ; add al, 0x83 ; ret 0xf01
0x00000000000c6bf9 : cli ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000d3af0 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000dae7a : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000daed2 : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x0000000000065baf : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000085ed2 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000069cbb : cli ; add cl, byte ptr [rcx + 0x29] ; ror dword ptr [rbp - 0x77], 1 ; retf
0x00000000000a41d4 : cli ; add dword ptr [rax + 0x19], ecx ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000000a3e55 : cli ; add dword ptr [rbp + 0x19], eax ; fild dword ptr [rcx - 0x7d] ; ret
0x000000000004aed5 : cli ; add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x00000000000a4ec5 : cli ; add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx - 0x7d], cl ; ret 0x8303
0x00000000000a3e40 : cli ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000a41de : cli ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000bb991 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0xbb9a1 ; mov byte ptr [rdi], cl ; ret
0x0000000000192c9b : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x00000000001925cc : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000d1731 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000000038b5 : cli ; add ebx, ebp ; in al, 0xee ; jne 0x389d ; ret 0x975
0x00000000000cc44e : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x00000000000cc4ac : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000050c14 : cli ; add rdx, rcx ; jmp 0x50c2c
0x0000000000050f15 : cli ; add rdx, rcx ; jmp 0x50f2c
0x0000000000118e20 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rax - 1], 0 ; ret
0x00000000001acaf9 : cli ; call 0xffffffffab2895f1
0x00000000001bd04a : cli ; call qword ptr [rax - 0x1f000501]
0x00000000001c3052 : cli ; call qword ptr [rax]
0x00000000001c64ea : cli ; call qword ptr [rdi]
0x00000000001bd006 : cli ; call rax
0x00000000001b3726 : cli ; call rsp
0x000000000005b486 : cli ; cmp byte ptr [rax], al ; call rax
0x00000000001c3142 : cli ; dec dword ptr [rax + 0x4400024d] ; test edx, edi ; call rsp
0x00000000001c317a : cli ; dec dword ptr [rax - 0x1bfffdb2] ; xchg dl, bh ; jmp qword ptr [rax]
0x0000000000163158 : cli ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; sahf ; ret 0x8349
0x000000000007e2fc : cli ; dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x00000000001517fe : cli ; in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001bd002 : cli ; inc dword ptr [rax - 0x2f000504] ; std ; cli ; jmp qword ptr [rax]
0x00000000001c2eba : cli ; inc dword ptr [rax - 0x7bfffdc2] ; and edx, edi ; call rax
0x00000000001bd046 : cli ; inc dword ptr [rax - 2] ; cli ; call qword ptr [rax - 0x1f000501]
0x000000000018eb49 : cli ; jg 0x18eb5c ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018f032 : cli ; jg 0x18f042 ; vzeroupper ; ret
0x0000000000192587 : cli ; jg 0x19259a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000192c66 : cli ; jg 0x192c78 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000192f61 : cli ; jg 0x192f74 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000193598 : cli ; jg 0x1935a8 ; vzeroupper ; ret
0x00000000001bd00a : cli ; jmp qword ptr [rax]
0x00000000001c71de : cli ; jmp qword ptr [rcx]
0x00000000001bd04e : cli ; jmp rax
0x000000000003c764 : cli ; jmp rdx
0x00000000001c2e7a : cli ; jmp rsp
0x0000000000173712 : cli ; jnp 0x173742 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000001c2e72 : cli ; lcall [rax + 0x6400023b] ; or dl, bh ; jmp rsp
0x00000000001b3752 : cli ; lcall [rcx + rsi + 0x31bcfffa] ; cli ; call rsp
0x00000000001c2e2a : cli ; ljmp [rdx + rdi + 0x5440002] ; cli ; call rax
0x000000000002923c : cli ; loopne 0x292b9 ; jae 0x291cf ; retf 0xb941
0x00000000000a857c : cli ; mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000a84af : cli ; mov byte ptr [rdi + 2], dl ; ret
0x000000000016ed48 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000009ba07 : cli ; mov rdi, r8 ; call rax
0x00000000001396c0 : cli ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000003ca46 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000000ac368 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x00000000001859d6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009d908 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x000000000004865b : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8348
0x000000000009d8b0 : cli ; or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000014429c : cli ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x841
0x00000000001acf81 : cli ; push 0x6e ; ja 0x1acf0e ; ret 0x48f
0x00000000001bd00e : cli ; push qword ptr [rax] ; sti ; inc eax ; add ebx, edi ; call qword ptr [rax]
0x00000000001c31ca : cli ; push rax ; push rax ; add al, byte ptr [rax] ; add al, 0x95 ; cli ; call qword ptr [rax]
0x00000000000bb8b9 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000002f120 : cli ; ret
0x00000000001aba25 : cli ; ret 0xac65
0x000000000013e216 : cli ; retf 0
0x00000000000ecf97 : cli ; sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x00000000001300eb : cli ; setae al ; ret
0x0000000000050c11 : cli ; sub rdx, r15 ; add rdx, rcx ; jmp 0x50c2f
0x00000000001ab8d0 : cli ; test bh, dl ; retf 0xdf7f
0x00000000001aa66a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000006c30a : cmc ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000189f48 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f742f : cmc ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x00000000001e2cad : cmc ; add dword ptr [rax], eax ; jo 0x1e2cf0 ; clc ; call rsi
0x00000000001e2cac : cmc ; add dword ptr [rax], eax ; jo 0x1e2cf1 ; clc ; call rsi
0x00000000001e3342 : cmc ; add dword ptr [rax], eax ; ret 0x502
0x000000000019c65a : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001c0af2 : cmc ; call qword ptr [rax]
0x00000000001dab66 : cmc ; call qword ptr [rbx]
0x00000000001db37a : cmc ; call qword ptr [rcx]
0x00000000001b1996 : cmc ; call qword ptr [rdi]
0x00000000001da396 : cmc ; call qword ptr [rdx]
0x00000000001dab8e : cmc ; call qword ptr [rsi]
0x00000000001c0b32 : cmc ; call rax
0x00000000001db7ba : cmc ; call rdi
0x00000000001d9c8e : cmc ; call rdx
0x00000000001c0a92 : cmc ; call rsp
0x0000000000133211 : cmc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e6ab2 : cmc ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000c8a9b : cmc ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001c0ce2 : cmc ; dec esp ; jnp 0x1c0cf1 ; add byte ptr [rax + rax*2], al ; cmc ; jmp rax
0x00000000001c1092 : cmc ; dec esp ; lea eax, [rcx] ; add byte ptr [rdi + rbp*4], ah ; cmc ; jmp rax
0x000000000000296f : cmc ; enter 0x42bc, 0x27 ; mov al, 0x1f ; retf
0x00000000001cdd91 : cmc ; in al, dx ; jmp rbx
0x00000000001cf2c1 : cmc ; in eax, dx ; call qword ptr [rax]
0x00000000001c0b9a : cmc ; inc dword ptr [rsi + rsi*2] ; add dword ptr [rax], eax ; xor al, 0x22 ; cmc ; jmp qword ptr [rax]
0x00000000001c0a8a : cmc ; inc eax ; jb 0x1c0a99 ; add byte ptr [rdi + rdx], dl ; cmc ; call rsp
0x00000000001401b2 : cmc ; je 0x1401ac ; pop rbx ; ret
0x00000000001c0ba2 : cmc ; jmp qword ptr [rax]
0x00000000001da056 : cmc ; jmp qword ptr [rbx]
0x00000000001db086 : cmc ; jmp qword ptr [rdi]
0x00000000001db996 : cmc ; jmp qword ptr [rdx]
0x00000000001d9e9a : cmc ; jmp qword ptr [rsi]
0x00000000001c0ae2 : cmc ; jmp rax
0x00000000001d9e6a : cmc ; jmp rdi
0x00000000001c0c52 : cmc ; jmp rsp
0x00000000001b198e : cmc ; lcall [rax - 0x5d] ; cmc ; push qword ptr [rax - 0x50] ; cmc ; call qword ptr [rdi]
0x00000000001b1c8e : cmc ; lcall [rax - 0x60] ; cmc ; push qword ptr [rax - 0x53] ; cmc ; call qword ptr [rdi]
0x00000000001c0b2a : cmc ; lcall [rsp + rsi*2 + 0x1cd40001] ; cmc ; call rax
0x00000000001ad3a9 : cmc ; mov ch, 0xab ; ret
0x0000000000173b8a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e5ce : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000133225 : cmc ; mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000f8120 : cmc ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000194b63 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000001aa257 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000001b1992 : cmc ; push qword ptr [rax - 0x50] ; cmc ; call qword ptr [rdi]
0x00000000001b1c92 : cmc ; push qword ptr [rax - 0x53] ; cmc ; call qword ptr [rdi]
0x00000000001c0d12 : cmc ; push qword ptr [rsp + rdi*2 + 0x4fb40001] ; cmc ; jmp rsp
0x00000000001cf97d : cmc ; sti ; call qword ptr [rbx]
0x00000000001cf941 : cmc ; sti ; call qword ptr [rdx]
0x000000000013d3f2 : cmc ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000194b67 : cmc ; sub eax, edx ; ret
0x00000000001ac9e5 : cmc ; xlatb ; ret 0x4e27
0x0000000000130f79 : cmova eax, edx ; add rsp, 0x28 ; ret
0x0000000000114d58 : cmova eax, edx ; ret
0x0000000000090419 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000141242 : cmovae eax, edi ; ret
0x0000000000117934 : cmovae edx, dword ptr [rax + 0x18] ; mov eax, 0x65 ; syscall
0x0000000000090418 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000058599 : cmovb eax, edi ; pop rbp ; pop r12 ; ret
0x00000000000586a9 : cmovb eax, edi ; ret
0x000000000012344c : cmovb eax, edx ; ret
0x0000000000058598 : cmovb rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000586a8 : cmovb rax, rdi ; ret
0x000000000012344b : cmovb rax, rdx ; ret
0x000000000009d998 : cmovbe eax, edx ; ret
0x0000000000103f2a : cmovbe esi, ecx ; syscall
0x0000000000103f29 : cmovbe rsi, r9 ; syscall
0x000000000011772a : cmove eax, ebx ; pop rbx ; ret
0x00000000000bba84 : cmove eax, ecx ; pop rbx ; ret
0x0000000000086bb1 : cmove eax, ecx ; ret
0x000000000009eec8 : cmove eax, edx ; add eax, 1 ; ret
0x00000000000d2a01 : cmove eax, edx ; add rsp, 0x28 ; ret
0x000000000009b1a3 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000074be3 : cmove eax, edx ; jmp 0x74bfe
0x00000000000bba4c : cmove eax, edx ; pop rbx ; ret
0x00000000000300bb : cmove eax, edx ; ret
0x000000000008c2bf : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000043ce4 : cmove ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000a30e4 : cmove ecx, dword ptr [rbp - 0x76b6febf] ; retf
0x000000000008948c : cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x0000000000086bb0 : cmove r8, rcx ; ret
0x0000000000074be2 : cmove r8, rdx ; jmp 0x74bff
0x0000000000117729 : cmove rax, rbx ; pop rbx ; ret
0x00000000000bba83 : cmove rax, rcx ; pop rbx ; ret
0x000000000009eed9 : cmove rax, rdx ; add eax, 1 ; ret
0x00000000000d2a00 : cmove rax, rdx ; add rsp, 0x28 ; ret
0x000000000009b1a2 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000000bba4b : cmove rax, rdx ; pop rbx ; ret
0x00000000000300ba : cmove rax, rdx ; ret
0x0000000000043ce3 : cmove rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000008331b : cmovg eax, ecx ; test rdx, rdx ; jne 0x83319 ; ret
0x000000000008db5b : cmovg eax, ecx ; test rdx, rdx ; jne 0x8db59 ; ret
0x00000000000bd09a : cmovg eax, edx ; ret
0x00000000000a5887 : cmovge ecx, dword ptr [rbp + 0x394d0f51] ; ret 0x870f
0x00000000000a5019 : cmovge ecx, dword ptr [rbp + 0x394d0f53] ; retf 0x870f
0x00000000000a588b : cmovge edi, dword ptr [rcx] ; ret 0x870f
0x00000000000a501d : cmovge edi, dword ptr [rcx] ; retf 0x870f
0x000000000015efdb : cmovl eax, dword ptr [rcx] ; fmul dword ptr [rcx + 0x39] ; ret 0x820f
0x00000000000a6e26 : cmovl ecx, dword ptr [rbp + 0x394d0f51] ; retf 0x870f
0x000000000009a7da : cmovne eax, ecx ; ret
0x00000000000a0b1f : cmovne eax, edi ; ret
0x0000000000162ef6 : cmovne eax, edx ; add rsp, 8 ; ret
0x000000000016553e : cmovne eax, edx ; jmp 0x1655bb
0x00000000000a1356 : cmovne eax, edx ; pop rbx ; ret
0x000000000009d7ba : cmovne eax, edx ; ret
0x000000000018e024 : cmovne eax, edx ; vzeroupper ; ret
0x000000000012bec3 : cmovne eax, esi ; ret
0x00000000000e4592 : cmovne edx, eax ; mov rax, rdx ; ret
0x000000000009a7d9 : cmovne rax, rcx ; ret
0x00000000000a0b1e : cmovne rax, rdi ; ret
0x0000000000162ef5 : cmovne rax, rdx ; add rsp, 8 ; ret
0x000000000016553d : cmovne rax, rdx ; jmp 0x1655bc
0x00000000000a1355 : cmovne rax, rdx ; pop rbx ; ret
0x000000000009d7b9 : cmovne rax, rdx ; ret
0x000000000018e023 : cmovne rax, rdx ; vzeroupper ; ret
0x00000000000e4591 : cmovne rdx, rax ; mov rax, rdx ; ret
0x00000000000f447a : cmovno edi, dword ptr [rcx] ; retf 0xe075
0x0000000000129f72 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000001187da : cmovns eax, dword ptr [rbx - 0x76b30f1f] ; retf 0x2deb
0x0000000000118712 : cmovns eax, dword ptr [rbx - 0x76b30f20] ; ret 0x2deb
0x00000000001163d8 : cmovns eax, edx ; ret
0x0000000000129f71 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000ab9b8 : cmovs eax, dword ptr [rbx + 0x148f0e7] ; retf 0x8348
0x00000000000688eb : cmovs eax, dword ptr [rbx - 0x76b60f20] ; ret
0x0000000000043996 : cmovs eax, edx ; pop rbx ; ret
0x0000000000024f3c : cmovs eax, edx ; ret
0x0000000000084578 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x84579 ; lea eax, [rdx + rdi] ; ret
0x0000000000150aa1 : cmovs esi, dword ptr [rcx] ; retf 0xc148
0x00000000000bba2e : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x00000000000bbac0 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000001bd004 : cmp ah, 0xfa ; call rax
0x00000000001d5968 : cmp ah, al ; jmp qword ptr [rcx]
0x000000000018a260 : cmp ah, byte ptr [rbx + 0x1f] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x000000000018a148 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000001e01a0 : cmp al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 1
0x0000000000121893 : cmp al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000a402d : cmp al, 0 ; add byte ptr [rbp + 0xf], al ; mov dh, 0x54 ; syscall
0x000000000002134f : cmp al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000023895 : cmp al, 0 ; ret
0x0000000000029d62 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000023c2a : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfae9
0x00000000000a0b71 : cmp al, 0x24 ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000008def7 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000145023 : cmp al, 0x24 ; call 0x212cc
0x000000000008dee6 : cmp al, 0x24 ; call 0x8a154
0x0000000000040266 : cmp al, 0x24 ; mov eax, ecx ; syscall
0x000000000016631c : cmp al, 0x24 ; mov rax, qword ptr [rax + 0x170] ; jmp rax
0x000000000014895d : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000e9714 : cmp al, 0x3f ; jne 0xe96b0 ; mov eax, 1 ; ret
0x00000000000e96fc : cmp al, 0x3f ; jne 0xe96df ; mov eax, 1 ; ret
0x00000000001c7784 : cmp al, 0x40 ; add byte ptr [rax], al ; pop rax ; ret 0xffe8
0x000000000009ed10 : cmp al, 0x41 ; str word ptr [rax + 0xf] ; ret 0xfc3
0x00000000001d4ee4 : cmp al, 0x44 ; stc ; call qword ptr [rax]
0x00000000001ab660 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000015945d : cmp al, 0x4c ; lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000001da0a4 : cmp al, 0x61 ; cmc ; jmp qword ptr [rbx]
0x00000000001bd500 : cmp al, 0x64 ; sti ; jmp rdx
0x00000000001aa563 : cmp al, 0x66 ; movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x000000000000239a : cmp al, 0x7a ; xlatb ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x00000000001dab64 : cmp al, 0x83 ; cmc ; call qword ptr [rbx]
0x00000000001ad04b : cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000001db344 : cmp al, 0x99 ; cmc ; call qword ptr [rdx]
0x00000000000301a0 : cmp al, 0xac ; cmp eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x00000000001db754 : cmp al, 0xb1 ; cmc ; call rdx
0x000000000002e781 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000003ca49 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x00000000000a7c89 : cmp al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xa3f7b
0x000000000007b9e2 : cmp al, 0xc ; ret 0x8948
0x000000000009f181 : cmp al, 0xf ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000001d2c15 : cmp al, 0xf1 ; jmp qword ptr [rdi]
0x00000000001d9714 : cmp al, 0xf3 ; hlt ; call rsi
0x00000000001108db : cmp al, 0xf3 ; ret
0x00000000001bd085 : cmp al, 0xfb ; call rax
0x00000000001bd125 : cmp al, 0xfb ; jmp qword ptr [rax]
0x00000000001bd145 : cmp al, 0xfb ; jmp rax
0x000000000011effd : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001921c3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b7460 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x00000000001e2cb1 : cmp al, bh ; call rsi
0x00000000001cdff8 : cmp al, bh ; in al, dx ; call qword ptr [rax]
0x00000000000a4e36 : cmp al, bh ; jb 0xa4e1c ; mov rdx, rax ; jmp 0xa4dd2
0x00000000000a6a90 : cmp al, bh ; jb 0xa6a76 ; mov rdx, rax ; jmp 0xa6a36
0x00000000000e4da2 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001c71d9 : cmp al, byte ptr [rax] ; add byte ptr [rbx + rax], al ; cli ; jmp qword ptr [rcx]
0x0000000000044605 : cmp al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000004013f : cmp al, byte ptr [rax] ; mov eax, edx ; ret
0x00000000000400f4 : cmp al, byte ptr [rax] ; ret
0x00000000001d71c9 : cmp al, byte ptr [rcx] ; add ah, dl ; hlt ; jmp qword ptr [rcx]
0x00000000001c026d : cmp al, byte ptr [rcx] ; add ah, dl ; sbb dl, dh ; jmp qword ptr [rax]
0x00000000001d71dd : cmp al, byte ptr [rcx] ; add al, dh ; hlt ; jmp qword ptr [rcx]
0x00000000001d7165 : cmp al, byte ptr [rcx] ; add byte ptr [rax + 0x4a], cl ; hlt ; jmp qword ptr [rcx]
0x000000000009dcc2 : cmp al, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000001d7179 : cmp al, byte ptr [rcx] ; add byte ptr [rdx + rcx*2 - 0xc], ah ; jmp qword ptr [rcx]
0x00000000001c2e2d : cmp al, byte ptr [rdx] ; add byte ptr [rbp + rax - 6], al ; call rax
0x0000000000195026 : cmp al, byte ptr [rsi - 1] ; jne 0x19504c ; xor eax, eax ; ret
0x000000000010d7e9 : cmp al, ch ; int1 ; retf
0x000000000010ba37 : cmp al, ch ; ret
0x000000000006bcf7 : cmp al, ch ; retf
0x00000000000abc16 : cmp al, dh ; ret
0x00000000000abc15 : cmp al, r14b ; ret
0x00000000000a132a : cmp bh, 0x3d ; jne 0xa12f2 ; pop rbx ; ret
0x000000000003db96 : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x00000000001cfa09 : cmp bh, ah ; call qword ptr [rbx]
0x000000000012be4a : cmp bh, al ; mov eax, edx ; cmove eax, ecx ; ret
0x0000000000051b24 : cmp bh, bh ; je 0x51b55 ; cmp byte ptr [rcx], dh ; shr al, 0xa0 ; ret 2
0x00000000001bd121 : cmp bh, bl ; inc dword ptr [rax + 0x3c] ; sti ; jmp qword ptr [rax]
0x00000000001bd141 : cmp bh, bl ; inc dword ptr [rax] ; cmp al, 0xfb ; jmp rax
0x000000000012bec1 : cmp bh, cl ; cmovne eax, esi ; ret
0x000000000007670d : cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000011b80c : cmp bl, bh ; sub al, 0 ; ret
0x000000000015974a : cmp bl, byte ptr [rax] ; sub dword ptr [rax], eax ; pop rbx ; ret
0x0000000000002d5d : cmp bl, byte ptr [rip - 0x165c2f47] ; rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x00000000000bcdb6 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000f45ad : cmp byte ptr [r15], r9b ; test byte ptr [rbx], cl ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000000852b2 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000000f5f5a : cmp byte ptr [r8 - 0x77], r9b ; retf 0x498b
0x0000000000101269 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000885bf : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000059d81 : cmp byte ptr [rax + 0x39], cl ; ret
0x000000000008a949 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000052dae : cmp byte ptr [rax + 0x39], cl ; retf
0x0000000000145f6a : cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000012c9a3 : cmp byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x2b49
0x00000000001249a5 : cmp byte ptr [rax + 0x63], cl ; ret
0x000000000012c9a2 : cmp byte ptr [rax + 0x63], r9b ; fisttp dword ptr [rax - 0x77] ; ret 0x2b49
0x0000000000051504 : cmp byte ptr [rax + 1], 0 ; jne 0x51507 ; pop rbx ; ret
0x00000000000abc57 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x00000000000802fd : cmp byte ptr [rax + 1], cl ; ret
0x000000000007fbd0 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000002c98f : cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000409c7 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000000fd97c : cmp byte ptr [rax - 0x73], cl ; jl 0xfd9ad ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000025588 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000040b44 : cmp byte ptr [rax - 0x75], cl ; jl 0x40b75 ; and byte ptr [rax + 1], cl ; ret
0x000000000012e7e7 : cmp byte ptr [rax - 0x75], cl ; jp 0x12e844 ; mov rsi, rdx ; call rax
0x00000000000852b3 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000000a76d6 : cmp byte ptr [rax - 0x77], cl ; ret
0x000000000012d37c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000d1e47 : cmp byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000010d0a6 : cmp byte ptr [rax - 0x77], cl ; ret 0xce9
0x00000000000f5f5b : cmp byte ptr [rax - 0x77], cl ; retf 0x498b
0x0000000000085b40 : cmp byte ptr [rax - 0x77], cl ; retf 0x775
0x000000000016949d : cmp byte ptr [rax - 0x77], cl ; retf 0x894c
0x000000000012d37b : cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000014c4d5 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000014e14e : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x000000000007f976 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000a3d65 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000026e94 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000011f65e : cmp byte ptr [rax - 1], 0x2f ; jne 0x11f696 ; mov rdx, rax ; jmp 0x11f67e
0x000000000011f65d : cmp byte ptr [rax - 1], 0x2f ; jne 0x11f697 ; mov rdx, rax ; jmp 0x11f67f
0x0000000000118cf2 : cmp byte ptr [rax - 1], bh ; ret
0x00000000001be28c : cmp byte ptr [rax], 0 ; xchg eax, esp ; jmp rdi
0x0000000000182f38 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x00000000000abc46 : cmp byte ptr [rax], ah ; ret
0x000000000015ece2 : cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000000b1b8 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000004f026 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000005b487 : cmp byte ptr [rax], al ; call rax
0x000000000008e303 : cmp byte ptr [rax], al ; je 0x8e315 ; ret
0x000000000018a0e2 : cmp byte ptr [rax], al ; retf 0xf66
0x0000000000030461 : cmp byte ptr [rax], bl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010126a : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b0f50 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x00000000000ac116 : cmp byte ptr [rax], dh ; ret
0x00000000000abc36 : cmp byte ptr [rax], dl ; ret
0x00000000000abc35 : cmp byte ptr [rax], r10b ; ret
0x00000000000abc45 : cmp byte ptr [rax], r12b ; ret
0x00000000000ac115 : cmp byte ptr [rax], r14b ; ret
0x00000000000b0f4f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000bcdba : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000bcdb9 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x000000000011f7fe : cmp byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000104c60 : cmp byte ptr [rbp - 0x71f000b0], cl ; ret 0xfffc
0x00000000000ee49f : cmp byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000001cc280 : cmp byte ptr [rbx + 0x418c0000], cl ; in al, dx ; call qword ptr [rdx]
0x0000000000199656 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000003cf96 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000001431f2 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r14 ; ret
0x000000000004ee45 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001d8280 : cmp byte ptr [rbx + 1], cl ; add ah, ch ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001db9b8 : cmp byte ptr [rbx - 0x4ff1b5f9], al ; add dword ptr [rbx], eax ; ret
0x00000000001c557c : cmp byte ptr [rbx - 0x6ff1b3f9], al ; add al, byte ptr [rdx] ; retf 0xe0a
0x00000000001d3be8 : cmp byte ptr [rbx - 0x6ff1b8f9], al ; add al, byte ptr [rbx] ; ret
0x0000000000100f2b : cmp byte ptr [rbx - 0x77bef738], al ; cmp r9b, r13b ; retf 0xfffb
0x00000000001defbc : cmp byte ptr [rbx - 0x7ff1b8f9], al ; add eax, dword ptr [rbx] ; retf 0xa09
0x00000000001d3af0 : cmp byte ptr [rbx - 0x7ff1b8f9], al ; add eax, dword ptr [rdx] ; ret 0xe0a
0x00000000001cc844 : cmp byte ptr [rbx - 0x7ff1bbf9], al ; add dword ptr [rdx], eax ; ret 0xe0a
0x00000000001c86e0 : cmp byte ptr [rbx - 0xff1b2f9], al ; add dword ptr [rdx], eax ; ret 0xe0a
0x00000000000bcdb7 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000842a0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x00000000001df3c8 : cmp byte ptr [rcx + rax - 0x8cd5c00], 0xff ; retf 0
0x0000000000087808 : cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x00000000000f3606 : cmp byte ptr [rcx - 0x73], cl ; or byte ptr [r8 + 0x39], r9b ; retf 0x1274
0x000000000003334b : cmp byte ptr [rcx - 0x75], al ; push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000012d53b : cmp byte ptr [rcx - 0x77], cl ; pop rsi ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000002c6b7 : cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000160d8c : cmp byte ptr [rcx - 0x77], cl ; ret
0x000000000012d53a : cmp byte ptr [rcx - 0x77], r9b ; pop rsi ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000001074cb : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x0000000000002cac : cmp byte ptr [rcx], ah ; loop 0x2cc3 ; retf
0x0000000000010318 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001c01ed : cmp byte ptr [rcx], al ; add byte ptr [rdx + rcx*4], al ; int1 ; jmp qword ptr [rax]
0x00000000000f2012 : cmp byte ptr [rcx], al ; retf 0x6348
0x0000000000182f39 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x00000000000da1ac : cmp byte ptr [rcx], ch ; ret 0xb8
0x00000000000b8884 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000000001d2b28 : cmp byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x0000000000129e2e : cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000051b28 : cmp byte ptr [rcx], dh ; shr al, 0xa0 ; ret 2
0x00000000000f2011 : cmp byte ptr [rcx], r8b ; retf 0x6348
0x000000000009237c : cmp byte ptr [rdi + 0x1480035], cl ; ret
0x00000000000efe9e : cmp byte ptr [rdi + 0x65], 0 ; setne al ; add eax, eax ; ret
0x00000000000a8304 : cmp byte ptr [rdi + rax], dl ; je 0xa8306 ; ret
0x000000000000209c : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x0000000000043968 : cmp byte ptr [rdi], 0 ; jne 0x43976 ; pop rbx ; ret
0x000000000008e2c8 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000012180e : cmp byte ptr [rdi], cl ; sub dword ptr [rsp + 0x20], eax ; syscall
0x00000000000f45ae : cmp byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000000000012a065 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5422
0x0000000000190a6d : cmp byte ptr [rdi], dl ; ret
0x0000000000191580 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191569 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000191552 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000019000e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001da158 : cmp byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001bd120 : cmp byte ptr [rdx], 0xfb ; inc dword ptr [rax + 0x3c] ; sti ; jmp qword ptr [rax]
0x00000000001d71c8 : cmp byte ptr [rdx], 1 ; add ah, dl ; hlt ; jmp qword ptr [rcx]
0x00000000001cfa08 : cmp byte ptr [rdx], bh ; cld ; call qword ptr [rbx]
0x000000000011aabb : cmp byte ptr [rip - 0x7af0ff00], ch ; retf 3
0x000000000002f11a : cmp byte ptr [rsi - 0x27], dh ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001c8919 : cmp ch, bl ; jmp qword ptr [rcx]
0x00000000000a1f11 : cmp cl, al ; jb 0xa1ef6 ; mov rdx, rax ; jmp 0xa1ea6
0x00000000000a24f1 : cmp cl, al ; jb 0xa24d6 ; mov rdx, rax ; jmp 0xa248c
0x00000000000a5dde : cmp cl, al ; jb 0xa5dc4 ; mov rdx, rax ; jmp 0xa5d77
0x00000000000e5106 : cmp cl, byte ptr [rax - 0x75] ; pop rbp ; clc ; leave ; ret
0x0000000000142bdc : cmp cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000f34ff : cmp cl, byte ptr [rax - 0x7d] ; ret
0x000000000007f6c0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000133de8 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x000000000016cd71 : cmp cl, byte ptr [rdi] ; retf 0x6601
0x000000000016cec1 : cmp cl, byte ptr [rdi] ; retf 0x6602
0x000000000016d011 : cmp cl, byte ptr [rdi] ; retf 0x6603
0x000000000016d161 : cmp cl, byte ptr [rdi] ; retf 0x6604
0x000000000016d2b1 : cmp cl, byte ptr [rdi] ; retf 0x6605
0x000000000016d401 : cmp cl, byte ptr [rdi] ; retf 0x6606
0x000000000016d551 : cmp cl, byte ptr [rdi] ; retf 0x6607
0x000000000016d6a1 : cmp cl, byte ptr [rdi] ; retf 0x6608
0x000000000016d7f1 : cmp cl, byte ptr [rdi] ; retf 0x6609
0x000000000016d941 : cmp cl, byte ptr [rdi] ; retf 0x660a
0x000000000016da91 : cmp cl, byte ptr [rdi] ; retf 0x660b
0x000000000016dbe1 : cmp cl, byte ptr [rdi] ; retf 0x660c
0x000000000016dd31 : cmp cl, byte ptr [rdi] ; retf 0x660d
0x000000000016de81 : cmp cl, byte ptr [rdi] ; retf 0x660e
0x000000000016dfd1 : cmp cl, byte ptr [rdi] ; retf 0x660f
0x0000000000171faa : cmp cl, byte ptr [rdi] ; retf 0xf01
0x000000000017212a : cmp cl, byte ptr [rdi] ; retf 0xf02
0x00000000001722aa : cmp cl, byte ptr [rdi] ; retf 0xf03
0x000000000017242a : cmp cl, byte ptr [rdi] ; retf 0xf04
0x00000000001725aa : cmp cl, byte ptr [rdi] ; retf 0xf05
0x000000000017272a : cmp cl, byte ptr [rdi] ; retf 0xf06
0x00000000001728aa : cmp cl, byte ptr [rdi] ; retf 0xf07
0x0000000000172a2a : cmp cl, byte ptr [rdi] ; retf 0xf08
0x0000000000172baa : cmp cl, byte ptr [rdi] ; retf 0xf09
0x0000000000172d2a : cmp cl, byte ptr [rdi] ; retf 0xf0a
0x0000000000172eaa : cmp cl, byte ptr [rdi] ; retf 0xf0b
0x000000000017302a : cmp cl, byte ptr [rdi] ; retf 0xf0c
0x00000000001731aa : cmp cl, byte ptr [rdi] ; retf 0xf0d
0x000000000017332a : cmp cl, byte ptr [rdi] ; retf 0xf0e
0x00000000001734aa : cmp cl, byte ptr [rdi] ; retf 0xf0f
0x000000000014a6c3 : cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000005167c : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000001ad426 : cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000033bff : cmp cl, ch ; ret
0x0000000000100f32 : cmp cl, ch ; retf 0xfffb
0x00000000001c0109 : cmp cl, dh ; jmp qword ptr [rax]
0x00000000000517bd : cmp dh, byte ptr [rax + rcx - 0x7c] ; ror byte ptr [rdi], 0x85 ; ret
0x000000000018e021 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000043965 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x000000000019357a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000012bef8 : cmp dh, cl ; cmovne eax, edx ; ret
0x00000000000a6c1a : cmp dh, cl ; jb 0xa6c01 ; mov rdx, rax ; jmp 0xa6bc2
0x00000000001dc935 : cmp dh, dh ; call qword ptr [rdi]
0x00000000000fee5a : cmp dh, dh ; ret 0x7408
0x00000000000b1c45 : cmp dh, dh ; ret 0x7501
0x0000000000147436 : cmp dh, dh ; ret 0xf01
0x000000000012be86 : cmp dh, dl ; cmovne eax, ecx ; ret
0x00000000000a1329 : cmp dil, 0x3d ; jne 0xa12f3 ; pop rbx ; ret
0x000000000012be49 : cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001bd140 : cmp dil, bl ; inc dword ptr [rax] ; cmp al, 0xfb ; jmp rax
0x000000000012bec0 : cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000079726 : cmp dl, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8944
0x00000000000bb990 : cmp dl, 1 ; ja 0xbb9b3 ; jb 0xbb9a2 ; mov byte ptr [rdi], cl ; ret
0x00000000001925cb : cmp dl, 1 ; jb 0x1925dd ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000192c9a : cmp dl, 1 ; jb 0x192ca8 ; mov byte ptr [rdi], cl ; ret
0x000000000009d955 : cmp dl, 3 ; je 0x9d981 ; movsx eax, dl ; ret
0x00000000000a2061 : cmp dl, al ; jb 0xa2046 ; mov rdx, rax ; jmp 0xa1ff6
0x000000000009a84d : cmp dl, al ; jne 0x9a840 ; sub rax, 0x10 ; ret
0x0000000000002c36 : cmp dl, byte ptr [rdi] ; ret
0x00000000000a22d1 : cmp dl, cl ; jb 0xa22b6 ; mov rdx, rax ; jmp 0xa226c
0x00000000000a2c0e : cmp dl, cl ; jb 0xa2bf4 ; mov rdx, rax ; jmp 0xa2ba4
0x000000000009a84c : cmp dl, r8b ; jne 0x9a841 ; sub rax, 0x10 ; ret
0x0000000000084248 : cmp dword ptr [rax + 0x30], 0 ; je 0x84257 ; ret
0x00000000000c1709 : cmp dword ptr [rax + 0x63], ecx ; ret
0x00000000000f0494 : cmp dword ptr [rax + 0x63], ecx ; retf 0xeeb
0x000000000016c2c7 : cmp dword ptr [rax + rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000185897 : cmp dword ptr [rax + rax], ecx ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000815b9 : cmp dword ptr [rax - 0x7f], ecx ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xaf0
0x00000000000a43cd : cmp dword ptr [rax], eax ; add byte ptr [rbp + 0xf], al ; mov dh, 0x64 ; syscall
0x00000000001c70a1 : cmp dword ptr [rax], eax ; add byte ptr [rsp + rdi*2 - 0x18], bl ; call rdi
0x000000000004fb68 : cmp dword ptr [rax], eax ; mov byte ptr [rax + rdx], 0 ; ret
0x0000000000052819 : cmp dword ptr [rax], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000052818 : cmp dword ptr [rax], r9d ; xor eax, eax ; pop rbx ; ret
0x00000000001148ff : cmp dword ptr [rbp + 0x48], eax ; jne 0x1148a4 ; mov edi, ebx ; call 0x110b29
0x00000000001b0720 : cmp dword ptr [rbp - 0xd], esp ; call rax
0x00000000000440b8 : cmp dword ptr [rbx + rcx*4 + 0x59], ecx ; sub byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000001736c8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000001c024d : cmp dword ptr [rcx], eax ; add ah, dh ; adc esi, edx ; call qword ptr [rax]
0x00000000001d7115 : cmp dword ptr [rcx], eax ; add al, cl ; hlt ; jmp qword ptr [rcx]
0x000000000009dc92 : cmp dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000001d70a9 : cmp dword ptr [rcx], eax ; add byte ptr [rcx + rcx*2], ah ; hlt ; jmp rax
0x00000000000213b1 : cmp dword ptr [rcx], ebx ; add byte ptr [rcx], dh ; push qword ptr [rcx] ; shr al, 0x13 ; retf 5
0x0000000000089374 : cmp dword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000008e301 : cmp dword ptr [rdi + 0x38], 0 ; je 0x8e317 ; ret
0x00000000000d0134 : cmp dword ptr [rdi + 8], edx ; jne 0xd010a ; ret
0x000000000011af33 : cmp dword ptr [rdi - 0x10], ebp ; dec dword ptr [rax - 0x77] ; ret
0x000000000013008a : cmp dword ptr [rdi], 0 ; je 0x13009e ; ret
0x00000000001c2ded : cmp dword ptr [rdx], eax ; add byte ptr [rdx + rax], al ; cli ; call rax
0x0000000000145ac3 : cmp dword ptr [rsi + 0x3948ffed], esi ; ret
0x000000000011ce5c : cmp dword ptr [rsi], 0 ; je 0x11ce6e ; ret
0x000000000000395e : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x0000000000114f7d : cmp eax, -0x5f ; je 0x114fa0 ; neg eax ; pop rbx ; ret
0x00000000001151cd : cmp eax, -0x5f ; je 0x1151f0 ; neg eax ; pop rbx ; ret
0x00000000001401b0 : cmp eax, -0xb ; je 0x1401ae ; pop rbx ; ret
0x0000000000084266 : cmp eax, -1 ; je 0x84279 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000052c54 : cmp eax, -1 ; jne 0x52c48 ; mov rax, rdx ; ret
0x0000000000003cfb : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000794bc : cmp eax, 0x13aaa8 ; call 0x125787
0x0000000000068cb1 : cmp eax, 0x16a ; add rax, rdi ; jmp rax
0x00000000000d12f3 : cmp eax, 0x19 ; jg 0xd1319 ; mov rax, rbx ; pop rbx ; ret
0x0000000000068c63 : cmp eax, 0x1b8 ; add rax, rdi ; jmp rax
0x0000000000068bff : cmp eax, 0x21c ; add rax, rdi ; jmp rax
0x0000000000068ba1 : cmp eax, 0x27a ; add rax, rdi ; jmp rax
0x000000000013ccbd : cmp eax, 0x2b2b1e ; call r12
0x000000000013c9b3 : cmp eax, 0x2b2e28 ; call rax
0x000000000011b80b : cmp eax, 0x2cfb38 ; ret
0x0000000000068b49 : cmp eax, 0x2d2 ; add rax, rdi ; jmp rax
0x000000000009c932 : cmp eax, 0x351078 ; add byte ptr [rsi + rax - 0xd], dh ; ret
0x00000000001bd1a9 : cmp eax, 0x3ee0fffb ; sti ; call rax
0x00000000001bd189 : cmp eax, 0x3f30fffb ; sti ; jmp qword ptr [rax]
0x00000000000e6899 : cmp eax, 0x414a53 ; jne 0xe6870 ; jmp 0xe6851
0x00000000000d13df : cmp eax, 0x480031c7 ; add esp, 8 ; ret
0x00000000000e6844 : cmp eax, 0x5346544e ; jne 0xe6873 ; xor eax, eax ; ret
0x00000000001d74d9 : cmp eax, 0x59740001 ; hlt ; jmp rcx
0x00000000001d7511 : cmp eax, 0x5a5c0001 ; hlt ; call qword ptr [rdx]
0x0000000000074bdf : cmp eax, 0x5d ; cmove r8, rdx ; jmp 0x74c02
0x000000000011d262 : cmp eax, 0x7d8b48 ; call r12
0x00000000000a16ba : cmp eax, 0x85480e74 ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000018e414 : cmp eax, 0x89000001 ; ret 0x8948
0x00000000000697a3 : cmp eax, 0x89000015 ; ret 0x349
0x000000000005be3f : cmp eax, 0x89000027 ; ret 0x349
0x000000000015e7e7 : cmp eax, 0x89480000 ; ret
0x0000000000197655 : cmp eax, 0x89497fff ; ret
0x0000000000029232 : cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000000caed0 : cmp eax, 0x930f4110 ; ret
0x00000000001aa94b : cmp eax, 0xaf6a2574 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000a134f : cmp eax, 0xba ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000015936d : cmp eax, 0xe9fffffe ; retf
0x00000000000bced2 : cmp eax, 0xf480001 ; ret 0x66c3
0x00000000000f1a7b : cmp eax, 0xf7fffffc ; ret 0
0x00000000000c7af5 : cmp eax, 0xff ; je 0xc7b06 ; ret
0x000000000005d2ff : cmp eax, 0xffffe9dc ; add rax, rdi ; jmp rax
0x000000000010e638 : cmp eax, 0xfffff000 ; ja 0x10e6a8 ; ret
0x000000000010e6e8 : cmp eax, 0xfffff000 ; ja 0x10e758 ; ret
0x000000000010f776 : cmp eax, 0xfffff000 ; ja 0x10f788 ; ret
0x000000000010f7c4 : cmp eax, 0xfffff000 ; ja 0x10f7d8 ; ret
0x000000000010f816 : cmp eax, 0xfffff000 ; ja 0x10f828 ; ret
0x000000000010f86e : cmp eax, 0xfffff000 ; ja 0x10f888 ; ret
0x000000000010f8d2 : cmp eax, 0xfffff000 ; ja 0x10f8e8 ; ret
0x000000000010f92a : cmp eax, 0xfffff000 ; ja 0x10f940 ; ret
0x000000000010fb55 : cmp eax, 0xfffff000 ; ja 0x10fb68 ; ret
0x0000000000110082 : cmp eax, 0xfffff000 ; ja 0x1100e8 ; ret
0x0000000000110115 : cmp eax, 0xfffff000 ; ja 0x110128 ; ret
0x0000000000110155 : cmp eax, 0xfffff000 ; ja 0x1101b8 ; ret
0x00000000001101e8 : cmp eax, 0xfffff000 ; ja 0x110200 ; ret
0x0000000000110218 : cmp eax, 0xfffff000 ; ja 0x110230 ; ret
0x0000000000110248 : cmp eax, 0xfffff000 ; ja 0x110260 ; ret
0x00000000001108d5 : cmp eax, 0xfffff000 ; ja 0x110920 ; ret
0x0000000000110948 : cmp eax, 0xfffff000 ; ja 0x110960 ; ret
0x0000000000110a75 : cmp eax, 0xfffff000 ; ja 0x110ac8 ; ret
0x0000000000114bc5 : cmp eax, 0xfffff000 ; ja 0x114c28 ; ret
0x0000000000115690 : cmp eax, 0xfffff000 ; ja 0x1156a8 ; ret
0x00000000001156e4 : cmp eax, 0xfffff000 ; ja 0x1156f8 ; ret
0x00000000001157a8 : cmp eax, 0xfffff000 ; ja 0x115818 ; ret
0x0000000000115858 : cmp eax, 0xfffff000 ; ja 0x1158c8 ; ret
0x0000000000115dcf : cmp eax, 0xfffff000 ; ja 0x115e28 ; ret
0x0000000000115fa1 : cmp eax, 0xfffff000 ; ja 0x115fb8 ; ret
0x0000000000115fe2 : cmp eax, 0xfffff000 ; ja 0x115ff8 ; ret
0x0000000000116615 : cmp eax, 0xfffff000 ; ja 0x116678 ; ret
0x00000000001166b5 : cmp eax, 0xfffff000 ; ja 0x116718 ; ret
0x000000000011675b : cmp eax, 0xfffff000 ; ja 0x1167c8 ; ret
0x000000000011680b : cmp eax, 0xfffff000 ; ja 0x116878 ; ret
0x0000000000116ff8 : cmp eax, 0xfffff000 ; ja 0x117070 ; ret
0x0000000000117215 : cmp eax, 0xfffff000 ; ja 0x117260 ; ret
0x00000000001172c5 : cmp eax, 0xfffff000 ; ja 0x117310 ; ret
0x0000000000117374 : cmp eax, 0xfffff000 ; ja 0x117388 ; ret
0x0000000000118a48 : cmp eax, 0xfffff000 ; ja 0x118a60 ; ret
0x0000000000118c2d : cmp eax, 0xfffff000 ; ja 0x118c48 ; ret
0x0000000000118c68 : cmp eax, 0xfffff000 ; ja 0x118c80 ; ret
0x0000000000118c98 : cmp eax, 0xfffff000 ; ja 0x118cb0 ; ret
0x000000000011bb25 : cmp eax, 0xfffff000 ; ja 0x11bb88 ; ret
0x000000000011edaf : cmp eax, 0xfffff000 ; ja 0x11edc8 ; ret
0x000000000012199e : cmp eax, 0xfffff000 ; ja 0x121a20 ; ret
0x0000000000121a50 : cmp eax, 0xfffff000 ; ja 0x121a68 ; ret
0x0000000000121b78 : cmp eax, 0xfffff000 ; ja 0x121be8 ; ret
0x0000000000121c28 : cmp eax, 0xfffff000 ; ja 0x121c98 ; ret
0x0000000000121cd8 : cmp eax, 0xfffff000 ; ja 0x121d48 ; ret
0x0000000000121d88 : cmp eax, 0xfffff000 ; ja 0x121e10 ; ret
0x0000000000121e55 : cmp eax, 0xfffff000 ; ja 0x121eb8 ; ret
0x0000000000121eec : cmp eax, 0xfffff000 ; ja 0x121f50 ; ret
0x0000000000121f70 : cmp eax, 0xfffff000 ; ja 0x121f88 ; ret
0x00000000001227e5 : cmp eax, 0xfffff000 ; ja 0x122848 ; ret
0x00000000001228b5 : cmp eax, 0xfffff000 ; ja 0x122918 ; ret
0x0000000000122a1e : cmp eax, 0xfffff000 ; ja 0x122a98 ; ret
0x0000000000122ad8 : cmp eax, 0xfffff000 ; ja 0x122b60 ; ret
0x0000000000122ba5 : cmp eax, 0xfffff000 ; ja 0x122c08 ; ret
0x0000000000122c4e : cmp eax, 0xfffff000 ; ja 0x122cc8 ; ret
0x0000000000122d05 : cmp eax, 0xfffff000 ; ja 0x122d68 ; ret
0x0000000000122da8 : cmp eax, 0xfffff000 ; ja 0x122e30 ; ret
0x00000000001231f8 : cmp eax, 0xfffff000 ; ja 0x123268 ; ret
0x00000000001232a8 : cmp eax, 0xfffff000 ; ja 0x123320 ; ret
0x0000000000123358 : cmp eax, 0xfffff000 ; ja 0x1233c8 ; ret
0x00000000001234f8 : cmp eax, 0xfffff000 ; ja 0x123568 ; ret
0x00000000001235a8 : cmp eax, 0xfffff000 ; ja 0x123628 ; ret
0x0000000000123658 : cmp eax, 0xfffff000 ; ja 0x123670 ; ret
0x0000000000123688 : cmp eax, 0xfffff000 ; ja 0x1236a0 ; ret
0x00000000001236b8 : cmp eax, 0xfffff000 ; ja 0x1236d0 ; ret
0x00000000001236e8 : cmp eax, 0xfffff000 ; ja 0x123700 ; ret
0x00000000001237bb : cmp eax, 0xfffff000 ; ja 0x1237d0 ; ret
0x00000000001237e8 : cmp eax, 0xfffff000 ; ja 0x123800 ; ret
0x0000000000123818 : cmp eax, 0xfffff000 ; ja 0x123830 ; ret
0x000000000012384b : cmp eax, 0xfffff000 ; ja 0x123860 ; ret
0x0000000000123878 : cmp eax, 0xfffff000 ; ja 0x123890 ; ret
0x0000000000130e58 : cmp eax, 0xfffff000 ; ja 0x130e70 ; ret
0x0000000000130f02 : cmp eax, 0xfffff000 ; ja 0x130f18 ; ret
0x0000000000132e6a : cmp eax, 0xfffff000 ; ja 0x132e80 ; ret
0x0000000000132f3d : cmp eax, 0xfffff000 ; ja 0x132f58 ; ret
0x000000000003f14e : cmp eax, 0xfffff000 ; ja 0x3f168 ; ret
0x000000000003f1bd : cmp eax, 0xfffff000 ; ja 0x3f1d8 ; ret
0x000000000003f20a : cmp eax, 0xfffff000 ; ja 0x3f260 ; ret
0x00000000000448d5 : cmp eax, 0xfffff000 ; ja 0x44938 ; ret
0x000000000007bd38 : cmp eax, 0xfffff000 ; ja 0x7bd50 ; ret
0x000000000007bd6b : cmp eax, 0xfffff000 ; ja 0x7bd80 ; ret
0x00000000000d2a38 : cmp eax, 0xfffff000 ; ja 0xd2a50 ; ret
0x00000000000e45f2 : cmp eax, 0xfffff000 ; ja 0xe4650 ; ret
0x00000000000e4688 : cmp eax, 0xfffff000 ; ja 0xe46f0 ; ret
0x00000000000e471b : cmp eax, 0xfffff000 ; ja 0xe4730 ; ret
0x00000000000e47ab : cmp eax, 0xfffff000 ; ja 0xe4818 ; ret
0x00000000000e48f5 : cmp eax, 0xfffff000 ; ja 0xe4938 ; ret
0x00000000000e4968 : cmp eax, 0xfffff000 ; ja 0xe4980 ; ret
0x00000000000e49a5 : cmp eax, 0xfffff000 ; ja 0xe49f8 ; ret
0x00000000000e4a28 : cmp eax, 0xfffff000 ; ja 0xe4a40 ; ret
0x0000000000103d98 : cmp eax, 0xfffff001 ; jae 0x103da7 ; ret
0x0000000000103dc8 : cmp eax, 0xfffff001 ; jae 0x103dd7 ; ret
0x0000000000103df8 : cmp eax, 0xfffff001 ; jae 0x103e07 ; ret
0x0000000000103e28 : cmp eax, 0xfffff001 ; jae 0x103e37 ; ret
0x0000000000103e58 : cmp eax, 0xfffff001 ; jae 0x103e67 ; ret
0x0000000000103e88 : cmp eax, 0xfffff001 ; jae 0x103e97 ; ret
0x0000000000103eb8 : cmp eax, 0xfffff001 ; jae 0x103ec7 ; ret
0x0000000000103ee8 : cmp eax, 0xfffff001 ; jae 0x103ef7 ; ret
0x000000000010f698 : cmp eax, 0xfffff001 ; jae 0x10f6a7 ; ret
0x000000000010f978 : cmp eax, 0xfffff001 ; jae 0x10f987 ; ret
0x000000000010f9a8 : cmp eax, 0xfffff001 ; jae 0x10f9b7 ; ret
0x000000000010fac8 : cmp eax, 0xfffff001 ; jae 0x10fad7 ; ret
0x000000000010faf8 : cmp eax, 0xfffff001 ; jae 0x10fb07 ; ret
0x000000000010fbb8 : cmp eax, 0xfffff001 ; jae 0x10fbc7 ; ret
0x000000000010fbe8 : cmp eax, 0xfffff001 ; jae 0x10fbf7 ; ret
0x0000000000110778 : cmp eax, 0xfffff001 ; jae 0x110787 ; ret
0x0000000000110978 : cmp eax, 0xfffff001 ; jae 0x110987 ; ret
0x00000000001109a8 : cmp eax, 0xfffff001 ; jae 0x1109b7 ; ret
0x00000000001109d8 : cmp eax, 0xfffff001 ; jae 0x1109e7 ; ret
0x0000000000110a08 : cmp eax, 0xfffff001 ; jae 0x110a17 ; ret
0x0000000000110a38 : cmp eax, 0xfffff001 ; jae 0x110a47 ; ret
0x0000000000110af8 : cmp eax, 0xfffff001 ; jae 0x110b07 ; ret
0x0000000000110b28 : cmp eax, 0xfffff001 ; jae 0x110b37 ; ret
0x00000000001113e8 : cmp eax, 0xfffff001 ; jae 0x1113f7 ; ret
0x0000000000111418 : cmp eax, 0xfffff001 ; jae 0x111427 ; ret
0x0000000000111448 : cmp eax, 0xfffff001 ; jae 0x111457 ; ret
0x000000000011147b : cmp eax, 0xfffff001 ; jae 0x11148a ; ret
0x0000000000111c28 : cmp eax, 0xfffff001 ; jae 0x111c37 ; ret
0x0000000000111c5b : cmp eax, 0xfffff001 ; jae 0x111c6a ; ret
0x0000000000111c88 : cmp eax, 0xfffff001 ; jae 0x111c97 ; ret
0x0000000000111cb8 : cmp eax, 0xfffff001 ; jae 0x111cc7 ; ret
0x0000000000111ce8 : cmp eax, 0xfffff001 ; jae 0x111cf7 ; ret
0x0000000000111d1b : cmp eax, 0xfffff001 ; jae 0x111d2a ; ret
0x0000000000111d48 : cmp eax, 0xfffff001 ; jae 0x111d57 ; ret
0x0000000000111d78 : cmp eax, 0xfffff001 ; jae 0x111d87 ; ret
0x0000000000111da8 : cmp eax, 0xfffff001 ; jae 0x111db7 ; ret
0x000000000011520b : cmp eax, 0xfffff001 ; jae 0x11521a ; ret
0x0000000000116018 : cmp eax, 0xfffff001 ; jae 0x116027 ; ret
0x0000000000116408 : cmp eax, 0xfffff001 ; jae 0x116417 ; ret
0x00000000001165d8 : cmp eax, 0xfffff001 ; jae 0x1165e7 ; ret
0x0000000000116ef8 : cmp eax, 0xfffff001 ; jae 0x116f07 ; ret
0x0000000000116fb8 : cmp eax, 0xfffff001 ; jae 0x116fc7 ; ret
0x00000000001171a8 : cmp eax, 0xfffff001 ; jae 0x1171b7 ; ret
0x00000000001171d8 : cmp eax, 0xfffff001 ; jae 0x1171e7 ; ret
0x0000000000117288 : cmp eax, 0xfffff001 ; jae 0x117297 ; ret
0x0000000000117338 : cmp eax, 0xfffff001 ; jae 0x117347 ; ret
0x0000000000117658 : cmp eax, 0xfffff001 ; jae 0x117667 ; ret
0x0000000000117688 : cmp eax, 0xfffff001 ; jae 0x117697 ; ret
0x00000000001176b8 : cmp eax, 0xfffff001 ; jae 0x1176c7 ; ret
0x000000000011b83a : cmp eax, 0xfffff001 ; jae 0x11b849 ; ret
0x000000000011bab8 : cmp eax, 0xfffff001 ; jae 0x11bac7 ; ret
0x000000000011bae8 : cmp eax, 0xfffff001 ; jae 0x11baf7 ; ret
0x000000000011bbb8 : cmp eax, 0xfffff001 ; jae 0x11bbc7 ; ret
0x000000000011bbe8 : cmp eax, 0xfffff001 ; jae 0x11bbf7 ; ret
0x000000000011bc1b : cmp eax, 0xfffff001 ; jae 0x11bc2a ; ret
0x000000000011bc48 : cmp eax, 0xfffff001 ; jae 0x11bc57 ; ret
0x000000000011bc78 : cmp eax, 0xfffff001 ; jae 0x11bc87 ; ret
0x000000000011bca8 : cmp eax, 0xfffff001 ; jae 0x11bcb7 ; ret
0x000000000011bcd8 : cmp eax, 0xfffff001 ; jae 0x11bce7 ; ret
0x000000000011f81b : cmp eax, 0xfffff001 ; jae 0x11f82a ; ret
0x000000000011f848 : cmp eax, 0xfffff001 ; jae 0x11f857 ; ret
0x000000000011f878 : cmp eax, 0xfffff001 ; jae 0x11f887 ; ret
0x000000000011f8ab : cmp eax, 0xfffff001 ; jae 0x11f8ba ; ret
0x000000000011f8db : cmp eax, 0xfffff001 ; jae 0x11f8ea ; ret
0x000000000011f908 : cmp eax, 0xfffff001 ; jae 0x11f917 ; ret
0x000000000011f93b : cmp eax, 0xfffff001 ; jae 0x11f94a ; ret
0x000000000011f968 : cmp eax, 0xfffff001 ; jae 0x11f977 ; ret
0x000000000011f998 : cmp eax, 0xfffff001 ; jae 0x11f9a7 ; ret
0x000000000011f9cb : cmp eax, 0xfffff001 ; jae 0x11f9da ; ret
0x000000000011f9f8 : cmp eax, 0xfffff001 ; jae 0x11fa07 ; ret
0x000000000011fa2b : cmp eax, 0xfffff001 ; jae 0x11fa3a ; ret
0x0000000000121758 : cmp eax, 0xfffff001 ; jae 0x121767 ; ret
0x0000000000121788 : cmp eax, 0xfffff001 ; jae 0x121797 ; ret
0x00000000001218c8 : cmp eax, 0xfffff001 ; jae 0x1218d7 ; ret
0x00000000001218f8 : cmp eax, 0xfffff001 ; jae 0x121907 ; ret
0x0000000000121928 : cmp eax, 0xfffff001 ; jae 0x121937 ; ret
0x0000000000121958 : cmp eax, 0xfffff001 ; jae 0x121967 ; ret
0x0000000000121a88 : cmp eax, 0xfffff001 ; jae 0x121a97 ; ret
0x0000000000121b0b : cmp eax, 0xfffff001 ; jae 0x121b1a ; ret
0x0000000000121b38 : cmp eax, 0xfffff001 ; jae 0x121b47 ; ret
0x0000000000122028 : cmp eax, 0xfffff001 ; jae 0x122037 ; ret
0x0000000000122058 : cmp eax, 0xfffff001 ; jae 0x122067 ; ret
0x000000000012209b : cmp eax, 0xfffff001 ; jae 0x1220aa ; ret
0x00000000001220c8 : cmp eax, 0xfffff001 ; jae 0x1220d7 ; ret
0x00000000001220f8 : cmp eax, 0xfffff001 ; jae 0x122107 ; ret
0x0000000000122128 : cmp eax, 0xfffff001 ; jae 0x122137 ; ret
0x0000000000122158 : cmp eax, 0xfffff001 ; jae 0x122167 ; ret
0x0000000000122188 : cmp eax, 0xfffff001 ; jae 0x122197 ; ret
0x00000000001221b8 : cmp eax, 0xfffff001 ; jae 0x1221c7 ; ret
0x00000000001221e8 : cmp eax, 0xfffff001 ; jae 0x1221f7 ; ret
0x0000000000122218 : cmp eax, 0xfffff001 ; jae 0x122227 ; ret
0x000000000012224b : cmp eax, 0xfffff001 ; jae 0x12225a ; ret
0x0000000000122278 : cmp eax, 0xfffff001 ; jae 0x122287 ; ret
0x00000000001222ab : cmp eax, 0xfffff001 ; jae 0x1222ba ; ret
0x00000000001222d8 : cmp eax, 0xfffff001 ; jae 0x1222e7 ; ret
0x0000000000122308 : cmp eax, 0xfffff001 ; jae 0x122317 ; ret
0x0000000000122338 : cmp eax, 0xfffff001 ; jae 0x122347 ; ret
0x0000000000122368 : cmp eax, 0xfffff001 ; jae 0x122377 ; ret
0x0000000000122398 : cmp eax, 0xfffff001 ; jae 0x1223a7 ; ret
0x00000000001223cb : cmp eax, 0xfffff001 ; jae 0x1223da ; ret
0x00000000001223fb : cmp eax, 0xfffff001 ; jae 0x12240a ; ret
0x0000000000122428 : cmp eax, 0xfffff001 ; jae 0x122437 ; ret
0x0000000000122458 : cmp eax, 0xfffff001 ; jae 0x122467 ; ret
0x000000000012248b : cmp eax, 0xfffff001 ; jae 0x12249a ; ret
0x00000000001224bb : cmp eax, 0xfffff001 ; jae 0x1224ca ; ret
0x00000000001224eb : cmp eax, 0xfffff001 ; jae 0x1224fa ; ret
0x0000000000122518 : cmp eax, 0xfffff001 ; jae 0x122527 ; ret
0x0000000000122548 : cmp eax, 0xfffff001 ; jae 0x122557 ; ret
0x0000000000122578 : cmp eax, 0xfffff001 ; jae 0x122587 ; ret
0x00000000001225a8 : cmp eax, 0xfffff001 ; jae 0x1225b7 ; ret
0x00000000001225db : cmp eax, 0xfffff001 ; jae 0x1225ea ; ret
0x0000000000122608 : cmp eax, 0xfffff001 ; jae 0x122617 ; ret
0x0000000000122638 : cmp eax, 0xfffff001 ; jae 0x122647 ; ret
0x000000000012266b : cmp eax, 0xfffff001 ; jae 0x12267a ; ret
0x0000000000122698 : cmp eax, 0xfffff001 ; jae 0x1226a7 ; ret
0x00000000001226cb : cmp eax, 0xfffff001 ; jae 0x1226da ; ret
0x00000000001226fb : cmp eax, 0xfffff001 ; jae 0x12270a ; ret
0x0000000000122728 : cmp eax, 0xfffff001 ; jae 0x122737 ; ret
0x0000000000122758 : cmp eax, 0xfffff001 ; jae 0x122767 ; ret
0x0000000000122788 : cmp eax, 0xfffff001 ; jae 0x122797 ; ret
0x0000000000122878 : cmp eax, 0xfffff001 ; jae 0x122887 ; ret
0x0000000000122948 : cmp eax, 0xfffff001 ; jae 0x122957 ; ret
0x0000000000122978 : cmp eax, 0xfffff001 ; jae 0x122987 ; ret
0x00000000001229ab : cmp eax, 0xfffff001 ; jae 0x1229ba ; ret
0x00000000001229d8 : cmp eax, 0xfffff001 ; jae 0x1229e7 ; ret
0x0000000000122e6b : cmp eax, 0xfffff001 ; jae 0x122e7a ; ret
0x0000000000122e98 : cmp eax, 0xfffff001 ; jae 0x122ea7 ; ret
0x0000000000122ec8 : cmp eax, 0xfffff001 ; jae 0x122ed7 ; ret
0x0000000000122efb : cmp eax, 0xfffff001 ; jae 0x122f0a ; ret
0x0000000000162aab : cmp eax, 0xfffff001 ; jae 0x162aba ; ret
0x0000000000162afb : cmp eax, 0xfffff001 ; jae 0x162b0a ; ret
0x000000000003f188 : cmp eax, 0xfffff001 ; jae 0x3f197 ; ret
0x000000000003f748 : cmp eax, 0xfffff001 ; jae 0x3f757 ; ret
0x0000000000052052 : cmp eax, 0xfffff001 ; jae 0x52065 ; xor eax, eax ; ret
0x00000000000d2b18 : cmp eax, 0xfffff001 ; jae 0xd2b27 ; ret
0x00000000000d5e28 : cmp eax, 0xfffff001 ; jae 0xd5e37 ; ret
0x00000000000d5e58 : cmp eax, 0xfffff001 ; jae 0xd5e67 ; ret
0x00000000000e4548 : cmp eax, 0xfffff001 ; jae 0xe4557 ; ret
0x00000000000e476b : cmp eax, 0xfffff001 ; jae 0xe477a ; ret
0x00000000000e4848 : cmp eax, 0xfffff001 ; jae 0xe4857 ; ret
0x00000000000e4da9 : cmp eax, 0xfffff001 ; jae 0xe4db8 ; ret
0x00000000000e4e38 : cmp eax, 0xfffff001 ; jae 0xe4e47 ; ret
0x00000000000e5948 : cmp eax, 0xfffff001 ; jae 0xe5957 ; ret
0x00000000000e5b48 : cmp eax, 0xfffff001 ; jae 0xe5b57 ; ret
0x00000000000e5b78 : cmp eax, 0xfffff001 ; jae 0xe5b87 ; ret
0x00000000000e5bd8 : cmp eax, 0xfffff001 ; jae 0xe5be7 ; ret
0x00000000000e5c08 : cmp eax, 0xfffff001 ; jae 0xe5c17 ; ret
0x00000000000e5c38 : cmp eax, 0xfffff001 ; jae 0xe5c47 ; ret
0x00000000000e5c68 : cmp eax, 0xfffff001 ; jae 0xe5c77 ; ret
0x0000000000131161 : cmp eax, 0xfffffe8a ; call rax
0x00000000000a0d4a : cmp eax, 1 ; ja 0xa0d31 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015c620 : cmp eax, 1 ; jne 0x15c639 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000000bbfff : cmp eax, 2 ; je 0xbc017 ; xor eax, eax ; ret
0x000000000015c630 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000f342e : cmp eax, 3 ; je 0xf3448 ; xor eax, eax ; pop rbx ; ret
0x000000000013076a : cmp eax, 4 ; je 0x130775 ; ret
0x000000000015ee11 : cmp eax, dword ptr [rax + rax] ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000e4e31 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000002f0be : cmp eax, dword ptr [rax] ; mov byte ptr [rip + 0x3bdb17], dl ; ret
0x00000000000301a2 : cmp eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000030939 : cmp eax, dword ptr [rax] ; mov qword ptr fs:[rdx], rax ; ret
0x000000000002f0c4 : cmp eax, dword ptr [rax] ; ret
0x00000000000f3ff9 : cmp eax, dword ptr [rcx] ; ret 0xc083
0x00000000001c2e75 : cmp eax, dword ptr [rdx] ; add byte ptr [rax + rcx - 6], ah ; jmp rsp
0x00000000000bccde : cmp eax, dword ptr [rsi + 0x10] ; jne 0xbcdd9 ; ret
0x00000000000bccf3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xbcdd9 ; ret
0x00000000000bcd08 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xbcdd9 ; ret
0x00000000000bcd23 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xbcdd9 ; ret
0x00000000000bcd3e : cmp eax, dword ptr [rsi + 0x20] ; jne 0xbcdd9 ; ret
0x00000000000bcd53 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xbcdd5 ; ret
0x00000000000bcd68 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xbcdd5 ; ret
0x00000000000bcd73 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xbcdd5 ; ret
0x00000000000bcd8e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xbcdd5 ; ret
0x00000000000bcda3 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xbcdd5 ; ret
0x00000000000bcdb8 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xbcdd5 ; ret
0x00000000000bcdc3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xbcdd5 ; ret
0x00000000000bccc3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xbcdd9 ; ret
0x00000000000bcc93 : cmp eax, dword ptr [rsi + 4] ; jne 0xbcdd9 ; ret
0x00000000000bcca8 : cmp eax, dword ptr [rsi + 8] ; jne 0xbcdd9 ; ret
0x000000000019552a : cmp eax, dword ptr [rsi - 0x10] ; jne 0x195669 ; ret
0x0000000000195543 : cmp eax, dword ptr [rsi - 0xc] ; jne 0x195669 ; ret
0x0000000000195653 : cmp eax, dword ptr [rsi - 4] ; jne 0x195667 ; xor eax, eax ; ret
0x0000000000195573 : cmp eax, dword ptr [rsi - 4] ; jne 0x195669 ; ret
0x0000000000195558 : cmp eax, dword ptr [rsi - 8] ; jne 0x195669 ; ret
0x00000000000bcc7d : cmp eax, dword ptr [rsi] ; jne 0xbcdd8 ; ret
0x00000000001ac817 : cmp eax, dword ptr [rsi] ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x000000000010ea13 : cmp eax, ebx ; seta al ; pop rbx ; ret
0x00000000000a838d : cmp eax, ecx ; je 0xa8375 ; ret
0x000000000007d6eb : cmp eax, ecx ; jg 0x7d708 ; add eax, edi ; mov rdx, r8 ; jmp 0x7d6c7
0x000000000018a0ff : cmp eax, ecx ; jle 0x18a13f ; movsxd rax, ecx ; ret
0x0000000000003c3b : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000195043 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000008ff2b : cmp eax, edx ; jae 0x8ff57 ; movzx eax, byte ptr [rax] ; ret
0x000000000013000b : cmp eax, edx ; jb 0x130006 ; xor eax, eax ; ret
0x00000000001596b9 : cmp eax, edx ; je 0x1596c5 ; pop rbx ; ret
0x0000000000159769 : cmp eax, edx ; je 0x1597d9 ; sub rax, -0x80 ; pop rbx ; ret
0x00000000000f0491 : cmp eax, edx ; jle 0xf04d4 ; movsxd rcx, edx ; jmp 0xf04ae
0x000000000014075a : cmp eax, edx ; jne 0x140739 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000129b29 : cmp eax, esi ; jb 0x129b41 ; mov eax, 1 ; ret
0x000000000007d6ea : cmp eax, r9d ; jg 0x7d709 ; add eax, edi ; mov rdx, r8 ; jmp 0x7d6c8
0x000000000002a8dc : cmp ebp, ebx ; jb 0x2a94e ; mov rdx, rax ; jmp 0x2a8a5
0x0000000000130706 : cmp ebx, 0xa ; je 0x130711 ; ret
0x00000000000514db : cmp ebx, eax ; jne 0x514d5 ; pop rbx ; ret
0x000000000005347c : cmp ecx, -1 ; jne 0x53478 ; mov rax, rdx ; ret
0x00000000000521ef : cmp ecx, 0x2f ; jmp rdx
0x000000000013359c : cmp ecx, 0xc00 ; je 0x1335b9 ; ret
0x00000000000bd4dc : cmp ecx, 0xc00 ; je 0xbd4f9 ; ret
0x000000000014eca8 : cmp ecx, dword ptr [rax + 0x29] ; retf 0x2948
0x00000000000c407f : cmp ecx, dword ptr [rax + 0x63] ; ret
0x000000000010ce39 : cmp ecx, dword ptr [rax - 0x77] ; ret
0x0000000000167248 : cmp ecx, dword ptr [rax - 0x77] ; retf 0x5fe8
0x0000000000022ce2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000001415ed : cmp ecx, dword ptr [rax - 0x7d] ; ret 0xeb01
0x00000000000a4f90 : cmp ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x5488
0x000000000014e136 : cmp ecx, dword ptr [rdi] ; retf 0xfa81
0x0000000000086bae : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x0000000000002e00 : cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x00000000000bd098 : cmp ecx, eax ; cmovg eax, edx ; ret
0x000000000019159b : cmp ecx, eax ; jne 0x1915c9 ; xor eax, eax ; ret
0x00000000001923db : cmp ecx, eax ; jne 0x192409 ; xor eax, eax ; ret
0x000000000019240f : cmp ecx, eax ; jne 0x19241c ; xor eax, eax ; ret
0x0000000000054802 : cmp ecx, ecx ; ret
0x0000000000131b01 : cmp ecx, edi ; add eax, 0x450f4800 ; ret 0x66c3
0x000000000015dc63 : cmp ecx, edx ; jae 0x15dc76 ; xor eax, eax ; ret
0x000000000015dca3 : cmp ecx, edx ; jae 0x15dcb6 ; xor eax, eax ; ret
0x00000000000a8338 : cmp ecx, edx ; je 0xa8339 ; cmp ecx, esi ; je 0xa8339 ; ret
0x00000000000a833c : cmp ecx, esi ; je 0xa8335 ; ret
0x000000000008457a : cmp ecx, esi ; jne 0x84577 ; lea eax, [rdx + rdi] ; ret
0x00000000000bd097 : cmp ecx, r8d ; cmovg eax, edx ; ret
0x00000000000f029b : cmp edi, 0x83486875 ; ret 0xeb04
0x000000000019ada8 : cmp edi, 1 ; ja 0x19adb6 ; ret
0x000000000012517d : cmp edi, 9 ; setbe al ; ret
0x0000000000140181 : cmp edi, dword ptr [rax + 3] ; syscall
0x00000000000617b0 : cmp edi, eax ; ja 0x61797 ; mov eax, r9d ; ret
0x000000000011eda3 : cmp edi, eax ; jne 0x11ede1 ; mov eax, 0x88 ; syscall
0x000000000009fd06 : cmp edi, eax ; jne 0x9fcf5 ; ret
0x00000000001bd0a1 : cmp edi, ebx ; jmp rax
0x00000000001bd081 : cmp edi, ebx ; push rax ; cmp al, 0xfb ; call rax
0x00000000001164d1 : cmp edi, edx ; ja 0x116505 ; ret
0x00000000000bb4d2 : cmp edi, edx ; jb 0xbb4df ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011fa85 : cmp edi, edx ; jne 0x11fa80 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000010f510 : cmp edi, esi ; ja 0x10f505 ; ret
0x00000000000617af : cmp edi, r8d ; ja 0x61798 ; mov eax, r9d ; ret
0x0000000000134d6f : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x0000000000046234 : cmp edx, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x000000000018f194 : cmp edx, dword ptr [rsi] ; jne 0x18f180 ; ret
0x00000000001675bb : cmp edx, eax ; ja 0x1675b6 ; xor eax, eax ; ret
0x00000000001309c2 : cmp edx, eax ; jne 0x1309a5 ; ret
0x0000000000052565 : cmp edx, eax ; jne 0x5255e ; xor eax, eax ; ret
0x0000000000096eba : cmp edx, eax ; jne 0x96e85 ; ret
0x0000000000140696 : cmp edx, eax ; sbb eax, eax ; ret
0x0000000000132e61 : cmp edx, ecx ; ja 0x132e92 ; xor eax, eax ; syscall
0x0000000000132f31 : cmp edx, ecx ; ja 0x132f6d ; mov eax, 0x59 ; syscall
0x000000000018f002 : cmp edx, ecx ; jne 0x18efee ; vzeroupper ; ret
0x0000000000193555 : cmp edx, ecx ; jne 0x193539 ; vzeroupper ; ret
0x000000000009ffd9 : cmp edx, ecx ; jne 0x9ffd5 ; ret
0x00000000000bb97b : cmp edx, ecx ; jne 0xbb968 ; ret
0x00000000001300ea : cmp edx, edi ; setae al ; ret
0x0000000000141106 : cmp edx, esi ; jb 0x1410fd ; mov eax, 0xffffffff ; ret
0x000000000015db46 : cmp edx, esi ; jbe 0x15db57 ; xor eax, eax ; ret
0x00000000000be716 : cmp edx, esi ; je 0xbe727 ; test edx, edx ; jne 0xbe719 ; ret
0x0000000000052865 : cmp edx, esi ; jne 0x5285e ; xor eax, eax ; ret
0x0000000000084869 : cmp esi, -1 ; setne al ; neg eax ; ret
0x000000000014123c : cmp esi, 0x80 ; cmovae eax, edi ; ret
0x00000000000e972b : cmp esi, 1 ; sete al ; ret
0x0000000000089489 : cmp esi, 2 ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x000000000002cb04 : cmp esi, 3 ; je 0x2cb16 ; ret
0x000000000018f720 : cmp esi, dword ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x0000000000130ef7 : cmp esi, dword ptr [rdi + 0x2e] ; mov eax, 0xe3 ; syscall
0x000000000014ebba : cmp esi, dword ptr [rdx + 0x28] ; ja 0x14ebb1 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018eb35 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000005855a : cmp esi, eax ; jne 0x58558 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ac9e4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000008f0ca : cmp esi, ecx ; jne 0x8f0c7 ; lea eax, [rdx + rdi] ; ret
0x00000000000586a6 : cmp esi, edi ; cmovb rax, rdi ; ret
0x00000000000df091 : cmp esi, edi ; jge 0xdf078 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000084247 : cmp qword ptr [rax + 0x30], 0 ; je 0x84258 ; ret
0x0000000000089373 : cmp qword ptr [rdi + 0x18], 0 ; setne al ; ret
0x000000000008e300 : cmp qword ptr [rdi + 0x38], 0 ; je 0x8e318 ; ret
0x0000000000130089 : cmp qword ptr [rdi], 0 ; je 0x13009f ; ret
0x000000000011ce5b : cmp qword ptr [rsi], 0 ; je 0x11ce6f ; ret
0x00000000000a2060 : cmp r10b, r8b ; jb 0xa2047 ; mov rdx, rax ; jmp 0xa1ff7
0x00000000000a22d0 : cmp r10b, r9b ; jb 0xa22b7 ; mov rdx, rax ; jmp 0xa226d
0x00000000000a2c0d : cmp r10b, r9b ; jb 0xa2bf5 ; mov rdx, rax ; jmp 0xa2ba5
0x0000000000130705 : cmp r11d, 0xa ; je 0x130712 ; ret
0x000000000002a8db : cmp r13, r11 ; jb 0x2a94f ; mov rdx, rax ; jmp 0x2a8a6
0x0000000000052c53 : cmp r8, -1 ; jne 0x52c49 ; mov rax, rdx ; ret
0x00000000000a4e35 : cmp r8b, dil ; jb 0xa4e1d ; mov rdx, rax ; jmp 0xa4dd3
0x00000000000a6a8f : cmp r8b, dil ; jb 0xa6a77 ; mov rdx, rax ; jmp 0xa6a37
0x0000000000157666 : cmp r8b, r13b ; ret
0x0000000000197654 : cmp r8d, 0x89497fff ; ret
0x00000000000a838c : cmp r8d, ecx ; je 0xa8376 ; ret
0x0000000000100f31 : cmp r9b, r13b ; retf 0xfffb
0x00000000000a1f10 : cmp r9b, r8b ; jb 0xa1ef7 ; mov rdx, rax ; jmp 0xa1ea7
0x00000000000a24f0 : cmp r9b, r8b ; jb 0xa24d7 ; mov rdx, rax ; jmp 0xa248d
0x00000000000a5ddd : cmp r9b, r8b ; jb 0xa5dc5 ; mov rdx, rax ; jmp 0xa5d78
0x00000000000521ee : cmp r9d, 0x2f ; jmp rdx
0x000000000010e637 : cmp rax, -0x1000 ; ja 0x10e6a9 ; ret
0x000000000010e6e7 : cmp rax, -0x1000 ; ja 0x10e759 ; ret
0x000000000010f775 : cmp rax, -0x1000 ; ja 0x10f789 ; ret
0x000000000010f7c3 : cmp rax, -0x1000 ; ja 0x10f7d9 ; ret
0x000000000010f815 : cmp rax, -0x1000 ; ja 0x10f829 ; ret
0x000000000010f86d : cmp rax, -0x1000 ; ja 0x10f889 ; ret
0x000000000010f8d1 : cmp rax, -0x1000 ; ja 0x10f8e9 ; ret
0x000000000010f929 : cmp rax, -0x1000 ; ja 0x10f941 ; ret
0x000000000010fb54 : cmp rax, -0x1000 ; ja 0x10fb69 ; ret
0x0000000000110081 : cmp rax, -0x1000 ; ja 0x1100e9 ; ret
0x0000000000110114 : cmp rax, -0x1000 ; ja 0x110129 ; ret
0x0000000000110154 : cmp rax, -0x1000 ; ja 0x1101b9 ; ret
0x00000000001101e7 : cmp rax, -0x1000 ; ja 0x110201 ; ret
0x0000000000110217 : cmp rax, -0x1000 ; ja 0x110231 ; ret
0x0000000000110247 : cmp rax, -0x1000 ; ja 0x110261 ; ret
0x00000000001108d4 : cmp rax, -0x1000 ; ja 0x110921 ; ret
0x0000000000110947 : cmp rax, -0x1000 ; ja 0x110961 ; ret
0x0000000000110a74 : cmp rax, -0x1000 ; ja 0x110ac9 ; ret
0x0000000000114bc4 : cmp rax, -0x1000 ; ja 0x114c29 ; ret
0x000000000011568f : cmp rax, -0x1000 ; ja 0x1156a9 ; ret
0x00000000001156e3 : cmp rax, -0x1000 ; ja 0x1156f9 ; ret
0x00000000001157a7 : cmp rax, -0x1000 ; ja 0x115819 ; ret
0x0000000000115857 : cmp rax, -0x1000 ; ja 0x1158c9 ; ret
0x0000000000115dce : cmp rax, -0x1000 ; ja 0x115e29 ; ret
0x0000000000115fa0 : cmp rax, -0x1000 ; ja 0x115fb9 ; ret
0x0000000000115fe1 : cmp rax, -0x1000 ; ja 0x115ff9 ; ret
0x0000000000116614 : cmp rax, -0x1000 ; ja 0x116679 ; ret
0x00000000001166b4 : cmp rax, -0x1000 ; ja 0x116719 ; ret
0x000000000011675a : cmp rax, -0x1000 ; ja 0x1167c9 ; ret
0x000000000011680a : cmp rax, -0x1000 ; ja 0x116879 ; ret
0x0000000000116ff7 : cmp rax, -0x1000 ; ja 0x117071 ; ret
0x0000000000117214 : cmp rax, -0x1000 ; ja 0x117261 ; ret
0x00000000001172c4 : cmp rax, -0x1000 ; ja 0x117311 ; ret
0x0000000000117373 : cmp rax, -0x1000 ; ja 0x117389 ; ret
0x0000000000118a47 : cmp rax, -0x1000 ; ja 0x118a61 ; ret
0x0000000000118c2c : cmp rax, -0x1000 ; ja 0x118c49 ; ret
0x0000000000118c67 : cmp rax, -0x1000 ; ja 0x118c81 ; ret
0x0000000000118c97 : cmp rax, -0x1000 ; ja 0x118cb1 ; ret
0x000000000011bb24 : cmp rax, -0x1000 ; ja 0x11bb89 ; ret
0x000000000011edae : cmp rax, -0x1000 ; ja 0x11edc9 ; ret
0x000000000012199d : cmp rax, -0x1000 ; ja 0x121a21 ; ret
0x0000000000121a4f : cmp rax, -0x1000 ; ja 0x121a69 ; ret
0x0000000000121b77 : cmp rax, -0x1000 ; ja 0x121be9 ; ret
0x0000000000121c27 : cmp rax, -0x1000 ; ja 0x121c99 ; ret
0x0000000000121cd7 : cmp rax, -0x1000 ; ja 0x121d49 ; ret
0x0000000000121d87 : cmp rax, -0x1000 ; ja 0x121e11 ; ret
0x0000000000121e54 : cmp rax, -0x1000 ; ja 0x121eb9 ; ret
0x0000000000121eeb : cmp rax, -0x1000 ; ja 0x121f51 ; ret
0x0000000000121f6f : cmp rax, -0x1000 ; ja 0x121f89 ; ret
0x00000000001227e4 : cmp rax, -0x1000 ; ja 0x122849 ; ret
0x00000000001228b4 : cmp rax, -0x1000 ; ja 0x122919 ; ret
0x0000000000122a1d : cmp rax, -0x1000 ; ja 0x122a99 ; ret
0x0000000000122ad7 : cmp rax, -0x1000 ; ja 0x122b61 ; ret
0x0000000000122ba4 : cmp rax, -0x1000 ; ja 0x122c09 ; ret
0x0000000000122c4d : cmp rax, -0x1000 ; ja 0x122cc9 ; ret
0x0000000000122d04 : cmp rax, -0x1000 ; ja 0x122d69 ; ret
0x0000000000122da7 : cmp rax, -0x1000 ; ja 0x122e31 ; ret
0x00000000001231f7 : cmp rax, -0x1000 ; ja 0x123269 ; ret
0x00000000001232a7 : cmp rax, -0x1000 ; ja 0x123321 ; ret
0x0000000000123357 : cmp rax, -0x1000 ; ja 0x1233c9 ; ret
0x00000000001234f7 : cmp rax, -0x1000 ; ja 0x123569 ; ret
0x00000000001235a7 : cmp rax, -0x1000 ; ja 0x123629 ; ret
0x0000000000123657 : cmp rax, -0x1000 ; ja 0x123671 ; ret
0x0000000000123687 : cmp rax, -0x1000 ; ja 0x1236a1 ; ret
0x00000000001236b7 : cmp rax, -0x1000 ; ja 0x1236d1 ; ret
0x00000000001236e7 : cmp rax, -0x1000 ; ja 0x123701 ; ret
0x00000000001237ba : cmp rax, -0x1000 ; ja 0x1237d1 ; ret
0x00000000001237e7 : cmp rax, -0x1000 ; ja 0x123801 ; ret
0x0000000000123817 : cmp rax, -0x1000 ; ja 0x123831 ; ret
0x000000000012384a : cmp rax, -0x1000 ; ja 0x123861 ; ret
0x0000000000123877 : cmp rax, -0x1000 ; ja 0x123891 ; ret
0x0000000000130e57 : cmp rax, -0x1000 ; ja 0x130e71 ; ret
0x0000000000130f01 : cmp rax, -0x1000 ; ja 0x130f19 ; ret
0x0000000000132e69 : cmp rax, -0x1000 ; ja 0x132e81 ; ret
0x0000000000132f3c : cmp rax, -0x1000 ; ja 0x132f59 ; ret
0x000000000003f14d : cmp rax, -0x1000 ; ja 0x3f169 ; ret
0x000000000003f1bc : cmp rax, -0x1000 ; ja 0x3f1d9 ; ret
0x000000000003f209 : cmp rax, -0x1000 ; ja 0x3f261 ; ret
0x00000000000448d4 : cmp rax, -0x1000 ; ja 0x44939 ; ret
0x000000000007bd37 : cmp rax, -0x1000 ; ja 0x7bd51 ; ret
0x000000000007bd6a : cmp rax, -0x1000 ; ja 0x7bd81 ; ret
0x00000000000d2a37 : cmp rax, -0x1000 ; ja 0xd2a51 ; ret
0x00000000000e45f1 : cmp rax, -0x1000 ; ja 0xe4651 ; ret
0x00000000000e4687 : cmp rax, -0x1000 ; ja 0xe46f1 ; ret
0x00000000000e471a : cmp rax, -0x1000 ; ja 0xe4731 ; ret
0x00000000000e47aa : cmp rax, -0x1000 ; ja 0xe4819 ; ret
0x00000000000e48f4 : cmp rax, -0x1000 ; ja 0xe4939 ; ret
0x00000000000e4967 : cmp rax, -0x1000 ; ja 0xe4981 ; ret
0x00000000000e49a4 : cmp rax, -0x1000 ; ja 0xe49f9 ; ret
0x00000000000e4a27 : cmp rax, -0x1000 ; ja 0xe4a41 ; ret
0x00000000000caecf : cmp rax, -0x6cf0bef0 ; ret
0x0000000000103d97 : cmp rax, -0xfff ; jae 0x103da8 ; ret
0x0000000000103dc7 : cmp rax, -0xfff ; jae 0x103dd8 ; ret
0x0000000000103df7 : cmp rax, -0xfff ; jae 0x103e08 ; ret
0x0000000000103e27 : cmp rax, -0xfff ; jae 0x103e38 ; ret
0x0000000000103e57 : cmp rax, -0xfff ; jae 0x103e68 ; ret
0x0000000000103e87 : cmp rax, -0xfff ; jae 0x103e98 ; ret
0x0000000000103eb7 : cmp rax, -0xfff ; jae 0x103ec8 ; ret
0x0000000000103ee7 : cmp rax, -0xfff ; jae 0x103ef8 ; ret
0x000000000010f697 : cmp rax, -0xfff ; jae 0x10f6a8 ; ret
0x000000000010f977 : cmp rax, -0xfff ; jae 0x10f988 ; ret
0x000000000010f9a7 : cmp rax, -0xfff ; jae 0x10f9b8 ; ret
0x000000000010fac7 : cmp rax, -0xfff ; jae 0x10fad8 ; ret
0x000000000010faf7 : cmp rax, -0xfff ; jae 0x10fb08 ; ret
0x000000000010fbb7 : cmp rax, -0xfff ; jae 0x10fbc8 ; ret
0x000000000010fbe7 : cmp rax, -0xfff ; jae 0x10fbf8 ; ret
0x0000000000110777 : cmp rax, -0xfff ; jae 0x110788 ; ret
0x0000000000110977 : cmp rax, -0xfff ; jae 0x110988 ; ret
0x00000000001109a7 : cmp rax, -0xfff ; jae 0x1109b8 ; ret
0x00000000001109d7 : cmp rax, -0xfff ; jae 0x1109e8 ; ret
0x0000000000110a07 : cmp rax, -0xfff ; jae 0x110a18 ; ret
0x0000000000110a37 : cmp rax, -0xfff ; jae 0x110a48 ; ret
0x0000000000110af7 : cmp rax, -0xfff ; jae 0x110b08 ; ret
0x0000000000110b27 : cmp rax, -0xfff ; jae 0x110b38 ; ret
0x00000000001113e7 : cmp rax, -0xfff ; jae 0x1113f8 ; ret
0x0000000000111417 : cmp rax, -0xfff ; jae 0x111428 ; ret
0x0000000000111447 : cmp rax, -0xfff ; jae 0x111458 ; ret
0x000000000011147a : cmp rax, -0xfff ; jae 0x11148b ; ret
0x0000000000111c27 : cmp rax, -0xfff ; jae 0x111c38 ; ret
0x0000000000111c5a : cmp rax, -0xfff ; jae 0x111c6b ; ret
0x0000000000111c87 : cmp rax, -0xfff ; jae 0x111c98 ; ret
0x0000000000111cb7 : cmp rax, -0xfff ; jae 0x111cc8 ; ret
0x0000000000111ce7 : cmp rax, -0xfff ; jae 0x111cf8 ; ret
0x0000000000111d1a : cmp rax, -0xfff ; jae 0x111d2b ; ret
0x0000000000111d47 : cmp rax, -0xfff ; jae 0x111d58 ; ret
0x0000000000111d77 : cmp rax, -0xfff ; jae 0x111d88 ; ret
0x0000000000111da7 : cmp rax, -0xfff ; jae 0x111db8 ; ret
0x000000000011520a : cmp rax, -0xfff ; jae 0x11521b ; ret
0x0000000000116017 : cmp rax, -0xfff ; jae 0x116028 ; ret
0x0000000000116407 : cmp rax, -0xfff ; jae 0x116418 ; ret
0x00000000001165d7 : cmp rax, -0xfff ; jae 0x1165e8 ; ret
0x0000000000116ef7 : cmp rax, -0xfff ; jae 0x116f08 ; ret
0x0000000000116fb7 : cmp rax, -0xfff ; jae 0x116fc8 ; ret
0x00000000001171a7 : cmp rax, -0xfff ; jae 0x1171b8 ; ret
0x00000000001171d7 : cmp rax, -0xfff ; jae 0x1171e8 ; ret
0x0000000000117287 : cmp rax, -0xfff ; jae 0x117298 ; ret
0x0000000000117337 : cmp rax, -0xfff ; jae 0x117348 ; ret
0x0000000000117657 : cmp rax, -0xfff ; jae 0x117668 ; ret
0x0000000000117687 : cmp rax, -0xfff ; jae 0x117698 ; ret
0x00000000001176b7 : cmp rax, -0xfff ; jae 0x1176c8 ; ret
0x000000000011b839 : cmp rax, -0xfff ; jae 0x11b84a ; ret
0x000000000011bab7 : cmp rax, -0xfff ; jae 0x11bac8 ; ret
0x000000000011bae7 : cmp rax, -0xfff ; jae 0x11baf8 ; ret
0x000000000011bbb7 : cmp rax, -0xfff ; jae 0x11bbc8 ; ret
0x000000000011bbe7 : cmp rax, -0xfff ; jae 0x11bbf8 ; ret
0x000000000011bc1a : cmp rax, -0xfff ; jae 0x11bc2b ; ret
0x000000000011bc47 : cmp rax, -0xfff ; jae 0x11bc58 ; ret
0x000000000011bc77 : cmp rax, -0xfff ; jae 0x11bc88 ; ret
0x000000000011bca7 : cmp rax, -0xfff ; jae 0x11bcb8 ; ret
0x000000000011bcd7 : cmp rax, -0xfff ; jae 0x11bce8 ; ret
0x000000000011f81a : cmp rax, -0xfff ; jae 0x11f82b ; ret
0x000000000011f847 : cmp rax, -0xfff ; jae 0x11f858 ; ret
0x000000000011f877 : cmp rax, -0xfff ; jae 0x11f888 ; ret
0x000000000011f8aa : cmp rax, -0xfff ; jae 0x11f8bb ; ret
0x000000000011f8da : cmp rax, -0xfff ; jae 0x11f8eb ; ret
0x000000000011f907 : cmp rax, -0xfff ; jae 0x11f918 ; ret
0x000000000011f93a : cmp rax, -0xfff ; jae 0x11f94b ; ret
0x000000000011f967 : cmp rax, -0xfff ; jae 0x11f978 ; ret
0x000000000011f997 : cmp rax, -0xfff ; jae 0x11f9a8 ; ret
0x000000000011f9ca : cmp rax, -0xfff ; jae 0x11f9db ; ret
0x000000000011f9f7 : cmp rax, -0xfff ; jae 0x11fa08 ; ret
0x000000000011fa2a : cmp rax, -0xfff ; jae 0x11fa3b ; ret
0x0000000000121757 : cmp rax, -0xfff ; jae 0x121768 ; ret
0x0000000000121787 : cmp rax, -0xfff ; jae 0x121798 ; ret
0x00000000001218c7 : cmp rax, -0xfff ; jae 0x1218d8 ; ret
0x00000000001218f7 : cmp rax, -0xfff ; jae 0x121908 ; ret
0x0000000000121927 : cmp rax, -0xfff ; jae 0x121938 ; ret
0x0000000000121957 : cmp rax, -0xfff ; jae 0x121968 ; ret
0x0000000000121a87 : cmp rax, -0xfff ; jae 0x121a98 ; ret
0x0000000000121b0a : cmp rax, -0xfff ; jae 0x121b1b ; ret
0x0000000000121b37 : cmp rax, -0xfff ; jae 0x121b48 ; ret
0x0000000000122027 : cmp rax, -0xfff ; jae 0x122038 ; ret
0x0000000000122057 : cmp rax, -0xfff ; jae 0x122068 ; ret
0x000000000012209a : cmp rax, -0xfff ; jae 0x1220ab ; ret
0x00000000001220c7 : cmp rax, -0xfff ; jae 0x1220d8 ; ret
0x00000000001220f7 : cmp rax, -0xfff ; jae 0x122108 ; ret
0x0000000000122127 : cmp rax, -0xfff ; jae 0x122138 ; ret
0x0000000000122157 : cmp rax, -0xfff ; jae 0x122168 ; ret
0x0000000000122187 : cmp rax, -0xfff ; jae 0x122198 ; ret
0x00000000001221b7 : cmp rax, -0xfff ; jae 0x1221c8 ; ret
0x00000000001221e7 : cmp rax, -0xfff ; jae 0x1221f8 ; ret
0x0000000000122217 : cmp rax, -0xfff ; jae 0x122228 ; ret
0x000000000012224a : cmp rax, -0xfff ; jae 0x12225b ; ret
0x0000000000122277 : cmp rax, -0xfff ; jae 0x122288 ; ret
0x00000000001222aa : cmp rax, -0xfff ; jae 0x1222bb ; ret
0x00000000001222d7 : cmp rax, -0xfff ; jae 0x1222e8 ; ret
0x0000000000122307 : cmp rax, -0xfff ; jae 0x122318 ; ret
0x0000000000122337 : cmp rax, -0xfff ; jae 0x122348 ; ret
0x0000000000122367 : cmp rax, -0xfff ; jae 0x122378 ; ret
0x0000000000122397 : cmp rax, -0xfff ; jae 0x1223a8 ; ret
0x00000000001223ca : cmp rax, -0xfff ; jae 0x1223db ; ret
0x00000000001223fa : cmp rax, -0xfff ; jae 0x12240b ; ret
0x0000000000122427 : cmp rax, -0xfff ; jae 0x122438 ; ret
0x0000000000122457 : cmp rax, -0xfff ; jae 0x122468 ; ret
0x000000000012248a : cmp rax, -0xfff ; jae 0x12249b ; ret
0x00000000001224ba : cmp rax, -0xfff ; jae 0x1224cb ; ret
0x00000000001224ea : cmp rax, -0xfff ; jae 0x1224fb ; ret
0x0000000000122517 : cmp rax, -0xfff ; jae 0x122528 ; ret
0x0000000000122547 : cmp rax, -0xfff ; jae 0x122558 ; ret
0x0000000000122577 : cmp rax, -0xfff ; jae 0x122588 ; ret
0x00000000001225a7 : cmp rax, -0xfff ; jae 0x1225b8 ; ret
0x00000000001225da : cmp rax, -0xfff ; jae 0x1225eb ; ret
0x0000000000122607 : cmp rax, -0xfff ; jae 0x122618 ; ret
0x0000000000122637 : cmp rax, -0xfff ; jae 0x122648 ; ret
0x000000000012266a : cmp rax, -0xfff ; jae 0x12267b ; ret
0x0000000000122697 : cmp rax, -0xfff ; jae 0x1226a8 ; ret
0x00000000001226ca : cmp rax, -0xfff ; jae 0x1226db ; ret
0x00000000001226fa : cmp rax, -0xfff ; jae 0x12270b ; ret
0x0000000000122727 : cmp rax, -0xfff ; jae 0x122738 ; ret
0x0000000000122757 : cmp rax, -0xfff ; jae 0x122768 ; ret
0x0000000000122787 : cmp rax, -0xfff ; jae 0x122798 ; ret
0x0000000000122877 : cmp rax, -0xfff ; jae 0x122888 ; ret
0x0000000000122947 : cmp rax, -0xfff ; jae 0x122958 ; ret
0x0000000000122977 : cmp rax, -0xfff ; jae 0x122988 ; ret
0x00000000001229aa : cmp rax, -0xfff ; jae 0x1229bb ; ret
0x00000000001229d7 : cmp rax, -0xfff ; jae 0x1229e8 ; ret
0x0000000000122e6a : cmp rax, -0xfff ; jae 0x122e7b ; ret
0x0000000000122e97 : cmp rax, -0xfff ; jae 0x122ea8 ; ret
0x0000000000122ec7 : cmp rax, -0xfff ; jae 0x122ed8 ; ret
0x0000000000122efa : cmp rax, -0xfff ; jae 0x122f0b ; ret
0x0000000000162aaa : cmp rax, -0xfff ; jae 0x162abb ; ret
0x0000000000162afa : cmp rax, -0xfff ; jae 0x162b0b ; ret
0x000000000003f187 : cmp rax, -0xfff ; jae 0x3f198 ; ret
0x000000000003f747 : cmp rax, -0xfff ; jae 0x3f758 ; ret
0x00000000000d2b17 : cmp rax, -0xfff ; jae 0xd2b28 ; ret
0x00000000000d5e27 : cmp rax, -0xfff ; jae 0xd5e38 ; ret
0x00000000000d5e57 : cmp rax, -0xfff ; jae 0xd5e68 ; ret
0x00000000000e4547 : cmp rax, -0xfff ; jae 0xe4558 ; ret
0x00000000000e476a : cmp rax, -0xfff ; jae 0xe477b ; ret
0x00000000000e4847 : cmp rax, -0xfff ; jae 0xe4858 ; ret
0x00000000000e4e37 : cmp rax, -0xfff ; jae 0xe4e48 ; ret
0x00000000000e5947 : cmp rax, -0xfff ; jae 0xe5958 ; ret
0x00000000000e5b47 : cmp rax, -0xfff ; jae 0xe5b58 ; ret
0x00000000000e5b77 : cmp rax, -0xfff ; jae 0xe5b88 ; ret
0x00000000000e5bd7 : cmp rax, -0xfff ; jae 0xe5be8 ; ret
0x00000000000e5c07 : cmp rax, -0xfff ; jae 0xe5c18 ; ret
0x00000000000e5c37 : cmp rax, -0xfff ; jae 0xe5c48 ; ret
0x00000000000e5c67 : cmp rax, -0xfff ; jae 0xe5c78 ; ret
0x00000000000e6898 : cmp rax, 0x414a53 ; jne 0xe6871 ; jmp 0xe6852
0x000000000010ea12 : cmp rax, rbx ; seta al ; pop rbx ; ret
0x000000000008ff2a : cmp rax, rdx ; jae 0x8ff58 ; movzx eax, byte ptr [rax] ; ret
0x000000000013000a : cmp rax, rdx ; jb 0x130007 ; xor eax, eax ; ret
0x0000000000130009 : cmp rax, rdx ; jb 0x130008 ; xor eax, eax ; ret
0x00000000001596b8 : cmp rax, rdx ; je 0x1596c6 ; pop rbx ; ret
0x00000000000514da : cmp rbx, rax ; jne 0x514d6 ; pop rbx ; ret
0x000000000005347b : cmp rcx, -1 ; jne 0x53479 ; mov rax, rdx ; ret
0x0000000000086bad : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000019159a : cmp rcx, rax ; jne 0x1915ca ; xor eax, eax ; ret
0x00000000001923da : cmp rcx, rax ; jne 0x19240a ; xor eax, eax ; ret
0x0000000000084579 : cmp rcx, rsi ; jne 0x84578 ; lea eax, [rdx + rdi] ; ret
0x000000000019ada7 : cmp rdi, 1 ; ja 0x19adb7 ; ret
0x000000000009fd05 : cmp rdi, rax ; jne 0x9fcf6 ; ret
0x00000000001164d0 : cmp rdi, rdx ; ja 0x116506 ; ret
0x00000000000bb4d1 : cmp rdi, rdx ; jb 0xbb4e0 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011fa84 : cmp rdi, rdx ; jne 0x11fa81 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000010f50f : cmp rdi, rsi ; ja 0x10f506 ; ret
0x0000000000046233 : cmp rdx, qword ptr [r14] ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x0000000000096eb9 : cmp rdx, r8 ; jne 0x96e86 ; ret
0x00000000001675ba : cmp rdx, rax ; ja 0x1675b7 ; xor eax, eax ; ret
0x00000000001309c1 : cmp rdx, rax ; jne 0x1309a6 ; ret
0x0000000000052564 : cmp rdx, rax ; jne 0x5255f ; xor eax, eax ; ret
0x0000000000140695 : cmp rdx, rax ; sbb eax, eax ; ret
0x0000000000132e60 : cmp rdx, rcx ; ja 0x132e93 ; xor eax, eax ; syscall
0x000000000018f001 : cmp rdx, rcx ; jne 0x18efef ; vzeroupper ; ret
0x0000000000193554 : cmp rdx, rcx ; jne 0x19353a ; vzeroupper ; ret
0x000000000009ffd8 : cmp rdx, rcx ; jne 0x9ffd6 ; ret
0x00000000000bb97a : cmp rdx, rcx ; jne 0xbb969 ; ret
0x00000000000bb979 : cmp rdx, rcx ; jne 0xbb96a ; ret
0x00000000001300e9 : cmp rdx, rdi ; setae al ; ret
0x000000000015db45 : cmp rdx, rsi ; jbe 0x15db58 ; xor eax, eax ; ret
0x0000000000052864 : cmp rdx, rsi ; jne 0x5285f ; xor eax, eax ; ret
0x0000000000058559 : cmp rsi, r8 ; jne 0x58559 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f0c9 : cmp rsi, rcx ; jne 0x8f0c8 ; lea eax, [rdx + rdi] ; ret
0x00000000000586a5 : cmp rsi, rdi ; cmovb rax, rdi ; ret
0x000000000012bef7 : cmp sil, cl ; cmovne eax, edx ; ret
0x00000000000a6c19 : cmp sil, cl ; jb 0xa6c02 ; mov rdx, rax ; jmp 0xa6bc3
0x000000000012be85 : cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000018cac7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018cdc7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018dcc7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000cb4ca : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000018d9c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000191019 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000000f1734 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rax, rsi ; jmp rax
0x00000000001d8799 : cmpsb byte ptr [rsi], byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001bf111 : cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; jmp rsp
0x00000000001aaa16 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x1aa9e2 ; mov ecx, 0x5b92ac50 ; retf
0x0000000000187576 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018d6c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018d3c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001bfb61 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; jmp qword ptr [rax]
0x00000000001acb31 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000001bd280 : cmpsb byte ptr [rsi], byte ptr [rdi] ; outsb dx, byte ptr [rsi] ; sti ; call qword ptr [rsi]
0x00000000000ef505 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, 0 ; add byte ptr [rcx + 0x39], cl ; retf 0x1bd
0x00000000000b3c80 : cmpsd dword ptr [rsi], dword ptr [rdi] ; and al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000000001af389 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cld ; call qword ptr [rax]
0x00000000000851e9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000e692e : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001d87ad : cmpsd dword ptr [rsi], dword ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001d51e9 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rcx]
0x00000000001ae6c8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jne 0x1ae6bf ; jmp qword ptr [rdi - 0x3c00138b]
0x00000000001ae710 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jne 0x1ae702 ; jmp rsi
0x00000000001ae748 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jne 0x1ae73f ; jmp qword ptr [rdi - 0x3c00138b]
0x00000000001aa4ff : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov bx, 0xf32d ; retf
0x00000000001af1ed : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; jmp qword ptr [rax - 0x1f001058]
0x0000000000003a26 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x00000000000589d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xd
0x00000000000f471d : cmpsd dword ptr [rsi], dword ptr [rdi] ; retf
0x0000000000003a25 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000043943 : cqo ; idiv rsi ; ret
0x00000000000917ec : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000851ea : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000ee1b4 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0xc148
0x0000000000025a8f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000156512 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003f45a : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000019c198 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000019b8a4 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x000000000013f3e4 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000123482 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; shr al, 0xd3 ; ret 0xfffe
0x00000000001d7ce0 : cwde ; add dword ptr [r8], r8d ; or al, 0x7d ; hlt ; jmp qword ptr [rcx]
0x00000000001dcfd1 : cwde ; add dword ptr [rax], eax ; fsub qword ptr [rdi - 0xa] ; jmp rdx
0x00000000001dd041 : cwde ; add dword ptr [rax], eax ; fsubr qword ptr [rcx - 0xa] ; call rax
0x00000000001e29e0 : cwde ; add dword ptr [rax], eax ; in al, dx ; xor bh, al ; call qword ptr [rbx]
0x00000000001c236c : cwde ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x1c2372 ; call rsp
0x00000000001d81e0 : cwde ; add qword ptr [rax], rax ; or al, 0x9f ; hlt ; jmp qword ptr [rcx]
0x000000000013a6f4 : cwde ; and ch, byte ptr [rbx] ; add al, ch ; retf
0x00000000001db378 : cwde ; cdq ; cmc ; call qword ptr [rcx]
0x00000000001c3221 : cwde ; cli ; jmp rsp
0x00000000001c8918 : cwde ; cmp ch, bl ; jmp qword ptr [rcx]
0x00000000001c2e74 : cwde ; cmp eax, dword ptr [rdx] ; add byte ptr [rax + rcx - 6], ah ; jmp rsp
0x00000000001de128 : cwde ; fdiv st(6) ; jmp qword ptr [rbx]
0x00000000001bf6ec : cwde ; int1 ; add byte ptr [rax], al ; add al, 0x93 ; in eax, dx ; call rsp
0x00000000001d8248 : cwde ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001d5658 : cwde ; mov ah, 0xf3 ; jmp qword ptr [rcx]
0x0000000000139622 : cwde ; nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000001d4ec8 : cwde ; pushfq ; call qword ptr [rax]
0x0000000000003c41 : cwde ; ret
0x00000000001df9e0 : cwde ; ret 1
0x0000000000003d61 : cwde ; retf
0x00000000000023e6 : cwde ; retf 0x81c0
0x0000000000024794 : cwde ; retf 0xffff
0x00000000001bf22c : cwde ; rol dword ptr [rax], 1 ; add byte ptr [rcx + rax*8 - 0x14], dl ; call rsp
0x00000000001bd81d : cwde ; sti ; call qword ptr [rdx]
0x00000000001bd761 : cwde ; sti ; call rax
0x00000000001bd75d : cwde ; sti ; inc dword ptr [rax - 0x68] ; sti ; call rax
0x00000000001bd79d : cwde ; sti ; jmp qword ptr [rsi]
0x00000000001bd95d : cwde ; sti ; jmp rax
0x00000000001c62e0 : cwde ; sub eax, dword ptr [rax] ; add ah, ch ; retf
0x00000000001dbbe0 : cwde ; test byte ptr [rcx], al ; add ah, ch ; retf 0xfff5
0x00000000001c4138 : cwde ; xor esi, esp ; call qword ptr [rdi]
0x00000000000b51c9 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x00000000000b31b1 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x00000000000b51ca : dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000b31b2 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000524ed : dec byte ptr [rax + 0x39] ; retf
0x000000000018a1e7 : dec byte ptr [rax + 0x63] ; ret 0x8348
0x000000000019302d : dec byte ptr [rax + 0x7f] ; jl 0x193052 ; cld ; vzeroupper ; ret
0x0000000000059469 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x000000000009b305 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000011f7a4 : dec byte ptr [rax - 0x77] ; fucomip st(0) ; ret
0x000000000009dba0 : dec byte ptr [rax - 0x77] ; ret
0x000000000012b25d : dec byte ptr [rax - 0x77] ; ret 0x6bf
0x000000000009c1a6 : dec byte ptr [rax - 0x77] ; ret 0x81e8
0x000000000009c129 : dec byte ptr [rax - 0x77] ; ret 0xfee8
0x00000000000de2ac : dec byte ptr [rax - 0x7d] ; ret
0x0000000000097a7b : dec byte ptr [rbx + 0x48d4836] ; retf
0x000000000011d3b2 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x0000000000042396 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000e784c : dec byte ptr [rcx + 1] ; ret
0x000000000011da43 : dec byte ptr [rcx + rcx*4 + 0x42] ; adc byte ptr [rax + 9], cl ; retf 0x8948
0x0000000000041f47 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000c8d92 : dec byte ptr [rcx - 0x39] ; ret 0xffff
0x00000000001136d5 : dec byte ptr [rdi] ; retf 0xc985
0x00000000000a3178 : dec byte ptr [rdi] ; test cl, bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000caf3c : dec byte ptr [rdi] ; test dword ptr [rcx], esp ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0xc283
0x000000000005cfc6 : dec byte ptr [rip - 0x76b40000] ; retf 0x894c
0x000000000002ac83 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x00000000001c0183 : dec dword ptr [rax + 0x14000135] ; movsxd rsi, ecx ; call rax
0x00000000001c332b : dec dword ptr [rax + 0x14] ; add dword ptr [rax], eax ; xor al, 0x95 ; sti ; call rsp
0x0000000000195f1c : dec dword ptr [rax + 0x21] ; ret 0x7be9
0x00000000001959be : dec dword ptr [rax + 0x21] ; ret 0x8948
0x000000000008bfce : dec dword ptr [rax + 0x21] ; retf 0x2148
0x00000000001c238b : dec dword ptr [rax + 0x240001f4] ; jge 0x1c2393 ; jmp rsp
0x0000000000058c6f : dec dword ptr [rax + 0x29] ; ret
0x00000000000b534a : dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000b32f2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000000e8840 : dec dword ptr [rax + 0x29] ; ret 0x348
0x00000000000e8254 : dec dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000052f61 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000048ba9 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x0000000000162405 : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x0000000000095f15 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x00000000000f285c : dec dword ptr [rax + 0x29] ; retf 0xd285
0x0000000000047773 : dec dword ptr [rax + 0x39] ; ret
0x000000000008abdd : dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000013e291 : dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000016080d : dec dword ptr [rax + 0x39] ; ret 0xc789
0x000000000008ef1d : dec dword ptr [rax + 0x39] ; retf
0x0000000000095297 : dec dword ptr [rax + 0x39] ; retf 0x2a74
0x0000000000095269 : dec dword ptr [rax + 0x39] ; retf 0x4b74
0x00000000000748ad : dec dword ptr [rax + 0x39] ; retf 0x840f
0x000000000005d82c : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], 0x85 ; retf 0xffe4
0x0000000000141285 : dec dword ptr [rax + 0x40c60158] ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001bed8b : dec dword ptr [rax + 0x440000b4] ; in al, dx ; call rsp
0x00000000001c29c3 : dec dword ptr [rax + 0x44000220] ; xchg cl, bh ; call rsp
0x00000000001c3143 : dec dword ptr [rax + 0x4400024d] ; test edx, edi ; call rsp
0x00000000000587ee : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x0000000000073dc8 : dec dword ptr [rax + 0x63] ; add al, 0x81 ; add rax, rcx ; jmp rax
0x00000000000599d0 : dec dword ptr [rax + 0x63] ; add al, 0x86 ; add rax, rdx ; jmp rax
0x0000000000069f0f : dec dword ptr [rax + 0x63] ; add al, 0x87 ; add rax, rcx ; jmp rax
0x000000000005678b : dec dword ptr [rax + 0x63] ; ret 0x54e9
0x0000000000123a99 : dec dword ptr [rax + 0x63] ; ret 0x8b41
0x0000000000104c69 : dec dword ptr [rax + 0x63] ; ret 0xd289
0x000000000005a589 : dec dword ptr [rax + 0x63] ; retf
0x00000000001519bb : dec dword ptr [rax + 0x63] ; retf 0x1489
0x000000000007c92f : dec dword ptr [rax + 0x63] ; retf 0x3948
0x00000000000f05a1 : dec dword ptr [rax + 0x63] ; retf 0x8b4c
0x0000000000151997 : dec dword ptr [rax + 0x63] ; retf 0xfe83
0x00000000000cb037 : dec dword ptr [rax + 0x63] ; test byte ptr [rcx + rcx*4 - 0x31], 0x83 ; ret 0x4105
0x000000000007d102 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x00000000000b1609 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000009eed4 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000109316 : dec dword ptr [rax + 0xf] ; ret 0x148
0x000000000010f5a8 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000009b1a1 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x00000000000c0c78 : dec dword ptr [rax + 0xf] ; ret 0x8948
0x0000000000124c5c : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000001653f9 : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x00000000000300b9 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x0000000000131b6f : dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x00000000001318f5 : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000000409cb : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x000000000005d303 : dec dword ptr [rax + 1] ; clc ; jmp rax
0x000000000004f5de : dec dword ptr [rax + 1] ; ret
0x000000000006f9fc : dec dword ptr [rax + 1] ; ret 0x348
0x00000000000766e6 : dec dword ptr [rax + 1] ; ret 0x3b44
0x00000000000e9327 : dec dword ptr [rax + 1] ; ret 0x8948
0x00000000000cb520 : dec dword ptr [rax + 1] ; retf 0x2ae9
0x00000000000f5cdd : dec dword ptr [rax + 1] ; retf 0x7a83
0x000000000004aec9 : dec dword ptr [rax + 1] ; retf 0xc148
0x00000000000f5f57 : dec dword ptr [rax + 3] ; cmp byte ptr [r8 - 0x77], r9b ; retf 0x498b
0x0000000000198eb4 : dec dword ptr [rax + 9] ; ret
0x0000000000058273 : dec dword ptr [rax + 9] ; ret 0xb848
0x00000000001331cc : dec dword ptr [rax + 9] ; retf 0x8348
0x0000000000195be3 : dec dword ptr [rax + 9] ; retf 0xf883
0x0000000000198602 : dec dword ptr [rax + 9] ; retf 0xfe83
0x0000000000197702 : dec dword ptr [rax + 9] ; ror dword ptr [rbp + 0x39], cl ; retf 0x930f
0x00000000001bfb5b : dec dword ptr [rax + rdx] ; add dword ptr [rax], eax ; je 0x1bfb10 ; out dx, al ; jmp qword ptr [rax]
0x00000000001c317b : dec dword ptr [rax - 0x1bfffdb2] ; xchg dl, bh ; jmp qword ptr [rax]
0x000000000003f933 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000001b112f : dec dword ptr [rax - 0x2e000b90] ; jo 0x1b1133 ; call rcx
0x000000000004672b : dec dword ptr [rax - 0x39] ; ret
0x00000000000e6d5f : dec dword ptr [rax - 0x39] ; ret 0
0x00000000000e6d04 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x00000000000e6c77 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x00000000000e6bcc : dec dword ptr [rax - 0x39] ; ret 0xffff
0x00000000001c067b : dec dword ptr [rax - 0x3bfffeac] ; sbb al, 0xf3 ; call rsp
0x00000000001c234b : dec dword ptr [rax - 0x4bfffe0e] ; pop rsp ; clc ; call rax
0x00000000001181a7 : dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000002ab94 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x00000000000ef83d : dec dword ptr [rax - 0x73] ; add dword ptr [r9 + 0x39], r9d ; ret 0x860f
0x0000000000096368 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000145020 : dec dword ptr [rax - 0x75] ; cmp al, 0x24 ; call 0x212cf
0x000000000014501f : dec dword ptr [rax - 0x75] ; cmp al, 0x24 ; call 0x212d0
0x000000000012d1d7 : dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000248a9 : dec dword ptr [rax - 0x75] ; jge 0x2485d ; call 0x212cf
0x00000000001364fa : dec dword ptr [rax - 0x75] ; jl 0x13652a ; xor al, ch ; ret
0x000000000002346c : dec dword ptr [rax - 0x75] ; jne 0x23406 ; call rsi
0x0000000000065afb : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x00000000000a7a0a : dec dword ptr [rax - 0x75] ; pop rbp ; test al, 0x88 ; push rbp ; ret 0xb60f
0x00000000000a4cb0 : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x00000000000a5c3e : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x2e66
0x00000000000a52da : dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x000000000011d645 : dec dword ptr [rax - 0x75] ; push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000064abf : dec dword ptr [rax - 0x75] ; test dword ptr [rax - 0x7d000000], esp ; ret
0x00000000001b112b : dec dword ptr [rax - 0x77000b90] ; jo 0x1b112f ; call rcx
0x00000000001069b7 : dec dword ptr [rax - 0x77] ; adc ecx, dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000bd323 : dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000050c0e : dec dword ptr [rax - 0x77] ; cli ; sub rdx, r15 ; add rdx, rcx ; jmp 0x50c32
0x0000000000116579 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000006d860 : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000000522ec : dec dword ptr [rax - 0x77] ; fimul dword ptr [rax - 0x7d] ; ret
0x000000000015dd2c : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x0000000000051730 : dec dword ptr [rax - 0x77] ; out dx, al ; sub rsi, rdi ; call 0x9d9f9
0x000000000015c289 : dec dword ptr [rax - 0x77] ; out dx, eax ; call r14
0x0000000000155193 : dec dword ptr [rax - 0x77] ; out dx, eax ; call rax
0x000000000003035b : dec dword ptr [rax - 0x77] ; ret
0x00000000000e8766 : dec dword ptr [rax - 0x77] ; ret 0x12eb
0x000000000009d0f0 : dec dword ptr [rax - 0x77] ; ret 0x1b8
0x00000000001164be : dec dword ptr [rax - 0x77] ; ret 0x1c77
0x0000000000103f8e : dec dword ptr [rax - 0x77] ; ret 0x2477
0x000000000009680f : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000010f621 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x00000000000797f4 : dec dword ptr [rax - 0x77] ; ret 0x33e8
0x000000000011332a : dec dword ptr [rax - 0x77] ; ret 0x348
0x0000000000040271 : dec dword ptr [rax - 0x77] ; ret 0x3777
0x0000000000088f03 : dec dword ptr [rax - 0x77] ; ret 0x38b
0x0000000000051373 : dec dword ptr [rax - 0x77] ; ret 0x3dbe
0x0000000000112951 : dec dword ptr [rax - 0x77] ; ret 0x5174
0x000000000009eafb : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x00000000000e457c : dec dword ptr [rax - 0x77] ; ret 0x676
0x0000000000115cad : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000013a74f : dec dword ptr [rax - 0x77] ; ret 0x8148
0x000000000013a306 : dec dword ptr [rax - 0x77] ; ret 0x8348
0x0000000000072f40 : dec dword ptr [rax - 0x77] ; ret 0x840f
0x00000000000730a9 : dec dword ptr [rax - 0x77] ; ret 0x850f
0x000000000009658c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000009b11f : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000003eff2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x0000000000079729 : dec dword ptr [rax - 0x77] ; ret 0x8944
0x0000000000069fb7 : dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000e55c7 : dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e6ab3 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000001190d2 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x0000000000161632 : dec dword ptr [rax - 0x77] ; ret 0x8d49
0x00000000000a30b4 : dec dword ptr [rax - 0x77] ; ret 0x8d4a
0x000000000009e576 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000011ba7c : dec dword ptr [rax - 0x77] ; ret 0x9976
0x00000000001571d8 : dec dword ptr [rax - 0x77] ; ret 0x9beb
0x00000000000e6c51 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x0000000000105517 : dec dword ptr [rax - 0x77] ; ret 0xabf
0x000000000002abad : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x00000000000e6c3d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x000000000009e988 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x00000000000d64d7 : dec dword ptr [rax - 0x77] ; ret 0xc031
0x000000000010f683 : dec dword ptr [rax - 0x77] ; ret 0xcd77
0x000000000011b716 : dec dword ptr [rax - 0x77] ; ret 0xf1e8
0x000000000007f97a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000034d1f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x00000000001415dc : dec dword ptr [rax - 0x77] ; ret 0xfc3
0x00000000000d1f20 : dec dword ptr [rax - 0x77] ; ret 0xfe9
0x0000000000103234 : dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000000767d4 : dec dword ptr [rax - 0x77] ; retf
0x000000000015fdb3 : dec dword ptr [rax - 0x77] ; retf 0x3145
0x000000000005d884 : dec dword ptr [rax - 0x77] ; retf 0x8948
0x00000000001993a1 : dec dword ptr [rax - 0x77] ; retf 0x8949
0x00000000000854ee : dec dword ptr [rax - 0x77] ; retf 0x894c
0x0000000000105f0e : dec dword ptr [rax - 0x77] ; retf 0xabf
0x0000000000069cb0 : dec dword ptr [rax - 0x77] ; retf 0xb8
0x000000000009f7a1 : dec dword ptr [rax - 0x77] ; retf 0xfee9
0x00000000000ff5e7 : dec dword ptr [rax - 0x77] ; ror dword ptr [rcx - 0x73], 0x14 ; ret 0x1ceb
0x0000000000050f0f : dec dword ptr [rax - 0x77] ; sub rdx, r15 ; add rdx, rcx ; jmp 0x50f32
0x00000000000d29fc : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000001310cf : dec dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000000c6a2d : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xb
0x00000000001098bf : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000013be1b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 4
0x00000000001837fc : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x0000000000118a16 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x000000000010d246 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbp*2 + 0x48], 0x89 ; ret
0x000000000010ba19 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rcx + 0x48], 0x83 ; ret
0x000000000011f64d : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdi*2 + 0x48], 0x39 ; ret
0x00000000001238ee : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x000000000009fd46 : dec dword ptr [rax - 0x7d] ; clc ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000162654 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000002ddac : dec dword ptr [rax - 0x7d] ; ret
0x000000000005de38 : dec dword ptr [rax - 0x7d] ; ret 0x4420
0x00000000000289b1 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000002709b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000157118 : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x00000000000529cf : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000003526b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x000000000002ac84 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000003ce9c : dec dword ptr [rax - 0x7d] ; retf 0xeb0b
0x000000000008890f : dec dword ptr [rax - 0x7f] ; ret
0x00000000001736cc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000002c905 : dec dword ptr [rax - 9] ; ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x00000000001bf703 : dec dword ptr [rax] ; add byte ptr [rax], al ; and al, 0xaa ; in eax, dx ; call qword ptr [rax]
0x00000000001c1ad3 : dec dword ptr [rax] ; ret
0x00000000001c1c9b : dec dword ptr [rax] ; retf 1
0x00000000000a3e67 : dec dword ptr [rbp + 0x19] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000000a5853 : dec dword ptr [rbp + 0x39] ; ret
0x0000000000196bef : dec dword ptr [rbp + 9] ; retf
0x00000000001121c3 : dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000013fa29 : dec dword ptr [rbp + rcx*4 + 0x34] ; adc ecx, ebp ; ret 0xfffd
0x000000000003284f : dec dword ptr [rbp - 0x75] ; push rsp ; ret 0x4820
0x00000000000c8d8f : dec dword ptr [rbp - 0x77] ; dec byte ptr [rcx - 0x39] ; ret 0xffff
0x0000000000069a0c : dec dword ptr [rbp - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0xc148
0x00000000000638bd : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000000fbc3c : dec dword ptr [rbp - 0x77] ; ret 0xd349
0x000000000002580d : dec dword ptr [rbp - 0x77] ; retf
0x00000000000c930f : dec dword ptr [rbp - 0x77] ; retf 0x148
0x00000000000c8a9c : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a18d8 : dec dword ptr [rbp - 0x7b] ; in al, 0x75 ; retf 0x2b49
0x0000000000163159 : dec dword ptr [rbp - 0x7b] ; in al, 0xf ; sahf ; ret 0x8349
0x000000000009e7b3 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000000feb60 : dec dword ptr [rbp - 0x7cb7febd] ; ret
0x000000000010e832 : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009a77d : dec dword ptr [rbx + 0x90c2454] ; ret 0xaee9
0x00000000001318ad : dec dword ptr [rbx + 0xb491] ; add bh, dh ; ret 0
0x00000000000d566e : dec dword ptr [rbx + rbp + 0x1d] ; retf 0x3185
0x00000000001be6db : dec dword ptr [rbx + rcx*4] ; add byte ptr [rax], al ; test byte ptr [rax - 0x18], ch ; jmp qword ptr [rax]
0x0000000000083a3b : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ef8b5 : dec dword ptr [rcx + 0x39] ; ret 0x1776
0x00000000000ef899 : dec dword ptr [rcx + 0x39] ; ret 0x3376
0x00000000000ef87d : dec dword ptr [rcx + 0x39] ; ret 0x4f76
0x00000000000ef861 : dec dword ptr [rcx + 0x39] ; ret 0x6b76
0x00000000000f11a8 : dec dword ptr [rcx + 0x39] ; ret 0x840f
0x000000000005d468 : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x00000000000c067b : dec dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000019996a : dec dword ptr [rcx + 0x39] ; retf
0x000000000007e2fd : dec dword ptr [rcx + 0x415d5be8] ; pop rsp ; ret
0x000000000006776f : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x000000000006a0e9 : dec dword ptr [rcx + 0x63] ; retf
0x00000000000313fd : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000c94d9 : dec dword ptr [rcx + 0xf] ; ret 0x39e9
0x000000000019916f : dec dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x000000000007671b : dec dword ptr [rcx + 1] ; ret 0x3b45
0x00000000000f4ebe : dec dword ptr [rcx + 9] ; ret 0x8b49
0x000000000019597a : dec dword ptr [rcx + 9] ; retf 0xf883
0x000000000015d1cc : dec dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000015de7e : dec dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, rbp ; call r12
0x00000000000228bc : dec dword ptr [rcx + rcx*4 - 0xe] ; call 0x9eb66
0x000000000002c9bf : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x00000000001be2bb : dec dword ptr [rcx + rdi*2] ; add byte ptr [rax], al ; add eax, r13d ; jmp qword ptr [rax]
0x00000000000592be : dec dword ptr [rcx - 0x1b42763f] ; idiv bh ; call rax
0x0000000000046bb5 : dec dword ptr [rcx - 0x39] ; ret
0x000000000005594b : dec dword ptr [rcx - 0x39] ; ret 0xc001
0x00000000000c96c2 : dec dword ptr [rcx - 0x39] ; ret 0xffff
0x000000000006c18f : dec dword ptr [rcx - 0x61f4b] ; dec dword ptr [rax + 0x39] ; ret
0x000000000009366d : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x7d], r9b ; retf
0x000000000019c2b5 : dec dword ptr [rcx - 0x73] ; and byte ptr [rax - 0x7d], cl ; retf
0x0000000000112892 : dec dword ptr [rcx - 0x73] ; push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x000000000009f7a9 : dec dword ptr [rcx - 0x73] ; sub eax, 0xe8b1eb00 ; retf 0x954
0x00000000000f3508 : dec dword ptr [rcx - 0x75] ; adc byte ptr [r8 + 0x39], r9b ; retf
0x000000000004220f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000012d378 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x000000000012a924 : dec dword ptr [rcx - 0x75] ; push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000107f2b : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000019775f : dec dword ptr [rcx - 0x77] ; fisttp dword ptr [rbp - 0x77] ; retf 0x894d
0x0000000000068811 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000033ba9 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x00000000000a0c6e : dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x000000000006773c : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x00000000000eb8ce : dec dword ptr [rcx - 0x77] ; retf
0x0000000000093a1e : dec dword ptr [rcx - 0x7b] ; ret
0x0000000000104b8e : dec dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x000000000006be97 : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000197f9e : dec dword ptr [rcx - 0x7d] ; ret 0x4904
0x0000000000197ec8 : dec dword ptr [rcx - 0x7d] ; ret 0x4908
0x00000000000a36fb : dec dword ptr [rcx - 0x7d] ; ret 0x8306
0x00000000000766cb : dec dword ptr [rcx - 0x7d] ; rol byte ptr [rax + rcx*2], 1 ; ret 0x3b44
0x000000000012ff96 : dec dword ptr [rcx - 0x877b] ; inc dword ptr [rcx - 0x77] ; ret 0x66e9
0x00000000001b103f : dec dword ptr [rcx] ; or esi, esp ; jmp qword ptr [rax]
0x000000000007f10f : dec dword ptr [rcx] ; out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f110 : dec dword ptr [rcx] ; ret
0x00000000000fb3d5 : dec dword ptr [rcx] ; retf 0x5089
0x000000000012517e : dec dword ptr [rcx] ; setbe al ; ret
0x000000000005c063 : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x00000000001afe3b : dec dword ptr [rdi] ; jb 0x1afe34 ; jmp rax
0x00000000001afe3b : dec dword ptr [rdi] ; jb 0x1afe35 ; jmp rax
0x00000000001afe3a : dec dword ptr [rdi] ; jb 0x1afe36 ; jmp rax
0x000000000006c967 : dec dword ptr [rdi] ; lahf ; ret 0xd729
0x000000000010331a : dec dword ptr [rdi] ; lea esp, [rax - 0x7cffffff] ; ret 0x4802
0x00000000001259bd : dec dword ptr [rdi] ; mov bh, 4 ; js 0x12594e ; loopne 0x1259ce ; ret
0x00000000000306e6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x30677 ; loopne 0x306f7 ; ret
0x00000000000a7219 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret 0x8b48
0x000000000006463f : dec dword ptr [rdi] ; push rax ; ret 0xf41
0x000000000010666e : dec dword ptr [rdi] ; ret
0x0000000000024f3b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000013e224 : dec dword ptr [rdi] ; ret 0xc8e9
0x000000000009d997 : dec dword ptr [rdi] ; ret 0xfc3
0x0000000000031836 : dec dword ptr [rdi] ; retf 0xc089
0x000000000002ef98 : dec dword ptr [rdi] ; retf 0xd88
0x00000000000c6c14 : dec dword ptr [rdi] ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x000000000015e8dd : dec dword ptr [rdi] ; test ah, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000004a868 : dec dword ptr [rdi] ; test al, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x00000000000a6c71 : dec dword ptr [rdi] ; test byte ptr [rbx - 0x8fffff3], dl ; ret
0x000000000015ee0e : dec dword ptr [rdi] ; test byte ptr [rbx], bh ; add al, 0 ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x000000000002759f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000000a4e6c : dec dword ptr [rdi] ; test byte ptr [rsi], al ; sub dword ptr [rax], eax ; add bh, dh ; ret
0x000000000013e4bb : dec dword ptr [rdi] ; test dh, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000c6bf6 : dec dword ptr [rdi] ; test dl, bh ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000107c31 : dec dword ptr [rdi] ; test dword ptr [rdi - 0x76fffff6], ecx ; ret 0xead1
0x0000000000194ed0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000005cfc3 : dec dword ptr [rdi] ; xchg dh, bh ; or eax, 0x894c0000 ; retf 0x894c
0x0000000000110404 : dec dword ptr [rdi] ; xchg dword ptr [rip - 0x76ffffff], ecx ; ret
0x0000000000098c5f : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000001069c0 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd320
0x00000000000401dd : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000008486b : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000000ea812 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd009
0x0000000000087cde : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000006b80e : dec dword ptr [rdx + 0x63] ; add al, 0xa2 ; add rax, rdx ; jmp rax
0x00000000001bf0db : dec dword ptr [rdx + rcx*8 - 0x5e6c0000] ; in al, dx ; call rax
0x00000000001c0103 : dec dword ptr [rdx + rsi] ; add dword ptr [rax], eax ; add al, 0x38 ; int1 ; jmp qword ptr [rax]
0x00000000001bd7fb : dec dword ptr [rdx*4 - 0x6b4d0005] ; sti ; jmp qword ptr [rdx]
0x000000000002f8fa : dec dword ptr [rip - 0x7cb79d8c] ; ret
0x0000000000105d4d : dec dword ptr [rsi - 0x73] ; add al, 0x28 ; call r12
0x00000000001be723 : dec dword ptr [rsp + rcx*4] ; add byte ptr [rax], al ; push rsp ; push -0x18 ; jmp qword ptr [rax]
0x00000000001be513 : dec eax ; add dword ptr [rax], 0xe827a400 ; jmp rsp
0x00000000001b32c3 : dec eax ; cld ; stc ; jmp rax
0x00000000001bedb3 : dec eax ; mov ch, 0 ; add byte ptr [rsi + rbp - 0x14], dl ; jmp qword ptr [rax]
0x00000000001c368b : dec eax ; pop rax ; add dword ptr [rax], eax ; retf
0x00000000001b32f3 : dec eax ; std ; stc ; jmp rax
0x00000000001b1073 : dec esi ; or dh, ah ; jmp qword ptr [rax]
0x00000000001bd3bb : dec esi ; outsb dx, byte ptr [rsi] ; sti ; push qword ptr [rsi + rbp*2 - 5] ; jmp rsp
0x00000000001b0427 : dec esi ; retf
0x00000000001be4db : dec esp ; add byte ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; and ebp, eax ; jmp rax
0x00000000001bf903 : dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*8], dh ; in eax, dx ; jmp rax
0x00000000001bf3c3 : dec esp ; fild dword ptr [rax] ; add byte ptr [rax + rax], dl ; in eax, dx ; jmp rax
0x00000000001c0ce3 : dec esp ; jnp 0x1c0cf0 ; add byte ptr [rax + rax*2], al ; cmc ; jmp rax
0x00000000001c1093 : dec esp ; lea eax, [rcx] ; add byte ptr [rdi + rbp*4], ah ; cmc ; jmp rax
0x00000000001bf503 : dec esp ; loop 0x1bf50f ; add byte ptr [rax - 0x13], al ; jmp rax
0x00000000001c2293 : dec esp ; out dx, al ; add dword ptr [rax], eax ; je 0x1c22d7 ; clc ; jmp rax
0x00000000001c1abb : dec esp ; ret 1
0x00000000001c1ceb : dec esp ; retf
0x00000000001c3473 : dec esp ; sbb eax, dword ptr [rcx] ; add byte ptr [rcx + rdx - 3], dh ; jmp rax
0x0000000000040ee8 : dec qword ptr [r13 - 0x77] ; retf
0x00000000000b5349 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x00000000000b32f1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000004aec8 : dec qword ptr [rax + 1] ; retf 0xc148
0x00000000000b17c2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000a8091 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x0000000000113927 : div byte ptr [rcx] ; push qword ptr [rcx] ; shr al, 0xf ; ret
0x0000000000113875 : div byte ptr [rcx] ; shr al, 0xc3 ; ret
0x000000000012e109 : div byte ptr [rdx + rsi - 0x80] ; retf 0xa880
0x00000000000f45c3 : div byte ptr [rdx - 0xa] ; ret
0x000000000002cb01 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x2cb19 ; ret
0x00000000001428f2 : div byte ptr [rsp + rdx + 0x78] ; ret
0x00000000000255d2 : div dword ptr [rdi + rbp - 0x75] ; adc dword ptr [rdi], ecx ; retf 0xd285
0x000000000010f511 : div dword ptr [rdi - 0x14] ; ret
0x0000000000002ebd : div dword ptr [rsi + 0x10] ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x00000000000617c6 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x00000000001d2005 : div eax ; call rsi
0x00000000000a8308 : div ebx ; ret
0x00000000000bbb58 : div ecx ; mov eax, eax ; ret
0x00000000000bbb3f : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000617c5 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000011c1c6 : divps xmm1, xmm2 ; jmp 0x11c204
0x000000000011c1c5 : divsd xmm1, xmm2 ; jmp 0x11c205
0x0000000000002734 : enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x000000000004faa7 : enter -0x1f3f, 0x1e ; or eax, edx ; ret
0x00000000000a838e : enter -0x208c, -0xd ; ret
0x000000000018a6c7 : enter -0x23b, -0x29 ; ret 0xc085
0x00000000000b1c41 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000195044 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x0000000000107b47 : enter -0x677, -0x17 ; ret 0xfff2
0x0000000000002ca4 : enter -0x7042, -0x15 ; retf
0x00000000000bbab1 : enter -0x72b8, 0x35 ; retf
0x0000000000053d2b : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x00000000000b51c6 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x00000000000b31ae : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x00000000000b5346 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x00000000000b32ee : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000018a4a7 : enter -0x73b, 0x77 ; ret
0x000000000003e248 : enter -0x73f, 0x1f ; not eax ; and eax, edx ; ret
0x000000000011b831 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x000000000003182f : enter -0x74bc, -0x6b ; push 0xfffffff ; retf 0xc089
0x00000000000fd15b : enter -0x76b4, 0x1c ; retf 0x8941
0x0000000000064db2 : enter -0x76f9, 2 ; mov eax, 1 ; ret
0x00000000000a71e9 : enter -0x7780, 0x45 ; ret 0xb60f
0x000000000006000f : enter -0x7cb7, -0x40 ; add dword ptr [rcx], edi ; retf
0x0000000000052a17 : enter -0x7cb8, -0x3f ; add dword ptr [rax + 0x39], ecx ; retf
0x000000000016925c : enter -0x7f42, 0 ; add byte ptr [rax], al ; syscall
0x000000000012d6cf : enter -1, 9 ; ret
0x000000000018ade4 : enter -2, -1 ; ret
0x00000000001bcc25 : enter -4, 0x30 ; retf 0xfffc
0x00000000001af29d : enter -5, 0x40 ; retf 0xfffb
0x00000000001bf08d : enter 0, -0xc ; xchg eax, ebp ; in al, dx ; call rax
0x0000000000152f17 : enter 0, 0 ; call rax
0x0000000000152ed9 : enter 0, 0 ; jmp rcx
0x00000000001a3a9c : enter 0, 0 ; retf
0x00000000001a7af0 : enter 0, 0 ; retf 0
0x00000000001a4c48 : enter 0x10, 0 ; retf
0x00000000001d3c10 : enter 0x104, 0 ; pushfq ; test dl, dh ; call qword ptr [rdi]
0x000000000007d6ec : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x7d6c6
0x00000000001d7510 : enter 0x13d, 0 ; pop rsp ; pop rdx ; hlt ; call qword ptr [rdx]
0x000000000018e249 : enter 0x148, -8 ; vzeroupper ; ret
0x00000000001d8410 : enter 0x14c, 0 ; sbb al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001c368c : enter 0x158, 0 ; retf
0x00000000001d9710 : enter 0x15f, 0 ; cmp al, 0xf3 ; hlt ; call rsi
0x00000000001db310 : enter 0x17b, 0 ; sbb al, 0x99 ; cmc ; call qword ptr [rdi]
0x000000000003e3b9 : enter 0x280f, -0x3f ; ret
0x0000000000054af1 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018e5de : enter 0x2948, -0x30 ; vzeroupper ; ret
0x00000000000a9e4d : enter 0x31c3, -0x40 ; ret
0x000000000018a100 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x000000000012be84 : enter 0x3840, -0x2a ; cmovne eax, ecx ; ret
0x000000000012bef6 : enter 0x3840, -0x32 ; cmovne eax, edx ; ret
0x0000000000100f2d : enter 0x4108, -0x78 ; cmp r9b, r13b ; retf 0xfffb
0x000000000010e937 : enter 0x415d, 0x5c ; pop r13 ; pop r14 ; ret
0x00000000001568eb : enter 0x4289, 0x10 ; mov eax, 1 ; ret
0x00000000001567eb : enter 0x4289, 0xc ; mov eax, 1 ; ret
0x0000000000002970 : enter 0x42bc, 0x27 ; mov al, 0x1f ; retf
0x0000000000155f97 : enter 0x4789, 0x48 ; mov eax, 1 ; ret
0x0000000000155f04 : enter 0x4789, 0x54 ; mov eax, 1 ; ret
0x0000000000155fc4 : enter 0x4789, 0x58 ; mov eax, 1 ; ret
0x0000000000001b15 : enter 0x59e7, 0x5b ; ret 0x2a63
0x000000000009b32f : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000001ad19c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a4448 : enter 0xa, 0 ; retf
0x0000000000106e38 : enter 0xaeb, -0x7d ; ret 0xd101
0x00000000001bedb4 : enter 0xb5, 0 ; push rsp ; in al, dx ; jmp qword ptr [rax]
0x00000000001cf410 : enter 0xbc, 0 ; or al, 0xf3 ; sti ; jmp qword ptr [rax]
0x00000000001a4848 : enter 0xd, 0 ; retf
0x00000000000bd078 : enter 0xd75, -0x7b ; leave ; je 0xbd091 ; xor eax, eax ; ret
0x00000000001d2a10 : enter 0xf2, 0 ; sub al, 0x2f ; int1 ; jmp qword ptr [rcx]
0x00000000001d2b10 : enter 0xf3, 0 ; sbb al, 0x31 ; int1 ; jmp qword ptr [rcx]
0x00000000001d2c10 : enter 0xf4, 0 ; pushfq ; cmp al, 0xf1 ; jmp qword ptr [rdi]
0x0000000000103f28 : enter 0xf49, 0x46 ; int1 ; syscall
0x00000000001910c6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b0fa1 : enter 0xf66, -0x15 ; ret
0x00000000000ef7f6 : enter 0xf66, -0x2c ; ret
0x00000000000c076e : enter 0xf66, 0x62 ; ret
0x00000000000ef39c : enter 0xf66, 0x6f ; call 0xffffffffc3e30313
0x00000000001a7cf0 : enter 1, 0 ; retf 1
0x00000000001dff55 : enter 1, 0x18 ; push -9 ; call rax
0x00000000001dfff1 : enter 1, 0x2c ; jne 0x1dfff4 ; call rdi
0x00000000001a5000 : enter 2, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001a7ef0 : enter 2, 0 ; retf 2
0x00000000001a80f0 : enter 3, 0 ; retf 3
0x00000000001a82f0 : enter 4, 0 ; retf 4
0x00000000000b8bf4 : enter 5, 0 ; ret
0x00000000001a84f0 : enter 5, 0 ; retf 5
0x00000000001a86f0 : enter 6, 0 ; retf 6
0x00000000001a88f0 : enter 7, 0 ; retf 7
0x00000000001a8af0 : enter 8, 0 ; retf 8
0x00000000001a8cf0 : enter 9, 0 ; retf 9
0x000000000007e0d6 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000004fd83 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bc14 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a5ddc : fadd dword ptr [rbp + 0x38] ; sal dword ptr [rdx - 0x24], 0x48 ; mov edx, eax ; jmp 0xa5d79
0x00000000000a4e34 : fadd dword ptr [rcx + 0x38] ; clc ; jb 0xa4e1e ; mov rdx, rax ; jmp 0xa4dd4
0x00000000000ededb : fadd dword ptr [rcx + 0x5c] ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000015147e : fadd dword ptr [rcx + 0xf] ; retf 0xc80f
0x00000000001989c5 : fadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000bd096 : fadd dword ptr [rcx + rdi - 0x3f] ; cmovg eax, edx ; ret
0x0000000000069cec : fadd dword ptr [rcx - 0x77] ; ret
0x000000000002c4b5 : fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x00000000001237b4 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000617b3 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x00000000001c3d24 : fadd qword ptr [rip + 0x63880000] ; std ; jmp qword ptr [rdx]
0x000000000003ddf4 : fadd st(0) ; add rsp, 8 ; ret
0x000000000003dd84 : fadd st(0) ; ret
0x0000000000195668 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000019241e : fadd st(3) ; ret
0x000000000011c746 : fadd st(6), st(0) ; sbb eax, 0x9f0f30ff ; ret 0x8545
0x000000000011bf06 : faddp st(6) ; sbb eax, 0x9f0f30ff ; ret 0x8545
0x0000000000190c11 : fbld tbyte ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000013ddfe : fbstp tbyte ptr [rbp + rax - 0x18] ; ret 0xee34
0x000000000019a68b : fbstp tbyte ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000019a44c : fbstp tbyte ptr [rbp - 0x17] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000080f65 : fbstp tbyte ptr [rcx] ; rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; jmp rax
0x0000000000163c8e : fbstp tbyte ptr [rcx] ; shr al, 0x2a ; retf 0xfffa
0x00000000000d3aee : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000001ac7d8 : fcmovb st(0), st(3) ; ret
0x00000000000035d7 : fcmove st(0), st(5) ; retf
0x000000000018e6fb : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x0000000000103231 : fcmovnu st(0), st(6) ; int1 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001d1594 : fcom qword ptr [rcx - 0x10] ; call qword ptr [rdx]
0x000000000004c0b1 : fcom qword ptr [rip + 0xc8b4800] ; ret 0x8b49
0x000000000004ee68 : fcom qword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000001d5a94 : fcom st(0), st(2) ; jmp rsi
0x00000000000a842c : fcomi st(3) ; ret
0x00000000000a8390 : fcomip st(3) ; ret
0x00000000000a1917 : fcomp dword ptr [rbx + 0x48] ; cmovne eax, edx ; ret
0x0000000000084ece : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007f422 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000002cc9b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000034ba6 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001d5120 : fcomp dword ptr [rcx] ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x00000000001ad559 : fcomp dword ptr [rdx + 0x21] ; ret
0x000000000011c65b : fcomp dword ptr [rdx + 0x5b] ; ret
0x00000000001ab7c0 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000001b05ec : fcomp st(4) ; ljmp [rax + 0x37fff2cd] ; ret
0x00000000001de1b1 : fdecstp ; call qword ptr [rdi]
0x00000000001590f0 : fdiv dword ptr [rbp + 0x24] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001160b1 : fdiv dword ptr [rbp + 0x4b] ; add rsp, 0x70 ; pop rbx ; ret
0x00000000001c6b20 : fdiv dword ptr [rbx] ; add byte ptr [rax], al ; in al, dx ; in eax, 0xe7 ; call qword ptr [rdx]
0x0000000000195be1 : fdiv dword ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xf883
0x0000000000108ca2 : fdiv dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000008aa08 : fdiv dword ptr [rip + 0x4f0f4800] ; ret 0x8948
0x000000000007f78c : fdiv dword ptr [rsi - 0x38b7ffca] ; ret 0xffff
0x00000000001d79d4 : fdiv qword ptr [rcx - 0xc] ; jmp rsp
0x00000000001daa24 : fdiv qword ptr [rdx + 1] ; add al, bl ; jg 0x1daa27 ; call qword ptr [rax]
0x00000000001b036d : fdiv st(2) ; call rcx
0x0000000000103fe4 : fdiv st(3) ; ret
0x00000000001de129 : fdiv st(6) ; jmp qword ptr [rbx]
0x00000000001bdc5d : fdivp st(4) ; call rax
0x00000000001170e1 : fdivr dword ptr [rax + 0x10e] ; syscall
0x00000000001daa28 : fdivr dword ptr [rdi - 0xb] ; call qword ptr [rax]
0x000000000004fbda : fdivr qword ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001c24f9 : fdivr st(0) ; call qword ptr [rax]
0x00000000001b0449 : fdivr st(2), st(0) ; call qword ptr [rdi]
0x00000000001b05ed : fdivr st(2), st(0) ; ljmp [rax + 0x37fff2cd] ; ret
0x00000000001d2b24 : fdivr st(3), st(0) ; add byte ptr [rax], al ; cmp byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x00000000000bc09b : fdivr st(3), st(0) ; ret
0x00000000001cee59 : fdivr st(4) ; call qword ptr [rax]
0x00000000001aab15 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000182f3d : fdivr st(7) ; ret
0x00000000000b607e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000103232 : fdivrp st(1) ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001b0369 : fdivrp st(2) ; call qword ptr [rcx - 0x2e000d28]
0x00000000001b0425 : fdivrp st(2) ; dec esi ; retf
0x00000000001bf39d : fiadd dword ptr [rax] ; add byte ptr [rax + rdi*8 - 0x14], dl ; call rsp
0x00000000001bf3a5 : fiadd dword ptr [rax] ; add byte ptr [rbx + rdi*8 - 0x14], al ; jmp qword ptr [rax]
0x0000000000003730 : fiadd dword ptr [rax] ; pop rsp ; ret 0xf84d
0x00000000000a6853 : fiadd dword ptr [rbp + 0x38] ; retf 0x870f
0x0000000000045b18 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000056676 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8948
0x00000000000c0c76 : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8948
0x0000000000100a93 : fiadd dword ptr [rbp + 0x480f44c0] ; ret 0x1be
0x00000000000475ff : fiadd dword ptr [rbp - 0x7b] ; fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x0000000000195f65 : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000014f075 : fiadd dword ptr [rcx - 1] ; push rbp ; adc byte ptr [rcx], bh ; ret
0x00000000001d1609 : fiadd word ptr [rax] ; add ah, dl ; xchg eax, esi ; call qword ptr [rax]
0x00000000001d161d : fiadd word ptr [rax] ; add al, dl ; xchg eax, esi ; call qword ptr [rax]
0x00000000000bd343 : fiadd word ptr [rcx + 0x39] ; sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x000000000008956a : fiadd word ptr [rcx + rcx*4 - 0x11] ; mov eax, r9d ; syscall
0x0000000000159802 : ficom dword ptr [rdi] ; sub dword ptr [rax], eax ; pop rbx ; ret
0x00000000001ad3a6 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000019aa18 : fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x00000000000fd6d1 : fidiv dword ptr [rcx] ; imul byte ptr [rcx] ; retf 0x6348
0x0000000000001ad0 : fidiv word ptr [rbx] ; retf
0x0000000000198600 : fidiv word ptr [rcx] ; dec dword ptr [rax + 9] ; retf 0xfe83
0x0000000000114c92 : fidivr dword ptr [rax + 0x10f] ; syscall
0x00000000001662f5 : fidivr dword ptr [rax + 1] ; ret
0x000000000015ff90 : fidivr dword ptr [rax - 1] ; ret
0x0000000000051f7d : fidivr dword ptr [rdx - 1] ; mov eax, edx ; ret
0x0000000000109ff9 : fidivr word ptr [rcx] ; ret
0x0000000000002ea8 : fild dword ptr [rax + 0x2d37b741] ; retf 0x4a9a
0x0000000000051678 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x00000000001bf3d5 : fild dword ptr [rax] ; add ah, ah ; add ch, ch ; jmp qword ptr [rax]
0x00000000001bf3c5 : fild dword ptr [rax] ; add byte ptr [rax + rax], dl ; in eax, dx ; jmp rax
0x00000000000d9ef5 : fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000106690 : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x000000000009d376 : fild dword ptr [rbx - 0x7cb7fb1d] ; ret
0x00000000000f70ea : fild dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x0000000000195a3e : fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000a3e59 : fild dword ptr [rcx - 0x7d] ; ret
0x000000000012c134 : fild dword ptr [rcx - 0x80] ; clc ; sub eax, 0x39c3950f ; ret
0x000000000012e5dd : fild dword ptr [rcx - 0xa] ; and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x00000000001c1fb5 : fild dword ptr [rcx] ; add byte ptr [rax + rbx*4 - 9], al ; jmp qword ptr [rax]
0x00000000001c1fad : fild dword ptr [rcx] ; add byte ptr [rdi + rdx*4 - 9], dl ; jmp rsp
0x00000000000605a2 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x00000000000a6a8e : fild word ptr [rcx + 0x38] ; clc ; jb 0xa6a78 ; mov rdx, rax ; jmp 0xa6a38
0x0000000000123c15 : fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000131aad : fild word ptr [rcx] ; add al, 0 ; cmovne rax, rdx ; ret
0x0000000000091346 : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000029749 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000006d863 : fimul dword ptr [rax + 0x29] ; ret 0x8b48
0x000000000006113d : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000047934 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000061102 : fimul dword ptr [rax + 0x39] ; retf 0xe87f
0x000000000003e5b4 : fimul dword ptr [rax + 9] ; ret 0xb848
0x00000000001857f6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000019907d : fimul dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000522e3 : fimul dword ptr [rax - 0x7d] ; ret
0x0000000000158cbd : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x000000000013aadf : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000019807a : fimul dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x0000000000033d8c : fimul dword ptr [rbx + 0x4d8b005d] ; add al, 0xf ; retf
0x00000000000d4429 : fimul dword ptr [rcx + rcx*4 - 0x19] ; call 0xd0ea6
0x000000000009c85a : fimul dword ptr [rcx + rcx*4 - 0x1a] ; call rax
0x000000000009c2c8 : fimul dword ptr [rcx + rcx*4 - 0xa] ; mov rdi, r13 ; call rax
0x00000000001504c0 : fimul dword ptr [rcx - 0x77] ; retf
0x0000000000181ce2 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39e2c01
0x0000000000182d62 : fimul dword ptr [rcx - 0x7d] ; call 0xffffffffc39e3c81
0x00000000000f114d : fimul dword ptr [rcx - 0x7d] ; ret
0x000000000003db72 : fimul dword ptr [rcx] ; ret 0xc889
0x000000000012fb67 : fimul dword ptr [rdi] ; adc dword ptr [rbp - 0x78], eax ; call rax
0x00000000000c6bd8 : fimul dword ptr [rdi] ; mov byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000102ebe : fimul dword ptr [rdi] ; popfq ; ret
0x0000000000195989 : fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000250df : fimul word ptr [rax + 1] ; ret
0x0000000000040263 : fimul word ptr [rax - 0x75] ; cmp al, 0x24 ; mov eax, ecx ; syscall
0x00000000001015bb : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x79e8
0x0000000000116594 : fimul word ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000015dd2f : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000c698c : fimul word ptr [rax - 0x77] ; ret
0x00000000000c0fa1 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000006e0ff : fimul word ptr [rax - 0x7d] ; ret
0x0000000000052b5c : fimul word ptr [rbp + 0x11] ; retf
0x000000000011df82 : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x000000000009c6e2 : fimul word ptr [rcx + rcx*4 - 0x19] ; call rax
0x000000000004e35c : fist dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000009d7f1 : fistp dword ptr [rbp + 0xf] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000115dfa : fistp qword ptr [rax + 0x10] ; syscall
0x0000000000121dd2 : fistp qword ptr [rax + 0x113] ; syscall
0x0000000000121c5d : fistp qword ptr [rax + 0x114] ; syscall
0x00000000001157df : fistp qword ptr [rax + 0x115] ; syscall
0x0000000000121d0f : fistp qword ptr [rax + 0x116] ; syscall
0x00000000001219e6 : fistp qword ptr [rax + 0x119] ; syscall
0x000000000010e66f : fistp qword ptr [rax + 0x11] ; syscall
0x000000000011588d : fistp qword ptr [rax + 0x11d] ; syscall
0x000000000012322f : fistp qword ptr [rax + 0x120] ; syscall
0x0000000000116792 : fistp qword ptr [rax + 0x127] ; syscall
0x0000000000116842 : fistp qword ptr [rax + 0x128] ; syscall
0x000000000010e71f : fistp qword ptr [rax + 0x12] ; syscall
0x00000000001232e7 : fistp qword ptr [rax + 0x12b] ; syscall
0x0000000000121e7f : fistp qword ptr [rax + 0x130] ; syscall
0x000000000012338f : fistp qword ptr [rax + 0x133] ; syscall
0x000000000010f676 : fistp qword ptr [rax + 0x135] ; syscall
0x000000000011663f : fistp qword ptr [rax + 0x13] ; syscall
0x0000000000044901 : fistp qword ptr [rax + 0x13e] ; syscall
0x00000000001155e9 : fistp qword ptr [rax + 0x146] ; syscall
0x00000000001166df : fistp qword ptr [rax + 0x14] ; syscall
0x0000000000117037 : fistp qword ptr [rax + 0x17] ; syscall
0x000000000011bb51 : fistp qword ptr [rax + 0x1a] ; syscall
0x00000000000e49c8 : fistp qword ptr [rax + 0x23] ; syscall
0x00000000001228df : fistp qword ptr [rax + 0x2a] ; syscall
0x000000000012280f : fistp qword ptr [rax + 0x2b] ; syscall
0x0000000000122c8e : fistp qword ptr [rax + 0x2c] ; syscall
0x0000000000122a5e : fistp qword ptr [rax + 0x2d] ; syscall
0x0000000000122d2f : fistp qword ptr [rax + 0x2e] ; syscall
0x0000000000122bcf : fistp qword ptr [rax + 0x2f] ; syscall
0x00000000000e46ba : fistp qword ptr [rax + 0x3d] ; syscall
0x000000000012352f : fistp qword ptr [rax + 0x45] ; syscall
0x00000000001235e7 : fistp qword ptr [rax + 0x46] ; syscall
0x0000000000110a96 : fistp qword ptr [rax + 0x55] ; syscall
0x000000000003f22e : fistp qword ptr [rax + 0x82] ; syscall
0x0000000000121baf : fistp qword ptr [rax + 0xe8] ; syscall
0x00000000000e47e0 : fistp qword ptr [rax + 0xf7] ; syscall
0x000000000011017f : fistp qword ptr [rax + 1] ; syscall
0x0000000000114bf1 : fistp qword ptr [rax + 7] ; syscall
0x0000000000080c4d : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000083710 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x00000000001588b8 : fistp word ptr [rbx - 0x17] ; or dword ptr [rdx + 0x5b90ffec], ecx ; ret
0x000000000009b48c : fisttp dword ptr [rax + 0x21] ; retf
0x0000000000047602 : fisttp dword ptr [rax + 0xf] ; ret 0x8948
0x00000000001404c7 : fisttp dword ptr [rax + 1] ; ret
0x00000000001989c2 : fisttp dword ptr [rax + 9] ; fadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000019a688 : fisttp dword ptr [rax - 0x77] ; fbstp tbyte ptr [rbp - 0x16] ; pop rbx ; ret
0x000000000002cd17 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000019aa15 : fisttp dword ptr [rax - 0x77] ; fidiv dword ptr [rbp - 0x13] ; pop rbx ; ret
0x0000000000053931 : fisttp dword ptr [rax - 0x77] ; ret
0x000000000012c9a6 : fisttp dword ptr [rax - 0x77] ; ret 0x2b49
0x00000000000a1f14 : fisttp dword ptr [rax - 0x77] ; ret 0x86eb
0x00000000000a22d4 : fisttp dword ptr [rax - 0x77] ; ret 0x8ceb
0x000000000012409e : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2c72ba ; pop rbx ; ret
0x0000000000195a3b : fisttp dword ptr [rax - 0x7b] ; fild dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000000620dc : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000000556ab : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000000000a36d2 : fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000197a32 : fisttp dword ptr [rbp + 1] ; rol dword ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x0000000000104424 : fisttp dword ptr [rbp - 0x77] ; ret
0x0000000000197762 : fisttp dword ptr [rbp - 0x77] ; retf 0x894d
0x0000000000197b72 : fisttp dword ptr [rbp - 0x77] ; retf 0x8b4c
0x0000000000198321 : fisttp dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x0000000000195f62 : fisttp dword ptr [rcx + 9] ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000000000006d665 : fisttp dword ptr [rcx - 0x77] ; ret
0x000000000005394b : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000114c52 : fisttp dword ptr [rcx - 0x77] ; retf 0x8348
0x0000000000029427 : fisttp dword ptr [rcx - 0x7d] ; ret
0x0000000000067b20 : fisttp dword ptr [rdi] ; mov cs, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000f2c7e : fisttp dword ptr [rdi] ; mov cs, word ptr [rbx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000140280 : fisttp dword ptr [rdi] ; test ecx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000196130 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000987e2 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x000000000009be1b : fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x0000000000197bad : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x00000000000d8f8e : fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x00000000001505fd : fisttp qword ptr [rax - 0x3f] ; jmp 0xffffffffcb164f10
0x00000000000c9f67 : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000a6c1d : fisttp qword ptr [rax - 0x77] ; ret 0x99eb
0x000000000003528e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x000000000002c07a : fisttp qword ptr [rdi] ; ret 0xc389
0x000000000012965c : fisttp word ptr [rax + 0x29] ; retf 0x894c
0x000000000003d182 : fisttp word ptr [rax - 0x39] ; ret
0x00000000001531ec : fisttp word ptr [rax - 0x75] ; and al, 0x28 ; call rcx
0x00000000001533df : fisttp word ptr [rax - 0x75] ; push rsp ; and al, 0x20 ; call rdx
0x0000000000149dcf : fisttp word ptr [rax - 0x77] ; and al, 8 ; call r12
0x0000000000069a0f : fisttp word ptr [rax - 0x77] ; ret 0xc148
0x00000000000a8961 : fisttp word ptr [rax - 0x77] ; ret 0xf6e8
0x000000000009f09e : fisttp word ptr [rax - 0x77] ; retf 0x8948
0x00000000000539cf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000001108ed : fisttp word ptr [rcx + 0x3b8c2] ; add byte ptr [rax], al ; syscall
0x000000000011722d : fisttp word ptr [rcx + 0x4ab8c2] ; add byte ptr [rax], al ; syscall
0x00000000001172dd : fisttp word ptr [rcx + 0x4bb8c2] ; add byte ptr [rax], al ; syscall
0x0000000000149fd9 : fisttp word ptr [rcx + rcx*4 - 0x17] ; call r10
0x000000000018b78d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000103fc0 : fisub dword ptr [rcx + rcx*4 + 0x10] ; mov eax, 0xffffffff ; ret
0x0000000000190fe1 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000197f23 : fisub dword ptr [rsi - 0x7f] ; ret 0x7fff
0x0000000000190ce1 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000d3aff : fisubr dword ptr [rcx] ; ret 0x428d
0x00000000000de829 : fisubr dword ptr [rcx] ; ret 0xb8
0x000000000006b64b : fld dword ptr [rax - 0x78f0dd07] ; ret
0x00000000001d10b9 : fld dword ptr [rax] ; add byte ptr [rdx + rbx - 0x10], dl ; jmp qword ptr [rcx]
0x00000000000a6850 : fld dword ptr [rcx - 0x77] ; fiadd dword ptr [rbp + 0x38] ; retf 0x870f
0x000000000009d886 : fld dword ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000001dd8 : fld dword ptr [rdx + 0x6b865524] ; retf
0x0000000000053c44 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x0000000000114d44 : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000ef531 : fld qword ptr [rbx + 0x394903e5] ; retf 0xf4c
0x00000000001ab801 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000018e3e2 : fld st(5) ; std ; xlatb ; retf 0xfdc5
0x000000000018e442 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000d8de5 : fld xword ptr [rcx] ; ret
0x00000000000039c2 : fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x000000000003dd80 : fld xword ptr [rsp + 8] ; fadd st(0) ; ret
0x000000000003dd08 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000003dc54 : fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x000000000003dbb9 : fld xword ptr [rsp + 8] ; ret
0x000000000003dc18 : fld xword ptr [rsp - 0x18] ; ret
0x00000000000d0329 : fldenv [rsi + 0xf] ; jbe 0xd0386 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000abb59 : fldenv [rsi + 0xf] ; je 0xabbb6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000abe37 : fldenv [rsi + 0xf] ; je 0xabe94 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000191061 : fldenv [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aba51 : fldenv [rsi + 0xf] ; xlatb ; ret
0x00000000000d071c : fldenv [rsi + 0xf] ; xlatb ; retf 0xf66
0x0000000000029133 : fldl2t ; retf 0xfffd
0x00000000000640ec : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000009c02a : fmul dword ptr [eax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5b74
0x0000000000052bc4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000198c12 : fmul dword ptr [rax + 0x11] ; ret 0x2bf
0x00000000001988f7 : fmul dword ptr [rax + 0x11] ; ret 0x8148
0x0000000000198324 : fmul dword ptr [rax + 0x11] ; ret 0xf48
0x00000000001989ce : fmul dword ptr [rax + 0x19] ; ret 0x11e9
0x00000000001981e0 : fmul dword ptr [rax + 0x19] ; ret 0x1f0f
0x000000000010ec0e : fmul dword ptr [rax + 0x21] ; ret
0x000000000009c02b : fmul dword ptr [rax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5b74
0x000000000009253f : fmul dword ptr [rax + 0x39] ; ret
0x000000000009c02f : fmul dword ptr [rax + 0x39] ; ret 0x5b74
0x00000000000c5864 : fmul dword ptr [rax + 0x39] ; ror dword ptr [rdi], 0x8f ; retf
0x00000000000bb067 : fmul dword ptr [rax + 9] ; retf 0x4466
0x000000000004c469 : fmul dword ptr [rax - 0x39] ; ret
0x00000000000bd109 : fmul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000fffbe : fmul dword ptr [rax - 0x73] ; push rsp ; ret
0x0000000000086a78 : fmul dword ptr [rax - 0x77] ; ret
0x000000000019a1df : fmul dword ptr [rax - 0x7b] ; leave ; je 0x19a1ed ; call rcx
0x00000000000d52fc : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000027dba : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000001e3aa4 : fmul dword ptr [rax] ; add byte ptr [rax], al ; or al, 3 ; add byte ptr [rax], al ; retf
0x00000000001d66a8 : fmul dword ptr [rbx] ; hlt ; jmp qword ptr [rcx]
0x000000000015efde : fmul dword ptr [rcx + 0x39] ; ret 0x820f
0x00000000001c64e8 : fmul dword ptr [rdi] ; cli ; call qword ptr [rdi]
0x000000000006598f : fmul dword ptr [rdi] ; ret
0x000000000008048a : fmul dword ptr [rdi] ; test bh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000198319 : fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000004dddc : fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x00000000000c8b8a : fmul qword ptr [rax - 0x75] ; pop rbp ; mov al, 0x89 ; ret 0xff25
0x0000000000073e60 : fmul qword ptr [rax - 0x77] ; ret
0x00000000000a2c11 : fmul qword ptr [rax - 0x77] ; ret 0x87eb
0x00000000000a5de1 : fmul qword ptr [rax - 0x77] ; ret 0x8aeb
0x00000000000a4e39 : fmul qword ptr [rax - 0x77] ; ret 0x8deb
0x00000000000a6a93 : fmul qword ptr [rax - 0x77] ; ret 0x97eb
0x00000000000e023b : fmul qword ptr [rax - 0x7d] ; ret
0x00000000001cc124 : fmul qword ptr [rcx + 0x3db80000] ; in al, dx ; call qword ptr [rdi]
0x00000000000a8c09 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000aca3f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000005af1f : fmul qword ptr [rdi] ; lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000002c278 : fmul qword ptr [rdi] ; ret 0xc389
0x00000000001d0124 : fmul st(1), st(0) ; add byte ptr [rax], al ; fsub st(5) ; out dx, al ; jmp qword ptr [rax]
0x00000000001cd964 : fmul st(5), st(0) ; cld ; call qword ptr [rdx]
0x000000000018e3e0 : fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000002a8dd : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x2a8a4
0x00000000000025a6 : fnstenv [rdx + rdx - 0x38975393] ; ret
0x000000000003ddc6 : fnstsw ax ; fstp st(0) ; and eax, 0x200 ; ret
0x0000000000032ba3 : fnstsw dword ptr [r11] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000052542 : fnstsw dword ptr [rax + 1] ; ret
0x00000000001ad04a : fnstsw dword ptr [rbx + rdx*4] ; in al, dx ; retf 0xae32
0x0000000000032ba4 : fnstsw dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000003cfe9 : fpatan ; ret
0x00000000001bdc4d : frndint ; call qword ptr [rax - 0x1f000326]
0x0000000000190de1 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000003dd0c : fscale ; fstp st(1) ; ret
0x0000000000003bad : fst dword ptr [rbx + 0x55f20b1c] ; jg 0x3c26 ; xchg eax, ebp ; retf 0x10bf
0x000000000008508b : fstp dword ptr [rbp + 0x36] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001ab4e7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000001464c6 : fstp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a0d4e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000003ddc8 : fstp st(0) ; and eax, 0x200 ; ret
0x00000000001ab860 : fstp st(0) ; ret 0xde5d
0x000000000003dd0e : fstp st(1) ; ret
0x00000000001aaa2b : fstp st(3), st(0) ; retf 0xeb83
0x00000000001b03a4 : fstp st(6), st(0) ; bnd call rbp ; ret
0x00000000001b0424 : fstp st(6), st(0) ; dec esi ; retf
0x000000000004fc51 : fstp xword ptr [rcx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000004fb67 : fstp xword ptr [rcx] ; add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000003dc52 : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x000000000003dcce : fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x000000000003dc16 : fstp xword ptr [rdi] ; fld xword ptr [rsp - 0x18] ; ret
0x000000000003f198 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x000000000003f168 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x00000000001da298 : fsub dword ptr [rdx - 0xb] ; jmp qword ptr [rbx]
0x000000000003ddc9 : fsub dword ptr [rip + 0x200] ; ret
0x00000000001910e1 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000064367 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x00000000000b2024 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001ace18 : fsub qword ptr [rbx] ; sub dword ptr [rsi], 0x76 ; retf
0x00000000001cd924 : fsub qword ptr [rcx - 0x1a380000] ; in al, dx ; call qword ptr [rdi]
0x00000000001dcfd4 : fsub qword ptr [rdi - 0xa] ; jmp rdx
0x00000000000bb1ab : fsub qword ptr [rsi + 0xf] ; jmp 0xbb177
0x0000000000190ee1 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b10bc : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000019ac7b : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001c3b21 : fsub st(5) ; jmp qword ptr [rbx]
0x00000000001d0128 : fsub st(5) ; out dx, al ; jmp qword ptr [rax]
0x00000000001bfd59 : fsub st(7), st(0) ; call rax
0x000000000014a8a7 : fsubp st(0) ; ret
0x000000000014c730 : fsubp st(0) ; retf 0xed4a
0x00000000001bec09 : fsubp st(3) ; jmp rax
0x00000000001dd044 : fsubr qword ptr [rcx - 0xa] ; call rax
0x00000000000cbc1b : fsubr qword ptr [rcx] ; ret
0x00000000001ca8cd : fsubr st(3) ; call rsp
0x0000000000110744 : fsubr st(3) ; ret 0xf66
0x00000000001d1b24 : fsubr st(3), st(0) ; add byte ptr [rax], al ; in eax, 0xf0 ; call qword ptr [rbx]
0x00000000001c4fd1 : fsubr st(6), st(0) ; call qword ptr [rax]
0x00000000001c4ff9 : fsubr st(6), st(0) ; call qword ptr [rsi]
0x00000000001c500d : fsubr st(6), st(0) ; jmp rdx
0x000000000003dc58 : fsubrp st(1) ; ret
0x00000000001ad538 : fucom st(5) ; loop 0x1ad591 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001c6901 : fucom st(7) ; call qword ptr [rsi]
0x00000000000f0bb4 : fucomi st(1) ; retf 0xfffc
0x00000000000f09b4 : fucomi st(1) ; retf 0xfffe
0x0000000000024792 : fucomip st(0) ; cwde ; retf 0xffff
0x0000000000112359 : fucomip st(0) ; int1 ; out dx, al ; lock dec dword ptr [rax + 0x39] ; ret
0x0000000000133ebb : fucomip st(0) ; jmp rbx
0x00000000000818d4 : fucomip st(0) ; neg byte ptr [rip - 0x3d770000] ; jmp 0x81874
0x0000000000114766 : fucomip st(0) ; pop rsp ; retf
0x0000000000164744 : fucomip st(0) ; push rsi ; ret 0xfffa
0x000000000011f7a7 : fucomip st(0) ; ret
0x00000000000efee8 : fucomip st(0) ; ret 0x34f
0x0000000000032e38 : fucomip st(0) ; ret 0xfee2
0x000000000009d77f : fucomip st(0) ; retf
0x000000000014ba90 : fucomip st(0) ; retf 0x1f
0x0000000000125f30 : fucomip st(0) ; retf 0xefb1
0x00000000000f6cf0 : fucomip st(0) ; retf 0xf2a5
0x000000000007e2f8 : fucomip st(0) ; retf 0xfa2f
0x00000000000e6af1 : fucomip st(0) ; stc ; push rsp ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000e6395 : fucomip st(0) ; xor eax, 0x89000296 ; ret 0xc748
0x00000000001bec19 : fucomip st(3) ; call qword ptr [rax]
0x00000000001acb7e : fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000001c3edc : hlt ; adc al, 0xe6 ; jmp qword ptr [rdx]
0x0000000000188d49 : hlt ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001c33cc : hlt ; adc al, byte ptr [rcx] ; add ah, al ; retf 0xfffc
0x00000000001c0250 : hlt ; adc esi, edx ; call qword ptr [rax]
0x00000000001d2c11 : hlt ; add byte ptr [rax], al ; pushfq ; cmp al, 0xf1 ; jmp qword ptr [rdi]
0x000000000015e8e0 : hlt ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001c238d : hlt ; add dword ptr [rax], eax ; and al, 0x7d ; clc ; jmp rsp
0x00000000001e2b59 : hlt ; add dword ptr [rax], eax ; mov ah, 0x37 ; clc ; call qword ptr [rdi]
0x0000000000189c49 : hlt ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000659f7 : hlt ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000001b0e92 : hlt ; call qword ptr [rax]
0x00000000001d7e66 : hlt ; call qword ptr [rcx]
0x00000000001d6e32 : hlt ; call qword ptr [rdx]
0x00000000001d62a2 : hlt ; call qword ptr [rsi]
0x000000000011d781 : hlt ; call r15
0x00000000001b0e26 : hlt ; call rax
0x00000000001b1116 : hlt ; call rcx
0x00000000001d75de : hlt ; call rsi
0x00000000001c0882 : hlt ; call rsp
0x00000000000a833b : hlt ; cmp ecx, esi ; je 0xa8336 ; ret
0x00000000001b112e : hlt ; dec dword ptr [rax - 0x2e000b90] ; jo 0x1b1134 ; call rcx
0x00000000001b112a : hlt ; dec dword ptr [rax - 0x77000b90] ; jo 0x1b1130 ; call rcx
0x000000000010c4a9 : hlt ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e0693 : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001b103e : hlt ; dec dword ptr [rcx] ; or esi, esp ; jmp qword ptr [rax]
0x00000000001b1072 : hlt ; dec esi ; or dh, ah ; jmp qword ptr [rax]
0x00000000001bf3d4 : hlt ; fild dword ptr [rax] ; add ah, ah ; add ch, ch ; jmp qword ptr [rax]
0x00000000001c6b4c : hlt ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001d018c : hlt ; in eax, 0xee ; call qword ptr [rax]
0x00000000001bf830 : hlt ; in eax, dx ; jmp qword ptr [rax]
0x00000000000d9db1 : hlt ; inc dword ptr [rbp - 0x6a7bf040] ; retf 0xffff
0x00000000001b0fee : hlt ; inc dword ptr [rbx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000001c08ca : hlt ; inc eax ; add dword ptr [eax], eax ; in al, 0x60 ; hlt ; call rsp
0x00000000001c3128 : hlt ; jg 0x1c3128 ; call qword ptr [rax]
0x00000000001b0fd6 : hlt ; jmp qword ptr [rax + 0x20fff40b]
0x00000000001b0f9a : hlt ; jmp qword ptr [rax]
0x00000000001b0ffa : hlt ; jmp qword ptr [rbx]
0x00000000001d61fa : hlt ; jmp qword ptr [rcx]
0x00000000001d723a : hlt ; jmp qword ptr [rdx]
0x00000000001d6a1a : hlt ; jmp qword ptr [rsi]
0x00000000001d70ae : hlt ; jmp rax
0x00000000001d74de : hlt ; jmp rcx
0x00000000001c095a : hlt ; jmp rsp
0x0000000000195545 : hlt ; jne 0x195667 ; ret
0x0000000000195544 : hlt ; jne 0x195668 ; ret
0x000000000011c656 : hlt ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001c0972 : hlt ; lcall [rbx + rbp*2 - 0x4d0bffff] ; hlt ; jmp qword ptr [rax]
0x00000000001b0e8a : hlt ; lcall [rbx - 0x64000bf6] ; or dh, ah ; call qword ptr [rax]
0x00000000001b0e1e : hlt ; lcall [rbx - 0x64000bf6] ; or dh, ah ; call rax
0x00000000001b10ce : hlt ; lcall [rdx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000001b0fea : hlt ; lcall [rsi + 0xb] ; hlt ; inc dword ptr [rbx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000001c0952 : hlt ; ljmp [rax + 0x400016a] ; lodsd eax, dword ptr [rsi] ; hlt ; jmp rsp
0x00000000001b107a : hlt ; ljmp [rbp + 0x20fff40a] ; or al, 0xf4 ; jmp qword ptr [rax]
0x00000000001c087a : hlt ; ljmp [rsi + 0x5f640001] ; hlt ; call rsp
0x00000000001c1998 : hlt ; mov ah, 0xf6 ; call rsp
0x00000000000a859a : hlt ; mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000a84cd : hlt ; mov byte ptr [rdi + 4], dl ; ret
0x00000000001c0978 : hlt ; mov dl, 0xf4 ; jmp qword ptr [rax]
0x0000000000173b0a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e7be : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001c0618 : hlt ; mov ebx, 0x50d4fff2 ; add dword ptr [rax], eax ; ret
0x00000000000e4dfe : hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x0000000000194b53 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000002738 : hlt ; out 0xdf, eax ; syscall
0x00000000001d0d4c : hlt ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001c2ce0 : hlt ; out dx, eax ; stc ; jmp rax
0x00000000001da03c : hlt ; push 0x60b00001 ; cmc ; jmp qword ptr [rsi]
0x00000000001b10be : hlt ; push qword ptr [rsi + 0xa] ; hlt ; jmp qword ptr [rax]
0x000000000009dd28 : hlt ; ret
0x00000000001c1acc : hlt ; ret 1
0x00000000001c2bb8 : hlt ; retf
0x00000000001cf93c : hlt ; rol dword ptr [rax], 0 ; xor ch, 0xfb ; call qword ptr [rdx]
0x00000000001be490 : hlt ; sbb ebp, eax ; call qword ptr [rax]
0x000000000004fbd0 : hlt ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000001aba23 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000194b57 : hlt ; sub eax, edx ; ret
0x00000000001bf5d8 : hlt ; sub ebp, ebp ; jmp rsp
0x0000000000003e39 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001dbc3c : hlt ; test byte ptr [rcx], al ; add byte ptr [rax - 0x34], al ; cmc ; jmp rsp
0x00000000001bf6b8 : hlt ; xchg ch, ch ; call rax
0x00000000001bf090 : hlt ; xchg eax, ebp ; in al, dx ; call rax
0x00000000001c693c : hlt ; xor dword ptr [rax], eax ; add al, ah ; fucom st(7) ; call qword ptr [rsi]
0x00000000001c3684 : hlt ; xor eax, dword ptr [rcx] ; add ah, ah ; retf 0xfffd
0x00000000001bdc9d : idiv ah ; jmp rax
0x00000000000592c4 : idiv bh ; call rax
0x00000000001c184a : idiv bh ; cld ; mov cl, 1 ; add byte ptr [rsp + rdi*2 - 0xa], ah ; call qword ptr [rax]
0x0000000000047771 : idiv bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000a52d8 : idiv bh ; dec dword ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x000000000012cf85 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000050c86 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000066552 : idiv bh ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000059ea7 : idiv bh ; jmp qword ptr [rax]
0x00000000001c134a : idiv bh ; mov esp, 0x400019e ; sbb esi, esi ; call rax
0x00000000000bd127 : idiv bh ; mov rax, rbx ; pop rbx ; ret
0x00000000001c12a2 : idiv bh ; rcr byte ptr [rdx + 0x5f40001], 0xf6 ; call qword ptr [rax]
0x00000000001dc782 : idiv bh ; ret 0
0x00000000001dc59e : idiv bh ; retf 0
0x00000000001c1832 : idiv bh ; sal byte ptr [rcx + 0x7ae40001], 0xf6 ; call rsp
0x00000000001b16f4 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000001156db : idiv byte ptr [rax + 0x118] ; syscall
0x00000000000fd653 : idiv byte ptr [rcx] ; retf
0x0000000000024f36 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x000000000015e7e6 : idiv byte ptr [rip - 0x76b80000] ; ret
0x00000000001335c6 : idiv ch ; add eax, 0x440f4800 ; ret 0x90c3
0x00000000000bd126 : idiv dil ; mov rax, rbx ; pop rbx ; ret
0x00000000001da16d : idiv eax ; jmp qword ptr [rbx]
0x00000000000a891c : idiv edi ; add rsp, 8 ; ret
0x0000000000059f36 : idiv edi ; call qword ptr [rax]
0x00000000001c210a : idiv edi ; clc ; in eax, 1 ; add byte ptr [rcx + rbp*8 - 9], dh ; jmp qword ptr [rax]
0x00000000001c1e3a : idiv edi ; cld ; rol byte ptr [rcx], cl ; add ah, al ; movsxd rsi, edi ; call qword ptr [rax]
0x0000000000123a97 : idiv edi ; dec dword ptr [rax + 0x63] ; ret 0x8b41
0x000000000005a587 : idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x00000000001992c1 : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000067108 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000001c1aca : idiv edi ; hlt ; ret 1
0x0000000000123ba2 : idiv edi ; inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000066398 : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000001c1afa : idiv edi ; insb byte ptr [rdi], dx ; ret
0x00000000001c1baa : idiv edi ; mov al, 0xc5 ; add dword ptr [rax], eax ; push rsp ; sub edi, esi ; call rsp
0x00000000001c1aaa : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001c1aa2 : idiv edi ; nop ; ret 1
0x00000000001c1af2 : idiv edi ; pop rax ; ret
0x00000000001c1e22 : idiv edi ; rcl dl, 1 ; add byte ptr [rbx - 9], ah ; call rsp
0x00000000001c1aea : idiv edi ; ret
0x00000000001df662 : idiv edi ; ret 2
0x00000000001e08a6 : idiv edi ; retf
0x00000000001df3ce : idiv edi ; retf 0
0x00000000001c1cba : idiv edi ; retf 1
0x00000000001c1c1a : idiv edi ; rol bh, 1 ; add ah, dl ; xor edi, esi ; call rsp
0x00000000001c2092 : idiv edi ; xchg eax, esp ; loop 0x1c20a1 ; add byte ptr [rax + rcx*8 - 9], dh ; jmp rax
0x00000000001c1b0a : idiv edi ; xchg eax, esp ; ret
0x0000000000043946 : idiv esi ; ret
0x00000000001dcc99 : idiv r15b ; ret 0
0x00000000001df661 : idiv r15d ; ret 2
0x00000000001c1cb9 : idiv r15d ; retf 1
0x0000000000043945 : idiv rsi ; ret
0x000000000007a347 : imul al ; movsxd rdx, dword ptr [rcx - 0x5b160001] ; retf
0x00000000000e00e0 : imul al ; retf 0xf411
0x000000000003d950 : imul al ; retf 0xfe36
0x0000000000154dac : imul al ; scasb al, byte ptr [rdi] ; ret
0x00000000001bec99 : imul bl ; jmp rax
0x00000000000fd6d3 : imul byte ptr [rcx] ; retf 0x6348
0x00000000000bf3b7 : imul cl ; ret 0xfffc
0x00000000000b5878 : imul cl ; ret 8
0x00000000000fd317 : imul dword ptr [rcx] ; ret
0x00000000000e08ba : imul eax ; jo 0xe0921 ; or byte ptr [rax], al ; mov rax, r14 ; call rax
0x0000000000132da7 : imul eax ; ret
0x000000000005dbc0 : imul eax ; retf 0x302
0x00000000001ca09d : imul eax, dword ptr [rax], 0xebabd000 ; call qword ptr [rsi]
0x00000000001ca11d : imul eax, dword ptr [rax], 0xebac7000 ; call qword ptr [rdx]
0x00000000000d3df9 : imul eax, dword ptr [rcx + rbp - 6], 0x39 ; ret 0x257e
0x00000000001da2bd : imul eax, dword ptr [rcx], 0 ; adc byte ptr [rbx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001936b1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000001da295 : imul eax, dword ptr [rcx], 0 ; fsub dword ptr [rdx - 0xb] ; jmp qword ptr [rbx]
0x00000000001c0975 : imul eax, dword ptr [rcx], 0 ; hlt ; mov dl, 0xf4 ; jmp qword ptr [rax]
0x00000000001da2e5 : imul eax, dword ptr [rcx], 0 ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001da2d1 : imul eax, dword ptr [rcx], 0 ; sub al, 0x63 ; cmc ; jmp qword ptr [rbx]
0x00000000000a14c6 : imul eax, dword ptr [rcx], 0x5d5b8675 ; ret
0x00000000000ab7e7 : imul eax, dword ptr [rcx], 0x894d0000 ; retf
0x00000000001da051 : imul eax, dword ptr [rcx], 0xf560cc00 ; jmp qword ptr [rbx]
0x00000000001da065 : imul eax, dword ptr [rcx], 0xf560e800 ; jmp qword ptr [rbx]
0x00000000001da079 : imul eax, dword ptr [rcx], 0xf5610400 ; jmp qword ptr [rbx]
0x00000000001da08d : imul eax, dword ptr [rcx], 0xf5612000 ; jmp qword ptr [rbx]
0x00000000001da0a1 : imul eax, dword ptr [rcx], 0xf5613c00 ; jmp qword ptr [rbx]
0x00000000001da0b5 : imul eax, dword ptr [rcx], 0xf5615800 ; jmp qword ptr [rbx]
0x00000000001da0c9 : imul eax, dword ptr [rcx], 0xf5617400 ; jmp qword ptr [rbx]
0x00000000001da0dd : imul eax, dword ptr [rcx], 0xf5619000 ; jmp qword ptr [rbx]
0x00000000001da0f1 : imul eax, dword ptr [rcx], 0xf561ac00 ; jmp qword ptr [rbx]
0x00000000001da105 : imul eax, dword ptr [rcx], 0xf561c800 ; jmp qword ptr [rbx]
0x00000000001da119 : imul eax, dword ptr [rcx], 0xf561e400 ; jmp qword ptr [rbx]
0x00000000001da12d : imul eax, dword ptr [rcx], 0xf5620000 ; jmp qword ptr [rbx]
0x00000000001da141 : imul eax, dword ptr [rcx], 0xf5621c00 ; jmp qword ptr [rbx]
0x00000000000d3957 : imul eax, dword ptr [rdi], 0 ; add byte ptr [rdi], cl ; ret 0xf8c1
0x00000000000ab1e7 : imul eax, dword ptr [rdi], 0x894d0000 ; retf
0x00000000001956e2 : imul eax, edx ; shr rax, 0x38 ; ret
0x00000000001595eb : imul ebp, dword ptr [rcx], 0 ; mov qword ptr fs:[rax], rdx ; ret
0x000000000019a6f7 : imul ebp, eax, -1 ; ret
0x000000000016c7a3 : imul ebp, ebx, 0x39480027 ; retf 0x8949
0x00000000001ae55d : imul ebp, esp, 0xec69e4ff ; jmp rsp
0x00000000001ae70d : imul ebp, esp, 0xec75a7ff ; jmp rsi
0x0000000000089af6 : imul ebx, dword ptr [rax], 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015bdff : imul ecx ; retf
0x000000000013e9c3 : imul ecx, dword ptr [rax - 0x7d], 0x5d5b30c4 ; pop r12 ; ret
0x000000000009d100 : imul ecx, dword ptr [rax], 0x48 ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016bb97 : imul ecx, dword ptr [rbx], 0x894d0000 ; retf
0x0000000000185b67 : imul ecx, dword ptr [rcx], 0x894d0000 ; retf
0x00000000000aaee7 : imul ecx, dword ptr [rdx], 0x894d0000 ; retf
0x000000000009ec01 : imul ecx, ebp, 0 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000129dbf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001279d1 : imul edi, ebp, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000001bd689 : imul edi, ebx, -1 ; nop ; push -5 ; call qword ptr [rax]
0x00000000001bd699 : imul edi, ebx, 0xfb6890ff ; call qword ptr [rax]
0x00000000001bd659 : imul edi, ebx, 0xfb68a0ff ; jmp qword ptr [rax]
0x00000000001bd515 : imul edi, ebx, 0xfb6952ff ; call rdx
0x0000000000197f63 : imul edi, esi, 0x8349ffff ; ret 0x4908
0x00000000000aa8e7 : imul edx, dword ptr [rax], 0x894d0000 ; retf
0x00000000000aa5e7 : imul edx, dword ptr [rbx], 0x894d0000 ; retf
0x00000000000aa2e7 : imul edx, dword ptr [rsi], 0x894d0000 ; retf
0x0000000000002c34 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x0000000000003be4 : imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x000000000008fa3e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000019ad59 : imul esp, dword ptr [rbp - 0x18], -1 ; nop dword ptr [rax] ; ret
0x00000000001795b4 : imul esp, dword ptr [rbx], 0x894d0000 ; retf
0x00000000000b677c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x00000000001da294 : imul r8, qword ptr [rcx], 0 ; fsub dword ptr [rdx - 0xb] ; jmp qword ptr [rbx]
0x00000000001da08c : imul r8d, dword ptr [rcx], 0xf5612000 ; jmp qword ptr [rbx]
0x00000000001956e1 : imul rax, rdx ; shr rax, 0x38 ; ret
0x0000000000195578 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000dedcd : in al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001d1bc5 : in al, 0 ; add byte ptr [rax], ch ; out 0xf0, al ; jmp qword ptr [rdi]
0x00000000001bf58d : in al, 0 ; add byte ptr [rsi - 0x13], ah ; jmp rax
0x00000000001bf3d8 : in al, 0 ; in eax, dx ; jmp qword ptr [rax]
0x00000000001c562c : in al, 0x1e ; add byte ptr [rax], al ; nop ; xchg edi, esp ; call qword ptr [rax]
0x00000000001c2ec8 : in al, 0x21 ; cli ; jmp qword ptr [rax]
0x00000000001c1ac8 : in al, 0x23 ; idiv edi ; hlt ; ret 1
0x00000000001bf5d0 : in al, 0x29 ; in eax, dx ; call rax
0x0000000000130dfd : in al, 0x2b ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000001d2aec : in al, 0x30 ; int1 ; jmp qword ptr [rcx]
0x00000000001c024c : in al, 0x39 ; add dword ptr [rax], eax ; hlt ; adc esi, edx ; call qword ptr [rax]
0x00000000000a838b : in al, 0x41 ; cmp eax, ecx ; je 0xa8377 ; ret
0x000000000010f57a : in al, 0x44 ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006be18 : in al, 0x4a ; movsxd rax, dword ptr [rdx] ; add rax, rdx ; jmp rax
0x00000000000f1730 : in al, 0x4a ; movsxd rax, dword ptr [rsi] ; add rax, rsi ; jmp rax
0x00000000001beea8 : in al, 0x4c ; in al, dx ; jmp rax
0x00000000000a0942 : in al, 0x4c ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ace61 : in al, 0x4c ; pop rax ; retf
0x00000000001c08d0 : in al, 0x60 ; hlt ; call rsp
0x00000000001da11c : in al, 0x61 ; cmc ; jmp qword ptr [rbx]
0x00000000001da12c : in al, 0x69 ; add dword ptr [rax], eax ; add byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001ae55c : in al, 0x69 ; in al, dx ; jmp rsp
0x00000000001c095c : in al, 0x6a ; add dword ptr [rax], eax ; je 0x1c0917 ; hlt ; jmp qword ptr [rax]
0x00000000001befc8 : in al, 0x6c ; in al, dx ; jmp rax
0x0000000000055929 : in al, 0x74 ; and byte ptr [rcx - 0x39], cl ; ret 0xc001
0x00000000000b644c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000009b863 : in al, 0x74 ; ret 0x8b49
0x00000000000bf312 : in al, 0x75 ; ret
0x00000000000bebe3 : in al, 0x75 ; ret 0x8945
0x00000000000a18db : in al, 0x75 ; retf 0x2b49
0x000000000009d035 : in al, 0x75 ; sbb eax, 0x5c415d5b ; ret
0x00000000001db92c : in al, 0x81 ; add dword ptr [rax], eax ; mov al, 0xba ; cmc ; call rdx
0x00000000001c3180 : in al, 0x86 ; cli ; jmp qword ptr [rax]
0x000000000011b9b8 : in al, 0x89 ; ret
0x0000000000061c18 : in al, 0xa2 ; adc eax, 0x6f0f6600 ; ret 0x6be8
0x00000000001bfb08 : in al, 0xa2 ; out dx, al ; call qword ptr [rax]
0x00000000001bf2c8 : in al, 0xca ; in al, dx ; call rsp
0x00000000001c3688 : in al, 0xca ; std ; dec eax ; pop rax ; add dword ptr [rax], eax ; retf
0x00000000001bfb04 : in al, 0xe ; add dword ptr [rax], eax ; in al, 0xa2 ; out dx, al ; call qword ptr [rax]
0x00000000001c3839 : in al, 0xe5 ; call qword ptr [rsi]
0x00000000001c3875 : in al, 0xe5 ; jmp qword ptr [rcx]
0x00000000001d013c : in al, 0xe5 ; out dx, al ; call qword ptr [rax]
0x00000000001575f7 : in al, 0xe8 ; retf
0x00000000001d212c : in al, 0xe9 ; add byte ptr [rax], al ; add byte ptr [rax], 0xf1 ; call qword ptr [rax]
0x000000000009c612 : in al, 0xe9 ; ret 0xfffe
0x00000000000038b8 : in al, 0xee ; jne 0x389a ; ret 0x975
0x00000000001af2dd : in al, 0xef ; call rax
0x00000000001dc59c : in al, 0xf ; idiv bh ; retf 0
0x00000000000595b5 : in al, 0xf ; lahf ; ret
0x000000000016315c : in al, 0xf ; sahf ; ret 0x8349
0x0000000000051b55 : in al, 0xf ; xchg eax, ebp ; ret 0x854d
0x0000000000173aea : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000bb97e : in al, 0xf3 ; ret
0x000000000009de00 : in al, 0xfb ; xor al, 0 ; add rsp, 8 ; ret
0x00000000001bf82c : in al, 0xfe ; add byte ptr [rax], al ; hlt ; in eax, dx ; jmp qword ptr [rax]
0x00000000001e1bdd : in al, 1 ; add byte ptr [rax], dh ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x00000000001c2e48 : in al, 5 ; cli ; jmp qword ptr [rax]
0x00000000000b72b8 : in al, 6 ; add byte ptr [rax], al ; ret
0x00000000000e441d : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; cdq ; ret 4
0x0000000000023b1e : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; cwde ; retf
0x0000000000023c5d : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; pop rcx ; retf 0x10
0x0000000000133b61 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rbp ; retf
0x00000000000e432f : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rdi ; ret
0x000000000004f3c3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000095bc4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x9aa
0x00000000001544f4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xfdc1
0x0000000000099ebb : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf
0x0000000000087fec : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xa86
0x00000000000815bc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xaf0
0x00000000001676ec : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xfc8f
0x00000000001495bc : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; retf 0xfe70
0x0000000000133bd8 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr [rdi] ; retf 0xffff
0x00000000001c3834 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax], bh ; in al, 0xe5 ; call qword ptr [rsi]
0x00000000000c8835 : in al, dx ; add dword ptr [rax - 0x7d], ecx ; ret 0x4501
0x0000000000059ee5 : in al, dx ; add dword ptr [rax - 0x94343], eax ; jmp qword ptr [rax]
0x00000000001e2359 : in al, dx ; add dword ptr [rax], eax ; add al, 0x11 ; clc ; jmp qword ptr [rcx]
0x00000000001c2225 : in al, dx ; add dword ptr [rax], eax ; test byte ptr [rbx], ch ; clc ; jmp qword ptr [rax]
0x00000000000595b1 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x000000000004766f : in al, dx ; add dword ptr [rcx + 0xf], eax ; mov esi, 0x8941240c ; retf
0x0000000000184ec0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001d8334 : in al, dx ; add qword ptr [r8], rax ; call 0x221d77e4
0x00000000001beeba : in al, dx ; call qword ptr [rax]
0x00000000001bf0ea : in al, dx ; call qword ptr [rbx + rcx*8]
0x00000000001ae556 : in al, dx ; call qword ptr [rcx - 0x1b001390]
0x00000000001cc65a : in al, dx ; call qword ptr [rcx]
0x00000000001cc12a : in al, dx ; call qword ptr [rdi]
0x00000000001cc256 : in al, dx ; call qword ptr [rdx]
0x00000000001cc1ea : in al, dx ; call qword ptr [rsi]
0x00000000001aedf2 : in al, dx ; call rax
0x00000000001cc59a : in al, dx ; call rbx
0x00000000001cd5d2 : in al, dx ; call rsi
0x00000000001af036 : in al, dx ; call rsp
0x0000000000002df0 : in al, dx ; clc ; ret
0x00000000001bed8a : in al, dx ; dec dword ptr [rax + 0x440000b4] ; in al, dx ; call rsp
0x00000000001517ff : in al, dx ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001bf0da : in al, dx ; dec dword ptr [rdx + rcx*8 - 0x5e6c0000] ; in al, dx ; call rax
0x00000000001bedb2 : in al, dx ; dec eax ; mov ch, 0 ; add byte ptr [rsi + rbp - 0x14], dl ; jmp qword ptr [rax]
0x00000000001bf3c2 : in al, dx ; dec esp ; fild dword ptr [rax] ; add byte ptr [rax + rax], dl ; in eax, dx ; jmp rax
0x0000000000054bed : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000001c6b24 : in al, dx ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001d0164 : in al, dx ; in eax, 0xee ; call qword ptr [rax]
0x00000000001aed06 : in al, dx ; inc dword ptr [0xffffffffe504ffec] ; in al, dx ; jmp qword ptr [rsi]
0x00000000001ae76a : in al, dx ; inc dword ptr [rax - 0x1e] ; in al, dx ; jmp rax
0x00000000001bef12 : in al, dx ; inc eax ; mov esi, 0x56440000 ; in al, dx ; call rsp
0x00000000001ae5d6 : in al, dx ; inc esp ; imul ebp, esp, 0xec69e4ff ; jmp rsp
0x00000000001beea2 : in al, dx ; inc esp ; mov esp, 0x4ce40000 ; in al, dx ; jmp rax
0x00000000001c0c0c : in al, dx ; ja 0x1c0c17 ; add byte ptr [rbx + rbp - 0xb], dl ; call qword ptr [rax]
0x00000000001bed9a : in al, dx ; jmp qword ptr [rax]
0x00000000001cdcaa : in al, dx ; jmp qword ptr [rcx]
0x00000000001ae70e : in al, dx ; jmp qword ptr [rdi - 0x1900138b]
0x00000000001ae6ca : in al, dx ; jmp qword ptr [rdi - 0x3c00138b]
0x00000000001cdc96 : in al, dx ; jmp qword ptr [rdx]
0x00000000001aec7a : in al, dx ; jmp qword ptr [rsi]
0x00000000001ae76e : in al, dx ; jmp rax
0x00000000001cdd92 : in al, dx ; jmp rbx
0x00000000001cda02 : in al, dx ; jmp rdx
0x00000000001ae712 : in al, dx ; jmp rsi
0x00000000001ae55a : in al, dx ; jmp rsp
0x00000000001d8284 : in al, dx ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001aedea : in al, dx ; lcall [rax - 0x7f00131d] ; jrcxz 0x1aede8 ; call rax
0x00000000001ae552 : in al, dx ; lcall [rcx + rbx*2 - 0x14] ; call qword ptr [rcx - 0x1b001390]
0x00000000001bf10a : in al, dx ; ljmp [rax + 0x440000cb] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; jmp rsp
0x00000000001bf2b2 : in al, dx ; ljmp [rax - 0x2c] ; add byte ptr [rax], al ; push rsp ; retf 0xffec
0x00000000001bee6a : in al, dx ; ljmp [rax - 0x6bffff45] ; in al, dx ; jmp rax
0x00000000001ae70a : in al, dx ; ljmp [rdx] ; imul ebp, esp, 0xec75a7ff ; jmp rsi
0x0000000000118e23 : in al, dx ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000008c2c1 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001cf334 : in al, dx ; mov ebx, 0xd2b80000 ; sti ; call qword ptr [rax]
0x000000000016e7ba : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000a8093 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x00000000000a85b2 : in al, dx ; mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x00000000000a8697 : in al, dx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000173eea : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000a89f7 : in al, dx ; or al, ch ; add al, byte ptr [rsi + 0x3948fff7] ; ret
0x0000000000153b62 : in al, dx ; or al, ch ; push rdi ; retf
0x000000000004fbcc : in al, dx ; or al, ch ; std ; hlt ; std ; dec dword ptr [rax - 0x77] ; ret
0x000000000019c632 : in al, dx ; or byte ptr [rax + 0x39], cl ; ret
0x000000000007efa3 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x00000000001410bf : in al, dx ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000101537 : in al, dx ; or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x75], 0x2d ; popfq ; retf 0x2e
0x00000000000965af : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000185be4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000015ff0d : in al, dx ; or byte ptr [rbx - 0x6bf0f502], al ; ret
0x0000000000010209 : in al, dx ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001d65c4 : in al, dx ; or esp, esi ; jmp qword ptr [rcx]
0x00000000001bf08a : in al, dx ; push qword ptr [rax + rcx*8 - 0x6a0c0000] ; in al, dx ; call rax
0x00000000001ae766 : in al, dx ; push qword ptr [rax - 0x20] ; in al, dx ; inc dword ptr [rax - 0x1e] ; in al, dx ; jmp rax
0x00000000001bf0f2 : in al, dx ; push qword ptr [rax] ; retf
0x00000000001bf39a : in al, dx ; push qword ptr [rdx + rbx*8 - 0x7ac0000] ; in al, dx ; call rsp
0x00000000001c8e34 : in al, dx ; push rsi ; add byte ptr [rax], al ; sbb byte ptr [rdx - 0x15], ah ; call qword ptr [rax]
0x00000000000a827b : in al, dx ; ret
0x00000000001c62e4 : in al, dx ; retf
0x00000000001ad04d : in al, dx ; retf 0xae32
0x00000000000f47d0 : in al, dx ; retf 0xfff2
0x00000000001dbbe4 : in al, dx ; retf 0xfff5
0x00000000001e18c4 : in al, dx ; retf 0xfff7
0x000000000010fa24 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000002623 : in al, dx ; scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000000bbe8c : in al, dx ; sub byte ptr [rbx + rcx*4 + 0x35], cl ; ret
0x00000000001acf7e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1acf11 ; ret 0x48f
0x00000000001acf7d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1acf12 ; ret 0x48f
0x00000000001e29e4 : in al, dx ; xor bh, al ; call qword ptr [rbx]
0x00000000001c6b34 : in al, dx ; xor eax, dword ptr [rax] ; add al, bh ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000001b3724 : in al, dx ; xor edx, edi ; call rsp
0x00000000001bf5cd : in eax, 0 ; add ah, ah ; sub ebp, ebp ; call rax
0x00000000001bf5d5 : in eax, 0 ; add ah, dh ; sub ebp, ebp ; jmp rsp
0x00000000000c46fd : in eax, 0 ; add byte ptr [rax], al ; add al, ch ; pop rcx ; retf 0xfff5
0x00000000000f7888 : in eax, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + 1], cl ; retf 0xc8b
0x00000000000e6b46 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x00000000001ab683 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000000228d : in eax, 0x2d ; pmuludq mm4, mm7 ; retf
0x00000000000587f2 : in eax, 0x48 ; mov eax, esi ; ret
0x0000000000130fe5 : in eax, 0x5d ; ret
0x00000000001aa919 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000003be6 : in eax, 0x78 ; mov dl, 0x1e ; ret
0x0000000000030937 : in eax, 0xa5 ; cmp eax, dword ptr [rax] ; mov qword ptr fs:[rdx], rax ; ret
0x000000000005ef8d : in eax, 0xdf ; loopne 0x5ef1e ; ret
0x00000000001ad539 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001ab6da : in eax, 0xe5 ; retf 0x2a91
0x00000000001c6b11 : in eax, 0xe7 ; call qword ptr [rax]
0x00000000001c6b25 : in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001cd929 : in eax, 0xec ; call qword ptr [rdi]
0x00000000001aed0d : in eax, 0xec ; jmp qword ptr [rsi]
0x00000000001d013d : in eax, 0xee ; call qword ptr [rax]
0x00000000001d0151 : in eax, 0xee ; call qword ptr [rdx]
0x00000000001d0129 : in eax, 0xee ; jmp qword ptr [rax]
0x00000000000d0df3 : in eax, 0xf ; je 0xd0e18 ; add rax, 2 ; ret
0x00000000001d1b15 : in eax, 0xf0 ; call qword ptr [rbx]
0x00000000000bbad9 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000001d1ae9 : in eax, 0xf0 ; jmp qword ptr [rdi]
0x0000000000173b6a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001aca01 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001c210d : in eax, 1 ; add byte ptr [rcx + rbp*8 - 9], dh ; jmp qword ptr [rax]
0x000000000010fb49 : in eax, 1 ; jne 0x10fb99 ; mov eax, 0x10c ; syscall
0x000000000015056d : in eax, dx ; adc byte ptr [rcx + 1], cl ; retf
0x000000000000e979 : in eax, dx ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001d24b5 : in eax, dx ; add byte ptr [rax], al ; js 0x1d24d2 ; int1 ; call rsi
0x00000000001d24f1 : in eax, dx ; add byte ptr [rax], al ; sbb al, 0x13 ; int1 ; call rsp
0x000000000011c73e : in eax, dx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000011cbab : in eax, dx ; add ecx, ebx ; ret
0x00000000001542dd : in eax, dx ; call 0x30d73
0x00000000001bf5a2 : in eax, dx ; call qword ptr [rax]
0x00000000001ceece : in eax, dx ; call qword ptr [rbx]
0x00000000001ce406 : in eax, dx ; call qword ptr [rcx]
0x00000000001bf5d2 : in eax, dx ; call rax
0x00000000001bf422 : in eax, dx ; call rsp
0x00000000001bdc85 : in eax, dx ; cld ; jmp rax
0x0000000000145ac5 : in eax, dx ; dec dword ptr [rax + 0x39] ; ret
0x00000000001bf702 : in eax, dx ; dec dword ptr [rax] ; add byte ptr [rax], al ; and al, 0xaa ; in eax, dx ; call qword ptr [rax]
0x00000000001bf902 : in eax, dx ; dec esp ; add eax, dword ptr [rcx] ; add byte ptr [rdi + rdi*8], dh ; in eax, dx ; jmp rax
0x00000000001bf502 : in eax, dx ; dec esp ; loop 0x1bf510 ; add byte ptr [rax - 0x13], al ; jmp rax
0x00000000001bf7f9 : in eax, dx ; in eax, dx ; jmp rsp
0x00000000001672cb : in eax, dx ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000014f679 : in eax, dx ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x00000000001bf8da : in eax, dx ; inc eax ; add al, byte ptr [rcx] ; add byte ptr [rsp + rdi*8], dh ; in eax, dx ; call rsp
0x000000000016473f : in eax, dx ; insb byte ptr [rdi], dx ; sub byte ptr [rax], al ; mov edi, ebx ; call 0x1109a8
0x00000000001bf3da : in eax, dx ; jmp qword ptr [rax]
0x00000000001cf02e : in eax, dx ; jmp qword ptr [rbx]
0x00000000001ce306 : in eax, dx ; jmp qword ptr [rcx]
0x00000000001ced46 : in eax, dx ; jmp qword ptr [rdx]
0x00000000001cf236 : in eax, dx ; jmp qword ptr [rsi]
0x00000000001bf3ca : in eax, dx ; jmp rax
0x00000000001bf3fa : in eax, dx ; jmp rsp
0x00000000001088aa : in eax, dx ; jne 0x108899 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011d23a : in eax, dx ; jne 0x11d257 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011dda5 : in eax, dx ; jne 0x11ddcf ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011ddd8 : in eax, dx ; jne 0x11de28 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011de04 : in eax, dx ; jne 0x11de88 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000199d42 : in eax, dx ; jne 0x199d2f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a36c : in eax, dx ; jne 0x19a357 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a49f : in eax, dx ; jne 0x19a481 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c6dc : in eax, dx ; jns 0x7c6f8 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000001bf6ea : in eax, dx ; lcall [rax + 0x40000f1] ; xchg eax, ebx ; in eax, dx ; call rsp
0x00000000001bf652 : in eax, dx ; lcall [rax + rbp*8] ; add byte ptr [rax + rax*2], dh ; in eax, dx ; jmp rsp
0x00000000000bb0c2 : in eax, dx ; lea rax, [rcx - 1] ; ret
0x00000000000baa89 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000baa9f : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000baac1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000baadf : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000baaff : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bab25 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bab41 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bab61 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000bab81 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000baba7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000babc9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000babe7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000bac07 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bac23 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000bac43 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000bac63 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bac83 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000baca9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000bacf9 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000ba9cf : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000ba9ed : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000baa0d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000baa2f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000baa4f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000baa6f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ba905 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000ba917 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000ba92d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000ba945 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000ba95b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000ba96d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000ba98b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000ba997 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000ba9ad : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000ba8f1 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000016e5ca : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173f6a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000e4eb7 : in eax, dx ; or al, 0 ; mov eax, 0x142 ; syscall
0x00000000000530d7 : in eax, dx ; or byte ptr [rax + 0x39], cl ; retf
0x0000000000189750 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000009a41 : in eax, dx ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001af2ed : in eax, dx ; out dx, eax ; call qword ptr [rax]
0x000000000012188a : in eax, dx ; pop rax ; pop rdi ; call rax
0x000000000019aa1a : in eax, dx ; pop rbx ; ret
0x00000000001bf72a : in eax, dx ; push qword ptr [rax - 0x3bffff0a] ; ret 0xffed
0x00000000001bf6b2 : in eax, dx ; push qword ptr [rax] ; out dx, al ; add byte ptr [rax], al ; hlt ; xchg ch, ch ; call rax
0x00000000001bf7b2 : in eax, dx ; push qword ptr [rbx + rdi*8 - 0x1d5c0000] ; in eax, dx ; call rax
0x00000000001bf3d2 : in eax, dx ; push rsp ; fild dword ptr [rax] ; add ah, ah ; add ch, ch ; jmp qword ptr [rax]
0x0000000000083322 : in eax, dx ; ret
0x000000000012e337 : in eax, dx ; retf
0x00000000000bb212 : in eax, dx ; sub rax, 1 ; ret
0x000000000009cfc2 : in eax, dx ; xor eax, eax ; ret
0x0000000000192c98 : inc bl ; cmp dl, 1 ; jb 0x192caa ; mov byte ptr [rdi], cl ; ret
0x00000000000d2d8f : inc byte ptr [r13 + 0x69] ; retf
0x00000000001bf82d : inc byte ptr [rax] ; add ah, dh ; in eax, dx ; jmp qword ptr [rax]
0x00000000001222d1 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001bf825 : inc byte ptr [rax] ; add byte ptr [rdx + rsi*8 - 0x13], dh ; jmp rsp
0x00000000001bf81d : inc byte ptr [rax] ; add byte ptr [rdx + rsi*8], dh ; in eax, dx ; call rax
0x000000000014162e : inc byte ptr [rax] ; retf 0x3b9a
0x00000000000d2d90 : inc byte ptr [rbp + 0x69] ; retf
0x000000000008e2c2 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000011d3cc : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x000000000002cb05 : inc byte ptr [rbx] ; je 0x2cb15 ; ret
0x000000000014102c : inc byte ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000e972c : inc byte ptr [rcx] ; sete al ; ret
0x000000000008948a : inc byte ptr [rdx] ; cmove edx, ecx ; mov dword ptr [rdi], edx ; ret
0x00000000001aed07 : inc dword ptr [0xffffffffe504ffec] ; in al, dx ; jmp qword ptr [rsi]
0x00000000001bcedb : inc dword ptr [rax + 0x10fffb20] ; adc edi, ebx ; call rax
0x00000000001bcfc7 : inc dword ptr [rax + 0x15] ; sti ; jmp qword ptr [rax]
0x00000000001bcf47 : inc dword ptr [rax + 0x16] ; sti ; jmp qword ptr [rax]
0x00000000001bcf17 : inc dword ptr [rax + 0x1e] ; sti ; inc dword ptr [rax + 0x20] ; sti ; call rax
0x00000000001bcf1b : inc dword ptr [rax + 0x20] ; sti ; call rax
0x00000000001c015b : inc dword ptr [rax + 0x24000133] ; push rdx ; int1 ; call qword ptr [rax]
0x00000000001bd213 : inc dword ptr [rax + 0x2a] ; sti ; call qword ptr [rax - 0x1f0004d5]
0x00000000001bd13f : inc dword ptr [rax + 0x3a] ; sti ; inc dword ptr [rax] ; cmp al, 0xfb ; jmp rax
0x00000000001bd123 : inc dword ptr [rax + 0x3c] ; sti ; jmp qword ptr [rax]
0x00000000001bcc53 : inc dword ptr [rax + 0x40] ; std ; push qword ptr [rax] ; std ; jmp qword ptr [rax]
0x00000000001bd11f : inc dword ptr [rax + 0x40fffb3a] ; cmp al, 0xfb ; jmp qword ptr [rax]
0x00000000001bd0ef : inc dword ptr [rax + 0x42] ; sti ; jmp qword ptr [rax]
0x00000000001bd267 : inc dword ptr [rax + 0x71] ; sti ; call rax
0x00000000001bd033 : inc dword ptr [rax + 0xc] ; sti ; call qword ptr [rax - 0x1f0004f3]
0x000000000009476d : inc dword ptr [rax + rax] ; add byte ptr [rax + 0x39], cl ; ret 0xf275
0x000000000006db34 : inc dword ptr [rax + rcx*4 + 0x6d] ; mov al, 0xe8 ; ret 0x4fe
0x00000000001c01eb : inc dword ptr [rax + rdi] ; add dword ptr [rax], eax ; add al, 0x8a ; int1 ; jmp qword ptr [rax]
0x00000000001ae76b : inc dword ptr [rax - 0x1e] ; in al, dx ; jmp rax
0x00000000001bdc4b : inc dword ptr [rax - 0x27] ; cld ; call qword ptr [rax - 0x1f000326]
0x00000000001be79b : inc dword ptr [rax - 0x2bffff72] ; jg 0x1be793 ; jmp rsp
0x00000000001bdc7b : inc dword ptr [rax - 0x2c] ; cld ; jmp rax
0x00000000001bd223 : inc dword ptr [rax - 0x2f0004d1] ; xor bl, bh ; jmp qword ptr [rax]
0x00000000001bd1cf : inc dword ptr [rax - 0x2f0004d8] ; sub ebx, edi ; jmp qword ptr [rax]
0x00000000001bd057 : inc dword ptr [rax - 0x2f0004fd] ; add al, 0xfb ; jmp qword ptr [rax]
0x00000000001bd003 : inc dword ptr [rax - 0x2f000504] ; std ; cli ; jmp qword ptr [rax]
0x00000000001af35b : inc dword ptr [rax - 0x2f000ff8] ; or dh, al ; jmp qword ptr [rax]
0x00000000001bcc07 : inc dword ptr [rax - 0x45] ; cld ; call qword ptr [rax]
0x00000000001bcbef : inc dword ptr [rax - 0x51] ; cld ; jmp rax
0x00000000001bcbcf : inc dword ptr [rax - 0x5e] ; cld ; jmp rax
0x00000000001af49b : inc dword ptr [rax - 0x5f000f81] ; jg 0x1af49b ; call rax
0x00000000001bd75f : inc dword ptr [rax - 0x68] ; sti ; call rax
0x00000000001bcbaf : inc dword ptr [rax - 0x6a] ; cld ; push qword ptr [rax] ; xchg eax, edi ; cld ; jmp qword ptr [rax]
0x00000000001bd977 : inc dword ptr [rax - 0x6b] ; sti ; call rax
0x00000000001be28b : inc dword ptr [rax - 0x6bffff88] ; jmp rdi
0x00000000000e9930 : inc dword ptr [rax - 0x76b7ffc8] ; ret
0x0000000000127314 : inc dword ptr [rax - 0x7bf0ffc5] ; retf 0xfffe
0x00000000001c2ebb : inc dword ptr [rax - 0x7bfffdc2] ; and edx, edi ; call rax
0x00000000001bced7 : inc dword ptr [rax - 0x7f0004e2] ; and bl, bh ; call qword ptr [rax]
0x00000000000666ce : inc dword ptr [rax - 0x91b43] ; jmp qword ptr [rax]
0x000000000005a542 : inc dword ptr [rax - 0x94343] ; jmp qword ptr [rax]
0x00000000001af34b : inc dword ptr [rax - 1] ; out dx, eax ; call qword ptr [rax - 0x1f000fff]
0x00000000001bd047 : inc dword ptr [rax - 2] ; cli ; call qword ptr [rax - 0x1f000501]
0x000000000019878c : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0x8944
0x00000000001986f6 : inc dword ptr [rax] ; add byte ptr [rax + 0x21], cl ; ret 0xffb8
0x0000000000112908 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f6
0x000000000005baa2 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], al ; retf 0x8944
0x000000000007136d : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; xchg eax, ecx ; retf
0x00000000000e729b : inc dword ptr [rax] ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000bba7f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000000c7af6 : inc dword ptr [rax] ; add byte ptr [rax], al ; je 0xc7b05 ; ret
0x0000000000150f75 : inc dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbp ; call 0x15d219
0x000000000019555d : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001915f7 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000122361 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000197bf6 : inc dword ptr [rax] ; add byte ptr [rcx + 0xf], cl ; ret 0x8341
0x00000000000fb3d2 : inc dword ptr [rax] ; cld ; dec dword ptr [rcx] ; retf 0x5089
0x00000000001bd143 : inc dword ptr [rax] ; cmp al, 0xfb ; jmp rax
0x00000000001bd1a7 : inc dword ptr [rax] ; cmp eax, 0x3ee0fffb ; sti ; call rax
0x00000000001af2eb : inc dword ptr [rax] ; in eax, dx ; out dx, eax ; call qword ptr [rax]
0x00000000001bd257 : inc dword ptr [rax] ; jae 0x1bd25e ; call qword ptr [rax + 0x20fffb72]
0x00000000001af48b : inc dword ptr [rax] ; jg 0x1af483 ; jmp qword ptr [rax]
0x00000000001af44b : inc dword ptr [rax] ; jge 0x1af443 ; jmp qword ptr [rax]
0x00000000001af46b : inc dword ptr [rax] ; jle 0x1af463 ; jmp qword ptr [rax]
0x00000000001af3c7 : inc dword ptr [rax] ; jne 0x1af3bf ; call qword ptr [rax]
0x00000000001bd46f : inc dword ptr [rax] ; jo 0x1bd476 ; call qword ptr [rax + 0x20fffb6f]
0x00000000001bcb7f : inc dword ptr [rax] ; mov edi, esp ; push rax ; mov edi, esp ; jmp rax
0x000000000003e865 : inc dword ptr [rax] ; or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000134dc0 : inc dword ptr [rax] ; or eax, edi ; bswap eax ; ret
0x0000000000118dd0 : inc dword ptr [rax] ; ret
0x00000000001af2af : inc dword ptr [rax] ; sar bl, 1 ; push qword ptr [rax - 0x2f] ; sti ; jmp rax
0x00000000001bcf4f : inc dword ptr [rax] ; sbb bh, bl ; jmp rax
0x00000000001bcd6b : inc dword ptr [rax] ; std ; call qword ptr [rax + 0x20fffd46]
0x00000000001bd67f : inc dword ptr [rax] ; sti ; jmp qword ptr [rax + 0x20fffb6b]
0x00000000001bd6bf : inc dword ptr [rax] ; sti ; jmp qword ptr [rax]
0x00000000001bd12b : inc dword ptr [rax] ; sti ; jmp rax
0x00000000001af58b : inc dword ptr [rax] ; test al, dh ; call qword ptr [rax]
0x00000000001bd967 : inc dword ptr [rax] ; xchg eax, edi ; sti ; call qword ptr [rax + 0x20fffb96]
0x00000000001bcb6f : inc dword ptr [rax] ; xchg esp, edi ; call rax
0x00000000001af4d7 : inc dword ptr [rax] ; xor eax, 0xf08110ff ; jmp qword ptr [rax]
0x0000000000046728 : inc dword ptr [rbp + 0x31] ; dec dword ptr [rax - 0x39] ; ret
0x00000000000c8d8c : inc dword ptr [rbp + 0x31] ; dec dword ptr [rbp - 0x77] ; dec byte ptr [rcx - 0x39] ; ret 0xffff
0x0000000000029424 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000000ec383 : inc dword ptr [rbp + 0x31] ; ror byte ptr [rcx - 0x7d], cl ; ret
0x000000000006e924 : inc dword ptr [rbp + 0x35850fc0] ; retf
0x000000000007773b : inc dword ptr [rbp + 0x6c850fdb] ; ret
0x000000000007779f : inc dword ptr [rbp + 0xfc389c0] ; test dword ptr [rsi], eax ; ret
0x00000000000cab1e : inc dword ptr [rbp + rcx*4 + 0x5a] ; add cl, byte ptr [rbp + 0x29] ; ret 0x8b47
0x000000000012f266 : inc dword ptr [rbp + rcx*4 + 0x78] ; add dword ptr [rbx + rcx*4 + 0x2c], ecx ; ret 0x894c
0x000000000014148d : inc dword ptr [rbp - 0x14728b40] ; ret 0x1f0f
0x000000000011ed65 : inc dword ptr [rbp - 0x164a8b40] ; retf 0xfffe
0x0000000000043993 : inc dword ptr [rbp - 0x3db7f040] ; pop rbx ; ret
0x00000000000d9db2 : inc dword ptr [rbp - 0x6a7bf040] ; retf 0xffff
0x0000000000159b65 : inc dword ptr [rbp - 0x75] ; add byte ptr gs:[rax - 0x7d], cl ; ret
0x00000000001672cc : inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000019907a : inc dword ptr [rbp - 0x77] ; fimul dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000a684d : inc dword ptr [rbp - 0x77] ; fld dword ptr [rcx - 0x77] ; fiadd dword ptr [rbp + 0x38] ; retf 0x870f
0x00000000001966e8 : inc dword ptr [rbp - 0x77] ; loope 0x1966db ; ret
0x00000000000db5f4 : inc dword ptr [rbp - 0x77] ; ret
0x0000000000160bc4 : inc dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x39] ; ret
0x0000000000055926 : inc dword ptr [rbp - 0x7b] ; in al, 0x74 ; and byte ptr [rcx - 0x39], cl ; ret 0xc001
0x00000000000daa3d : inc dword ptr [rbp - 0x7b] ; rol byte ptr [rbp + 0xf], 0x44 ; ret
0x0000000000077d9c : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x000000000005a64d : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x88 ; retf
0x0000000000119ace : inc dword ptr [rbp - 0x7cd28b40] ; ret
0x0000000000119b2a : inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001b0fef : inc dword ptr [rbx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000000f0667 : inc dword ptr [rbx + rcx*4 + 0x6b] ; sub al, 0x89 ; ret 0x8348
0x000000000003c9bb : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000e76a5 : inc dword ptr [rbx - 0x2ff73] ; call qword ptr [rax]
0x000000000014f67a : inc dword ptr [rbx - 0x76b79c03] ; ret
0x000000000007a3fa : inc dword ptr [rbx - 0x76b7db08] ; retf
0x000000000006fdf3 : inc dword ptr [rbx - 0x78f0d006] ; retf 0x24
0x00000000000854c6 : inc dword ptr [rbx - 0x7af0fe08] ; retf
0x000000000005a4c4 : inc dword ptr [rbx - 0x8ff43] ; call qword ptr [rax]
0x00000000001401af : inc dword ptr [rbx - 0xc8b0a08] ; pop rbx ; ret
0x00000000000a7c27 : inc dword ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; push rbx ; ret 0xffff
0x000000000002163d : inc dword ptr [rbx] ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x21611
0x00000000000443f4 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, ecx ; ret
0x00000000000bbb3d : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000bbaab : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000005b868 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x00000000000c7b4c : inc dword ptr [rcx + 0x39] ; retf 0x860f
0x0000000000064768 : inc dword ptr [rcx + 0xf] ; mov dh, 0x56 ; or al, 0xf6 ; ret 0xf40
0x0000000000111a8b : inc dword ptr [rcx + 0xfffe1] ; add byte ptr [rcx], cl ; retf 0xea81
0x00000000001bd8d3 : inc dword ptr [rcx + rbx*4 - 5] ; call rsp
0x00000000000897cb : inc dword ptr [rcx + rcx*4 - 0x18] ; syscall
0x0000000000123ba4 : inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000007db91 : inc dword ptr [rcx + rcx*4 - 0x40] ; jmp 0x7db67
0x00000000001ae0bf : inc dword ptr [rcx + rsi*8 - 0x15] ; call rbx
0x00000000001ae0bb : inc dword ptr [rcx + rsi*8 - 0x15] ; inc dword ptr [rcx + rsi*8 - 0x15] ; call rbx
0x00000000001ae103 : inc dword ptr [rcx + rsi*8 - 0x15] ; jmp qword ptr [rax]
0x00000000000a7e95 : inc dword ptr [rcx - 0x46] ; or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa4107
0x0000000000130b0c : inc dword ptr [rcx - 0x47] ; retf 0
0x000000000004dfe9 : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x0000000000064ba7 : inc dword ptr [rcx - 0x75] ; add al, 0x83 ; ret
0x0000000000114879 : inc dword ptr [rcx - 0x75] ; jl 0x1148aa ; sub al, ch ; pushfq ; ret 0xffff
0x00000000000ea224 : inc dword ptr [rcx - 0x77] ; ret
0x000000000012ff9c : inc dword ptr [rcx - 0x77] ; ret 0x66e9
0x000000000002dbb3 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000000a2769 : inc dword ptr [rcx - 0x77] ; ret 0x848b
0x0000000000121f62 : inc dword ptr [rcx - 0x77] ; retf 0x3074
0x000000000005547c : inc dword ptr [rcx - 0x77] ; retf 0xd348
0x0000000000143392 : inc dword ptr [rcx - 0x7d] ; ret 0x4101
0x000000000011ba6e : inc dword ptr [rcx - 0x7d] ; retf 0x8940
0x000000000006946b : inc dword ptr [rcx - 0x7d] ; retf 0xe9ff
0x000000000010ec08 : inc dword ptr [rcx - 0x8b80000] ; fmul dword ptr [rax + 0x21] ; ret
0x000000000006639a : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000066554 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000019ada9 : inc dword ptr [rcx] ; ja 0x19adb5 ; ret
0x00000000001e3252 : inc dword ptr [rcx] ; or ch, byte ptr [rdi + 5] ; ret
0x00000000001e31ce : inc dword ptr [rcx] ; or dh, byte ptr [rbp + 5] ; retf
0x0000000000060a9f : inc dword ptr [rcx] ; retf
0x00000000001bd313 : inc dword ptr [rdx + 0x73] ; sti ; call rdx
0x00000000001bfa7b : inc dword ptr [rdx + rcx + 0x2c940001] ; out dx, al ; call rax
0x00000000001bd3db : inc dword ptr [rdx + rsi*2 - 5] ; call rsp
0x00000000001bd80b : inc dword ptr [rdx - 0x66] ; sti ; call rdx
0x00000000000788e3 : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000707dc : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; retf 0xffb0
0x00000000000762dc : inc dword ptr [rdx] ; add byte ptr [rax], al ; add cl, ch ; retf 0xffd7
0x00000000001bd303 : inc dword ptr [rdx] ; jne 0x1bd30a ; call qword ptr [rdx + 0x22fffb74]
0x000000000018bf6d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000001bd2af : inc dword ptr [rsi + 0x70] ; sti ; call rsi
0x00000000001c0b9b : inc dword ptr [rsi + rsi*2] ; add dword ptr [rax], eax ; xor al, 0x22 ; cmc ; jmp qword ptr [rax]
0x00000000001afea3 : inc dword ptr [rsi - 0x55000d88] ; je 0x1afea4 ; jmp rax
0x00000000001afea3 : inc dword ptr [rsi - 0x55000d88] ; je 0x1afea5 ; jmp rax
0x00000000001afea2 : inc dword ptr [rsi - 0x55000d88] ; je 0x1afea6 ; jmp rax
0x00000000001bd7a7 : inc dword ptr [rsi - 0x69] ; sti ; call rsi
0x00000000001bd797 : inc dword ptr [rsi] ; cdq ; sti ; call qword ptr [rsi + 0x26fffb98]
0x00000000001bd29f : inc dword ptr [rsi] ; jb 0x1bd2a6 ; call qword ptr [rsi + 0x26fffb71]
0x00000000001af97f : inc dword ptr [rsi] ; ret 0xfff0
0x00000000001af1bb : inc dword ptr [rsp + rdx*4 - 0x665f0011] ; out dx, eax ; jmp rax
0x00000000001c27db : inc eax ; adc al, 2 ; add byte ptr [rdi + rdi], dh ; stc ; call qword ptr [rax]
0x00000000001af36b : inc eax ; adc eax, esi ; call qword ptr [rax]
0x00000000001bf8db : inc eax ; add al, byte ptr [rcx] ; add byte ptr [rsp + rdi*8], dh ; in eax, dx ; call rsp
0x00000000001c08cb : inc eax ; add dword ptr [eax], eax ; in al, 0x60 ; hlt ; call rsp
0x00000000001bd013 : inc eax ; add ebx, edi ; call qword ptr [rax]
0x00000000001c04d3 : inc eax ; add qword ptr [r8], rax ; xchg eax, esp ; jne 0x1c04d4 ; call rsp
0x00000000001c04d3 : inc eax ; add qword ptr [r8], rax ; xchg eax, esp ; jne 0x1c04d5 ; call rsp
0x00000000001c04d2 : inc eax ; add qword ptr [r8], rax ; xchg eax, esp ; jne 0x1c04d6 ; call rsp
0x00000000001c240b : inc eax ; clc ; add dword ptr [rax], eax ; push rsp ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000001af2db : inc eax ; in al, 0xef ; call rax
0x00000000001c0a8b : inc eax ; jb 0x1c0a98 ; add byte ptr [rdi + rdx], dl ; cmc ; call rsp
0x00000000001af463 : inc eax ; jge 0x1af45b ; jmp rax
0x00000000001af443 : inc eax ; jl 0x1af43b ; jmp rax
0x00000000001af483 : inc eax ; jle 0x1af47b ; jmp rax
0x00000000001af3f7 : inc eax ; jne 0x1af3ef ; call rax
0x00000000001bdc6b : inc eax ; jrcxz 0x1bdc6f ; call qword ptr [rax]
0x00000000001c1833 : inc eax ; mov cl, 1 ; add ah, ah ; jp 0x1c1839 ; call rsp
0x00000000001c1c1b : inc eax ; mov dword ptr [rcx], 0xf731d400 ; call rsp
0x00000000001af0e7 : inc eax ; mov ebx, 0xbc80ffee ; out dx, al ; call qword ptr [rax]
0x00000000001bef13 : inc eax ; mov esi, 0x56440000 ; in al, dx ; call rsp
0x00000000001bd067 : inc eax ; or bl, bh ; call qword ptr [rax]
0x00000000001c1e23 : inc eax ; rol byte ptr [rcx], cl ; add byte ptr [rbx - 9], ah ; call rsp
0x000000000003db99 : inc eax ; shr eax, 0x1f ; ret
0x00000000001c2483 : inc eax ; std ; add dword ptr [rax], eax ; push rsp ; ret
0x00000000001bd233 : inc eax ; xor al, 0xfb ; call qword ptr [rax]
0x00000000001c2c2b : inc eax ; xor byte ptr [rdx], al ; add byte ptr [rax], ah ; stc ; call qword ptr [rax]
0x000000000018af0c : inc ebp ; std ; xlatb ; ret 0xe883
0x00000000001b16f9 : inc ebx ; add dh, bh ; jmp rdi
0x000000000016761c : inc ebx ; mov eax, 0xfffffffe ; ret
0x000000000004014c : inc ebx ; nop ; mov eax, edx ; ret
0x0000000000086bbc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000195049 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000dca46 : inc edi ; add ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dc948 : inc edi ; add ecx, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dce26 : inc edi ; add ecx, dword ptr [rdx] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006c7c6 : inc esi ; add al, 2 ; add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000118161 : inc esi ; jmp qword ptr [r8]
0x00000000001c034b : inc esp ; add dword ptr [rax], eax ; xor edx, esi ; jmp rax
0x00000000001ae5d7 : inc esp ; imul ebp, esp, 0xec69e4ff ; jmp rsp
0x00000000001be25b : inc esp ; ja 0x1be267 ; add byte ptr [rbp + rsi*8 - 0x19], ah ; jmp rsp
0x00000000001beea3 : inc esp ; mov esp, 0x4ce40000 ; in al, dx ; jmp rax
0x00000000001c1ccb : inc esp ; retf 1
0x00000000001af1ab : inc esp ; xchg eax, esp ; out dx, eax ; call rsp
0x000000000000b151 : insb byte ptr [rdi], dx ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000a852e : insb byte ptr [rdi], dx ; adc byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x000000000000b5a1 : insb byte ptr [rdi], dx ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001ca3c9 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; ret
0x00000000001db7b4 : insb byte ptr [rdi], dx ; add byte ptr [rcx], 0 ; test al, 0xb2 ; cmc ; call rdi
0x0000000000186364 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000f2c70 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], al ; ret 0x3944
0x00000000001da391 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; or al, 0x64 ; cmc ; call qword ptr [rdx]
0x000000000003dccb : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; fld xword ptr [rsp + 8] ; ret
0x000000000003dc19 : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000003dd81 : insb byte ptr [rdi], dx ; and al, 8 ; fadd st(0) ; ret
0x000000000003dd09 : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000003dc55 : insb byte ptr [rdi], dx ; and al, 8 ; fsubrp st(1) ; ret
0x000000000003dbba : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000001da619 : insb byte ptr [rdi], dx ; cmc ; call rsp
0x00000000001dc934 : insb byte ptr [rdi], dx ; cmp dh, dh ; call qword ptr [rdi]
0x00000000001da0b4 : insb byte ptr [rdi], dx ; imul eax, dword ptr [rcx], 0xf5615800 ; jmp qword ptr [rbx]
0x00000000001befc9 : insb byte ptr [rdi], dx ; in al, dx ; jmp rax
0x00000000001d24b4 : insb byte ptr [rdi], dx ; in eax, dx ; add byte ptr [rax], al ; js 0x1d24d3 ; int1 ; call rsi
0x00000000001ad53e : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000001afead : insb byte ptr [rdi], dx ; ljmp [rdi] ; jne 0x1afeaa ; call qword ptr [rax]
0x00000000001afead : insb byte ptr [rdi], dx ; ljmp [rdi] ; jne 0x1afeab ; call qword ptr [rax]
0x0000000000153000 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x0000000000003788 : insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000001cf0b4 : insb byte ptr [rdi], dx ; mov ecx, 0xbae80000 ; sti ; call rsp
0x00000000001d5124 : insb byte ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x00000000001ce364 : insb byte ptr [rdi], dx ; or ch, ch ; call qword ptr [rax]
0x00000000001bdfac : insb byte ptr [rdi], dx ; push 0 ; add byte ptr [rsi + rax - 0x19], al ; call rax
0x00000000001afe91 : insb byte ptr [rdi], dx ; push qword ptr [rax] ; jns 0x1afe8e ; jmp rax
0x00000000001afe91 : insb byte ptr [rdi], dx ; push qword ptr [rax] ; jns 0x1afe8f ; jmp rax
0x0000000000077740 : insb byte ptr [rdi], dx ; ret
0x0000000000047220 : insb byte ptr [rdi], dx ; ret 0
0x0000000000058c65 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000001e1844 : insb byte ptr [rdi], dx ; retf 0xfff7
0x00000000001ac906 : insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000164740 : insb byte ptr [rdi], dx ; sub byte ptr [rax], al ; mov edi, ebx ; call 0x1109a7
0x000000000000239e : insb byte ptr [rdi], dx ; xor bl, al ; retf 0x23c4
0x00000000001475f9 : insd dword ptr [rdi], dx ; adc byte ptr [rax - 0x77], cl ; retf
0x0000000000188fd0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000027596 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x00000000000393cf : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000000a18e4 : insd dword ptr [rdi], dx ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d5f2f : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000189ed0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001664a0 : insd dword ptr [rdi], dx ; add rsp, 0x58 ; ret
0x000000000006db37 : insd dword ptr [rdi], dx ; mov al, 0xe8 ; ret 0x4fe
0x00000000001ad53f : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000001c00 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x00000000001ab8ed : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000001ac7ff : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000002ce7 : int 0x80
0x0000000000094fa8 : int 0xc3
0x00000000000035d8 : int 0xcb
0x00000000001bf6ed : int1 ; add byte ptr [rax], al ; add al, 0x93 ; in eax, dx ; call rsp
0x00000000001c0162 : int1 ; call qword ptr [rax]
0x00000000001d26f2 : int1 ; call qword ptr [rdx]
0x000000000014a177 : int1 ; call r10
0x00000000001c018a : int1 ; call rax
0x00000000000be046 : int1 ; call rbx
0x00000000001d24ba : int1 ; call rsi
0x00000000001c01e2 : int1 ; call rsp
0x000000000002134e : int1 ; cmp al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000012be48 : int1 ; cmp dil, al ; mov eax, edx ; cmove eax, ecx ; ret
0x00000000001c0182 : int1 ; dec dword ptr [rax + 0x14000135] ; movsxd rsi, ecx ; call rax
0x0000000000103233 : int1 ; dec dword ptr [rax - 0x77] ; ret 0xffb8
0x00000000001098be : int1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000010d245 : int1 ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rbp*2 + 0x48], 0x89 ; ret
0x000000000010ba18 : int1 ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rcx + 0x48], 0x83 ; ret
0x00000000001238ed : int1 ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000001c0102 : int1 ; dec dword ptr [rdx + rsi] ; add dword ptr [rax], eax ; add al, 0x38 ; int1 ; jmp qword ptr [rax]
0x000000000004e35b : int1 ; fist dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000003be3 : int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001c015a : int1 ; inc dword ptr [rax + 0x24000133] ; push rdx ; int1 ; call qword ptr [rax]
0x00000000001c01ea : int1 ; inc dword ptr [rax + rdi] ; add dword ptr [rax], eax ; add al, 0x8a ; int1 ; jmp qword ptr [rax]
0x000000000002a7a2 : int1 ; je 0x2a951 ; mov rdx, rax ; jmp 0x2a769
0x000000000002aba7 : int1 ; je 0x2a951 ; mov rdx, rax ; jmp 0x2ab6e
0x000000000002ac1e : int1 ; je 0x2a951 ; mov rdx, rax ; jmp 0x2abe5
0x00000000000a833d : int1 ; je 0xa8334 ; ret
0x0000000000192c1b : int1 ; jl 0x192c6c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000192c3c : int1 ; jl 0x192c8d ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000192c4f : int1 ; jl 0x192ca0 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000192d24 : int1 ; jl 0x192d75 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000192d7c : int1 ; jl 0x192dcd ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000192e19 : int1 ; jl 0x192e6a ; adc dword ptr [rsi + 7], edx ; ret
0x00000000001a9494 : int1 ; jle 0x1a9482 ; jmp rsp
0x00000000001c0062 : int1 ; jmp qword ptr [rax]
0x00000000001d2652 : int1 ; jmp qword ptr [rcx]
0x00000000001d2c16 : int1 ; jmp qword ptr [rdi]
0x00000000001d284a : int1 ; jmp qword ptr [rdx]
0x00000000001d3392 : int1 ; jmp rbx
0x00000000000bba35 : int1 ; jmp rcx
0x00000000001c00f2 : int1 ; jmp rsp
0x000000000008457b : int1 ; jne 0x84576 ; lea eax, [rdx + rdi] ; ret
0x00000000001ac7c4 : int1 ; lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x00000000000bbb59 : int1 ; mov eax, eax ; ret
0x000000000017395b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016ed8f : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000014eb9a : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000149c6b : int1 ; mov rdi, r13 ; call r12
0x0000000000194b23 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000011235b : int1 ; out dx, al ; lock dec dword ptr [rax + 0x39] ; ret
0x00000000001af2f5 : int1 ; out dx, eax ; push qword ptr [rax] ; out dx, eax ; call rax
0x00000000000bbb40 : int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000a14b6 : int1 ; pop rbx ; pop rbp ; ret
0x00000000000514de : int1 ; pop rbx ; ret
0x0000000000002687 : int1 ; ret
0x00000000001acf16 : int1 ; ret 0x5803
0x000000000010d7eb : int1 ; retf
0x0000000000194b27 : int1 ; sub eax, edx ; ret
0x0000000000103f2c : int1 ; syscall
0x00000000000a1306 : int1 ; xor eax, eax ; pop rbx ; ret
0x00000000000a13c6 : int1 ; xor eax, eax ; ret
0x00000000001d06bd : iretd ; add byte ptr [rax], al ; sal byte ptr [rbx - 0x11], 1 ; call qword ptr [rax]
0x000000000009cc75 : iretd ; call rcx
0x0000000000043612 : iretd ; call rdx
0x000000000010f8c9 : iretd ; mov eax, 0x103 ; syscall
0x0000000000103ff6 : ja 0x104008 ; setne al ; movzx eax, al ; ret
0x00000000001098bd : ja 0x1098b8 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 0
0x000000000010e63d : ja 0x10e6a3 ; ret
0x000000000010e6ed : ja 0x10e753 ; ret
0x000000000010eb51 : ja 0x10eb5b ; xor eax, eax ; ret
0x000000000010f0ea : ja 0x10f0f2 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x000000000010f512 : ja 0x10f503 ; ret
0x000000000010f568 : ja 0x10f559 ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010f77b : ja 0x10f783 ; ret
0x000000000010f7c9 : ja 0x10f7d3 ; ret
0x000000000010f81b : ja 0x10f823 ; ret
0x000000000010f873 : ja 0x10f883 ; ret
0x000000000010f8d7 : ja 0x10f8e3 ; ret
0x000000000010f92f : ja 0x10f93b ; ret
0x000000000010fb5a : ja 0x10fb63 ; ret
0x0000000000110087 : ja 0x1100e3 ; ret
0x000000000011011a : ja 0x110123 ; ret
0x000000000011015a : ja 0x1101b3 ; ret
0x00000000001101ed : ja 0x1101fb ; ret
0x000000000011021d : ja 0x11022b ; ret
0x000000000011024d : ja 0x11025b ; ret
0x00000000001108da : ja 0x11091b ; ret
0x000000000011094d : ja 0x11095b ; ret
0x0000000000110a7a : ja 0x110ac3 ; ret
0x0000000000114a43 : ja 0x114a58 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000114bca : ja 0x114c23 ; ret
0x0000000000115695 : ja 0x1156a3 ; ret
0x00000000001156e9 : ja 0x1156f3 ; ret
0x00000000001157ad : ja 0x115813 ; ret
0x000000000011585d : ja 0x1158c3 ; ret
0x0000000000115943 : ja 0x11594f ; ret
0x000000000011598c : ja 0x115998 ; ret
0x0000000000115dd4 : ja 0x115e23 ; ret
0x0000000000115fa6 : ja 0x115fb3 ; ret
0x0000000000115fe7 : ja 0x115ff3 ; ret
0x00000000001164d3 : ja 0x116503 ; ret
0x000000000011661a : ja 0x116673 ; ret
0x00000000001166ba : ja 0x116713 ; ret
0x0000000000116760 : ja 0x1167c3 ; ret
0x0000000000116810 : ja 0x116873 ; ret
0x0000000000116cff : ja 0x116d07 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x0000000000116ffd : ja 0x11706b ; ret
0x000000000011721a : ja 0x11725b ; ret
0x00000000001172ca : ja 0x11730b ; ret
0x0000000000117379 : ja 0x117383 ; ret
0x0000000000118a4d : ja 0x118a5b ; ret
0x0000000000118c32 : ja 0x118c43 ; ret
0x0000000000118c6d : ja 0x118c7b ; ret
0x0000000000118c9d : ja 0x118cab ; ret
0x0000000000118d19 : ja 0x118d25 ; ret
0x000000000011bb2a : ja 0x11bb83 ; ret
0x000000000011edb4 : ja 0x11edc3 ; ret
0x00000000001219a3 : ja 0x121a1b ; ret
0x0000000000121a55 : ja 0x121a63 ; ret
0x0000000000121b7d : ja 0x121be3 ; ret
0x0000000000121c2d : ja 0x121c93 ; ret
0x0000000000121cdd : ja 0x121d43 ; ret
0x0000000000121d8d : ja 0x121e0b ; ret
0x0000000000121e5a : ja 0x121eb3 ; ret
0x0000000000121ef1 : ja 0x121f4b ; ret
0x0000000000121f75 : ja 0x121f83 ; ret
0x00000000001227ea : ja 0x122843 ; ret
0x00000000001228ba : ja 0x122913 ; ret
0x0000000000122a23 : ja 0x122a93 ; ret
0x0000000000122add : ja 0x122b5b ; ret
0x0000000000122baa : ja 0x122c03 ; ret
0x0000000000122c53 : ja 0x122cc3 ; ret
0x0000000000122d0a : ja 0x122d63 ; ret
0x0000000000122dad : ja 0x122e2b ; ret
0x00000000001231fd : ja 0x123263 ; ret
0x00000000001232ad : ja 0x12331b ; ret
0x000000000012335d : ja 0x1233c3 ; ret
0x00000000001234fd : ja 0x123563 ; ret
0x00000000001235ad : ja 0x123623 ; ret
0x000000000012365d : ja 0x12366b ; ret
0x000000000012368d : ja 0x12369b ; ret
0x00000000001236bd : ja 0x1236cb ; ret
0x00000000001236ed : ja 0x1236fb ; ret
0x00000000001237c0 : ja 0x1237cb ; ret
0x00000000001237ed : ja 0x1237fb ; ret
0x000000000012381d : ja 0x12382b ; ret
0x0000000000123850 : ja 0x12385b ; ret
0x000000000012387d : ja 0x12388b ; ret
0x0000000000130e5d : ja 0x130e6b ; ret
0x0000000000130ee4 : ja 0x130ebc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130f07 : ja 0x130f13 ; ret
0x0000000000130ef8 : ja 0x130f2f ; mov eax, 0xe3 ; syscall
0x0000000000132e6f : ja 0x132e7b ; ret
0x0000000000132e63 : ja 0x132e90 ; xor eax, eax ; syscall
0x0000000000132f42 : ja 0x132f53 ; ret
0x0000000000132f33 : ja 0x132f6b ; mov eax, 0x59 ; syscall
0x0000000000134bf7 : ja 0x134c0a ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000140e67 : ja 0x140e6c ; ret
0x000000000014b9d1 : ja 0x14ba24 ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000014ebbd : ja 0x14ebae ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000015db87 : ja 0x15dba3 ; ret
0x000000000015dcff : ja 0x15dd22 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000015dfc4 : ja 0x15dff0 ; ret
0x00000000001675bd : ja 0x1675b4 ; xor eax, eax ; ret
0x000000000018eb34 : ja 0x18eb7a ; jb 0x18eb46 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018f021 : ja 0x18f058 ; jb 0x18f030 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000018fef9 : ja 0x18fec7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000001929f3 : ja 0x1929f7 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000192f34 : ja 0x192f92 ; jb 0x192f46 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000193579 : ja 0x1935be ; jb 0x193588 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000019adab : ja 0x19adb3 ; ret
0x00000000001acf84 : ja 0x1acf0b ; ret 0x48f
0x00000000001be25d : ja 0x1be265 ; add byte ptr [rbp + rsi*8 - 0x19], ah ; jmp rsp
0x00000000001c0c0d : ja 0x1c0c16 ; add byte ptr [rbx + rbp - 0xb], dl ; call qword ptr [rax]
0x00000000001da7ed : ja 0x1da7e6 ; call rdx
0x00000000001da7ec : ja 0x1da7e7 ; call rdx
0x00000000001e3ec4 : ja 0x1e3ed2 ; add byte ptr [rax], al ; adc byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x000000000002dbae : ja 0x2dbb8 ; add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x000000000002dbad : ja 0x2dbb9 ; add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x000000000003529d : ja 0x3527e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003f153 : ja 0x3f163 ; ret
0x000000000003f1c2 : ja 0x3f1d3 ; ret
0x000000000003f20f : ja 0x3f25b ; ret
0x00000000000448da : ja 0x44933 ; ret
0x000000000005338e : ja 0x533e0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000617b2 : ja 0x61795 ; mov eax, r9d ; ret
0x0000000000079d85 : ja 0x79d12 ; ret 0x348
0x000000000007bd3d : ja 0x7bd4b ; ret
0x000000000007bd70 : ja 0x7bd7b ; ret
0x0000000000089e58 : ja 0x89e71 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0d4d : ja 0xa0d2e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b68c7 : ja 0xb68cd ; ret
0x00000000000b68e3 : ja 0xb68ed ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6924 : ja 0xb6933 ; mov qword ptr [rdi], rcx ; ret
0x00000000000b69a9 : ja 0xb69bd ; ret
0x00000000000b69ff : ja 0xb6a17 ; ret
0x00000000000b6a81 : ja 0xb6a9d ; ret
0x00000000000b7ec7 : ja 0xb7ed1 ; lea rax, [rdi + 2] ; ret
0x00000000000b7ee3 : ja 0xb7ef1 ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b7f34 : ja 0xb7f47 ; mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000b8019 : ja 0xb8031 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b808f : ja 0xb80ab ; lea rax, [rdi + 0x14] ; ret
0x00000000000b8111 : ja 0xb8131 ; lea rax, [rdi + 0x18] ; ret
0x00000000000b9b77 : ja 0xb9b7d ; ret
0x00000000000b9b93 : ja 0xb9b9d ; mov dword ptr [rdi], ecx ; ret
0x00000000000b9bd4 : ja 0xb9be3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000b9c59 : ja 0xb9c6d ; ret
0x00000000000b9caf : ja 0xb9cc7 ; ret
0x00000000000b9d31 : ja 0xb9d4d ; ret
0x00000000000ba647 : ja 0xba64d ; ret
0x00000000000ba663 : ja 0xba66d ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba6a4 : ja 0xba6b3 ; mov qword ptr [rdi], rcx ; ret
0x00000000000ba729 : ja 0xba73d ; ret
0x00000000000ba77f : ja 0xba797 ; ret
0x00000000000ba801 : ja 0xba81d ; ret
0x00000000000bb574 : ja 0xbb5a5 ; jb 0xbb586 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bb993 : ja 0xbb9b0 ; jb 0xbb99f ; mov byte ptr [rdi], cl ; ret
0x00000000000d0609 : ja 0xd0629 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000d2a3d : ja 0xd2a4b ; ret
0x00000000000e45f7 : ja 0xe464b ; ret
0x00000000000e468d : ja 0xe46eb ; ret
0x00000000000e4720 : ja 0xe472b ; ret
0x00000000000e47b0 : ja 0xe4813 ; ret
0x00000000000e48fa : ja 0xe4933 ; ret
0x00000000000e496d : ja 0xe497b ; ret
0x00000000000e49aa : ja 0xe49f3 ; ret
0x00000000000e4a2d : ja 0xe4a3b ; ret
0x00000000000e4dfc : ja 0xe4e28 ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000e5d4f : ja 0xe5d55 ; add byte ptr [rax], al ; syscall
0x0000000000103d9d : jae 0x103da2 ; ret
0x0000000000103dcd : jae 0x103dd2 ; ret
0x0000000000103dfd : jae 0x103e02 ; ret
0x0000000000103e2d : jae 0x103e32 ; ret
0x0000000000103e5d : jae 0x103e62 ; ret
0x0000000000103e8d : jae 0x103e92 ; ret
0x0000000000103ebd : jae 0x103ec2 ; ret
0x0000000000103eed : jae 0x103ef2 ; ret
0x000000000010f69d : jae 0x10f6a2 ; ret
0x000000000010f97d : jae 0x10f982 ; ret
0x000000000010f9ad : jae 0x10f9b2 ; ret
0x000000000010facd : jae 0x10fad2 ; ret
0x000000000010fafd : jae 0x10fb02 ; ret
0x000000000010fbbd : jae 0x10fbc2 ; ret
0x000000000010fbed : jae 0x10fbf2 ; ret
0x000000000011077d : jae 0x110782 ; ret
0x000000000011097d : jae 0x110982 ; ret
0x00000000001109ad : jae 0x1109b2 ; ret
0x00000000001109dd : jae 0x1109e2 ; ret
0x0000000000110a0d : jae 0x110a12 ; ret
0x0000000000110a3d : jae 0x110a42 ; ret
0x0000000000110afd : jae 0x110b02 ; ret
0x0000000000110b2d : jae 0x110b32 ; ret
0x00000000001113ed : jae 0x1113f2 ; ret
0x000000000011141d : jae 0x111422 ; ret
0x000000000011144d : jae 0x111452 ; ret
0x0000000000111480 : jae 0x111485 ; ret
0x0000000000111c2d : jae 0x111c32 ; ret
0x0000000000111c60 : jae 0x111c65 ; ret
0x0000000000111c8d : jae 0x111c92 ; ret
0x0000000000111cbd : jae 0x111cc2 ; ret
0x0000000000111ced : jae 0x111cf2 ; ret
0x0000000000111d20 : jae 0x111d25 ; ret
0x0000000000111d4d : jae 0x111d52 ; ret
0x0000000000111d7d : jae 0x111d82 ; ret
0x0000000000111dad : jae 0x111db2 ; ret
0x0000000000115210 : jae 0x115215 ; ret
0x000000000011601d : jae 0x116022 ; ret
0x000000000011640d : jae 0x116412 ; ret
0x00000000001165dd : jae 0x1165e2 ; ret
0x0000000000116efd : jae 0x116f02 ; ret
0x0000000000116fbd : jae 0x116fc2 ; ret
0x00000000001171ad : jae 0x1171b2 ; ret
0x00000000001171dd : jae 0x1171e2 ; ret
0x000000000011728d : jae 0x117292 ; ret
0x000000000011733d : jae 0x117342 ; ret
0x000000000011765d : jae 0x117662 ; ret
0x000000000011768d : jae 0x117692 ; ret
0x00000000001176bd : jae 0x1176c2 ; ret
0x000000000011b83f : jae 0x11b844 ; ret
0x000000000011babd : jae 0x11bac2 ; ret
0x000000000011baed : jae 0x11baf2 ; ret
0x000000000011bbbd : jae 0x11bbc2 ; ret
0x000000000011bbed : jae 0x11bbf2 ; ret
0x000000000011bc20 : jae 0x11bc25 ; ret
0x000000000011bc4d : jae 0x11bc52 ; ret
0x000000000011bc7d : jae 0x11bc82 ; ret
0x000000000011bcad : jae 0x11bcb2 ; ret
0x000000000011bcdd : jae 0x11bce2 ; ret
0x000000000011c1c3 : jae 0x11c1b5 ; divsd xmm1, xmm2 ; jmp 0x11c207
0x000000000011df7e : jae 0x11dfa9 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x000000000011e189 : jae 0x11e18d ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000011f820 : jae 0x11f825 ; ret
0x000000000011f84d : jae 0x11f852 ; ret
0x000000000011f87d : jae 0x11f882 ; ret
0x000000000011f8b0 : jae 0x11f8b5 ; ret
0x000000000011f8e0 : jae 0x11f8e5 ; ret
0x000000000011f90d : jae 0x11f912 ; ret
0x000000000011f940 : jae 0x11f945 ; ret
0x000000000011f96d : jae 0x11f972 ; ret
0x000000000011f99d : jae 0x11f9a2 ; ret
0x000000000011f9d0 : jae 0x11f9d5 ; ret
0x000000000011f9fd : jae 0x11fa02 ; ret
0x000000000011fa30 : jae 0x11fa35 ; ret
0x000000000012175d : jae 0x121762 ; ret
0x000000000012178d : jae 0x121792 ; ret
0x00000000001218cd : jae 0x1218d2 ; ret
0x00000000001218fd : jae 0x121902 ; ret
0x000000000012192d : jae 0x121932 ; ret
0x000000000012195d : jae 0x121962 ; ret
0x00000000001219a4 : jae 0x12199b ; ret
0x0000000000121a8d : jae 0x121a92 ; ret
0x0000000000121b10 : jae 0x121b15 ; ret
0x0000000000121b3d : jae 0x121b42 ; ret
0x000000000012202d : jae 0x122032 ; ret
0x000000000012205d : jae 0x122062 ; ret
0x00000000001220a0 : jae 0x1220a5 ; ret
0x00000000001220cd : jae 0x1220d2 ; ret
0x00000000001220fd : jae 0x122102 ; ret
0x000000000012212d : jae 0x122132 ; ret
0x000000000012215d : jae 0x122162 ; ret
0x000000000012218d : jae 0x122192 ; ret
0x00000000001221bd : jae 0x1221c2 ; ret
0x00000000001221ed : jae 0x1221f2 ; ret
0x000000000012221d : jae 0x122222 ; ret
0x0000000000122250 : jae 0x122255 ; ret
0x000000000012227d : jae 0x122282 ; ret
0x00000000001222b0 : jae 0x1222b5 ; ret
0x00000000001222dd : jae 0x1222e2 ; ret
0x000000000012230d : jae 0x122312 ; ret
0x000000000012233d : jae 0x122342 ; ret
0x000000000012236d : jae 0x122372 ; ret
0x000000000012239d : jae 0x1223a2 ; ret
0x00000000001223d0 : jae 0x1223d5 ; ret
0x0000000000122400 : jae 0x122405 ; ret
0x000000000012242d : jae 0x122432 ; ret
0x000000000012245d : jae 0x122462 ; ret
0x0000000000122490 : jae 0x122495 ; ret
0x00000000001224c0 : jae 0x1224c5 ; ret
0x00000000001224f0 : jae 0x1224f5 ; ret
0x000000000012251d : jae 0x122522 ; ret
0x000000000012254d : jae 0x122552 ; ret
0x000000000012257d : jae 0x122582 ; ret
0x00000000001225ad : jae 0x1225b2 ; ret
0x00000000001225e0 : jae 0x1225e5 ; ret
0x000000000012260d : jae 0x122612 ; ret
0x000000000012263d : jae 0x122642 ; ret
0x0000000000122670 : jae 0x122675 ; ret
0x000000000012269d : jae 0x1226a2 ; ret
0x00000000001226d0 : jae 0x1226d5 ; ret
0x0000000000122700 : jae 0x122705 ; ret
0x000000000012272d : jae 0x122732 ; ret
0x000000000012275d : jae 0x122762 ; ret
0x000000000012278d : jae 0x122792 ; ret
0x000000000012287d : jae 0x122882 ; ret
0x000000000012294d : jae 0x122952 ; ret
0x000000000012297d : jae 0x122982 ; ret
0x00000000001229b0 : jae 0x1229b5 ; ret
0x00000000001229dd : jae 0x1229e2 ; ret
0x0000000000122e70 : jae 0x122e75 ; ret
0x0000000000122e9d : jae 0x122ea2 ; ret
0x0000000000122ecd : jae 0x122ed2 ; ret
0x0000000000122f00 : jae 0x122f05 ; ret
0x0000000000129ddf : jae 0x129dd5 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000129ebb : jae 0x129ecc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129efb : jae 0x129f14 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000129f3b : jae 0x129f5c ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000150d1a : jae 0x150d2b ; mov rdi, rbp ; call 0x15cfa7
0x0000000000159a34 : jae 0x1599bb ; ret 0x3901
0x000000000015dc65 : jae 0x15dc74 ; xor eax, eax ; ret
0x000000000015dca5 : jae 0x15dcb4 ; xor eax, eax ; ret
0x0000000000162ab0 : jae 0x162ab5 ; ret
0x0000000000162b00 : jae 0x162b05 ; ret
0x0000000000162fd9 : jae 0x162f74 ; sub byte ptr [rax], al ; call qword ptr [rax]
0x00000000001662f4 : jae 0x1662d7 ; mov eax, 1 ; ret
0x00000000001ab542 : jae 0x1ab524 ; jo 0x1ab5c0 ; mov ebp, 0xfb67d10d ; ret
0x00000000001ac3de : jae 0x1ac3b9 ; push rsi ; pop rdx ; je 0x1ac3ae ; ret 0xacfc
0x00000000001bd259 : jae 0x1bd25c ; call qword ptr [rax + 0x20fffb72]
0x00000000001bd295 : jae 0x1bd294 ; jmp rsi
0x00000000001bd315 : jae 0x1bd314 ; call rdx
0x00000000001bd311 : jae 0x1bd314 ; inc dword ptr [rdx + 0x73] ; sti ; call rdx
0x00000000001bd314 : jae 0x1bd315 ; call rdx
0x00000000001bd451 : jae 0x1bd450 ; call qword ptr [rax]
0x00000000001c0aed : jae 0x1c0af6 ; add byte ptr [rdx + rbx - 0xb], al ; call qword ptr [rax]
0x00000000001cb7ea : jae 0x1cb7f8 ; ret
0x00000000001d06ad : jae 0x1d06a0 ; call qword ptr [rax]
0x00000000001d06c1 : jae 0x1d06b4 ; call qword ptr [rax]
0x000000000002923f : jae 0x291cc ; retf 0xb941
0x000000000003ebee : jae 0x3ec35 ; xor eax, eax ; pop rbx ; ret
0x000000000003f18d : jae 0x3f192 ; ret
0x000000000003f74d : jae 0x3f752 ; ret
0x0000000000052057 : jae 0x52060 ; xor eax, eax ; ret
0x000000000008483b : jae 0x84844 ; mov eax, dword ptr [rdx] ; ret
0x000000000008ff2d : jae 0x8ff55 ; movzx eax, byte ptr [rax] ; ret
0x000000000009a7c5 : jae 0x9a7e6 ; lea rax, [rdx - 8] ; ret
0x000000000009d04e : jae 0x9d05e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d2b1d : jae 0xd2b22 ; ret
0x00000000000d5e2d : jae 0xd5e32 ; ret
0x00000000000d5e5d : jae 0xd5e62 ; ret
0x00000000000e454d : jae 0xe4552 ; ret
0x00000000000e4770 : jae 0xe4775 ; ret
0x00000000000e484d : jae 0xe4852 ; ret
0x00000000000e4dae : jae 0xe4db3 ; ret
0x00000000000e4e3d : jae 0xe4e42 ; ret
0x00000000000e5941 : jae 0xe5947 ; add byte ptr [rax], al ; syscall
0x00000000000e594d : jae 0xe5952 ; ret
0x00000000000e5b4d : jae 0xe5b52 ; ret
0x00000000000e5b7d : jae 0xe5b82 ; ret
0x00000000000e5bdd : jae 0xe5be2 ; ret
0x00000000000e5c0d : jae 0xe5c12 ; ret
0x00000000000e5c3d : jae 0xe5c42 ; ret
0x00000000000e5c6d : jae 0xe5c72 ; ret
0x000000000009ef8d : jae 0xf51efa7 ; ret 0xc3f3
0x000000000009ef8d : jae 0xf51efa9 ; ret 0xc3f3
0x0000000000116b7f : jb 0x116b85 ; add byte ptr [rax], al ; syscall
0x0000000000129b2b : jb 0x129b3f ; mov eax, 1 ; ret
0x000000000013000d : jb 0x130004 ; xor eax, eax ; ret
0x0000000000141108 : jb 0x1410fb ; mov eax, 0xffffffff ; ret
0x000000000014ebc1 : jb 0x14ebe5 ; ret
0x000000000014ebbb : jb 0x14ebed ; ja 0x14ebb0 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000016cd9a : jb 0x16cdaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ceea : jb 0x16cefa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d03a : jb 0x16d04a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d18a : jb 0x16d19a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d2da : jb 0x16d2ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d42a : jb 0x16d43a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d57a : jb 0x16d58a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d6ca : jb 0x16d6da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d81a : jb 0x16d82a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d96a : jb 0x16d97a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016daba : jb 0x16daca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dc0a : jb 0x16dc1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dd5a : jb 0x16dd6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016deaa : jb 0x16deba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dffa : jb 0x16e00a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016f76a : jb 0x16f77a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016f8ba : jb 0x16f8ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016fa0a : jb 0x16fa1a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016fb5a : jb 0x16fb6a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016fcaa : jb 0x16fcba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016fdfa : jb 0x16fe0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ff4a : jb 0x16ff5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017009a : jb 0x1700aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001701ea : jb 0x1701fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017033a : jb 0x17034a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017048a : jb 0x17049a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001705da : jb 0x1705ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017072a : jb 0x17073a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000017087a : jb 0x17088a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001709ca : jb 0x1709da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000018eb36 : jb 0x18eb44 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000018f023 : jb 0x18f02e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001925ce : jb 0x1925da ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000192c85 : jb 0x192c94 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000192c90 : jb 0x192ca3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000192c9d : jb 0x192ca5 ; mov byte ptr [rdi], cl ; ret
0x0000000000192f36 : jb 0x192f44 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000019357b : jb 0x193586 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001afe3d : jb 0x1afe32 ; jmp rax
0x00000000001afe3d : jb 0x1afe33 ; jmp rax
0x00000000001afe69 : jb 0x1afe5e ; jmp rax
0x00000000001afe69 : jb 0x1afe5f ; jmp rax
0x0000000000001acd : jb 0x1b4c ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001bd25d : jb 0x1bd25c ; jmp qword ptr [rax]
0x00000000001bd2a1 : jb 0x1bd2a4 ; call qword ptr [rsi + 0x26fffb71]
0x00000000001bd3dd : jb 0x1bd3dc ; call rsp
0x00000000001bd3d9 : jb 0x1bd3dc ; inc dword ptr [rdx + rsi*2 - 5] ; call rsp
0x00000000001bd3dc : jb 0x1bd3dd ; call rsp
0x00000000001bda30 : jb 0x1bd9c1 ; sti ; jmp rdx
0x00000000001c0a8d : jb 0x1c0a96 ; add byte ptr [rdi + rdx], dl ; cmc ; call rsp
0x00000000001c0d89 : jb 0x1c0d82 ; jmp rax
0x00000000001c0d88 : jb 0x1c0d83 ; jmp rax
0x00000000001c17b9 : jb 0x1c17b3 ; call qword ptr [rax]
0x00000000001c2379 : jb 0x1c2375 ; jmp qword ptr [rax]
0x00000000001cf271 : jb 0x1cf270 ; call qword ptr [rax]
0x00000000001daa25 : jb 0x1daa2e ; add al, bl ; jg 0x1daa26 ; call qword ptr [rax]
0x0000000000001db1 : jb 0x1de4 ; retf
0x00000000001e65ec : jb 0x1e65fb ; add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; retf
0x000000000002a8de : jb 0x2a94c ; mov rdx, rax ; jmp 0x2a8a3
0x0000000000002c30 : jb 0x2bd0 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x0000000000003a22 : jb 0x3aa2 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000561ba : jb 0x56147 ; retf 0x703d
0x00000000000561b9 : jb 0x56148 ; retf 0x703d
0x00000000000827f5 : jb 0x8281b ; mov dword ptr [rcx], eax ; ret
0x000000000008296b : jb 0x8299a ; mov byte ptr [rcx], dil ; ret
0x000000000008a227 : jb 0x8a256 ; mov byte ptr [rcx], dil ; ret
0x000000000008a317 : jb 0x8a346 ; mov byte ptr [rcx], dil ; ret
0x0000000000095447 : jb 0x95431 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000009d60b : jb 0x9d620 ; mov rax, r8 ; mov qword ptr [rdi], rsi ; ret
0x000000000009ffd5 : jb 0x9ffdb ; sub cl, byte ptr [rax + 0x39] ; retf 0xf375
0x00000000000a1f13 : jb 0xa1ef4 ; mov rdx, rax ; jmp 0xa1ea4
0x00000000000a2063 : jb 0xa2044 ; mov rdx, rax ; jmp 0xa1ff4
0x00000000000a22d3 : jb 0xa22b4 ; mov rdx, rax ; jmp 0xa226a
0x00000000000a24f3 : jb 0xa24d4 ; mov rdx, rax ; jmp 0xa248a
0x00000000000a2c10 : jb 0xa2bf2 ; mov rdx, rax ; jmp 0xa2ba2
0x00000000000a4e38 : jb 0xa4e1a ; mov rdx, rax ; jmp 0xa4dd0
0x00000000000a5de0 : jb 0xa5dc2 ; mov rdx, rax ; jmp 0xa5d75
0x00000000000a6a92 : jb 0xa6a74 ; mov rdx, rax ; jmp 0xa6a34
0x00000000000a6c1c : jb 0xa6bff ; mov rdx, rax ; jmp 0xa6bc0
0x00000000000b884a : jb 0xb8859 ; add byte ptr [rax], al ; ret
0x00000000000bb4d4 : jb 0xbb4dd ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000000bb576 : jb 0xbb584 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bb575 : jb 0xbb585 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000bb995 : jb 0xbb99d ; mov byte ptr [rdi], cl ; ret
0x00000000000cdd21 : jb 0xcdcae ; retf 0x703d
0x00000000000cdd20 : jb 0xcdcaf ; retf 0x703d
0x0000000000116c4e : jbe 0x116c9d ; add esp, 0x38 ; ret
0x0000000000116d1e : jbe 0x116d6d ; add esp, 0x38 ; ret
0x0000000000119b28 : jbe 0x119b22 ; inc dword ptr [rbp - 0x7cee8b40] ; ret
0x000000000014c7e2 : jbe 0x14c824 ; sub al, byte ptr [rax] ; test eax, eax ; je 0x14c7f9 ; ret
0x000000000015db48 : jbe 0x15db55 ; xor eax, eax ; ret
0x000000000015dfc1 : jbe 0x15dfd5 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000018a617 : jbe 0x18a688 ; add rax, rdi ; vzeroupper ; ret
0x000000000018f5c7 : jbe 0x18f638 ; add rax, rdi ; vzeroupper ; ret
0x00000000001ace1c : jbe 0x1acdef ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000001ace1b : jbe 0x1acdf0 ; mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000001af409 : jbe 0x1af3fd ; jmp qword ptr [rax]
0x00000000001af421 : jbe 0x1af415 ; call rax
0x00000000001af429 : jbe 0x1af41d ; call qword ptr [rax]
0x00000000001af425 : jbe 0x1af41d ; push rax ; jbe 0x1af421 ; call qword ptr [rax]
0x00000000001b0728 : jbe 0x1b0792 ; call rax
0x00000000001b10c0 : jbe 0x1b10cf ; hlt ; jmp qword ptr [rax]
0x00000000001c0b9d : jbe 0x1c0ba6 ; add byte ptr [rdx], dh ; cmc ; jmp qword ptr [rax]
0x00000000001cf4dd : jbe 0x1cf4cf ; call rsp
0x000000000002a312 : jbe 0x2a30c ; ret
0x0000000000002cc3 : jbe 0x2c97 ; clc ; ret
0x0000000000002ebe : jbe 0x2ed8 ; xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000002f11b : jbe 0x2f0fd ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000000038ff : jbe 0x38aa ; outsb dx, byte ptr [rsi] ; retf
0x000000000004012e : jbe 0x400e4 ; cmp al, byte ptr [rax] ; ret
0x000000000005241b : jbe 0x52491 ; xor eax, eax ; ret
0x000000000008511f : jbe 0x85172 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0b09 : jbe 0xa0b2b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000abc56 : jbe 0xabc95 ; add rax, rdi ; ret
0x00000000000abc66 : jbe 0xabc97 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000abc76 : jbe 0xabc97 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000abc86 : jbe 0xabc97 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000b1c59 : jbe 0xb1c53 ; ret 0xf10
0x00000000000b3879 : jbe 0xb3873 ; ret 0xf10
0x00000000000d032c : jbe 0xd0383 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000d0426 : jbe 0xd0465 ; add rax, rdi ; ret
0x00000000000d0436 : jbe 0xd0467 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000d0446 : jbe 0xd0467 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000d0456 : jbe 0xd0467 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000e3120 : jbe 0xe3171 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e5c31 : jbe 0xe5c37 ; add byte ptr [rax], al ; syscall
0x0000000000102469 : je 0x10247f ; mov rdi, rbx ; call r12
0x000000000010d0a4 : je 0x10d0cf ; cmp byte ptr [rax - 0x77], cl ; ret 0xce9
0x000000000010f485 : je 0x10f497 ; mov eax, 0x1c ; syscall
0x000000000010f611 : je 0x10f679 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x000000000010ffcd : je 0x10ffff ; mov eax, 0x101 ; syscall
0x00000000001106f8 : je 0x110727 ; mov eax, 0x48 ; syscall
0x0000000000110de7 : je 0x110e12 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000114f80 : je 0x114f9d ; neg eax ; pop rbx ; ret
0x00000000001151d0 : je 0x1151ed ; neg eax ; pop rbx ; ret
0x0000000000115686 : je 0x1156b9 ; mov eax, 0x118 ; syscall
0x0000000000116dae : je 0x116db5 ; ret
0x0000000000118c23 : je 0x118c5f ; mov eax, 0x105 ; syscall
0x0000000000118d43 : je 0x118d4e ; mov qword ptr [rax], rdx ; ret
0x0000000000118e22 : je 0x118e17 ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000011a984 : je 0x11a97b ; dec dword ptr [rax - 0x77] ; ret
0x000000000011b808 : je 0x11b819 ; mov dword ptr [rip + 0x2cfb38], edi ; ret
0x000000000011ce5f : je 0x11ce6b ; ret
0x000000000011eafd : je 0x11eb86 ; call rax
0x000000000011ec94 : je 0x11ed76 ; call rax
0x0000000000121886 : je 0x12188b ; ret
0x0000000000121f66 : je 0x121f9f ; mov eax, 0x149 ; syscall
0x00000000001244d9 : je 0x1244e7 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000001245da : je 0x1245ea ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x000000000012e7f7 : je 0x12e803 ; pop rbx ; ret
0x000000000012e7e6 : je 0x12e829 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000013008d : je 0x13009b ; ret
0x0000000000130709 : je 0x13070e ; ret
0x000000000013076d : je 0x130772 ; ret
0x00000000001307a8 : je 0x1307b6 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x0000000000130ea2 : je 0x130ed2 ; call rax
0x0000000000131044 : je 0x13105e ; pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x0000000000132f9c : je 0x132fae ; add rsp, 8 ; ret
0x00000000001335a2 : je 0x1335b3 ; ret
0x000000000013442c : je 0x134457 ; cmp byte ptr [rax + 0x29], cl ; ret
0x000000000013c5e7 : je 0x13c5f3 ; mov rdi, rbx ; call rax
0x000000000013c89f : je 0x13c8ab ; mov rdi, rbx ; call rax
0x000000000013c9af : je 0x13c9c3 ; lea rdi, [rip + 0x2b2e28] ; call rax
0x000000000013e603 : je 0x13e62f ; xor byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001401b3 : je 0x1401ab ; pop rbx ; ret
0x0000000000145788 : je 0x145793 ; ret
0x000000000014a73d : je 0x14a5bc ; jmp 0x14a717
0x000000000014bac2 : je 0x14bace ; mov rdi, rbx ; call rax
0x000000000014bbff : je 0x14bc0b ; mov rdi, rbx ; call rax
0x000000000014c299 : je 0x14c2c6 ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x000000000014c4d9 : je 0x14c4e5 ; mov rdi, rbp ; call rax
0x000000000014c7e8 : je 0x14c7f3 ; ret
0x000000000014d56e : je 0x14d57a ; mov rdi, rbx ; call rax
0x000000000014d916 : je 0x14d926 ; mov rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000014db23 : je 0x14db34 ; xor eax, eax ; ret
0x000000000014e152 : je 0x14e15e ; mov rdi, rbp ; call rdx
0x000000000014e69b : je 0x14e7b3 ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000014ead6 : je 0x14eb04 ; sbb byte ptr [rbp + rcx*4 + 0x64], cl ; and al, 0x10 ; call qword ptr [rax]
0x0000000000152f12 : je 0x152f26 ; lea rdi, [rbx + 0xc8] ; call rax
0x0000000000153953 : je 0x15395f ; mov rdi, r12 ; call rax
0x0000000000153b3b : je 0x153b49 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000155045 : je 0x154f54 ; mov rdi, rbx ; call rax
0x0000000000154f6a : je 0x154f76 ; mov rdi, r12 ; call rax
0x000000000015518e : je 0x1550b8 ; mov rdi, rbp ; call rax
0x00000000001553a8 : je 0x1553b4 ; mov rdi, rbp ; call rax
0x0000000000155eaf : je 0x155ebd ; lea rdi, [rbx + 0x68] ; call rax
0x00000000001565d9 : je 0x1565e5 ; mov rdi, r12 ; call rax
0x000000000015693f : je 0x15694d ; lea rdi, [rbx + 0x58] ; call rax
0x0000000000156b1d : je 0x156b49 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000156ded : je 0x156e17 ; js 0x156d7e ; ret 0x1b9
0x0000000000159661 : je 0x159618 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015960f : je 0x15961b ; pop rbx ; ret
0x00000000001596bb : je 0x1596c3 ; pop rbx ; ret
0x0000000000159719 : je 0x1596c4 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015976b : je 0x1597d7 ; sub rax, -0x80 ; pop rbx ; ret
0x000000000015982b : je 0x159899 ; add rax, 0xa0 ; pop rbx ; ret
0x00000000001598eb : je 0x159959 ; add rax, 0xa8 ; pop rbx ; ret
0x000000000015a75b : je 0x15a769 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000015aec4 : je 0x15aed2 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000015c6e7 : je 0x15c712 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015c7c7 : je 0x15c7f2 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015c8a7 : je 0x15c8d2 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015c987 : je 0x15c9b2 ; or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000015ffa8 : je 0x15ffb4 ; xor eax, eax ; ret
0x00000000001847f3 : je 0x1847bd ; lea r10, [r10 + r9] ; jmp r10
0x00000000001854c5 : je 0x1854cd ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001855c3 : je 0x18558d ; lea r10, [r10 + r9] ; jmp r10
0x00000000001864aa : je 0x1864b2 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000186603 : je 0x1865cd ; lea r10, [r10 + r9] ; jmp r10
0x00000000001881d3 : je 0x18819d ; lea r10, [r10 + r9] ; jmp r10
0x000000000018a26d : je 0x18a250 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000018a8b1 : je 0x18a918 ; and ch, al ; std ; xlatb ; ret
0x000000000018a99f : je 0x18aa06 ; and ch, al ; std ; xlatb ; ret
0x000000000018acf5 : je 0x18ad07 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000018b073 : je 0x18b03d ; lea r10, [r10 + r9] ; jmp r10
0x000000000018c703 : je 0x18c6cd ; lea r10, [r10 + r9] ; jmp r10
0x0000000000191357 : je 0x191361 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001997bd : je 0x1997e8 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000019a1e3 : je 0x19a1e9 ; call rcx
0x000000000019a2e3 : je 0x19a2ee ; call rax
0x00000000001aa94c : je 0x1aa97a ; push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000001ab6a8 : je 0x1ab673 ; xor al, 0xd8 ; ret
0x00000000001ac3e2 : je 0x1ac3aa ; ret 0xacfc
0x00000000001af3c5 : je 0x1af3bd ; inc dword ptr [rax] ; jne 0x1af3c1 ; call qword ptr [rax]
0x00000000001afea9 : je 0x1afe9e ; jmp rax
0x00000000001afea9 : je 0x1afe9f ; jmp rax
0x00000000001bd24d : je 0x1bd24c ; jmp rax
0x00000000001bd309 : je 0x1bd308 ; jmp qword ptr [rdx]
0x00000000001bd3c0 : je 0x1bd433 ; sti ; jmp rsp
0x00000000001beb51 : je 0x1beb3f ; jmp qword ptr [rax]
0x00000000001bef68 : je 0x1befd2 ; in al, dx ; jmp qword ptr [rax]
0x00000000001bf2d8 : je 0x1bf2a8 ; in al, dx ; call qword ptr [rax]
0x00000000001bf828 : je 0x1bf81f ; in eax, dx ; jmp rsp
0x00000000001bfa88 : je 0x1bfaba ; out dx, al ; jmp qword ptr [rax]
0x00000000001bfb60 : je 0x1bfb0b ; out dx, al ; jmp qword ptr [rax]
0x00000000001c0960 : je 0x1c0913 ; hlt ; jmp qword ptr [rax]
0x00000000001c08e8 : je 0x1c094e ; hlt ; call qword ptr [rax]
0x00000000001c0b2d : je 0x1c0b36 ; add ah, dl ; sbb al, 0xf5 ; call rax
0x00000000001c2298 : je 0x1c22d2 ; clc ; jmp rax
0x00000000001c23ec : je 0x1c23ec ; add dword ptr [rax], eax ; xchg eax, edi ; jmp rsp
0x00000000001c2738 : je 0x1c275b ; stc ; call rsp
0x00000000001c3478 : je 0x1c348e ; std ; jmp rax
0x00000000001ceabc : je 0x1cea78 ; add byte ptr [rax], al ; push rax ; sub ch, ch ; call rsp
0x0000000000001cce : je 0x1cfa ; ret
0x00000000001d06bc : je 0x1d0694 ; add byte ptr [rax], al ; sal byte ptr [rbx - 0x11], 1 ; call qword ptr [rax]
0x00000000001d55bc : je 0x1d55e3 ; add dword ptr [rax], eax ; mov al, 0xb3 ; jmp qword ptr [rcx]
0x00000000001d657c : je 0x1d658a ; hlt ; jmp qword ptr [rcx]
0x00000000001d74dc : je 0x1d753a ; hlt ; jmp rcx
0x00000000001d839c : je 0x1d8342 ; hlt ; jmp qword ptr [rcx]
0x00000000001d8fbc : je 0x1d901b ; add dword ptr [rax], eax ; nop ; retf
0x00000000001da0cc : je 0x1da132 ; cmc ; jmp qword ptr [rbx]
0x00000000001da2bc : je 0x1da330 ; add dword ptr [rax], eax ; adc byte ptr [rbx - 0xb], ah ; jmp qword ptr [rbx]
0x00000000001dab61 : je 0x1dab6a ; add byte ptr [rbx + rax*4], bh ; cmc ; call qword ptr [rbx]
0x00000000001dab75 : je 0x1dab7e ; add byte ptr [rax - 0x7d], cl ; cmc ; call qword ptr [rbx]
0x00000000001dab89 : je 0x1dab92 ; add byte ptr [rbx + rax*4 - 0xb], dl ; call qword ptr [rsi]
0x00000000001dab88 : je 0x1dab93 ; add byte ptr [rbx + rax*4 - 0xb], dl ; call qword ptr [rsi]
0x0000000000021c32 : je 0x21c3e ; mov rdi, r12 ; call rax
0x0000000000025875 : je 0x258a3 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002602f : je 0x2605e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002631f : je 0x2634e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000026667 : je 0x26696 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000000268a6 : je 0x268d5 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000026f0e : je 0x26f3c ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000027aa6 : je 0x27ad5 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000028b32 : je 0x28b61 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002962b : je 0x2965a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000000299d3 : je 0x29a02 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000029e17 : je 0x29e46 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002a252 : je 0x2a280 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002a814 : je 0x2a843 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002a7a3 : je 0x2a950 ; mov rdx, rax ; jmp 0x2a768
0x000000000002aba8 : je 0x2a950 ; mov rdx, rax ; jmp 0x2ab6d
0x000000000002ac1f : je 0x2a950 ; mov rdx, rax ; jmp 0x2abe4
0x000000000002ab43 : je 0x2ab72 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002b057 : je 0x2b086 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002b492 : je 0x2b4c0 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000002cb07 : je 0x2cb13 ; ret
0x000000000002cb02 : je 0x2cb18 ; cmp esi, 3 ; je 0x2cb18 ; ret
0x000000000002d4ad : je 0x2d4b3 ; call rax
0x000000000002d648 : je 0x2d64e ; call rcx
0x000000000002e98b : je 0x2e991 ; call rax
0x0000000000034e6e : je 0x34e7e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000003d868 : je 0x3d91b ; add rdx, rcx ; jmp 0x3d889
0x000000000003d867 : je 0x3d91c ; add rdx, rcx ; jmp 0x3d88a
0x000000000003dcf7 : je 0x3dc7b ; ret
0x000000000003dcf6 : je 0x3dc7c ; ret
0x000000000003e345 : je 0x3e334 ; ret
0x0000000000043a60 : je 0x43a71 ; mov dword ptr [rdi], 0 ; pop rbx ; ret
0x00000000000449b4 : je 0x4498c ; mov eax, 0xffffffff ; ret
0x0000000000045c35 : je 0x45c5f ; add ch, al ; ret
0x000000000004faa4 : je 0x4fac1 ; mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x000000000005143a : je 0x51466 ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000051b26 : je 0x51b53 ; cmp byte ptr [rcx], dh ; shr al, 0xa0 ; ret 2
0x00000000000655fc : je 0x65627 ; and byte ptr [rax + 1], cl ; ret
0x0000000000070652 : je 0x6d0f1 ; jmp 0x6c874
0x000000000007ef67 : je 0x7ef7b ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000007f037 : je 0x7f051 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000007f729 : je 0x7f757 ; mov rax, rdx ; pop rbx ; ret
0x000000000008031b : je 0x80358 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000008031a : je 0x80359 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000008098b : je 0x809a9 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000833e6 : je 0x83436 ; add esp, 0x20 ; pop rbx ; ret
0x00000000000833e5 : je 0x83437 ; add esp, 0x20 ; pop rbx ; ret
0x000000000008424c : je 0x84253 ; ret
0x0000000000084269 : je 0x84276 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000842a3 : je 0x84305 ; pop rbp ; pop r12 ; ret
0x000000000008432f : je 0x84391 ; pop rbp ; pop r12 ; ret
0x00000000000844ba : je 0x844e4 ; or al, 0xeb ; ret 0x5590
0x0000000000087221 : je 0x87256 ; mov eax, edx ; pop rbx ; ret
0x00000000000885bd : je 0x885e8 ; cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000088f39 : je 0x88f67 ; mov rax, rdx ; pop rbx ; ret
0x000000000008993c : je 0x8994f ; mov eax, 0xffffffff ; ret
0x0000000000089d6c : je 0x89d7f ; mov eax, 0xffffffff ; ret
0x000000000008a8af : je 0x8a8bb ; pop rbx ; ret
0x000000000008bfcc : je 0x8c003 ; dec dword ptr [rax + 0x21] ; retf 0x2148
0x000000000008dee1 : je 0x8df10 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x8a159
0x000000000008e305 : je 0x8e313 ; ret
0x0000000000091655 : je 0x9165b ; call rax
0x000000000009a2c2 : je 0x9a2ee ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000009a9e0 : je 0x9a96d ; retf 0x4c89
0x000000000009a9df : je 0x9a96e ; retf 0x4c89
0x000000000009b29f : je 0x9b456 ; call rax
0x000000000009b4bd : je 0x9b676 ; call rax
0x000000000009c938 : je 0x9c943 ; ret
0x000000000009ca36 : je 0x9ca88 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009d958 : je 0x9d97e ; movsx eax, dl ; ret
0x000000000009da52 : je 0x9da66 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009eb38 : je 0x9eb04 ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000009ec6a : je 0x9ec2f ; ret
0x000000000009ec6a : je 0x9ec31 ; ret
0x00000000000a0b74 : je 0xa0b86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1327 : je 0xa1312 ; cmp dil, 0x3d ; jne 0xa12f5 ; pop rbx ; ret
0x00000000000a8307 : je 0xa8303 ; ret
0x00000000000a833e : je 0xa8333 ; ret
0x00000000000a833a : je 0xa8337 ; cmp ecx, esi ; je 0xa8337 ; ret
0x00000000000a838f : je 0xa8373 ; ret
0x00000000000abb5c : je 0xabbb3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000abe3a : je 0xabe91 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000ac1bc : je 0xac198 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000b1161 : je 0xb1179 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000b1654 : je 0xb165f ; bsf eax, edx ; ret
0x00000000000b16fd : je 0xb1716 ; bsf rax, rdx ; ret
0x00000000000b18cc : je 0xb18f6 ; bsf rax, rdx ; ret
0x00000000000b6bc9 : je 0xb6c1a ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000b8256 : je 0xb82a7 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000ba13a : je 0xba18b ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x00000000000bb603 : je 0xbb624 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000000bc002 : je 0xbc014 ; xor eax, eax ; ret
0x00000000000bbffd : je 0xbc021 ; cmp eax, 2 ; je 0xbc019 ; xor eax, eax ; ret
0x00000000000bc04d : je 0xbc033 ; ret
0x00000000000bc09a : je 0xbc07b ; ret
0x00000000000bce3f : je 0xbce31 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd07d : je 0xbd08c ; xor eax, eax ; ret
0x00000000000bd49a : je 0xbd45f ; ret
0x00000000000bd49a : je 0xbd461 ; ret
0x00000000000bd4e2 : je 0xbd4f3 ; ret
0x00000000000bd62e : je 0xbd67d ; mov rax, rcx ; ret
0x00000000000be03e : je 0xbe06d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x00000000000be2b6 : je 0xbe2e5 ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000be5ae : je 0xbe5dd ; sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000be718 : je 0xbe725 ; test edx, edx ; jne 0xbe717 ; ret
0x000000000000c028 : je 0xc032 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000c7afa : je 0xc7b01 ; ret
0x00000000000cb91c : je 0xcb8d8 ; add byte ptr [rbp + 0x39], cl ; retf
0x00000000000d08c6 : je 0xd0936 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d0dd9 : je 0xd0df9 ; mov cl, dl ; and cl, 0xf ; je 0xd0e09 ; ret
0x00000000000d0de0 : je 0xd0e02 ; ret
0x00000000000d0df5 : je 0xd0e16 ; add rax, 2 ; ret
0x00000000000d1e27 : je 0xd1e52 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d1e45 : je 0xd1e70 ; cmp byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d27f4 : je 0xd281f ; sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d2812 : je 0xd283d ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d3757 : je 0xd3782 ; sbb byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000d9db0 : je 0xd9dae ; inc dword ptr [rbp - 0x6a7bf040] ; retf 0xffff
0x00000000000d9daf : je 0xd9daf ; inc dword ptr [rbp - 0x6a7bf040] ; retf 0xffff
0x00000000000dedb0 : je 0xdedce ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000deee7 : je 0xdef12 ; and byte ptr [rax - 0x7d], cl ; ret
0x00000000000e0e5f : je 0xe0e65 ; add byte ptr [rax], al ; syscall
0x00000000000e4ac6 : je 0xe4acc ; call rax
0x00000000000e4c63 : je 0xe4c6c ; call rax
0x00000000000e4bca : je 0xe4d5e ; call rax
0x00000000000e66a0 : je 0xe66d7 ; mov eax, 0x7f ; ret
0x00000000000e6771 : je 0xe67d8 ; mov eax, 0x20 ; ret
0x00000000000e6868 : je 0xe6852 ; mov eax, 1 ; ret
0x00000000000e6896 : je 0xe6854 ; cmp rax, 0x414a53 ; jne 0xe6873 ; jmp 0xe6854
0x00000000000e79c9 : je 0xe79df ; mov rdi, rbx ; call r12
0x00000000000efc39 : je 0xefc63 ; or byte ptr [rcx], ch ; ret
0x00000000000efe62 : je 0xefed0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f3431 : je 0xf3445 ; xor eax, eax ; pop rbx ; ret
0x00000000000f45bf : je 0xf45ed ; or byte ptr [rbp - 0x9dd8b0a], al ; ret
0x00000000000f47cc : je 0xf47f7 ; sbb al, ch ; in al, dx ; retf 0xfff2
0x00000000000f69c3 : je 0xf6950 ; ret 0xd139
0x00000000000f97b4 : je 0xf97df ; adc byte ptr [rax - 0x77], cl ; ret 0x8944
0x00000000001085d0 : jg 0x1085e4 ; ret 0x8589
0x000000000011e7db : jg 0x11e7eb ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000001307ac : jg 0x1307b8 ; jmp qword ptr [rax]
0x0000000000141684 : jg 0x14167b ; ret
0x0000000000153d72 : jg 0x153dbd ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x153d89 ; ret
0x00000000001548ed : jg 0x154940 ; add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015a962 : jg 0x15a9ad ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x15a979 ; ret
0x000000000016e979 : jg 0x16e9cc ; ret
0x000000000016e9c0 : jg 0x16ea10 ; mov ebx, 0x4f7f0ff3 ; retf
0x000000000016e9c5 : jg 0x16ea18 ; retf
0x000000000016e9ff : jg 0x16ea4a ; ret
0x000000000016ea3f : jg 0x16ea8a ; retf
0x000000000016eb79 : jg 0x16ebcc ; ret 0x894c
0x000000000016ebc0 : jg 0x16ec10 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x000000000016ebc5 : jg 0x16ec18 ; retf 0x894c
0x000000000016ebff : jg 0x16ec4a ; ret 0x894c
0x000000000016ec3b : jg 0x16ec86 ; retf 0x894c
0x0000000000171349 : jg 0x17139c ; ret
0x0000000000171390 : jg 0x1713e0 ; mov ebx, 0x4f7f0ff3 ; retf
0x0000000000171395 : jg 0x1713e8 ; retf
0x00000000001713cf : jg 0x17141a ; ret
0x000000000017140f : jg 0x17145a ; retf
0x0000000000171549 : jg 0x17159c ; ret 0x894c
0x0000000000171590 : jg 0x1715e0 ; mov edx, 0x4f7f0ff3 ; retf 0x894c
0x0000000000171595 : jg 0x1715e8 ; retf 0x894c
0x00000000001715cf : jg 0x17161a ; ret 0x894c
0x000000000017160b : jg 0x171656 ; retf 0x894c
0x0000000000173938 : jg 0x173989 ; loope 0x173937 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001739af : jg 0x1739fa ; ret 0xff2
0x00000000001739c8 : jg 0x173a19 ; loop 0x1739c7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173a3f : jg 0x173a8a ; ret
0x0000000000173a58 : jg 0x173aa9 ; jrcxz 0x173a57 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173ae8 : jg 0x173b39 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173b68 : jg 0x173bb9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173be8 : jg 0x173c39 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173c68 : jg 0x173cb9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173dc5 : jg 0x173e15 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x0000000000173dcf : jg 0x173e1a ; retf 0xff2
0x0000000000173e45 : jg 0x173e95 ; mov ebx, 0x46f00ff2 ; retf
0x0000000000173e4f : jg 0x173e9a ; retf
0x0000000000173ee8 : jg 0x173f39 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173f68 : jg 0x173fb9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173ff8 : jg 0x174049 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000174078 : jg 0x1740c9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001740ec : jg 0x1740f7 ; ret
0x0000000000174146 : jg 0x174159 ; ret
0x0000000000174141 : jg 0x174191 ; psllq mm1, qword ptr [rdi] ; jg 0x17415e ; ret
0x00000000001741b6 : jg 0x1741c9 ; ret
0x0000000000174226 : jg 0x174239 ; ret
0x0000000000174221 : jg 0x174271 ; or eax, 0xf7f0ff3 ; ret
0x0000000000174296 : jg 0x1742a9 ; ret
0x0000000000174291 : jg 0x1742e1 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000174306 : jg 0x174319 ; ret
0x0000000000174301 : jg 0x174351 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000174376 : jg 0x174389 ; ret
0x0000000000174371 : jg 0x1743c1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000001743e6 : jg 0x1743f9 ; ret
0x00000000001743e1 : jg 0x174431 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000174456 : jg 0x174469 ; ret
0x0000000000174451 : jg 0x1744a1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000001744c6 : jg 0x1744d9 ; ret
0x0000000000174536 : jg 0x174549 ; ret
0x00000000001745a6 : jg 0x1745b9 ; ret
0x00000000001745a1 : jg 0x1745f1 ; add eax, 0xf7f0ff3 ; ret
0x0000000000174616 : jg 0x174629 ; ret
0x0000000000174611 : jg 0x174661 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000174686 : jg 0x174699 ; ret
0x0000000000174681 : jg 0x1746d1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001746f6 : jg 0x174709 ; ret
0x00000000001746f1 : jg 0x174741 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000174766 : jg 0x174779 ; ret
0x0000000000174761 : jg 0x1747b1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000176458 : jg 0x1764a9 ; loope 0x176457 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001764cf : jg 0x17651a ; ret 0xff2
0x00000000001764e8 : jg 0x176539 ; loop 0x1764e7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017655f : jg 0x1765aa ; ret
0x0000000000176578 : jg 0x1765c9 ; jrcxz 0x176577 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000176608 : jg 0x176659 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000176688 : jg 0x1766d9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000176708 : jg 0x176759 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000176788 : jg 0x1767d9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001768e5 : jg 0x176935 ; mov edx, 0x46f00ff2 ; retf 0xff3
0x00000000001768ef : jg 0x17693a ; retf 0xff2
0x0000000000176965 : jg 0x1769b5 ; mov ebx, 0x46f00ff2 ; retf
0x000000000017696f : jg 0x1769ba ; retf
0x0000000000176a08 : jg 0x176a59 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000176a88 : jg 0x176ad9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000176b18 : jg 0x176b69 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000176b98 : jg 0x176be9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000176c0c : jg 0x176c17 ; ret
0x0000000000176c66 : jg 0x176c79 ; ret
0x0000000000176c61 : jg 0x176cb1 ; psllq mm1, qword ptr [rdi] ; jg 0x176c7e ; ret
0x0000000000176cd6 : jg 0x176ce9 ; ret
0x0000000000176d46 : jg 0x176d59 ; ret
0x0000000000176d41 : jg 0x176d91 ; or eax, 0xf7f0ff3 ; ret
0x0000000000176db6 : jg 0x176dc9 ; ret
0x0000000000176db1 : jg 0x176e01 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000176e26 : jg 0x176e39 ; ret
0x0000000000176e21 : jg 0x176e71 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000176e96 : jg 0x176ea9 ; ret
0x0000000000176e91 : jg 0x176ee1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000176f06 : jg 0x176f19 ; ret
0x0000000000176f01 : jg 0x176f51 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000176f76 : jg 0x176f89 ; ret
0x0000000000176f71 : jg 0x176fc1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000176fe6 : jg 0x176ff9 ; ret
0x0000000000177056 : jg 0x177069 ; ret
0x00000000001770c6 : jg 0x1770d9 ; ret
0x00000000001770c1 : jg 0x177111 ; add eax, 0xf7f0ff3 ; ret
0x0000000000177136 : jg 0x177149 ; ret
0x0000000000177131 : jg 0x177181 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000001771a6 : jg 0x1771b9 ; ret
0x00000000001771a1 : jg 0x1771f1 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000177216 : jg 0x177229 ; ret
0x0000000000177211 : jg 0x177261 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000177286 : jg 0x177299 ; ret
0x0000000000177281 : jg 0x1772d1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000018eb4a : jg 0x18eb5b ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000018ecdb : jg 0x18ed05 ; vzeroupper ; ret
0x000000000018ed82 : jg 0x18ed8c ; vzeroupper ; ret
0x000000000018ee0e : jg 0x18ee38 ; vzeroupper ; ret
0x000000000018ee9e : jg 0x18eea8 ; vzeroupper ; ret
0x000000000018ef14 : jg 0x18ef22 ; vzeroupper ; ret
0x000000000018ef74 : jg 0x18ef82 ; vzeroupper ; ret
0x000000000018f033 : jg 0x18f041 ; vzeroupper ; ret
0x0000000000192574 : jg 0x192585 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000192588 : jg 0x192599 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000001929fa : jg 0x1929f6 ; ret
0x0000000000192c67 : jg 0x192c77 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000192c5d : jg 0x192c7d ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000192f62 : jg 0x192f73 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000193146 : jg 0x193170 ; vzeroupper ; ret
0x0000000000193145 : jg 0x193171 ; vzeroupper ; ret
0x000000000019320c : jg 0x193216 ; vzeroupper ; ret
0x000000000019320b : jg 0x193217 ; vzeroupper ; ret
0x00000000001932df : jg 0x193309 ; vzeroupper ; ret
0x00000000001932de : jg 0x19330a ; vzeroupper ; ret
0x00000000001933b2 : jg 0x1933bc ; vzeroupper ; ret
0x00000000001933b1 : jg 0x1933bd ; vzeroupper ; ret
0x0000000000193435 : jg 0x193443 ; vzeroupper ; ret
0x0000000000193434 : jg 0x193444 ; vzeroupper ; ret
0x00000000001934a1 : jg 0x1934af ; vzeroupper ; ret
0x00000000001934a0 : jg 0x1934b0 ; vzeroupper ; ret
0x000000000019358b : jg 0x193599 ; vzeroupper ; ret
0x0000000000193599 : jg 0x1935a7 ; vzeroupper ; ret
0x0000000000195665 : jg 0x195674 ; neg eax ; ret
0x0000000000195ce4 : jg 0x195ceb ; add byte ptr [rax + 0x21], cl ; ret 0x50e9
0x0000000000199408 : jg 0x199412 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x0000000000199a11 : jg 0x199a18 ; add byte ptr [rax - 0x77], cl ; ret 0x3775
0x00000000001a9491 : jg 0x1a9481 ; push rcx ; jle 0x1a9485 ; jmp rsp
0x00000000001af48d : jg 0x1af481 ; jmp qword ptr [rax]
0x00000000001af4a1 : jg 0x1af495 ; call rax
0x00000000001af49d : jg 0x1af495 ; jmp qword ptr [rax - 0x2f000f81]
0x00000000001b0fe4 : jg 0x1b0ff4 ; hlt ; jmp qword ptr [rax]
0x00000000001b32bf : jg 0x1b32c1 ; std ; stc ; dec eax ; cld ; stc ; jmp rax
0x00000000001b32be : jg 0x1b3348 ; clc ; std ; stc ; dec eax ; cld ; stc ; jmp rax
0x00000000001be48d : jg 0x1be495 ; add ah, dh ; sbb ebp, eax ; call qword ptr [rax]
0x00000000001be7a1 : jg 0x1be78d ; jmp rsp
0x00000000001c0589 : jg 0x1c057e ; jmp rsp
0x00000000001c0589 : jg 0x1c057f ; jmp rsp
0x00000000001c0d85 : jg 0x1c0d8e ; add byte ptr [rdx + rsi*2 - 0xb], al ; jmp rax
0x00000000001c3111 : jg 0x1c310f ; call rsp
0x00000000001c3129 : jg 0x1c3127 ; call qword ptr [rax]
0x00000000001daa29 : jg 0x1daa22 ; call qword ptr [rax]
0x00000000001db699 : jg 0x1db6a2 ; add byte ptr [rbx + rbp*4 - 0xb], al ; call qword ptr [rbx]
0x00000000001e4dbc : jg 0x1e4dc6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000002134d : jg 0x21347 ; cmp al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000022756 : jg 0x226dd ; retf
0x0000000000028428 : jg 0x283b5 ; ret 0xdb76
0x0000000000003bb3 : jg 0x3c20 ; xchg eax, ebp ; retf 0x10bf
0x000000000003de9b : jg 0x3deed ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000003e343 : jg 0x3e34a ; je 0x3e336 ; ret
0x000000000003e5d5 : jg 0x3e627 ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000003f1b6 : jg 0x3f1bc ; add byte ptr [rax], al ; syscall
0x0000000000044372 : jg 0x443bb ; mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x00000000000520eb : jg 0x52159 ; xor eax, eax ; ret
0x0000000000054bc1 : jg 0x54bce ; ret 0xf089
0x0000000000065f72 : jg 0x65f8b ; test byte ptr [rip - 0x7c000003], dl ; ret
0x00000000000673c2 : jg 0x673db ; test ch, al ; call 0xffffffffc38a73d2
0x000000000007d6ed : jg 0x7d706 ; add eax, edi ; mov rdx, r8 ; jmp 0x7d6c5
0x000000000008e302 : jg 0x8e342 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000009cd3a : jg 0x9cd89 ; mov rsi, rbp ; call rax
0x000000000009f02d : jg 0x9efb8 ; or eax, 0x450f4800 ; ret 0xc3f3
0x000000000009f02d : jg 0x9efba ; or eax, 0x450f4800 ; ret 0xc3f3
0x000000000009f07d : jg 0x9f029 ; or eax, 0x450f4800 ; ret 0xc3f3
0x000000000009f07d : jg 0x9f02b ; or eax, 0x450f4800 ; ret 0xc3f3
0x00000000000b6996 : jg 0xb69a1 ; ret
0x00000000000b69a6 : jg 0xb69b4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b69ba : jg 0xb69c9 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b69d9 : jg 0xb69e7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b69e9 : jg 0xb69f7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b69f9 : jg 0xb6a0a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b6a1a : jg 0xb6a29 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b6a3a : jg 0xb6a49 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b6a5a : jg 0xb6a69 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b6a7a : jg 0xb6a8c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b6abd : jg 0xb6acf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b6add : jg 0xb6aef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b6afb : jg 0xb6b0b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b6b1b : jg 0xb6b2b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b6b3b : jg 0xb6b4b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6b5b : jg 0xb6b6b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b70e8 : jg 0xb70f3 ; jne 0xb79a8 ; ret
0x00000000000b710c : jg 0xb7118 ; jne 0xb79a8 ; ret
0x00000000000b712f : jg 0xb713c ; jne 0xb79a8 ; ret
0x00000000000b714a : jg 0xb7158 ; jne 0xb79a8 ; ret
0x00000000000b716d : jg 0xb717c ; jne 0xb79a8 ; ret
0x00000000000b7192 : jg 0xb71a2 ; jne 0xb79a8 ; ret
0x00000000000b71b0 : jg 0xb71c1 ; jne 0xb79a8 ; ret
0x00000000000b71cc : jg 0xb71de ; jne 0xb79a8 ; ret
0x00000000000b71ef : jg 0xb7202 ; jne 0xb79a8 ; ret
0x00000000000b7214 : jg 0xb7228 ; jne 0xb79a8 ; ret
0x00000000000b7232 : jg 0xb7247 ; jne 0xb79a8 ; ret
0x00000000000b7252 : jg 0xb7268 ; jne 0xb79a8 ; ret
0x00000000000b7274 : jg 0xb728b ; jne 0xb79a8 ; ret
0x00000000000b7294 : jg 0xb72ac ; jne 0xb79a8 ; ret
0x00000000000b72b4 : jg 0xb72cd ; jne 0xb79a8 ; ret
0x00000000000b72ce : jg 0xb72e8 ; jne 0xb79a8 ; ret
0x00000000000b72f1 : jg 0xb730c ; jne 0xb79a8 ; ret
0x00000000000b7316 : jg 0xb7332 ; jne 0xb79a8 ; ret
0x00000000000b7334 : jg 0xb7351 ; jne 0xb79a8 ; ret
0x00000000000b7354 : jg 0xb7372 ; jne 0xb79a8 ; ret
0x00000000000b7377 : jg 0xb7396 ; jne 0xb79a8 ; ret
0x00000000000b7396 : jg 0xb73b6 ; jne 0xb79a8 ; ret
0x00000000000b73b6 : jg 0xb73d7 ; jne 0xb79a8 ; ret
0x00000000000b73d6 : jg 0xb73f8 ; jne 0xb79a8 ; ret
0x00000000000b73f9 : jg 0xb741c ; jne 0xb79a8 ; ret
0x00000000000b742e : jg 0xb7452 ; jne 0xb79a8 ; ret
0x00000000000b745c : jg 0xb7481 ; jne 0xb79a8 ; ret
0x00000000000b748c : jg 0xb74b2 ; jne 0xb79a8 ; ret
0x00000000000b74b8 : jg 0xb74df ; jne 0xb79a8 ; ret
0x00000000000b74e8 : jg 0xb7510 ; jne 0xb79a8 ; ret
0x00000000000b7518 : jg 0xb7541 ; jne 0xb79a8 ; ret
0x00000000000b7548 : jg 0xb7572 ; jne 0xb79a8 ; ret
0x00000000000b7666 : jg 0xb7671 ; ret
0x00000000000b7679 : jg 0xb7687 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b768a : jg 0xb7699 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b76a9 : jg 0xb76b7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b76b9 : jg 0xb76c7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b76cc : jg 0xb76dd ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b76ea : jg 0xb76f9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b770a : jg 0xb7719 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b772a : jg 0xb7739 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b774d : jg 0xb775f ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b778d : jg 0xb779f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b77ad : jg 0xb77bf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b77cb : jg 0xb77db ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b77eb : jg 0xb77fb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b780b : jg 0xb781b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b782b : jg 0xb783b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b7962 : jg 0xb796d ; ret
0x00000000000b7a96 : jg 0xb7aca ; ret
0x00000000000b8006 : jg 0xb8015 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b8016 : jg 0xb8028 ; mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000b8049 : jg 0xb805b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b8069 : jg 0xb807b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b818f : jg 0xb81ef ; or eax, 0x1c478d48 ; ret
0x00000000000b879b : jg 0xb87a6 ; jne 0xb91c8 ; ret
0x00000000000b87c0 : jg 0xb87cc ; jne 0xb91c8 ; ret
0x00000000000b87e3 : jg 0xb87f0 ; jne 0xb91c8 ; ret
0x00000000000b87fe : jg 0xb880c ; jne 0xb91c8 ; ret
0x00000000000b8821 : jg 0xb8830 ; jne 0xb91c8 ; ret
0x00000000000b8846 : jg 0xb8856 ; jne 0xb91c8 ; ret
0x00000000000b8864 : jg 0xb8875 ; jne 0xb91c8 ; ret
0x00000000000b8880 : jg 0xb8892 ; jne 0xb91c8 ; ret
0x00000000000b88a3 : jg 0xb88b6 ; jne 0xb91c8 ; ret
0x00000000000b88c8 : jg 0xb88dc ; jne 0xb91c8 ; ret
0x00000000000b88f6 : jg 0xb890b ; jne 0xb91c8 ; ret
0x00000000000b8916 : jg 0xb892c ; jne 0xb91c8 ; ret
0x00000000000b8938 : jg 0xb894f ; jne 0xb91c8 ; ret
0x00000000000b8968 : jg 0xb8980 ; jne 0xb91c8 ; ret
0x00000000000b8998 : jg 0xb89b1 ; jne 0xb91c8 ; ret
0x00000000000b89c2 : jg 0xb89dc ; jne 0xb91c8 ; ret
0x00000000000b89e5 : jg 0xb8a00 ; jne 0xb91c8 ; ret
0x00000000000b8a0a : jg 0xb8a26 ; jne 0xb91c8 ; ret
0x00000000000b8a38 : jg 0xb8a55 ; jne 0xb91c8 ; ret
0x00000000000b8a68 : jg 0xb8a86 ; jne 0xb91c8 ; ret
0x00000000000b8a9b : jg 0xb8aba ; jne 0xb91c8 ; ret
0x00000000000b8aca : jg 0xb8aea ; jne 0xb91c8 ; ret
0x00000000000b8afa : jg 0xb8b1b ; jne 0xb91c8 ; ret
0x00000000000b8b2a : jg 0xb8b4c ; jne 0xb91c8 ; ret
0x00000000000b8b5d : jg 0xb8b80 ; jne 0xb91c8 ; ret
0x00000000000b8b92 : jg 0xb8bb6 ; jne 0xb91c8 ; ret
0x00000000000b8bc0 : jg 0xb8be5 ; jne 0xb91c8 ; ret
0x00000000000b8bf0 : jg 0xb8c16 ; jne 0xb91c8 ; ret
0x00000000000b8c1c : jg 0xb8c43 ; jne 0xb91c8 ; ret
0x00000000000b8c4c : jg 0xb8c74 ; jne 0xb91c8 ; ret
0x00000000000b8c7c : jg 0xb8ca5 ; jne 0xb91c8 ; ret
0x00000000000b8cac : jg 0xb8cd6 ; jne 0xb91c8 ; ret
0x00000000000b8e56 : jg 0xb8e65 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b8e69 : jg 0xb8e7b ; mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b8ea9 : jg 0xb8ebb ; mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b8ec9 : jg 0xb8edb ; mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b8fef : jg 0xb904f ; or eax, 0x1d478d48 ; ret
0x00000000000b9182 : jg 0xb918d ; ret
0x00000000000b92b6 : jg 0xb92ee ; lea rax, [rdi + 0x40] ; ret
0x00000000000b92b5 : jg 0xb933d ; xor byte ptr [rax - 0x73], cl ; ret
0x00000000000b9c46 : jg 0xb9c51 ; ret
0x00000000000b9c56 : jg 0xb9c64 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b9c6a : jg 0xb9c79 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b9c89 : jg 0xb9c97 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b9c99 : jg 0xb9ca7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b9ca9 : jg 0xb9cba ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b9cca : jg 0xb9cd9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b9cea : jg 0xb9cf9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b9d0a : jg 0xb9d19 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b9d2a : jg 0xb9d3c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b9d6d : jg 0xb9d7f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b9d8d : jg 0xb9d9f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b9dab : jg 0xb9dbb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b9dcb : jg 0xb9ddb ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b9deb : jg 0xb9dfb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b9e0b : jg 0xb9e1b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000ba716 : jg 0xba721 ; ret
0x00000000000ba726 : jg 0xba734 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000ba73a : jg 0xba749 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000ba759 : jg 0xba767 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba769 : jg 0xba777 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000ba779 : jg 0xba78a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000ba79a : jg 0xba7a9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000ba7ba : jg 0xba7c9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba7da : jg 0xba7e9 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000ba7fa : jg 0xba80c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000ba83d : jg 0xba84f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000ba85d : jg 0xba86f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000ba87b : jg 0xba88b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000ba89b : jg 0xba8ab ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000ba8bb : jg 0xba8cb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000ba8db : jg 0xba8eb ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000baa86 : jg 0xbaa96 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000bac5f : jg 0xbacc0 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bac7f : jg 0xbace0 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000bacf6 : jg 0xbad2f ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bacf5 : jg 0xbad7e ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000bb744 : jg 0xbb77c ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000bb812 : jg 0xbb84a ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000000bb89c : jg 0xbb8a7 ; ret
0x00000000000bb8fc : jg 0xbb907 ; ret
0x00000000000bb973 : jg 0xbb9bf ; xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000bb9e0 : jg 0xbba1d ; ret 0x2b77
0x00000000000bbafb : jg 0xbbac8 ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000bbb57 : jg 0xbbb55 ; int1 ; mov eax, eax ; ret
0x00000000000bcdd5 : jg 0xbcddd ; neg eax ; ret
0x00000000000d12f6 : jg 0xd1316 ; mov rax, rbx ; pop rbx ; ret
0x00000000000e6673 : jg 0xe667d ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000000e66a3 : jg 0xe66a9 ; add byte ptr [rax], al ; ret
0x00000000000efe9f : jg 0xeff0e ; add byte ptr [rdi], cl ; xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x0000000000119acc : jge 0x119ad5 ; inc dword ptr [rbp - 0x7cd28b40] ; ret
0x0000000000119acb : jge 0x119ad6 ; inc dword ptr [rbp - 0x7cd28b40] ; ret
0x000000000011d265 : jge 0x11d26a ; call r12
0x000000000011d28d : jge 0x11d292 ; call r12
0x000000000011d77d : jge 0x11d72d ; mov r12d, r14d ; call r15
0x000000000011dddd : jge 0x11dde2 ; call r12
0x000000000011de09 : jge 0x11de0e ; call r12
0x000000000011de3d : jge 0x11de42 ; call r12
0x000000000011de6d : jge 0x11de72 ; call r12
0x000000000011de95 : jge 0x11de9a ; call r12
0x000000000011dec5 : jge 0x11deca ; call r12
0x000000000011eaff : jge 0x11eb05 ; add byte ptr [rax], al ; call rax
0x00000000001220f1 : jge 0x1220f7 ; add byte ptr [rax], al ; syscall
0x000000000013f316 : jge 0x13f2bf ; mov eax, 3 ; syscall
0x000000000013fa08 : jge 0x13f9b1 ; mov eax, 3 ; syscall
0x00000000001480c4 : jge 0x1480f9 ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], 0xf3 ; ret
0x0000000000153b3f : jge 0x153b53 ; call rax
0x000000000015a75f : jge 0x15a773 ; call rax
0x000000000015aec8 : jge 0x15aedc ; call rax
0x00000000001678db : jge 0x167954 ; ret 0x8548
0x000000000017357d : jge 0x1735ab ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000001aa9aa : jge 0x1aa98b ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000001ac2f4 : jge 0x1ac365 ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000001af44d : jge 0x1af441 ; jmp qword ptr [rax]
0x00000000001af461 : jge 0x1af459 ; inc eax ; jge 0x1af45d ; jmp rax
0x00000000001af465 : jge 0x1af459 ; jmp rax
0x00000000001af469 : jge 0x1af461 ; inc dword ptr [rax] ; jle 0x1af465 ; jmp qword ptr [rax]
0x00000000001bcb41 : jge 0x1bcb41 ; jmp qword ptr [rax]
0x00000000001c2391 : jge 0x1c238d ; jmp rsp
0x00000000001c5559 : jge 0x1c5544 ; jmp qword ptr [rdx]
0x00000000001d7ce5 : jge 0x1d7cdd ; jmp qword ptr [rcx]
0x00000000001db4c5 : jge 0x1db4ce ; add byte ptr [rax], cl ; sahf ; cmc ; call qword ptr [rdi]
0x00000000000248ac : jge 0x2485a ; call 0x212cc
0x000000000000296e : jge 0x296d ; enter 0x42bc, 0x27 ; mov al, 0x1f ; retf
0x0000000000041eba : jge 0x41ec3 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000005167a : jge 0x51681 ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000005546d : jge 0x55474 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000cd4cd : jge 0xcd4d4 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000df093 : jge 0xdf076 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e7cab : jge 0xe7d24 ; ret 0x8548
0x00000000000a303c : jge 0xffffffff895331b9 ; retf
0x0000000000104c5e : jl 0x104c8c ; cmp byte ptr [rbp - 0x71f000b0], cl ; ret 0xfffc
0x000000000010a87b : jl 0x10a89f ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010abd3 : jl 0x10abfe ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000010ff3a : jl 0x10ff68 ; sbb byte ptr [rax + 0x101], bh ; syscall
0x000000000011164d : jl 0x11165c ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x2141
0x000000000011487c : jl 0x1148a7 ; sub al, ch ; pushfq ; ret 0xffff
0x0000000000114cec : jl 0x114d1a ; or byte ptr [rax + 0x10f], bh ; syscall
0x000000000011d342 : jl 0x11d370 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000121884 : jl 0x12189d ; je 0x12188d ; ret
0x0000000000130fb9 : jl 0x130fe7 ; or byte ptr [rax + 0xe6], bh ; syscall
0x00000000001364fd : jl 0x136527 ; xor al, ch ; ret
0x000000000014593f : jl 0x14596d ; and byte ptr [rcx + rcx*4 - 0xe], al ; call 0x142368
0x0000000000145ab9 : jl 0x145ae4 ; and byte ptr [rax - 0x77], cl ; ret
0x0000000000148296 : jl 0x1482c4 ; adc byte ptr [rax + 0x81], bh ; syscall
0x000000000014a8a2 : jl 0x14a8cf ; and byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret
0x000000000014d83d : jl 0x14d86b ; adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rcx
0x000000000014d8fd : jl 0x14d92b ; adc byte ptr [rax - 0x75], cl ; and al, 8 ; call rcx
0x00000000001544a5 : jl 0x1544d0 ; or byte ptr [rax + 0x63], cl ; ret
0x00000000001672d5 : jl 0x167303 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000019241b : jl 0x192424 ; neg eax ; ret
0x00000000001924f4 : jl 0x192543 ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000192530 : jl 0x19257f ; adc dword ptr [rcx - 1], ebx ; ret
0x000000000019272e : jl 0x19277d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000192895 : jl 0x1928e4 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000001929f7 : jl 0x192a46 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000192c1c : jl 0x192c6b ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000192c3d : jl 0x192c8c ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000192c50 : jl 0x192c9f ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000192d25 : jl 0x192d74 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000192d7d : jl 0x192dcc ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000192e1a : jl 0x192e69 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000193030 : jl 0x19304f ; cld ; vzeroupper ; ret
0x00000000001ac4f2 : jl 0x1ac551 ; leave ; retf
0x00000000001af441 : jl 0x1af439 ; inc eax ; jl 0x1af43d ; jmp rax
0x00000000001af445 : jl 0x1af439 ; jmp rax
0x00000000001af449 : jl 0x1af441 ; inc dword ptr [rax] ; jge 0x1af445 ; jmp qword ptr [rax]
0x00000000001b017c : jl 0x1b0139 ; bnd call qword ptr [rdi] ; mov cl, 0xf2 ; jmp qword ptr [rbx]
0x00000000001b017c : jl 0x1b013a ; bnd call qword ptr [rdi] ; mov cl, 0xf2 ; jmp qword ptr [rbx]
0x00000000001befc4 : jl 0x1bef8f ; add byte ptr [rax], al ; in al, 0x6c ; in al, dx ; jmp rax
0x00000000001bfafc : jl 0x1bfb13 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rsp
0x00000000001c0529 : jl 0x1c051e ; call rax
0x00000000001c0529 : jl 0x1c051f ; call rax
0x00000000001c06fc : jl 0x1c075d ; add dword ptr [rax], eax ; mov ah, 0x59 ; jmp rax
0x00000000001c0d25 : jl 0x1c0d2e ; add byte ptr [rax + rdx*2], al ; cmc ; jmp qword ptr [rax]
0x00000000001c1851 : jl 0x1c184b ; call qword ptr [rax]
0x00000000001c1850 : jl 0x1c184c ; call qword ptr [rax]
0x00000000001c30e1 : jl 0x1c30df ; jmp qword ptr [rax]
0x00000000001c70a5 : jl 0x1c7091 ; call rdi
0x00000000001cc254 : jl 0x1cc29a ; in al, dx ; call qword ptr [rdx]
0x00000000001cf4c4 : jl 0x1cf48a ; add byte ptr [rax], al ; js 0x1cf541 ; out dx, al ; jmp qword ptr [rbx]
0x00000000001d01c4 : jl 0x1d0197 ; add byte ptr [rax], al ; clc ; in eax, 0xee ; call qword ptr [rdx]
0x00000000001d4ec4 : jl 0x1d4ee4 ; add dword ptr [rax], eax ; cwde ; pushfq ; call qword ptr [rax]
0x00000000001d58c4 : jl 0x1d58ec ; add dword ptr [rax], eax ; pop rax ; ret
0x00000000001d7c31 : jl 0x1d7c29 ; jmp qword ptr [rcx]
0x00000000001d7c45 : jl 0x1d7c3d ; jmp qword ptr [rcx]
0x00000000001d7c81 : jl 0x1d7c79 ; jmp qword ptr [rcx]
0x00000000001d7ca9 : jl 0x1d7ca1 ; jmp qword ptr [rcx]
0x00000000001d7cbd : jl 0x1d7cb5 ; jmp qword ptr [rcx]
0x00000000001d8234 : jl 0x1d81d8 ; hlt ; jmp qword ptr [rcx]
0x0000000000025161 : jl 0x2518f ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000025586 : jl 0x255b4 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000000265b : jl 0x25ed ; loop 0x2639 ; ret 0x943d
0x00000000000274c8 : jl 0x274f6 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000027aab : jl 0x27ad5 ; call r15
0x00000000000284fa : jl 0x28528 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000029e1c : jl 0x29e46 ; call r15
0x000000000002a257 : jl 0x2a280 ; call rbx
0x000000000002a30d : jl 0x2a33a ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000002aa3d : jl 0x2aa67 ; or al, 0xe9 ; ret
0x000000000002b05c : jl 0x2b086 ; call r15
0x000000000002b497 : jl 0x2b4c0 ; call rbx
0x000000000002b54d : jl 0x2b57a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x0000000000033e3e : jl 0x33e69 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000003c938 : jl 0x3c963 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000040950 : jl 0x4097d ; or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x0000000000040b47 : jl 0x40b72 ; and byte ptr [rax + 1], cl ; ret
0x0000000000040fbe : jl 0x40fe9 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x0000000000041306 : jl 0x41331 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000000452 : jl 0x468 ; sbb al, 0xc ; ret 0x4412
0x0000000000055518 : jl 0x55543 ; sbb ecx, dword ptr [rax - 0x39] ; ret
0x000000000005ed80 : jl 0x5ed5a ; adc eax, 0x6f0f6600 ; ret 0x3e8
0x0000000000062d7b : jl 0x62da8 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000065325 : jl 0x65350 ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000088f01 : jl 0x88f07 ; dec dword ptr [rax - 0x77] ; ret 0x38b
0x00000000000961eb : jl 0x961e5 ; ret 0x7508
0x00000000000ac12a : jl 0xac195 ; add rax, rdi ; ret
0x00000000000ac13a : jl 0xac197 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000ac15a : jl 0xac197 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000ac17a : jl 0xac197 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000cd578 : jl 0xcd5a3 ; sbb ecx, dword ptr [rax - 0x39] ; ret
0x00000000000d1aa0 : jl 0xd1ace ; push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000d1d56 : jl 0xd1d84 ; push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000da7c8 : jl 0xda7f3 ; adc byte ptr [rax + 0x63], cl ; ret 0x8944
0x00000000000e0a54 : jl 0xe0a82 ; and byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000e291c : jl 0xe2947 ; adc byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000e2c3a : jl 0xe2c65 ; and byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000e2ce1 : jl 0xe2d0c ; or byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000e5bd1 : jl 0xe5bd7 ; add byte ptr [rax], al ; syscall
0x00000000000f4160 : jl 0xf418f ; or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000000fd97f : jl 0xfd9aa ; and byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000122121 : jle 0x122127 ; add byte ptr [rax], al ; syscall
0x00000000001545ac : jle 0x1545fc ; add esp, 0x20 ; pop rbx ; ret
0x0000000000159048 : jle 0x159060 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000018a101 : jle 0x18a13d ; movsxd rax, ecx ; ret
0x00000000001a9495 : jle 0x1a9481 ; jmp rsp
0x00000000001a94ad : jle 0x1a9499 ; call rdi
0x00000000001a94a9 : jle 0x1a9499 ; jmp qword ptr [rbx - 0x28001782]
0x00000000001aa9a2 : jle 0x1aa93b ; xlatb ; retf 0xa1eb
0x00000000001ac565 : jle 0x1ac5a0 ; pop rsp ; sbb ebp, ebx ; retf
0x00000000001af46d : jle 0x1af461 ; jmp qword ptr [rax]
0x00000000001af481 : jle 0x1af479 ; inc eax ; jle 0x1af47d ; jmp rax
0x00000000001af485 : jle 0x1af479 ; jmp rax
0x00000000001af489 : jle 0x1af481 ; inc dword ptr [rax] ; jg 0x1af485 ; jmp qword ptr [rax]
0x000000000002cb52 : jle 0x2cb65 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000003274 : jle 0x3272 ; add ebp, esi ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000000360d : jle 0x3641 ; retf 0x8792
0x00000000000b169e : jle 0xb16a8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000000e66e1 : jle 0xe66e7 ; add byte ptr [rax], al ; ret
0x00000000000f0493 : jle 0xf04d2 ; movsxd rcx, edx ; jmp 0xf04ac
0x00000000001106b7 : jmp 0x11067d
0x0000000000118b29 : jmp 0x118af7
0x0000000000127023 : jmp 0x126ff1
0x0000000000128d43 : jmp 0x128d11
0x0000000000133d08 : jmp 0x133cd6
0x0000000000137d93 : jmp 0x137d61
0x00000000001385a3 : jmp 0x138571
0x000000000013dba3 : jmp 0x13db71
0x000000000014a743 : jmp 0x14a711
0x0000000000152a33 : jmp 0x152a01
0x0000000000152d73 : jmp 0x152d41
0x0000000000152f3f : jmp 0x152f05
0x0000000000155ed7 : jmp 0x155ea5
0x0000000000156967 : jmp 0x156935
0x0000000000157cc5 : jmp 0x157c8b
0x000000000015cba0 : jmp 0x15cb6e
0x00000000001638c2 : jmp 0x163888
0x0000000000163942 : jmp 0x163908
0x0000000000190468 : jmp 0x190436
0x00000000001904e6 : jmp 0x1904b4
0x0000000000190978 : jmp 0x190946
0x00000000001909f6 : jmp 0x1909c4
0x0000000000191a98 : jmp 0x191a66
0x0000000000191b16 : jmp 0x191ae4
0x0000000000191fa8 : jmp 0x191f76
0x0000000000192026 : jmp 0x191ff4
0x00000000001ac569 : jmp 0x1ac537
0x00000000001acab6 : jmp 0x1aca84
0x0000000000002ca7 : jmp 0x2c75
0x00000000000039df : jmp 0x39a5
0x00000000000039e3 : jmp 0x39b1
0x000000000003f6a5 : jmp 0x3f66b
0x00000000001549e4 : jmp 0x48d50c74
0x000000000004f902 : jmp 0x4f8c8
0x000000000006713f : jmp 0x67105
0x000000000006e9a0 : jmp 0x6b464
0x000000000006f2fd : jmp 0x6b573
0x000000000006f5f4 : jmp 0x6b8b2
0x0000000000070658 : jmp 0x6c86e
0x0000000000071fa9 : jmp 0x6ea3d
0x0000000000071022 : jmp 0x70ff0
0x0000000000076cf8 : jmp 0x73726
0x00000000000777b5 : jmp 0x73ab2
0x0000000000078937 : jmp 0x74bca
0x0000000000078d99 : jmp 0x7504d
0x0000000000078efe : jmp 0x751e9
0x0000000000078e30 : jmp 0x75935
0x000000000007974e : jmp 0x75a16
0x000000000007db95 : jmp 0x7db63
0x0000000000081dc9 : jmp 0x81d97
0x0000000000084f2c : jmp 0x84ef2
0x0000000000084f2b : jmp 0x84ef3
0x0000000000084f2a : jmp 0x84ef4
0x000000000008c4a2 : jmp 0x8c468
0x000000000009b185 : jmp 0x9b153
0x000000000009d1b3 : jmp 0x9d179
0x00000000000a7bed : jmp 0xa3e86
0x00000000000a7c8f : jmp 0xa3f75
0x00000000000a7e86 : jmp 0xa4100
0x00000000000a7e6c : jmp 0xa48be
0x00000000000a8017 : jmp 0xa4a7c
0x00000000000b0fa4 : jmp 0xb0f6a
0x00000000000b11bc : jmp 0xb1182
0x00000000000bb06e : jmp 0xbb034
0x00000000000bb13f : jmp 0xbb105
0x00000000000bb1ae : jmp 0xbb174
0x00000000000bbdf8 : jmp 0xbbdc6
0x00000000000be643 : jmp 0xbe611
0x00000000000dc3d3 : jmp 0xdc3a1
0x00000000000e4a13 : jmp 0xe49d9
0x00000000000e6e55 : jmp 0xe6e1b
0x00000000001093e1 : jmp 0xffffffff8b5d5671
0x00000000000a3ee0 : jmp 0xffffffffc18b096a
0x00000000000bcce3 : jmp 0xffffffffc30bccec
0x0000000000053391 : jmp 0xffffffffc314bce6
0x0000000000133416 : jmp 0xffffffffc40bbd67
0x0000000000150600 : jmp 0xffffffffcb164f0d
0x00000000000d1077 : jmp 0xffffffffcb965881
0x00000000000e0193 : jmp 0xfffffffff63fc423
0x0000000000118163 : jmp qword ptr [r8]
0x00000000001bdbb3 : jmp qword ptr [rax + 0x10fffb8b]
0x00000000001bd9af : jmp qword ptr [rax + 0x10fffb8c]
0x00000000001af287 : jmp qword ptr [rax + 0x10fffbc1]
0x00000000001b0fd7 : jmp qword ptr [rax + 0x20fff40b]
0x00000000001bd703 : jmp qword ptr [rax + 0x20fffb48]
0x00000000001bd6c7 : jmp qword ptr [rax + 0x20fffb49]
0x00000000001bd70b : jmp qword ptr [rax + 0x20fffb4b]
0x00000000001bd6cf : jmp qword ptr [rax + 0x20fffb4c]
0x00000000001bd713 : jmp qword ptr [rax + 0x20fffb4e]
0x00000000001bd6d7 : jmp qword ptr [rax + 0x20fffb4f]
0x00000000001bd71b : jmp qword ptr [rax + 0x20fffb51]
0x00000000001bd6df : jmp qword ptr [rax + 0x20fffb52]
0x00000000001bd723 : jmp qword ptr [rax + 0x20fffb54]
0x00000000001bd6e7 : jmp qword ptr [rax + 0x20fffb55]
0x00000000001bd72b : jmp qword ptr [rax + 0x20fffb57]
0x00000000001bd6ef : jmp qword ptr [rax + 0x20fffb58]
0x00000000001bd733 : jmp qword ptr [rax + 0x20fffb5a]
0x00000000001bd6f7 : jmp qword ptr [rax + 0x20fffb5b]
0x00000000001bd66b : jmp qword ptr [rax + 0x20fffb66]
0x00000000001bd663 : jmp qword ptr [rax + 0x20fffb67]
0x00000000001bd65b : jmp qword ptr [rax + 0x20fffb68]
0x00000000001bd653 : jmp qword ptr [rax + 0x20fffb69]
0x00000000001bd64b : jmp qword ptr [rax + 0x20fffb6a]
0x00000000001bd683 : jmp qword ptr [rax + 0x20fffb6b]
0x00000000001bd9a7 : jmp qword ptr [rax + 0x20fffb8d]
0x00000000001bd99f : jmp qword ptr [rax + 0x20fffb8e]
0x00000000001bd997 : jmp qword ptr [rax + 0x20fffb8f]
0x00000000001bd98f : jmp qword ptr [rax + 0x20fffb90]
0x00000000001c3693 : jmp qword ptr [rax + rbp*2 - 0x344bffff]
0x00000000001af1ef : jmp qword ptr [rax - 0x1f001058]
0x00000000001af1df : jmp qword ptr [rax - 0x1f00105d]
0x00000000001af1cf : jmp qword ptr [rax - 0x1f001062]
0x00000000001af1bf : jmp qword ptr [rax - 0x1f001067]
0x00000000001b2213 : jmp qword ptr [rax - 0x2f000669]
0x00000000001af49f : jmp qword ptr [rax - 0x2f000f81]
0x00000000000422c1 : jmp qword ptr [rax]
0x00000000001b041f : jmp qword ptr [rbp - 0x35]
0x00000000001a94ab : jmp qword ptr [rbx - 0x28001782]
0x00000000000025db : jmp qword ptr [rbx]
0x00000000001bce3b : jmp qword ptr [rcx + 0x17fffd56]
0x00000000001bce1b : jmp qword ptr [rcx + 0x26fffd56]
0x0000000000048fed : jmp qword ptr [rcx]
0x00000000001ae70f : jmp qword ptr [rdi - 0x1900138b]
0x00000000001ae6cb : jmp qword ptr [rdi - 0x3c00138b]
0x000000000010a8a5 : jmp qword ptr [rdi]
0x000000000010a912 : jmp qword ptr [rdx]
0x00000000001bd27f : jmp qword ptr [rsi + 0x16fffb6e]
0x0000000000144633 : jmp qword ptr [rsi]
0x0000000000001b66 : jmp r10
0x000000000016c76d : jmp r9
0x0000000000021ed1 : jmp rax
0x000000000003274d : jmp rbx
0x0000000000099e22 : jmp rcx
0x000000000002e786 : jmp rdi
0x0000000000001b67 : jmp rdx
0x000000000002e287 : jmp rsi
0x0000000000002b1d : jmp rsp
0x00000000001088ab : jne 0x108898 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000108ca1 : jne 0x108c83 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010e62e : jne 0x10e64f ; mov eax, 0x11 ; syscall
0x000000000010e6de : jne 0x10e6ff ; mov eax, 0x12 ; syscall
0x000000000010eb2a : jne 0x10eb39 ; mov word ptr [rdi], si ; xor eax, eax ; ret
0x000000000010f0c6 : jne 0x10f0ce ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x000000000010f4d7 : jne 0x10f4ef ; add rsp, 0x28 ; ret
0x000000000010f640 : jne 0x10f692 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000010f6fc : jne 0x10f709 ; add rsp, 0x18 ; ret
0x000000000010f74e : jne 0x10f75b ; add rsp, 0x18 ; ret
0x000000000010fb4b : jne 0x10fb97 ; mov eax, 0x10c ; syscall
0x000000000010fdc7 : jne 0x10fe11 ; add rsp, 0x58 ; ret
0x000000000010feaa : jne 0x10ff18 ; mov eax, 0x101 ; syscall
0x000000000010ffec : jne 0x110039 ; add rsp, 0x58 ; ret
0x000000000011007b : jne 0x110094 ; xor eax, eax ; syscall
0x000000000011014b : jne 0x110167 ; mov eax, 1 ; syscall
0x00000000001105e8 : jne 0x110657 ; mov eax, 0x48 ; syscall
0x0000000000110717 : jne 0x110769 ; add rsp, 0x68 ; ret
0x0000000000110843 : jne 0x1108b3 ; add rsp, 0x30 ; pop rbx ; ret
0x00000000001108cb : jne 0x1108e7 ; mov eax, 3 ; syscall
0x0000000000110a6b : jne 0x110a87 ; mov eax, 0x55 ; syscall
0x0000000000111c0f : jne 0x111c22 ; movzx eax, al ; add rsp, 0x58 ; ret
0x0000000000114902 : jne 0x1148a1 ; mov edi, ebx ; call 0x110b26
0x0000000000114901 : jne 0x1148a2 ; mov edi, ebx ; call 0x110b27
0x0000000000114900 : jne 0x1148a3 ; mov edi, ebx ; call 0x110b28
0x0000000000114bbb : jne 0x114bd7 ; mov eax, 7 ; syscall
0x000000000011579e : jne 0x1157bf ; mov eax, 0x115 ; syscall
0x000000000011584e : jne 0x11586f ; mov eax, 0x11d ; syscall
0x0000000000115d1e : jne 0x115d41 ; add rsp, 0x38 ; ret
0x0000000000115d79 : jne 0x115d8d ; add rsp, 0x18 ; ret
0x00000000001160b2 : jne 0x116106 ; add rsp, 0x70 ; pop rbx ; ret
0x000000000011660b : jne 0x116627 ; mov eax, 0x13 ; syscall
0x00000000001166ab : jne 0x1166c7 ; mov eax, 0x14 ; syscall
0x0000000000116adc : jne 0x116b0f ; mov eax, 0x71 ; syscall
0x0000000000116afb : jne 0x116b59 ; add rsp, 0x38 ; ret
0x0000000000116b7c : jne 0x116baf ; mov eax, 0x72 ; syscall
0x0000000000116b9b : jne 0x116bf9 ; add rsp, 0x38 ; ret
0x0000000000116c2f : jne 0x116c37 ; add byte ptr [rax], al ; mov edi, edx ; syscall
0x0000000000116c4d : jne 0x116ccb ; add rsp, 0x38 ; ret
0x0000000000116d1d : jne 0x116d9b ; add rsp, 0x38 ; ret
0x0000000000116e16 : jne 0x116e2d ; add rsp, 0x28 ; ret
0x0000000000116fee : jne 0x11700f ; mov eax, 0x17 ; syscall
0x000000000011720b : jne 0x117227 ; mov eax, 0x4a ; syscall
0x00000000001172bb : jne 0x1172d7 ; mov eax, 0x4b ; syscall
0x00000000001175e5 : jne 0x11762d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000117807 : jne 0x117814 ; add rsp, 0x58 ; ret
0x0000000000117885 : jne 0x117892 ; add rsp, 0x38 ; ret
0x0000000000117960 : jne 0x1179a3 ; add rsp, 0x68 ; ret
0x0000000000117c6a : jne 0x117c48 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000117e4b : jne 0x117e28 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000001180fd : jne 0x1180d3 ; ret
0x0000000000118b04 : jne 0x118b4b ; add rsp, 0x38 ; ret
0x0000000000118bd3 : jne 0x118c1b ; add rsp, 0x38 ; ret
0x000000000011bb1b : jne 0x11bb37 ; mov eax, 0x1a ; syscall
0x000000000011ce25 : jne 0x11ce32 ; add rsp, 0x18 ; ret
0x000000000011d23b : jne 0x11d256 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011d261 : jne 0x11d2a7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011d289 : jne 0x11d2c7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011dda6 : jne 0x11ddce ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011ddd9 : jne 0x11de27 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011de05 : jne 0x11de87 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011de91 : jne 0x11def8 ; mov rdi, qword ptr [r13] ; call r12
0x000000000011dec1 : jne 0x11df29 ; mov rdi, qword ptr [r13] ; call r12
0x000000000011e7fb : jne 0x11e80e ; add rsp, 0x418 ; ret
0x000000000011eda5 : jne 0x11eddf ; mov eax, 0x88 ; syscall
0x000000000011f662 : jne 0x11f692 ; mov rdx, rax ; jmp 0x11f67a
0x000000000011fa87 : jne 0x11fa7e ; mov rax, qword ptr [rax + 8] ; ret
0x000000000012182c : jne 0x121851 ; add rsp, 0x78 ; ret
0x0000000000121b6e : jne 0x121b8f ; mov eax, 0xe8 ; syscall
0x0000000000121c1e : jne 0x121c3f ; mov eax, 0x114 ; syscall
0x0000000000121cce : jne 0x121cef ; mov eax, 0x116 ; syscall
0x0000000000121d7e : jne 0x121d9f ; mov eax, 0x113 ; syscall
0x0000000000121e4b : jne 0x121e67 ; mov eax, 0x130 ; syscall
0x0000000000121ee2 : jne 0x121eff ; mov eax, 0x95 ; syscall
0x00000000001227db : jne 0x1227f7 ; mov eax, 0x2b ; syscall
0x00000000001228ab : jne 0x1228c7 ; mov eax, 0x2a ; syscall
0x0000000000122ace : jne 0x122aef ; mov eax, 0x2d ; syscall
0x0000000000122b9b : jne 0x122bb7 ; mov eax, 0x2f ; syscall
0x0000000000122cfb : jne 0x122d17 ; mov eax, 0x2e ; syscall
0x0000000000122d9e : jne 0x122dbf ; mov eax, 0x2c ; syscall
0x00000000001231ca : jne 0x1231d7 ; add rsp, 0x18 ; ret
0x00000000001231ee : jne 0x12320f ; mov eax, 0x120 ; syscall
0x000000000012329e : jne 0x1232bf ; mov eax, 0x12b ; syscall
0x000000000012334e : jne 0x12336f ; mov eax, 0x133 ; syscall
0x00000000001234ee : jne 0x12350f ; mov eax, 0x45 ; syscall
0x000000000012359e : jne 0x1235bf ; mov eax, 0x46 ; syscall
0x0000000000123740 : jne 0x123777 ; mov eax, 0x42 ; syscall
0x000000000012375f : jne 0x1237b1 ; add rsp, 0x58 ; ret
0x0000000000129dea : jne 0x129dfe ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012e13c : jne 0x12e178 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130087 : jne 0x130098 ; cmp qword ptr [rdi], 0 ; je 0x1300a1 ; ret
0x00000000001306b2 : jne 0x1306a9 ; pop rdx ; pop r10 ; ret
0x00000000001306a2 : jne 0x1306b4 ; nop ; mov eax, 0xca ; syscall
0x00000000001309c4 : jne 0x1309a3 ; ret
0x0000000000130f62 : jne 0x130f97 ; mov eax, 0xe6 ; syscall
0x000000000013115d : jne 0x131148 ; lea rdi, [rip - 0x176] ; call rax
0x000000000013119c : jne 0x13124c ; leave ; ret
0x0000000000131c66 : jne 0x131c55 ; mov rax, rdi ; ret
0x0000000000131da5 : jne 0x131d41 ; mov rax, rdi ; ret
0x0000000000131f08 : jne 0x131f1b ; add rsp, 0xd8 ; ret
0x00000000001320a3 : jne 0x1320b6 ; add rsp, 0xd8 ; ret
0x0000000000133415 : jne 0x133405 ; mov rax, rdi ; ret
0x0000000000133501 : jne 0x1334a3 ; mov rax, rdi ; ret
0x0000000000133683 : jne 0x133696 ; add rsp, 0xd8 ; ret
0x0000000000134224 : jne 0x13423b ; add rsp, 0x28 ; ret
0x0000000000134284 : jne 0x13429b ; add rsp, 0x28 ; ret
0x000000000013433d : jne 0x134350 ; add rsp, 0xd8 ; ret
0x000000000013458d : jne 0x1345a0 ; add rsp, 0xd8 ; ret
0x00000000001395fe : jne 0x139574 ; pop rbx ; ret
0x000000000013b3fd : jne 0x13b45e ; add rsp, 0x38 ; ret
0x000000000013b4c7 : jne 0x13b4d4 ; add rsp, 0x38 ; ret
0x000000000013b544 : jne 0x13b551 ; add rsp, 0x28 ; ret
0x000000000013c883 : jne 0x13c873 ; pop rbx ; ret
0x0000000000140177 : jne 0x14019f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014075c : jne 0x140737 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000014138c : jne 0x1413a0 ; add rsp, 0x18 ; ret
0x0000000000141469 : jne 0x1414b5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000141505 : jne 0x14153f ; add rsp, 0x38 ; ret
0x000000000014275f : jne 0x142799 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000014298b : jne 0x142998 ; add rsp, 0x18 ; ret
0x0000000000143190 : jne 0x14319d ; add rsp, 0x18 ; ret
0x000000000014387d : jne 0x143864 ; ret
0x0000000000145bcc : jne 0x145bd3 ; ret
0x0000000000145c0c : jne 0x145c00 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001480ca : jne 0x1480d3 ; ret
0x000000000014bad7 : jne 0x14bae6 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000014cf7b : jne 0x14cfb5 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000014dbdd : jne 0x14dc28 ; mov dword ptr [rsi], 0 ; ret
0x000000000014e5ed : jne 0x14e587 ; xor eax, eax ; pop rbx ; ret
0x000000000014ea38 : jne 0x14ea7a ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001500f2 : jne 0x15007f ; retf 0x4c89
0x000000000015017b : jne 0x150188 ; add rsp, 0x58 ; ret
0x0000000000153d78 : jne 0x153d83 ; ret
0x0000000000154517 : jne 0x154528 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001545ab : jne 0x154632 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000157b53 : jne 0x157b62 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157ebf : jne 0x157ee6 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000157fef : jne 0x15800b ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000158115 : jne 0x158136 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000158245 : jne 0x158266 ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000158385 : jne 0x1583d7 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000001584f5 : jne 0x158547 ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000000000015861f : jne 0x158637 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000158732 : jne 0x158756 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000158858 : jne 0x15887f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001590f1 : jne 0x15911f ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000159d31 : jne 0x159d3e ; add rsp, 0x78 ; ret
0x0000000000159d97 : jne 0x159da4 ; add rsp, 0x78 ; ret
0x0000000000159e07 : jne 0x159e14 ; add rsp, 0x78 ; ret
0x0000000000159e77 : jne 0x159e84 ; add rsp, 0x78 ; ret
0x0000000000159ed8 : jne 0x159ee5 ; add rsp, 0x78 ; ret
0x0000000000159f3c : jne 0x159f49 ; add rsp, 0x78 ; ret
0x0000000000159fa7 : jne 0x159fb4 ; add rsp, 0x78 ; ret
0x000000000015a021 : jne 0x15a02e ; add rsp, 0x78 ; ret
0x000000000015a5ff : jne 0x15a62e ; add rsp, 0x28 ; ret
0x000000000015a968 : jne 0x15a973 ; ret
0x000000000015c4e1 : jne 0x15c4ee ; add rsp, 0x48 ; ret
0x000000000015c538 : jne 0x15c57a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015c5b8 : jne 0x15c5f9 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015c623 : jne 0x15c636 ; mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000015c678 : jne 0x15c6bc ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015c72b : jne 0x15c79b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015c80b : jne 0x15c87b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015c8eb : jne 0x15c95b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015c9cb : jne 0x15ca3b ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000015ca78 : jne 0x15cabb ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015caf8 : jne 0x15cb3a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015cb7b : jne 0x15cbcc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015cc0a : jne 0x15cc5c ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000015cc98 : jne 0x15cce0 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015cd18 : jne 0x15cd5a ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015d948 : jne 0x15d98c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015d9c8 : jne 0x15da0c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015da48 : jne 0x15da8c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015dac8 : jne 0x15db0c ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015e1c9 : jne 0x15e1dc ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000015e22a : jne 0x15e23d ; movzx eax, al ; add rsp, 0x18 ; ret
0x000000000015e295 : jne 0x15e2a4 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015e308 : jne 0x15e317 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015e372 : jne 0x15e387 ; mov eax, 1 ; ret
0x000000000015e3b2 : jne 0x15e3c7 ; mov eax, 1 ; ret
0x000000000016341e : jne 0x163452 ; add rsp, 0x18 ; ret
0x00000000001635ac : jne 0x1635bd ; xor eax, eax ; pop rbx ; ret
0x0000000000163895 : jne 0x1638cb ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000163915 : jne 0x16394b ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001645fe : jne 0x164646 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000001654b4 : jne 0x1654cf ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000166486 : jne 0x1664b9 ; mov rax, qword ptr [rip + 0x28a019] ; call qword ptr [rax]
0x000000000016649f : jne 0x166514 ; add rsp, 0x58 ; ret
0x0000000000166577 : jne 0x1665f7 ; add rsp, 0x68 ; ret
0x0000000000166746 : jne 0x16678c ; add rsp, 0x78 ; ret
0x00000000001667cd : jne 0x166839 ; add rsp, 0x38 ; ret
0x000000000016743f : jne 0x16745a ; add rsp, 0x38 ; ret
0x0000000000169865 : jne 0x169874 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001698eb : jne 0x1698fa ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000169a2f : jne 0x169a4d ; mov eax, 0x27 ; syscall
0x000000000017eba1 : jne 0x17f156 ; ret
0x000000000018a603 : jne 0x18a627 ; xor eax, eax ; vzeroupper ; ret
0x000000000018acaa : jne 0x18acb5 ; vzeroupper ; ret
0x000000000018ada4 : jne 0x18acb6 ; ret
0x000000000018aeef : jne 0x18acb9 ; vzeroupper ; ret
0x000000000018e903 : jne 0x18e938 ; mov rax, r8 ; vzeroupper ; ret
0x000000000018f004 : jne 0x18efec ; vzeroupper ; ret
0x000000000018f16a : jne 0x18f175 ; vzeroupper ; ret
0x000000000018f1f2 : jne 0x18f176 ; ret
0x000000000018f33f : jne 0x18f179 ; vzeroupper ; ret
0x000000000018f196 : jne 0x18f17e ; ret
0x000000000018f5b3 : jne 0x18f5d7 ; xor eax, eax ; vzeroupper ; ret
0x000000000019159d : jne 0x1915c7 ; xor eax, eax ; ret
0x0000000000190b91 : jne 0x1915cb ; xor eax, eax ; ret
0x0000000000190bb9 : jne 0x1915d7 ; xor eax, eax ; ret
0x00000000001923dd : jne 0x192407 ; xor eax, eax ; ret
0x00000000001921c1 : jne 0x19240b ; xor eax, eax ; ret
0x0000000000192411 : jne 0x19241a ; xor eax, eax ; ret
0x00000000001921e7 : jne 0x19241e ; xor eax, eax ; ret
0x0000000000193557 : jne 0x193537 ; vzeroupper ; ret
0x00000000001936c5 : jne 0x193656 ; lea rax, [rdi + 3] ; ret
0x0000000000193697 : jne 0x193656 ; lea rax, [rdi + 7] ; ret
0x0000000000193696 : jne 0x193657 ; lea rax, [rdi + 7] ; ret
0x0000000000194e24 : jne 0x195038 ; xor eax, eax ; ret
0x0000000000195029 : jne 0x195049 ; xor eax, eax ; ret
0x0000000000194ed1 : jne 0x19504d ; xor eax, eax ; ret
0x0000000000195041 : jne 0x19504e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000195656 : jne 0x195664 ; xor eax, eax ; ret
0x000000000019552d : jne 0x195666 ; ret
0x0000000000199a47 : jne 0x199aba ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000199d43 : jne 0x199d2e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a36d : jne 0x19a356 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a44d : jne 0x19a43e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a4a0 : jne 0x19a480 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019a68c : jne 0x19a67b ; pop rbx ; ret
0x000000000019a735 : jne 0x19a71b ; pop rbx ; ret
0x000000000019a7f7 : jne 0x19a7f0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019aa19 : jne 0x19aa0b ; pop rbx ; ret
0x000000000019ade1 : jne 0x19adf8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019c659 : jne 0x19c658 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000019c69a : jne 0x19c6ae ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001aaa17 : jne 0x1aa9e1 ; mov ecx, 0x5b92ac50 ; retf
0x00000000001ac9ab : jne 0x1ac9d2 ; retf 0x32dd
0x00000000001ae6c9 : jne 0x1ae6be ; jmp qword ptr [rdi - 0x3c00138b]
0x00000000001ae711 : jne 0x1ae701 ; jmp rsi
0x00000000001ae749 : jne 0x1ae73e ; jmp qword ptr [rdi - 0x3c00138b]
0x00000000001af3c9 : jne 0x1af3bd ; call qword ptr [rax]
0x00000000001af3cd : jne 0x1af3c1 ; jmp qword ptr [rax]
0x00000000001af3f9 : jne 0x1af3ed ; call rax
0x00000000001af3f5 : jne 0x1af3ed ; inc eax ; jne 0x1af3f1 ; call rax
0x00000000001af3fd : jne 0x1af3f1 ; jmp rax
0x00000000001af405 : jne 0x1af3f9 ; call qword ptr [rax]
0x00000000001af401 : jne 0x1af3f9 ; push rax ; jne 0x1af3fd ; call qword ptr [rax]
0x00000000001afeb1 : jne 0x1afea6 ; call qword ptr [rax]
0x00000000001afeb1 : jne 0x1afea7 ; call qword ptr [rax]
0x00000000001bd305 : jne 0x1bd308 ; call qword ptr [rdx + 0x22fffb74]
0x00000000001c04d9 : jne 0x1c04ce ; call rsp
0x00000000001c04d1 : jne 0x1c04ce ; inc eax ; add qword ptr [r8], rax ; xchg eax, esp ; jne 0x1c04d6 ; call rsp
0x00000000001c04d9 : jne 0x1c04cf ; call rsp
0x00000000001dfff5 : jne 0x1dfff0 ; call rdi
0x00000000001e31d1 : jne 0x1e31da ; retf
0x00000000001e3468 : jne 0x1e3471 ; retf
0x000000000002346f : jne 0x23403 ; call rsi
0x00000000000352bc : jne 0x352d0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000000360b : jne 0x3674 ; jle 0x3643 ; retf 0x8792
0x00000000000038ba : jne 0x3898 ; ret 0x975
0x000000000003cfe8 : jne 0x3cfc6 ; ret
0x000000000003ddf2 : jne 0x3de08 ; fadd st(0) ; add rsp, 8 ; ret
0x000000000003e1d8 : jne 0x3e1e6 ; addsd xmm0, xmm0 ; ret
0x000000000003e4f4 : jne 0x3e506 ; addss xmm0, xmm0 ; ret
0x000000000003eb5f : jne 0x3eb6c ; add rsp, 0x18 ; ret
0x000000000003ed8d : jne 0x3eda0 ; add rsp, 0x148 ; ret
0x000000000003eeab : jne 0x3eed5 ; add rsp, 0x118 ; ret
0x000000000003f0b7 : jne 0x3f10c ; add rsp, 0x148 ; ret
0x000000000003f35f : jne 0x3f380 ; add rsp, 0x118 ; ret
0x000000000003f3e2 : jne 0x3f400 ; add rsp, 0x118 ; ret
0x000000000003f4ed : jne 0x3f500 ; add rsp, 0x98 ; ret
0x000000000003f72f : jne 0x3f73e ; add rsp, 0x40 ; pop rbx ; ret
0x000000000003fa45 : jne 0x3fa58 ; add rsp, 0x148 ; ret
0x00000000000404fd : jne 0x40510 ; add rsp, 0xa8 ; ret
0x00000000000438cc : jne 0x43898 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000004396b : jne 0x43973 ; pop rbx ; ret
0x0000000000043a3f : jne 0x43a4c ; add rsp, 0x28 ; ret
0x0000000000043b2f : jne 0x43b3c ; add rsp, 0x28 ; ret
0x0000000000043e4b : jne 0x43e58 ; add rsp, 0x18 ; ret
0x0000000000044439 : jne 0x44446 ; add rsp, 0x18 ; ret
0x0000000000044486 : jne 0x44493 ; add rsp, 0x18 ; ret
0x00000000000444d8 : jne 0x444e5 ; add rsp, 0x18 ; ret
0x0000000000044525 : jne 0x44532 ; add rsp, 0x18 ; ret
0x0000000000044578 : jne 0x44585 ; add rsp, 0x18 ; ret
0x00000000000445c5 : jne 0x445d2 ; add rsp, 0x18 ; ret
0x00000000000448cb : jne 0x448e7 ; mov eax, 0x13e ; syscall
0x000000000004ecb2 : jne 0x4ecf5 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004ed62 : jne 0x4edda ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000004ee40 : jne 0x4eea4 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000004f8fc : jne 0x4f4c6 ; jmp 0x4f8ce
0x000000000004fd7e : jne 0x4fd91 ; add rsp, 0xd8 ; ret
0x0000000000051328 : jne 0x5133b ; add rsp, 0xd8 ; ret
0x00000000000514dd : jne 0x514d3 ; pop rbx ; ret
0x0000000000051508 : jne 0x51503 ; pop rbx ; ret
0x0000000000052541 : jne 0x52527 ; mov eax, 1 ; ret
0x0000000000052567 : jne 0x5255c ; xor eax, eax ; ret
0x0000000000052841 : jne 0x52827 ; mov eax, 1 ; ret
0x0000000000052867 : jne 0x5285c ; xor eax, eax ; ret
0x0000000000052c57 : jne 0x52c45 ; mov rax, rdx ; ret
0x000000000005347f : jne 0x53475 ; mov rax, rdx ; ret
0x0000000000054801 : jne 0x54841 ; leave ; ret
0x000000000005855c : jne 0x58556 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000587f1 : jne 0x587dd ; mov rax, rsi ; ret
0x0000000000058875 : jne 0x58855 ; mov rax, rsi ; ret
0x0000000000064e62 : jne 0x64e75 ; add rsp, 0xd8 ; ret
0x0000000000064f34 : jne 0x64f47 ; add rsp, 0xd8 ; ret
0x0000000000064fed : jne 0x65000 ; add rsp, 0xd8 ; ret
0x00000000000650a2 : jne 0x650b5 ; add rsp, 0xd8 ; ret
0x0000000000065162 : jne 0x65175 ; add rsp, 0xd8 ; ret
0x0000000000065222 : jne 0x65235 ; add rsp, 0xd8 ; ret
0x00000000000673e8 : jne 0x673a7 ; mov rdi, r13 ; call 0x836d7
0x000000000007b022 : jne 0x7b035 ; add rsp, 0xd8 ; ret
0x000000000007b0f6 : jne 0x7b109 ; add rsp, 0xd8 ; ret
0x000000000007b1b2 : jne 0x7b1c5 ; add rsp, 0xd8 ; ret
0x000000000007b591 : jne 0x7b5ac ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007b5e1 : jne 0x7b5f6 ; mov rax, rbx ; pop rbx ; ret
0x000000000007bca3 : jne 0x7bcbd ; add rsp, 0x18 ; ret
0x000000000007c582 : jne 0x7c595 ; add rsp, 0xd8 ; ret
0x0000000000082a32 : jne 0x82a45 ; add rsp, 0xd8 ; ret
0x0000000000082aed : jne 0x82b00 ; add rsp, 0xd8 ; ret
0x0000000000082bd4 : jne 0x82be7 ; add rsp, 0xd8 ; ret
0x0000000000082ca6 : jne 0x82cb9 ; add rsp, 0xd8 ; ret
0x0000000000082d62 : jne 0x82d75 ; add rsp, 0xd8 ; ret
0x0000000000083052 : jne 0x83065 ; add rsp, 0xd8 ; ret
0x0000000000083321 : jne 0x83313 ; ret
0x000000000008457c : jne 0x84575 ; lea eax, [rdx + rdi] ; ret
0x0000000000088d32 : jne 0x88d45 ; add rsp, 0xd8 ; ret
0x000000000008a1c4 : jne 0x8a1dd ; add rsp, 0x48 ; ret
0x000000000008a46e : jne 0x8a489 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b327 : jne 0x8b2ff ; xor eax, 0x4f0f4800 ; ret 0x8948
0x000000000008cea5 : jne 0x8ceb3 ; ret
0x000000000008dae8 : jne 0x8db39 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000008db61 : jne 0x8db53 ; ret
0x000000000008ea8e : jne 0x8ea83 ; ret
0x000000000008f081 : jne 0x8f047 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008f0cc : jne 0x8f0c5 ; lea eax, [rdx + rdi] ; ret
0x000000000008fb06 : jne 0x8fafb ; ret
0x0000000000091671 : jne 0x916b5 ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000096ebc : jne 0x96e83 ; ret
0x000000000009a84f : jne 0x9a83e ; sub rax, 0x10 ; ret
0x000000000009cbc7 : jne 0x9cbdb ; mov rax, qword ptr [rip + 0x34e378] ; call qword ptr [rax]
0x000000000009cc82 : jne 0x9cc96 ; mov rax, qword ptr [rip + 0x34e2bd] ; call qword ptr [rax]
0x000000000009cd47 : jne 0x9cd5b ; mov rax, qword ptr [rip + 0x34e1f8] ; call qword ptr [rax]
0x000000000009cf4f : jne 0x9cf8d ; mov rdi, r13 ; call rax
0x000000000009cf4e : jne 0x9cf8e ; mov rdi, r13 ; call rax
0x000000000009cf4d : jne 0x9cf8f ; mov rdi, r13 ; call rax
0x000000000009cfc1 : jne 0x9cfb4 ; xor eax, eax ; ret
0x000000000009d023 : jne 0x9cffd ; mov rdi, rsi ; call rax
0x000000000009d022 : jne 0x9cffe ; mov rdi, rsi ; call rax
0x000000000009d021 : jne 0x9cfff ; mov rdi, rsi ; call rax
0x000000000009d036 : jne 0x9d05b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d07b : jne 0x9d073 ; ret
0x000000000009fd08 : jne 0x9fcf3 ; ret
0x000000000009ffdb : jne 0x9ffd3 ; ret
0x00000000000a092f : jne 0xa0921 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a132d : jne 0xa12ef ; pop rbx ; ret
0x00000000000a1305 : jne 0xa12fd ; xor eax, eax ; pop rbx ; ret
0x00000000000a13c5 : jne 0xa13bd ; xor eax, eax ; ret
0x00000000000a14c8 : jne 0xa1454 ; pop rbx ; pop rbp ; ret
0x00000000000a14b5 : jne 0xa14ac ; pop rbx ; pop rbp ; ret
0x00000000000a8092 : jne 0xa8085 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a815b : jne 0xa8150 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8236 : jne 0xa822b ; ret
0x00000000000a827a : jne 0xa826b ; ret
0x00000000000a82d4 : jne 0xa82b3 ; ret
0x00000000000a838a : jne 0xa8378 ; cmp r8d, ecx ; je 0xa8378 ; ret
0x00000000000a83c9 : jne 0xa83bd ; xor eax, eax ; ret
0x00000000000a842b : jne 0xa840b ; ret
0x00000000000aa10c : jne 0xaa0f6 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000abc07 : jne 0xabc64 ; xor eax, eax ; ret
0x00000000000abbd7 : jne 0xabc88 ; xor eax, eax ; ret
0x00000000000ac0aa : jne 0xac124 ; xor eax, eax ; ret
0x00000000000ac0d9 : jne 0xac154 ; xor eax, eax ; ret
0x00000000000b17c3 : jne 0xb17ce ; xor rax, rax ; ret
0x00000000000b70ea : jne 0xb79a6 ; ret
0x00000000000b879d : jne 0xb91c6 ; ret
0x00000000000baea1 : jne 0xbae92 ; ret
0x00000000000baf51 : jne 0xbaf42 ; ret
0x00000000000bb0c1 : jne 0xbb0b6 ; lea rax, [rcx - 1] ; ret
0x00000000000bb211 : jne 0xbb206 ; sub rax, 1 ; ret
0x00000000000bb97d : jne 0xbb966 ; ret
0x00000000000bbdf2 : jne 0xbbd27 ; jmp 0xbbdcc
0x00000000000bc0e7 : jne 0xbc0db ; ret
0x00000000000bcd56 : jne 0xbcdd2 ; ret
0x00000000000bcc7f : jne 0xbcdd6 ; ret
0x00000000000bcc5e : jne 0xbcdd8 ; xor eax, eax ; ret
0x00000000000bcfa3 : jne 0xbcf6b ; ret
0x00000000000bd079 : jne 0xbd090 ; test ecx, ecx ; je 0xbd090 ; xor eax, eax ; ret
0x00000000000bd263 : jne 0xbd233 ; ret
0x00000000000bd24d : jne 0xbd243 ; ret
0x00000000000bd320 : jne 0xbd317 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000bd533 : jne 0xbd52b ; ret
0x00000000000be71c : jne 0xbe713 ; ret
0x00000000000c7883 : jne 0xc78fb ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c7961 : jne 0xc79c5 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000c7a33 : jne 0xc7a76 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000cbe0f : jne 0xcbe3b ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000ccd12 : jne 0xccd25 ; add rsp, 0xd8 ; ret
0x00000000000d0137 : jne 0xd0107 ; ret
0x00000000000d03d7 : jne 0xd0434 ; xor eax, eax ; ret
0x00000000000d03a7 : jne 0xd0458 ; xor eax, eax ; ret
0x00000000000d0494 : jne 0xd048b ; ret
0x00000000000d08ab : jne 0xd0906 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d0943 : jne 0xd094e ; xor rax, rax ; ret
0x00000000000d0bdb : jne 0xd0b96 ; mov rax, rdx ; ret
0x00000000000d14a8 : jne 0xd14b5 ; add rsp, 0x28 ; ret
0x00000000000d1519 : jne 0xd1528 ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000d5ec1 : jne 0xd5eeb ; add rsp, 0x28 ; ret
0x00000000000d5ff2 : jne 0xd600e ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000d6749 : jne 0xd6761 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000dc274 : jne 0xdc281 ; add rsp, 0x18 ; ret
0x00000000000ded84 : jne 0xded91 ; add rsp, 0x18 ; ret
0x00000000000e0e5c : jne 0xe0e8f ; mov eax, 0x74 ; syscall
0x00000000000e0e7b : jne 0xe0ed1 ; add rsp, 0x38 ; ret
0x00000000000e311f : jne 0xe319f ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e48c1 : jne 0xe48dd ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e48eb : jne 0xe4907 ; mov eax, 0x22 ; syscall
0x00000000000e499b : jne 0xe49b7 ; mov eax, 0x23 ; syscall
0x00000000000e5105 : jne 0xe5148 ; mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000e598c : jne 0xe59bf ; mov eax, 0x69 ; syscall
0x00000000000e59ab : jne 0xe5a01 ; add rsp, 0x38 ; ret
0x00000000000e5a1c : jne 0xe5a4f ; mov eax, 0x6a ; syscall
0x00000000000e5a3b : jne 0xe5a91 ; add rsp, 0x38 ; ret
0x00000000000e5caf : jne 0xe5cb5 ; add byte ptr [rax], al ; syscall
0x00000000000e5cac : jne 0xe5cdf ; mov eax, 0x75 ; syscall
0x00000000000e5ccb : jne 0xe5d29 ; add rsp, 0x38 ; ret
0x00000000000e5d4c : jne 0xe5d7f ; mov eax, 0x77 ; syscall
0x00000000000e5d6b : jne 0xe5dc9 ; add rsp, 0x38 ; ret
0x00000000000e6659 : jne 0xe66a5 ; ret
0x00000000000e66c0 : jne 0xe66a9 ; mov eax, 0xfa ; ret
0x00000000000e6700 : jne 0xe66a9 ; mov eax, 0xfffa ; ret
0x00000000000e67c4 : jne 0xe677a ; mov eax, 0x40 ; ret
0x00000000000e689e : jne 0xe686b ; jmp 0xe684c
0x00000000000e6849 : jne 0xe686e ; xor eax, eax ; ret
0x00000000000e9716 : jne 0xe96ae ; mov eax, 1 ; ret
0x00000000000e96fe : jne 0xe96dd ; mov eax, 1 ; ret
0x00000000000e9796 : jne 0xe9770 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9898 : jne 0xe9871 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116adf : jno 0x116ae5 ; add byte ptr [rax], al ; syscall
0x00000000001235ae : jno 0x1235a5 ; ret
0x0000000000124de3 : jno 0x124e4c ; sub al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001635cd : jno 0x1635fb ; add bl, dh ; ret
0x0000000000190e4e : jno 0x190e5d ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001924f0 : jno 0x1924f9 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x000000000019272a : jno 0x192733 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000192891 : jno 0x1928a2 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000001929f6 : jno 0x192a7a ; adc qword ptr [rdi - 8], rdi ; ret
0x00000000001afe39 : jno 0x1afe32 ; dec dword ptr [rdi] ; jb 0x1afe36 ; jmp rax
0x00000000001afe39 : jno 0x1afe33 ; dec dword ptr [rdi] ; jb 0x1afe37 ; jmp rax
0x00000000001bccb4 : jno 0x1bcd00 ; std ; call qword ptr [rcx]
0x00000000001bd269 : jno 0x1bd268 ; call rax
0x00000000001bd265 : jno 0x1bd268 ; inc dword ptr [rax + 0x71] ; sti ; call rax
0x00000000001bd268 : jno 0x1bd269 ; call rax
0x00000000001bd2a5 : jno 0x1bd2a4 ; jmp qword ptr [rsi]
0x00000000001bd325 : jno 0x1bd324 ; call qword ptr [rdx]
0x00000000001bd465 : jno 0x1bd464 ; jmp rax
0x00000000001bded1 : jno 0x1bdebb ; jmp rsp
0x00000000001ca8c9 : jno 0x1ca8d1 ; add byte ptr [rax + rbx*8 - 0x15], dh ; call rsp
0x00000000001d79d5 : jno 0x1d79cd ; jmp rsp
0x00000000001e4220 : jno 0x1e4229 ; add byte ptr [rax], al ; retf 5
0x00000000001e4548 : jno 0x1e4554 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000001eca : jno 0x1ea4 ; adc eax, 0x42585c0c ; xchg eax, edi ; retf 0x20f4
0x0000000000021ca3 : jno 0x21ce2 ; sbb dword ptr [rax], eax ; ret
0x000000000000222b : jno 0x2278 ; ret 0x1dd4
0x0000000000003a8b : jno 0x3ad5 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000053284 : jno 0x532d6 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000827f1 : jno 0x827ff ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000082967 : jno 0x82973 ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000008a223 : jno 0x8a22f ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000008a313 : jno 0x8a31f ; mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x0000000000094114 : jno 0x9414f ; add cl, ch ; retf 0xfffc
0x000000000011a34c : jnp 0x11a343 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000121951 : jnp 0x121957 ; add byte ptr [rax], al ; syscall
0x000000000013c87e : jnp 0x13c8d0 ; test rdi, rdi ; jne 0x13c878 ; pop rbx ; ret
0x0000000000155eb3 : jnp 0x155f1f ; call rax
0x0000000000156943 : jnp 0x15699f ; call rax
0x0000000000173713 : jnp 0x173741 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000001ab3c5 : jnp 0x1ab382 ; ret
0x00000000001ac3c2 : jnp 0x1ac420 ; retf
0x00000000001ac7c9 : jnp 0x1ac816 ; retf 0x99e0
0x00000000001ad429 : jnp 0x1ad46a ; retf
0x00000000001afe75 : jnp 0x1afe6a ; jmp rax
0x00000000001afe75 : jnp 0x1afe6b ; jmp rax
0x00000000001c0ce5 : jnp 0x1c0cee ; add byte ptr [rax + rax*2], al ; cmc ; jmp rax
0x00000000001c0de9 : jnp 0x1c0de2 ; call qword ptr [rax]
0x00000000001db2fd : jnp 0x1db306 ; add byte ptr [rax], dl ; cdq ; cmc ; call qword ptr [rdi]
0x00000000001db311 : jnp 0x1db31a ; add byte ptr [rcx + rbx*4], bl ; cmc ; call qword ptr [rdi]
0x00000000001db341 : jnp 0x1db34a ; add byte ptr [rcx + rbx*4], bh ; cmc ; call qword ptr [rdx]
0x00000000001e592c : jnp 0x1e5938 ; add byte ptr [rax], al ; ret 4
0x0000000000002662 : jnp 0x2686 ; retf
0x00000000000521c8 : jnp 0x521e4 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000521c7 : jnp 0x521e5 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000609aa : jnp 0x609e9 ; add byte ptr [rax + 0x29], cl ; retf 0x8b48
0x00000000000643a3 : jnp 0x643c0 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000643ca : jnp 0x643e7 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000097051 : jnp 0x97098 ; xor eax, 0x38894800 ; ret
0x000000000009cf8a : jnp 0x9cfd9 ; mov rsi, r13 ; call rax
0x000000000009cffa : jnp 0x9d046 ; call rax
0x00000000000bd47b : jnp 0xbd490 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000bd47b : jnp 0xbd492 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000d1248 : jnp 0xd125d ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000001176f4 : jns 0x117702 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000011de06 : jns 0x11de56 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000121d8e : jns 0x121d85 ; ret
0x0000000000122ade : jns 0x122ad5 ; ret
0x0000000000122dae : jns 0x122da5 ; ret
0x0000000000163f46 : jns 0x163f5c ; mov bh, 5 ; xchg eax, edx ; ret
0x000000000018b1c7 : jns 0x18b1a2 ; retf 0xead3
0x000000000018b317 : jns 0x18b2f2 ; retf 0xead3
0x000000000018b467 : jns 0x18b442 ; retf 0xead3
0x000000000018b5b7 : jns 0x18b592 ; retf 0xead3
0x000000000018b707 : jns 0x18b6e2 ; retf 0xead3
0x000000000018b857 : jns 0x18b832 ; retf 0xead3
0x000000000018b9a7 : jns 0x18b982 ; retf 0xead3
0x000000000018baf7 : jns 0x18bad2 ; retf 0xead3
0x000000000018bc47 : jns 0x18bc22 ; retf 0xead3
0x000000000018bd97 : jns 0x18bd72 ; retf 0xead3
0x000000000018bee7 : jns 0x18bec2 ; retf 0xead3
0x000000000018c037 : jns 0x18c012 ; retf 0xead3
0x000000000018c187 : jns 0x18c162 ; retf 0xead3
0x000000000018c2d7 : jns 0x18c2b2 ; retf 0xead3
0x000000000018c427 : jns 0x18c402 ; retf 0xead3
0x000000000018c897 : jns 0x18c872 ; retf 0xead3
0x000000000018ca17 : jns 0x18c9f2 ; retf 0xead3
0x000000000018cb97 : jns 0x18cb72 ; retf 0xead3
0x000000000018cd17 : jns 0x18ccf2 ; retf 0xead3
0x000000000018ce97 : jns 0x18ce72 ; retf 0xead3
0x000000000018d017 : jns 0x18cff2 ; retf 0xead3
0x000000000018d197 : jns 0x18d172 ; retf 0xead3
0x000000000018d317 : jns 0x18d2f2 ; retf 0xead3
0x000000000018d497 : jns 0x18d472 ; retf 0xead3
0x000000000018d617 : jns 0x18d5f2 ; retf 0xead3
0x000000000018d797 : jns 0x18d772 ; retf 0xead3
0x000000000018d917 : jns 0x18d8f2 ; retf 0xead3
0x000000000018da97 : jns 0x18da72 ; retf 0xead3
0x000000000018dc17 : jns 0x18dbf2 ; retf 0xead3
0x000000000018dd97 : jns 0x18dd72 ; retf 0xead3
0x00000000001924f7 : jns 0x1924fa ; ret
0x0000000000192731 : jns 0x192734 ; ret
0x0000000000192898 : jns 0x1928a3 ; ret
0x00000000001aa4ce : jns 0x1aa464 ; ret 0xf869
0x00000000001aa4cd : jns 0x1aa465 ; ret 0xf869
0x00000000001afe95 : jns 0x1afe8a ; jmp rax
0x00000000001afe95 : jns 0x1afe8b ; jmp rax
0x0000000000001b2d : jns 0x1b38 ; ret
0x00000000001be2bd : jns 0x1be2c5 ; add byte ptr [rcx + rax - 0x18], al ; jmp qword ptr [rax]
0x0000000000002c97 : jns 0x2c65 ; clc ; ret
0x0000000000003367 : jns 0x3342 ; ret 0x5a51
0x0000000000003a23 : jns 0x3a76 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000043f40 : jns 0x43f08 ; xor eax, eax ; ret
0x0000000000060af0 : jns 0x60b2f ; add byte ptr [rax + 0x29], cl ; retf 0x8b48
0x000000000007c6dd : jns 0x7c6f7 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000009a51e : jns 0x9a4a5 ; ret
0x00000000000e5b41 : jns 0xe5b47 ; add byte ptr [rax], al ; syscall
0x00000000000ba986 : jns 0xffffffffed3bacec ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000ba9e8 : jns 0xffffffffed3bb14e ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000baa08 : jns 0xffffffffed3bb26e ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000010208 : jo 0x101fe ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000010eb04 : jo 0x10eb1a ; adc dword ptr [rdi + 0x78], eax ; ret
0x000000000010eb03 : jo 0x10eb1b ; adc dword ptr [rdi + 0x78], eax ; ret
0x000000000010f439 : jo 0x10f452 ; adc dword ptr [rdi + 0xf8], eax ; ret
0x000000000010f438 : jo 0x10f453 ; adc dword ptr [rdi + 0xf8], eax ; ret
0x00000000001160b7 : jo 0x116116 ; ret
0x000000000012fc31 : jo 0x12fc7f ; mov edi, esp ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x000000000012fd07 : jo 0x12fd1d ; adc dword ptr [rbp - 0x78], eax ; call rax
0x000000000013be19 : jo 0x13be13 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 4
0x000000000014c51f : jo 0x14c585 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001594b7 : jo 0x15951d ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001635cc : jo 0x163644 ; sub byte ptr [rax], al ; ret
0x0000000000166321 : jo 0x166328 ; add byte ptr [rax], al ; jmp rax
0x0000000000166352 : jo 0x166359 ; add byte ptr [rax], al ; jmp rax
0x00000000001ab544 : jo 0x1ab5be ; mov ebp, 0xfb67d10d ; ret
0x00000000001ae559 : jo 0x1ae549 ; jmp rsp
0x00000000001ae5c5 : jo 0x1ae5b9 ; call qword ptr [rcx - 0x1b001390]
0x00000000001ae5c9 : jo 0x1ae5b9 ; jmp rsp
0x00000000001ae768 : jo 0x1ae751 ; in al, dx ; inc dword ptr [rax - 0x1e] ; in al, dx ; jmp rax
0x00000000001af2b4 : jo 0x1af28a ; sti ; jmp rax
0x00000000001b1115 : jo 0x1b110d ; call rcx
0x00000000001b1131 : jo 0x1b1129 ; call rcx
0x00000000001b1135 : jo 0x1b112d ; call rcx
0x00000000001b1994 : jo 0x1b1949 ; cmc ; call qword ptr [rdi]
0x00000000001b1c94 : jo 0x1b1c46 ; cmc ; call qword ptr [rdi]
0x00000000001bcf60 : jo 0x1bcf7b ; sti ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x00000000001bcfc4 : jo 0x1bcfe0 ; sti ; inc dword ptr [rax + 0x15] ; sti ; jmp qword ptr [rax]
0x00000000001bcfe0 : jo 0x1bcff6 ; sti ; jmp qword ptr [rax]
0x00000000001bd010 : jo 0x1bd019 ; sti ; inc eax ; add ebx, edi ; call qword ptr [rax]
0x00000000001bd064 : jo 0x1bd074 ; sti ; inc eax ; or bl, bh ; call qword ptr [rax]
0x00000000001bd230 : jo 0x1bd26c ; sti ; inc eax ; xor al, 0xfb ; call qword ptr [rax]
0x00000000001bd2b1 : jo 0x1bd2b0 ; call rsi
0x00000000001bd2ad : jo 0x1bd2b0 ; inc dword ptr [rsi + 0x70] ; sti ; call rsi
0x00000000001bd2b0 : jo 0x1bd2b1 ; call rsi
0x00000000001bd471 : jo 0x1bd474 ; call qword ptr [rax + 0x20fffb6f]
0x00000000001bdc68 : jo 0x1bdc53 ; cld ; inc eax ; jrcxz 0x1bdc72 ; call qword ptr [rax]
0x00000000001c0499 : jo 0x1c048e ; call rsp
0x00000000001c0499 : jo 0x1c048f ; call rsp
0x00000000001c2371 : jo 0x1c236d ; call rsp
0x00000000001cf4c9 : jo 0x1cf4bb ; jmp qword ptr [rbx]
0x00000000001d0cb8 : jo 0x1d0c96 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdx]
0x00000000001d10b8 : jo 0x1d109a ; add byte ptr [rax], al ; push rsp ; sbb dh, al ; jmp qword ptr [rcx]
0x00000000001d4f00 : jo 0x1d4ea1 ; call qword ptr [rax]
0x00000000001d7de0 : jo 0x1d7d7e ; hlt ; jmp qword ptr [rcx]
0x00000000001da1b8 : jo 0x1da22b ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; idiv eax ; jmp qword ptr [rbx]
0x00000000001da7e9 : jo 0x1da7f2 ; add byte ptr [rdi + rsi*2 - 0xb], al ; call rdx
0x00000000001e2cb0 : jo 0x1e2ced ; clc ; call rsi
0x00000000001e6074 : jo 0x1e607f ; add byte ptr [rax], al ; retf 7
0x00000000000273a0 : jo 0x273aa ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000030853 : jo 0x308a4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030852 : jo 0x308a5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000064233 : jo 0x64272 ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000008339a : jo 0x833b2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000877ba : jo 0x87747 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x00000000000877b9 : jo 0x87748 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000008c134 : jo 0x8c185 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008c17f : jo 0x8c1d0 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000000af88 : jo 0xafab ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000bd736 : jo 0xbd798 ; pop rbp ; pop r12 ; ret
0x00000000000bda7a : jo 0xbdae0 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000bdd1d : jo 0xbdd7f ; pop rbp ; pop r12 ; ret
0x000000000000d130 : jo 0xd123 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000e08bc : jo 0xe091f ; or byte ptr [rax], al ; mov rax, r14 ; call rax
0x00000000000e5c01 : jo 0xe5c07 ; add byte ptr [rax], al ; syscall
0x00000000000ef5d5 : jo 0xef5a1 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f73c8 : jo 0xf734f ; ret 0x4901
0x00000000000f73c7 : jo 0xf7350 ; ret 0x4901
0x00000000000f7439 : jo 0xf73c0 ; ret 0x4801
0x00000000000f7438 : jo 0xf73c1 ; ret 0x4801
0x00000000000f74b1 : jo 0xf7438 ; ret 0x4801
0x00000000000f74b0 : jo 0xf7439 ; ret 0x4801
0x00000000000f7524 : jo 0xf74ab ; ret 0x4801
0x00000000000f7523 : jo 0xf74ac ; ret 0x4801
0x00000000000fa24f : jo 0xfa23b ; retf
0x00000000000fa20c : jo 0xfa249 ; ret 0x1472
0x0000000000121921 : jp 0x121927 ; add byte ptr [rax], al ; syscall
0x000000000012e7ea : jp 0x12e841 ; mov rsi, rdx ; call rax
0x000000000014eb9d : jp 0x14ebfd ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001ab6d3 : jp 0x1ab68d ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000001afd69 : jp 0x1afd5e ; jmp rax
0x00000000001afd69 : jp 0x1afd5f ; jmp rax
0x00000000001afe11 : jp 0x1afe06 ; jmp rax
0x00000000001afe11 : jp 0x1afe07 ; jmp rax
0x00000000001afea1 : jp 0x1afe9e ; inc dword ptr [rsi - 0x55000d88] ; je 0x1afea6 ; jmp rax
0x00000000001c1839 : jp 0x1c1833 ; call rsp
0x00000000001c30d9 : jp 0x1c30d7 ; call rsp
0x00000000001e6320 : jp 0x1e632d ; add byte ptr [rax], al ; ret
0x000000000000239b : jp 0x237a ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x00000000000025d9 : jp 0x25bd ; jmp qword ptr [rbx]
0x00000000000025d8 : jp 0x25be ; jmp qword ptr [rbx]
0x000000000002b552 : jp 0x2b54c ; ret
0x000000000002f119 : jp 0x2f15c ; jbe 0x2f0ff ; mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x0000000000003a8a : jp 0x3b04 ; xchg eax, ebx ; and cl, ah ; ret
0x000000000003e1d6 : jp 0x3e1e8 ; jne 0x3e1e8 ; addsd xmm0, xmm0 ; ret
0x000000000003e4f2 : jp 0x3e508 ; jne 0x3e508 ; addss xmm0, xmm0 ; ret
0x0000000000066302 : jp 0x66312 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000068ba2 : jp 0x68bad ; add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x000000000009c1cc : jp 0x9c1e4 ; add byte ptr [rax - 0x77], cl ; retf 0x92eb
0x000000000010821a : jrcxz 0x108295 ; retf
0x00000000001088ac : jrcxz 0x1088fd ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000130703 : jrcxz 0x1306c8 ; cmp r11d, 0xa ; je 0x130714 ; ret
0x0000000000130efb : jrcxz 0x130f01 ; add byte ptr [rax], al ; syscall
0x0000000000173a5a : jrcxz 0x173a55 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173a59 : jrcxz 0x173a56 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017657a : jrcxz 0x176575 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000176579 : jrcxz 0x176576 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000199d44 : jrcxz 0x199da6 ; pop rbp ; pop r12 ; ret
0x00000000001aa325 : jrcxz 0x1aa37f ; ret
0x00000000001ac4ed : jrcxz 0x1ac4b0 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000001ad049 : jrcxz 0x1ad02d ; cmp al, 0x93 ; in al, dx ; retf 0xae32
0x00000000001aedf1 : jrcxz 0x1aede1 ; call rax
0x00000000001bdc6d : jrcxz 0x1bdc6d ; call qword ptr [rax]
0x00000000001d1ae5 : jrcxz 0x1d1aed ; add byte ptr [rax], bh ; in eax, 0xf0 ; jmp qword ptr [rdi]
0x00000000001e1b01 : jrcxz 0x1e1b0a ; add ah, bl ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x0000000000001f83 : jrcxz 0x1f61 ; retf 0xbe35
0x0000000000001f4a : jrcxz 0x1fc7 ; retf 0x6321
0x000000000002478e : jrcxz 0x24787 ; mov rdi, rbx ; call 0x21237
0x0000000000002726 : jrcxz 0x26c7 ; retf
0x00000000000449cd : jrcxz 0x44a3a ; nop ; xor eax, eax ; ret
0x0000000000063caf : jrcxz 0x63cb5 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000008a4b2 : jrcxz 0x8a504 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000de15d : jrcxz 0xde163 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000e2f12 : jrcxz 0xe2f0c ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000010ea10 : js 0x10ea29 ; cmp rax, rbx ; seta al ; pop rbx ; ret
0x000000000010eab4 : js 0x10eaca ; adc dword ptr [rsi + 0x70], eax ; ret
0x000000000010eab3 : js 0x10eacb ; adc dword ptr [rsi + 0x70], eax ; ret
0x0000000000116593 : js 0x11657c ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118d12 : js 0x118d25 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000120758 : js 0x1206e5 ; ret 0xe8c1
0x0000000000120757 : js 0x1206e6 ; ret 0xe8c1
0x00000000001207ea : js 0x120777 ; ret 0xe8c1
0x00000000001207e9 : js 0x120778 ; ret 0xe8c1
0x0000000000120ba7 : js 0x120b34 ; ret 0xe8c1
0x0000000000120ba6 : js 0x120b35 ; ret 0xe8c1
0x0000000000120c39 : js 0x120bc6 ; ret 0xe8c1
0x0000000000120c38 : js 0x120bc7 ; ret 0xe8c1
0x0000000000124f38 : js 0x124ec4 ; loopne 0x124f4b ; movzx eax, ax ; ret
0x0000000000125068 : js 0x124ff1 ; loopne 0x125071 ; ret
0x00000000001250f8 : js 0x125084 ; loopne 0x125105 ; movzx eax, ax ; ret
0x00000000001253f8 : js 0x125384 ; loopne 0x125407 ; movzx eax, ax ; ret
0x00000000001258c1 : js 0x12584d ; loopne 0x1258d4 ; movzx eax, ax ; ret
0x00000000001259c1 : js 0x12594a ; loopne 0x1259ca ; ret
0x0000000000125a41 : js 0x1259cd ; loopne 0x125a4e ; movzx eax, ax ; ret
0x0000000000125cc1 : js 0x125c4d ; loopne 0x125cd0 ; movzx eax, ax ; ret
0x0000000000134d54 : js 0x134d69 ; mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000134dd4 : js 0x134de7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000001415c0 : js 0x1415de ; mov rax, rdx ; movsxd rdx, esi ; ret
0x000000000014c1c0 : js 0x14c1e0 ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000015467c : js 0x15468f ; retf 0xc80f
0x000000000015467b : js 0x154690 ; retf 0xc80f
0x00000000001550cb : js 0x15512f ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000156def : js 0x156d7c ; ret 0x1b9
0x0000000000159a30 : js 0x159a30 ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x0000000000163373 : js 0x163388 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000166578 : js 0x1665c7 ; add esp, 0x68 ; ret
0x00000000001672ca : js 0x1672c1 ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000001ace : js 0x1ac3 ; fidiv word ptr [rbx] ; retf
0x00000000001ac428 : js 0x1ac3fc ; movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x00000000001ac3c1 : js 0x1ac441 ; pop rdx ; retf
0x00000000001afe8d : js 0x1afe82 ; jmp rax
0x00000000001afe8d : js 0x1afe83 ; jmp rax
0x00000000001be2a5 : js 0x1be2ad ; add byte ptr [rax + rax - 0x18], ah ; call rax
0x00000000001c2f3c : js 0x1c2f87 ; add al, byte ptr [rax] ; xchg eax, esp ; cli ; call rax
0x00000000001c9395 : js 0x1c9384 ; jmp qword ptr [rdi]
0x00000000001cf4c8 : js 0x1cf53d ; out dx, al ; jmp qword ptr [rbx]
0x00000000001cf7c0 : js 0x1cf789 ; add byte ptr [rax], al ; or al, 0xf3 ; sti ; call rsp
0x00000000001d24b8 : js 0x1d24cf ; int1 ; call rsi
0x00000000001d49c0 : js 0x1d49db ; add dword ptr [rax], eax ; cld ; call qword ptr [rbx]
0x00000000001d65c0 : js 0x1d65f7 ; add dword ptr [rax], eax ; in al, dx ; or esp, esi ; jmp qword ptr [rcx]
0x00000000001d82e8 : js 0x1d828d ; hlt ; jmp qword ptr [rcx]
0x00000000001dc0c0 : js 0x1dc052 ; add dword ptr [rax], eax ; mov edi, gs ; cmc ; call qword ptr [rbx]
0x00000000001e18c0 : js 0x1e18a8 ; add dword ptr [rax], eax ; in al, dx ; retf 0xfff7
0x00000000001e2da8 : js 0x1e2dec ; clc ; call rbx
0x000000000000306d : js 0x3023 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000304b1 : js 0x3043d ; loopne 0x304c4 ; movzx eax, ax ; ret
0x00000000000304f1 : js 0x3047d ; loopne 0x304fe ; movzx eax, ax ; ret
0x0000000000030591 : js 0x3051d ; loopne 0x305a0 ; movzx eax, ax ; ret
0x0000000000030671 : js 0x305fa ; loopne 0x3067a ; ret
0x00000000000306ea : js 0x30673 ; loopne 0x306f3 ; ret
0x00000000000306fa : js 0x30686 ; loopne 0x3070d ; movzx eax, ax ; ret
0x000000000003073a : js 0x306c6 ; loopne 0x30747 ; movzx eax, ax ; ret
0x00000000000307da : js 0x30766 ; loopne 0x307e9 ; movzx eax, ax ; ret
0x0000000000030863 : js 0x308b4 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030862 : js 0x308b5 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000004303d : js 0x43061 ; call rdx
0x0000000000051505 : js 0x5150e ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000007c825 : js 0x7c83f ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000084249 : js 0x84281 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000000877bd : js 0x877cb ; ret
0x00000000000916c8 : js 0x916d3 ; ret
0x000000000009c933 : js 0x9c94d ; xor eax, 0x6740000 ; ret
0x000000000009cbcc : js 0x9cbb5 ; xor al, 0 ; call qword ptr [rax]
0x000000000009dd09 : js 0x9dd04 ; ret 0
0x000000000009ef6b : js 0x9ef66 ; ret 0
0x000000000009efbb : js 0x9efb6 ; ret 0
0x000000000009f00b : js 0x9f006 ; ret 0
0x000000000009f05b : js 0x9f056 ; ret 0
0x00000000000e55c4 : js 0xe5586 ; dec dword ptr [rax - 0x77] ; ret 0x8949
0x00000000000e5c61 : js 0xe5c67 ; add byte ptr [rax], al ; syscall
0x00000000000e68b7 : js 0xe68c3 ; ret
0x00000000000fee54 : js 0xfeed2 ; sbb ecx, dword ptr [rdi] ; mov dh, 0x56 ; cmp dh, dh ; ret 0x7408
0x00000000000ba928 : js 0xffffffffed3bab8e ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000ba956 : js 0xffffffffed3badbc ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000ba9a8 : js 0xffffffffed3bb20e ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000e0a95 : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000002a7a5 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000013190d : lahf ; add eax, dword ptr [rax + rax] ; cmovne rax, rdx ; ret
0x00000000001d81e5 : lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001aca03 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000018bccd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001ac2f2 : lahf ; or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000001af1d5 : lahf ; out dx, eax ; jmp qword ptr [rax]
0x00000000001acaf4 : lahf ; push -0x57d3205 ; call 0xffffffffab2895f6
0x00000000001aab00 : lahf ; push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x00000000000595b7 : lahf ; ret
0x0000000000090522 : lahf ; ret 0x3949
0x000000000011bf0d : lahf ; ret 0x8545
0x00000000001aa25d : lahf ; ret 0x871e
0x00000000000ee027 : lahf ; ret 0xd189
0x000000000006c13a : lahf ; ret 0xd629
0x000000000006c969 : lahf ; ret 0xd729
0x00000000000fc023 : lahf ; ret 0xe183
0x00000000000bb9d9 : lahf ; ret 0xea81
0x000000000009062a : lahf ; ret 0xf3e9
0x00000000000e1245 : lahf ; retf
0x00000000000522dd : lahf ; sub dword ptr [rsi], ecx ; add byte ptr [rcx - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000001319dd : lahf ; sub eax, 0xf480004 ; ret 0xc3f3
0x000000000018c35d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001bf6eb : lcall [rax + 0x40000f1] ; xchg eax, ebx ; in eax, dx ; call rsp
0x00000000001c032b : lcall [rax + 0x400013f] ; sub al, 0xf2 ; jmp rsp
0x000000000011c657 : lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001c2e73 : lcall [rax + 0x6400023b] ; or dl, bh ; jmp rsp
0x00000000001bf653 : lcall [rax + rbp*8] ; add byte ptr [rax + rax*2], dh ; in eax, dx ; jmp rsp
0x00000000001c236b : lcall [rax - 0x5bfffe0d] ; jo 0x1c2373 ; call rsp
0x00000000001b198f : lcall [rax - 0x5d] ; cmc ; push qword ptr [rax - 0x50] ; cmc ; call qword ptr [rdi]
0x00000000001b1c8f : lcall [rax - 0x60] ; cmc ; push qword ptr [rax - 0x53] ; cmc ; call qword ptr [rdi]
0x00000000001aedeb : lcall [rax - 0x7f00131d] ; jrcxz 0x1aede7 ; call rax
0x00000000001bcebf : lcall [rax] ; adc edi, ebx ; jmp rax
0x00000000001403bd : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000139890 : lcall [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000116479 : lcall [rbp + 0x41] ; pop rsp ; ret
0x000000000009f0d5 : lcall [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000009230d : lcall [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000090a80 : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000014b28c : lcall [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000042ca2 : lcall [rbx + 0x5d] ; pop r12 ; ret
0x00000000000c7be3 : lcall [rbx + 0x5d] ; pop r14 ; ret
0x0000000000081980 : lcall [rbx + 0x5d] ; ret
0x00000000001c0973 : lcall [rbx + rbp*2 - 0x4d0bffff] ; hlt ; jmp qword ptr [rax]
0x00000000001b0e8b : lcall [rbx - 0x64000bf6] ; or dh, ah ; call qword ptr [rax]
0x00000000001b0e1f : lcall [rbx - 0x64000bf6] ; or dh, ah ; call rax
0x00000000000813ae : lcall [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x00000000001ae553 : lcall [rcx + rbx*2 - 0x14] ; call qword ptr [rcx - 0x1b001390]
0x00000000001b3753 : lcall [rcx + rsi + 0x31bcfffa] ; cli ; call rsp
0x00000000001bdb3b : lcall [rdx + 0x2afffb8a] ; mov bh, bl ; call rax
0x00000000001b10cf : lcall [rdx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000001b0feb : lcall [rsi + 0xb] ; hlt ; inc dword ptr [rbx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000001c370b : lcall [rsi + rcx*2 - 0x2ebbfffe] ; std ; call rsp
0x00000000001c0b2b : lcall [rsp + rsi*2 + 0x1cd40001] ; cmc ; call rax
0x00000000000f1e6c : lcall [rsp + rsi*2] ; sub byte ptr [rax - 0x80], al ; call qword ptr [rsi]
0x00000000001740e6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000008458f : lea eax, [r8 - 1] ; ret
0x0000000000140f1b : lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x00000000000d010a : lea eax, [rax + rax - 1] ; ret
0x0000000000105d4f : lea eax, [rax + rbp] ; call r12
0x00000000000abc34 : lea eax, [rax + rdi + 0x10] ; ret
0x00000000000abc44 : lea eax, [rax + rdi + 0x20] ; ret
0x00000000000ac114 : lea eax, [rax + rdi + 0x30] ; ret
0x00000000000abc14 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000000df182 : lea eax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000084590 : lea eax, [rax - 1] ; ret
0x0000000000116401 : lea eax, [rax] ; add byte ptr [rax], al ; syscall
0x000000000014e5cb : lea eax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000e9949 : lea eax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9839 : lea eax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001410d0 : lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x0000000000140f1c : lea eax, [rcx + rax + 2] ; pop rbx ; ret
0x00000000000b151d : lea eax, [rcx + rsi] ; ret
0x00000000000bb0c4 : lea eax, [rcx - 1] ; ret
0x00000000001c1095 : lea eax, [rcx] ; add byte ptr [rdi + rbp*4], ah ; cmc ; jmp rax
0x00000000000b801c : lea eax, [rdi + 0x10] ; ret
0x00000000000b8031 : lea eax, [rdi + 0x11] ; ret
0x00000000000b804f : lea eax, [rdi + 0x12] ; ret
0x00000000000b806f : lea eax, [rdi + 0x13] ; ret
0x00000000000b8092 : lea eax, [rdi + 0x14] ; ret
0x00000000000b80b1 : lea eax, [rdi + 0x15] ; ret
0x00000000000b80d1 : lea eax, [rdi + 0x16] ; ret
0x00000000000b80f1 : lea eax, [rdi + 0x17] ; ret
0x00000000000b8114 : lea eax, [rdi + 0x18] ; ret
0x00000000000b8139 : lea eax, [rdi + 0x19] ; ret
0x00000000000b8157 : lea eax, [rdi + 0x1a] ; ret
0x00000000000b8177 : lea eax, [rdi + 0x1b] ; ret
0x00000000000b8193 : lea eax, [rdi + 0x1c] ; ret
0x00000000000b81b3 : lea eax, [rdi + 0x1d] ; ret
0x00000000000b81d3 : lea eax, [rdi + 0x1e] ; ret
0x00000000000b81f3 : lea eax, [rdi + 0x1f] ; ret
0x00000000000b9053 : lea eax, [rdi + 0x20] ; ret
0x00000000000b92b9 : lea eax, [rdi + 0x40] ; ret
0x00000000000b7f6d : lea eax, [rdi + 0xa] ; ret
0x00000000000b7f8d : lea eax, [rdi + 0xb] ; ret
0x00000000000b7faf : lea eax, [rdi + 0xc] ; ret
0x00000000000b7fcf : lea eax, [rdi + 0xd] ; ret
0x00000000000b7fef : lea eax, [rdi + 0xe] ; ret
0x00000000000b8009 : lea eax, [rdi + 0xf] ; ret
0x00000000000b7eb7 : lea eax, [rdi + 1] ; ret
0x00000000000b7eca : lea eax, [rdi + 2] ; ret
0x00000000000b7ed5 : lea eax, [rdi + 3] ; ret
0x00000000000b7ee8 : lea eax, [rdi + 4] ; ret
0x00000000000b7efd : lea eax, [rdi + 5] ; ret
0x00000000000b7f1b : lea eax, [rdi + 6] ; ret
0x00000000000b7f27 : lea eax, [rdi + 7] ; ret
0x00000000000b7f3a : lea eax, [rdi + 8] ; ret
0x00000000001401d0 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000b7f4f : lea eax, [rdi + 9] ; ret
0x00000000000abc69 : lea eax, [rdi + rax + 0x10] ; ret
0x00000000000abc79 : lea eax, [rdi + rax + 0x20] ; ret
0x00000000000abb73 : lea eax, [rdi + rax + 0x30] ; ret
0x000000000018e505 : lea eax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000a8626 : lea eax, [rdi + rax - 1] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8614 : lea eax, [rdi + rax - 1] ; ret
0x00000000000b1167 : lea eax, [rdi + rax] ; ret
0x000000000018a19a : lea eax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000001413e0 : lea eax, [rdi + rsi + 8] ; ret
0x0000000000030205 : lea eax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000b1419 : lea eax, [rdi + rsi] ; ret
0x00000000000d079e : lea eax, [rdi - 0x10] ; ret
0x00000000000d0901 : lea eax, [rdi - 0xc] ; ret
0x00000000000d0921 : lea eax, [rdi - 4] ; ret
0x00000000000d0911 : lea eax, [rdi - 8] ; ret
0x00000000000b7ea3 : lea eax, [rdi] ; ret
0x00000000001813fd : lea eax, [rdx + 0xa] ; ret
0x000000000018141d : lea eax, [rdx + 0xb] ; ret
0x000000000018143f : lea eax, [rdx + 0xc] ; ret
0x000000000018145f : lea eax, [rdx + 0xd] ; ret
0x000000000018147f : lea eax, [rdx + 0xe] ; ret
0x000000000018130f : lea eax, [rdx + 0xf] ; ret
0x0000000000181337 : lea eax, [rdx + 1] ; ret
0x000000000018134d : lea eax, [rdx + 2] ; ret
0x0000000000181365 : lea eax, [rdx + 3] ; ret
0x000000000018137b : lea eax, [rdx + 4] ; ret
0x000000000018138d : lea eax, [rdx + 5] ; ret
0x00000000001813ab : lea eax, [rdx + 6] ; ret
0x00000000001812b7 : lea eax, [rdx + 7] ; ret
0x00000000001813bd : lea eax, [rdx + 8] ; ret
0x00000000001813dd : lea eax, [rdx + 9] ; ret
0x000000000008457e : lea eax, [rdx + rdi] ; ret
0x00000000000bbaf3 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000009a7e1 : lea eax, [rdx - 0x10] ; ret
0x000000000009a7c8 : lea eax, [rdx - 8] ; ret
0x0000000000011848 : lea eax, [rdx] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000181325 : lea eax, [rdx] ; ret
0x000000000002f0f0 : lea eax, [rip + 0x184b83] ; ret
0x0000000000021c91 : lea eax, [rip + 0x191b34] ; ret
0x0000000000021ca1 : lea eax, [rip + 0x193971] ; ret
0x000000000009ed9a : lea eax, [rip + 0x1cad0] ; cmovne rax, rdx ; ret
0x000000000011c5cb : lea eax, [rip + 0x2d1def] ; pop rbp ; pop r12 ; ret
0x0000000000117ebd : lea eax, [rip + 0x2d6235] ; ret
0x0000000000117cdd : lea eax, [rip + 0x2d6415] ; ret
0x000000000011f6e9 : lea eax, [rip + 0x960e9] ; pop rbx ; ret
0x00000000000bd494 : lea eax, [rip + 0xd1bc6] ; je 0xbd465 ; ret
0x00000000000bd494 : lea eax, [rip + 0xd1bc6] ; je 0xbd467 ; ret
0x000000000009ec64 : lea eax, [rip + 0xebf36] ; je 0x9ec35 ; ret
0x000000000009ec64 : lea eax, [rip + 0xebf36] ; je 0x9ec37 ; ret
0x0000000000131b6a : lea eax, [rip - 0x76310] ; cmovne rax, rdx ; ret
0x0000000000198bc5 : lea eax, [rip - 0x76b80000] ; ret 0x8949
0x0000000000094617 : lea eax, [rip - 0x7cb80000] ; retf 0x4801
0x000000000011464b : lea ebp, [rax + 1] ; mov rdi, rbp ; call 0x21108
0x000000000019c649 : lea ebp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000a14c5 : lea ebp, [rcx + 1] ; jne 0xa1457 ; pop rbx ; pop rbp ; ret
0x000000000005af21 : lea ebp, [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000041fe1 : lea ebx, [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000001aab11 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000bd7eb : lea ecx, [rax + 1] ; call rbx
0x00000000000bd957 : lea ecx, [rax + 4] ; call rbx
0x00000000000bdd56 : lea ecx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000086f34 : lea ecx, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000016c7d0 : lea ecx, [rbx + rcx] ; jmp r9
0x00000000000b675e : lea ecx, [rbx + rcx] ; jmp rcx
0x0000000000121ffa : lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000017ec06 : lea ecx, [rdx + 0x10] ; jne 0x17f159 ; ret
0x000000000017ef04 : lea ecx, [rdx + 0xa] ; jne 0x17f159 ; ret
0x000000000017ef24 : lea ecx, [rdx + 0xb] ; jne 0x17f159 ; ret
0x000000000017ef44 : lea ecx, [rdx + 0xc] ; jne 0x17f159 ; ret
0x000000000017ef66 : lea ecx, [rdx + 0xd] ; jne 0x17f159 ; ret
0x000000000017ef86 : lea ecx, [rdx + 0xe] ; jne 0x17f159 ; ret
0x000000000017efa6 : lea ecx, [rdx + 0xf] ; jne 0x17f159 ; ret
0x000000000017edfc : lea ecx, [rdx + 1] ; jne 0x17f159 ; ret
0x000000000017ee1e : lea ecx, [rdx + 2] ; jne 0x17f159 ; ret
0x000000000017ee44 : lea ecx, [rdx + 3] ; jne 0x17f159 ; ret
0x000000000017ee5c : lea ecx, [rdx + 4] ; jne 0x17f159 ; ret
0x0000000000081ae6 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000017ee82 : lea ecx, [rdx + 5] ; jne 0x17f159 ; ret
0x000000000017eea4 : lea ecx, [rdx + 6] ; jne 0x17f159 ; ret
0x000000000017eec2 : lea ecx, [rdx + 7] ; jne 0x17f159 ; ret
0x000000000017eb9e : lea ecx, [rdx + 8] ; jne 0x17f159 ; ret
0x000000000017eee4 : lea ecx, [rdx + 9] ; jne 0x17f159 ; ret
0x000000000009a7d6 : lea ecx, [rdx - 8] ; cmovne rax, rcx ; ret
0x000000000009c1c9 : lea ecx, [rip + 0x117aaa] ; mov rdx, rcx ; jmp 0x9c16e
0x0000000000125847 : lea ecx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000086d40 : lea ecx, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000157e5a : lea ecx, [rsp + 0x14] ; call qword ptr [r10]
0x0000000000086c5b : lea ecx, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000001587ee : lea ecx, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000014ccab : lea ecx, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000bdcde : lea ecx, [rsp + 0x20] ; call rbx
0x00000000000bdb0c : lea ecx, [rsp + 0x28] ; call r12
0x00000000000bd952 : lea ecx, [rsp + 0x28] ; lea rcx, [rax + 4] ; call rbx
0x00000000000be1e7 : lea ecx, [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x000000000014c9db : lea ecx, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000ccf0b : lea ecx, [rsp + 0x30] ; call r12
0x00000000000bdeec : lea ecx, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000bd7e6 : lea ecx, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x0000000000159208 : lea ecx, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014d1cc : lea ecx, [rsp + 0x40] ; call qword ptr [rax]
0x000000000014c1bf : lea edi, [rax + 0x18] ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000153b3e : lea edi, [rbp + 0x10] ; call rax
0x0000000000156942 : lea edi, [rbx + 0x58] ; call rax
0x0000000000155eb2 : lea edi, [rbx + 0x68] ; call rax
0x0000000000152f15 : lea edi, [rbx + 0xc8] ; call rax
0x00000000000b72cd : lea edi, [rdi + 0x10] ; jne 0xb79a9 ; ret
0x00000000000b89c1 : lea edi, [rdi + 0x10] ; jne 0xb91c9 ; ret
0x00000000000b72f0 : lea edi, [rdi + 0x11] ; jne 0xb79a9 ; ret
0x00000000000b89e4 : lea edi, [rdi + 0x11] ; jne 0xb91c9 ; ret
0x00000000000b7315 : lea edi, [rdi + 0x12] ; jne 0xb79a9 ; ret
0x00000000000b8a09 : lea edi, [rdi + 0x12] ; jne 0xb91c9 ; ret
0x00000000000b7333 : lea edi, [rdi + 0x13] ; jne 0xb79a9 ; ret
0x00000000000b8a37 : lea edi, [rdi + 0x13] ; jne 0xb91c9 ; ret
0x00000000000b7353 : lea edi, [rdi + 0x14] ; jne 0xb79a9 ; ret
0x00000000000b8a67 : lea edi, [rdi + 0x14] ; jne 0xb91c9 ; ret
0x00000000000b7376 : lea edi, [rdi + 0x15] ; jne 0xb79a9 ; ret
0x00000000000b8a9a : lea edi, [rdi + 0x15] ; jne 0xb91c9 ; ret
0x00000000000b7395 : lea edi, [rdi + 0x16] ; jne 0xb79a9 ; ret
0x00000000000b8ac9 : lea edi, [rdi + 0x16] ; jne 0xb91c9 ; ret
0x00000000000b73b5 : lea edi, [rdi + 0x17] ; jne 0xb79a9 ; ret
0x00000000000b8af9 : lea edi, [rdi + 0x17] ; jne 0xb91c9 ; ret
0x00000000000b73d5 : lea edi, [rdi + 0x18] ; jne 0xb79a9 ; ret
0x00000000000b8b29 : lea edi, [rdi + 0x18] ; jne 0xb91c9 ; ret
0x00000000000b73f8 : lea edi, [rdi + 0x19] ; jne 0xb79a9 ; ret
0x00000000000b8b5c : lea edi, [rdi + 0x19] ; jne 0xb91c9 ; ret
0x00000000000b742d : lea edi, [rdi + 0x1a] ; jne 0xb79a9 ; ret
0x00000000000b8b91 : lea edi, [rdi + 0x1a] ; jne 0xb91c9 ; ret
0x00000000000b745b : lea edi, [rdi + 0x1b] ; jne 0xb79a9 ; ret
0x00000000000b8bbf : lea edi, [rdi + 0x1b] ; jne 0xb91c9 ; ret
0x00000000000b748b : lea edi, [rdi + 0x1c] ; jne 0xb79a9 ; ret
0x00000000000b8bef : lea edi, [rdi + 0x1c] ; jne 0xb91c9 ; ret
0x00000000000b74b7 : lea edi, [rdi + 0x1d] ; jne 0xb79a9 ; ret
0x00000000000b8c1b : lea edi, [rdi + 0x1d] ; jne 0xb91c9 ; ret
0x00000000000b74e7 : lea edi, [rdi + 0x1e] ; jne 0xb79a9 ; ret
0x00000000000b8c4b : lea edi, [rdi + 0x1e] ; jne 0xb91c9 ; ret
0x00000000000b7517 : lea edi, [rdi + 0x1f] ; jne 0xb79a9 ; ret
0x00000000000b8c7b : lea edi, [rdi + 0x1f] ; jne 0xb91c9 ; ret
0x00000000000b7547 : lea edi, [rdi + 0x20] ; jne 0xb79a9 ; ret
0x00000000000b8cab : lea edi, [rdi + 0x20] ; jne 0xb91c9 ; ret
0x00000000000b7213 : lea edi, [rdi + 0xa] ; jne 0xb79a9 ; ret
0x00000000000b88c7 : lea edi, [rdi + 0xa] ; jne 0xb91c9 ; ret
0x00000000000b7231 : lea edi, [rdi + 0xb] ; jne 0xb79a9 ; ret
0x00000000000b88f5 : lea edi, [rdi + 0xb] ; jne 0xb91c9 ; ret
0x00000000000b7251 : lea edi, [rdi + 0xc] ; jne 0xb79a9 ; ret
0x00000000000b8915 : lea edi, [rdi + 0xc] ; jne 0xb91c9 ; ret
0x00000000000b7273 : lea edi, [rdi + 0xd] ; jne 0xb79a9 ; ret
0x00000000000b8937 : lea edi, [rdi + 0xd] ; jne 0xb91c9 ; ret
0x00000000000b7293 : lea edi, [rdi + 0xe] ; jne 0xb79a9 ; ret
0x00000000000b8967 : lea edi, [rdi + 0xe] ; jne 0xb91c9 ; ret
0x00000000000b72b3 : lea edi, [rdi + 0xf] ; jne 0xb79a9 ; ret
0x00000000000b8997 : lea edi, [rdi + 0xf] ; jne 0xb91c9 ; ret
0x00000000000b70e7 : lea edi, [rdi + 1] ; jne 0xb79a9 ; ret
0x00000000000b879a : lea edi, [rdi + 1] ; jne 0xb91c9 ; ret
0x00000000000b710b : lea edi, [rdi + 2] ; jne 0xb79a9 ; ret
0x00000000000b87bf : lea edi, [rdi + 2] ; jne 0xb91c9 ; ret
0x00000000000b712e : lea edi, [rdi + 3] ; jne 0xb79a9 ; ret
0x00000000000b87e2 : lea edi, [rdi + 3] ; jne 0xb91c9 ; ret
0x00000000000b7149 : lea edi, [rdi + 4] ; jne 0xb79a9 ; ret
0x00000000000b87fd : lea edi, [rdi + 4] ; jne 0xb91c9 ; ret
0x00000000000b716c : lea edi, [rdi + 5] ; jne 0xb79a9 ; ret
0x00000000000b8820 : lea edi, [rdi + 5] ; jne 0xb91c9 ; ret
0x00000000000b7191 : lea edi, [rdi + 6] ; jne 0xb79a9 ; ret
0x00000000000b8845 : lea edi, [rdi + 6] ; jne 0xb91c9 ; ret
0x00000000000b71af : lea edi, [rdi + 7] ; jne 0xb79a9 ; ret
0x00000000000b8863 : lea edi, [rdi + 7] ; jne 0xb91c9 ; ret
0x00000000000b71cb : lea edi, [rdi + 8] ; jne 0xb79a9 ; ret
0x00000000000b887f : lea edi, [rdi + 8] ; jne 0xb91c9 ; ret
0x00000000000b71ee : lea edi, [rdi + 9] ; jne 0xb79a9 ; ret
0x00000000000b88a2 : lea edi, [rdi + 9] ; jne 0xb91c9 ; ret
0x00000000000794bb : lea edi, [rip + 0x13aaa8] ; call 0x125788
0x0000000000068cb0 : lea edi, [rip + 0x16a] ; add rax, rdi ; jmp rax
0x0000000000068c62 : lea edi, [rip + 0x1b8] ; add rax, rdi ; jmp rax
0x0000000000068bfe : lea edi, [rip + 0x21c] ; add rax, rdi ; jmp rax
0x0000000000068ba0 : lea edi, [rip + 0x27a] ; add rax, rdi ; jmp rax
0x000000000013ccbc : lea edi, [rip + 0x2b2b1e] ; call r12
0x000000000013c9b2 : lea edi, [rip + 0x2b2e28] ; call rax
0x0000000000068b48 : lea edi, [rip + 0x2d2] ; add rax, rdi ; jmp rax
0x000000000005d2fe : lea edi, [rip - 0x1624] ; add rax, rdi ; jmp rax
0x0000000000131160 : lea edi, [rip - 0x176] ; call rax
0x000000000014593e : lea edi, [rsp + 0x20] ; mov edx, r14d ; call 0x142369
0x00000000000c46fb : lea edx, [0] ; call 0x21169
0x000000000008fb11 : lea edx, [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000074bdc : lea edx, [rax + 4] ; cmp eax, 0x5d ; cmove r8, rdx ; jmp 0x74c05
0x0000000000084717 : lea edx, [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000040129 : lea edx, [rax - 1] ; mov dword ptr [rip + 0x3ab076], edx ; ret
0x000000000016c8a4 : lea edx, [rbx + rdx] ; jmp rdx
0x000000000012fd05 : lea edx, [rcx + 0x70] ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x00000000000ff5ec : lea edx, [rdx + rax*8] ; jmp 0xff60f
0x00000000000a8ab6 : lea edx, [rdx + rcx] ; jmp r10
0x0000000000125623 : lea edx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000016cc98 : lea edx, [rdx - 0x40] ; jmp r9
0x00000000000be6ee : lea edx, [rip + 0x1224c] ; cmovne rax, rdx ; ret
0x000000000009d7b3 : lea edx, [rip + 0x14227] ; cmovne rax, rdx ; ret
0x000000000009dcf3 : lea edx, [rip + 0x15907] ; cmovne rax, rdx ; ret
0x000000000005b22d : lea edx, [rip + 0x3d8d4800] ; cdq ; retf 0x15
0x000000000005b1ef : lea edx, [rip + 0x3d8d4800] ; xlatb ; retf 0x15
0x00000000001585e6 : lea edx, [rip + 0x3f04] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000131aab : lea edx, [rip + 0x401df] ; cmovne rax, rdx ; ret
0x000000000013190b : lea edx, [rip + 0x4039f] ; cmovne rax, rdx ; ret
0x00000000001319db : lea edx, [rip + 0x42d9f] ; cmovne rax, rdx ; ret
0x000000000009d823 : lea edx, [rip + 0xcc537] ; cmovne rax, rdx ; ret
0x000000000009dd2d : lea edx, [rip + 0xcd28d] ; cmovne rax, rdx ; ret
0x000000000009f14b : lea edx, [rip + 0xd2b6f] ; cmovne rax, rdx ; ret
0x000000000009ee4b : lea edx, [rip + 0xd2e4f] ; cmovne rax, rdx ; ret
0x000000000009ecdb : lea edx, [rip + 0xd5aaf] ; cmovne rax, rdx ; ret
0x00000000000bd478 : lea edx, [rip + 0xd7be2] ; cmovne rax, rdx ; ret
0x000000000009f02b : lea edx, [rip + 0xd827f] ; cmovne rax, rdx ; ret
0x000000000009ef8b : lea edx, [rip + 0xd830f] ; cmovne rax, rdx ; ret
0x000000000009f07b : lea edx, [rip + 0xda37f] ; cmovne rax, rdx ; ret
0x000000000009efdb : lea edx, [rip + 0xda40f] ; cmovne rax, rdx ; ret
0x000000000009d863 : lea edx, [rip + 0xde0e7] ; cmovne rax, rdx ; ret
0x000000000009dd63 : lea edx, [rip + 0xdf397] ; cmovne rax, rdx ; ret
0x000000000009ef13 : lea edx, [rip + 0xe0d67] ; cmovne rax, rdx ; ret
0x000000000009ef43 : lea edx, [rip + 0xe2547] ; cmovne rax, rdx ; ret
0x000000000009ec48 : lea edx, [rip + 0xf4ca2] ; cmovne rax, rdx ; ret
0x000000000009d7ef : lea edx, [rip + 0xf5ddb] ; cmovne rax, rdx ; ret
0x000000000006604a : lea edx, [rip - 0x2fe] ; add rax, rdx ; jmp rax
0x00000000001180fa : lea edx, [rsi + 1] ; jne 0x1180d6 ; ret
0x0000000000115a76 : lea edx, [rsp + 0x30] ; mov eax, 0x10 ; syscall
0x0000000000150d19 : lea esi, [rbx + 8] ; mov rdi, rbp ; call 0x15cfa8
0x00000000000827f0 : lea esi, [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000002fba : lea esi, [rdi] ; ret 0x793b
0x00000000000803f7 : lea esi, [rip + 0x1d3] ; mov rdi, rbp ; call rax
0x000000000004f011 : lea esi, [rip + 0x349] ; call rax
0x000000000013cd3f : lea esi, [rip + 0x79f73] ; call 0x148f68
0x000000000013cc83 : lea esi, [rip + 0x7a02f] ; call 0x148f68
0x000000000008d60a : lea esi, [rip - 0x100] ; call rax
0x000000000008ed28 : lea esi, [rip - 0x181e] ; call rax
0x0000000000080762 : lea esi, [rip - 0x198] ; call rax
0x000000000008f12f : lea esi, [rip - 0x1c25] ; call rax
0x000000000008f435 : lea esi, [rip - 0x1f2b] ; call rax
0x000000000008f798 : lea esi, [rip - 0x228e] ; call rax
0x000000000008d8ff : lea esi, [rip - 0x3f5] ; call rax
0x000000000005c51b : lea esi, [rip - 0x841] ; add rax, rsi ; jmp rax
0x00000000000bb4df : lea esi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015cedd : lea esi, [rsp + 0x10] ; call qword ptr [rax]
0x000000000015c751 : lea esi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000014ead5 : lea esi, [rsp + 0x18] ; lea r12, [rsp + 0x10] ; call qword ptr [rax]
0x000000000015c742 : lea esi, [rsp + 8] ; call qword ptr [rax]
0x0000000000134b80 : lea esi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x000000000010331c : lea esp, [rax - 0x7cffffff] ; ret 0x4802
0x00000000000e2fd9 : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000042861 : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000430fb : lea esp, [rbx + rax*8 + 8] ; nop ; call qword ptr [rbx]
0x000000000014eada : lea esp, [rsp + 0x10] ; call qword ptr [rax]
0x00000000000a8ab5 : lea r10, [r10 + r9] ; jmp r10
0x00000000000430fa : lea r12, [rbx + rax*8 + 8] ; nop ; call qword ptr [rbx]
0x000000000014ead9 : lea r12, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000105d4e : lea r8, [rax + r13] ; call r12
0x000000000016c7cf : lea r9, [r11 + r9] ; jmp r9
0x0000000000086f33 : lea r9, [rbp - 0x40] ; mov rdi, r15 ; call r12
0x0000000000086d3f : lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x0000000000157e59 : lea r9, [rsp + 0x14] ; call qword ptr [r10]
0x0000000000086c5a : lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000001587ed : lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000014ccaa : lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000000bdcdd : lea r9, [rsp + 0x20] ; call rbx
0x00000000000bdb0b : lea r9, [rsp + 0x28] ; call r12
0x00000000000bd951 : lea r9, [rsp + 0x28] ; lea rcx, [rax + 4] ; call rbx
0x00000000000be1e6 : lea r9, [rsp + 0x28] ; mov rdi, rbp ; call rbx
0x000000000014c9da : lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x00000000000ccf0a : lea r9, [rsp + 0x30] ; call r12
0x00000000000bdeeb : lea r9, [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x00000000000bd7e5 : lea r9, [rsp + 0x38] ; lea rcx, [rax + 1] ; call rbx
0x0000000000159207 : lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000014d1cb : lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x00000000000bdb0a : lea r9, ds:[rsp + 0x28] ; call r12
0x00000000000ccf09 : lea r9, ds:[rsp + 0x30] ; call r12
0x00000000000e6881 : lea rax, [rax + rax - 1] ; ret
0x00000000000abc33 : lea rax, [rax + rdi + 0x10] ; ret
0x00000000000abc43 : lea rax, [rax + rdi + 0x20] ; ret
0x00000000000ac113 : lea rax, [rax + rdi + 0x30] ; ret
0x00000000000abc13 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000df181 : lea rax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000014e5ca : lea rax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000e9948 : lea rax, [rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e9838 : lea rax, [rbx + 8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b151c : lea rax, [rcx + rsi] ; ret
0x00000000000bb0c3 : lea rax, [rcx - 1] ; ret
0x00000000000b801b : lea rax, [rdi + 0x10] ; ret
0x00000000000b8030 : lea rax, [rdi + 0x11] ; ret
0x00000000000b804e : lea rax, [rdi + 0x12] ; ret
0x00000000000b806e : lea rax, [rdi + 0x13] ; ret
0x00000000000b8091 : lea rax, [rdi + 0x14] ; ret
0x00000000000b80b0 : lea rax, [rdi + 0x15] ; ret
0x00000000000b80d0 : lea rax, [rdi + 0x16] ; ret
0x00000000000b80f0 : lea rax, [rdi + 0x17] ; ret
0x00000000000b8113 : lea rax, [rdi + 0x18] ; ret
0x00000000000b8138 : lea rax, [rdi + 0x19] ; ret
0x00000000000b8156 : lea rax, [rdi + 0x1a] ; ret
0x00000000000b8176 : lea rax, [rdi + 0x1b] ; ret
0x00000000000b8192 : lea rax, [rdi + 0x1c] ; ret
0x00000000000b81b2 : lea rax, [rdi + 0x1d] ; ret
0x00000000000b81d2 : lea rax, [rdi + 0x1e] ; ret
0x00000000000b81f2 : lea rax, [rdi + 0x1f] ; ret
0x00000000000b9052 : lea rax, [rdi + 0x20] ; ret
0x00000000000b92b8 : lea rax, [rdi + 0x40] ; ret
0x00000000000b7f6c : lea rax, [rdi + 0xa] ; ret
0x00000000000b7f8c : lea rax, [rdi + 0xb] ; ret
0x00000000000b7fae : lea rax, [rdi + 0xc] ; ret
0x00000000000b7fce : lea rax, [rdi + 0xd] ; ret
0x00000000000b7fee : lea rax, [rdi + 0xe] ; ret
0x00000000000b8008 : lea rax, [rdi + 0xf] ; ret
0x00000000000b7eb6 : lea rax, [rdi + 1] ; ret
0x00000000000b7ec9 : lea rax, [rdi + 2] ; ret
0x00000000000b7ed4 : lea rax, [rdi + 3] ; ret
0x00000000000b7ee7 : lea rax, [rdi + 4] ; ret
0x00000000000b7efc : lea rax, [rdi + 5] ; ret
0x00000000000b7f1a : lea rax, [rdi + 6] ; ret
0x00000000000b7f26 : lea rax, [rdi + 7] ; ret
0x00000000000b7f39 : lea rax, [rdi + 8] ; ret
0x00000000000b7f4e : lea rax, [rdi + 9] ; ret
0x00000000000abc68 : lea rax, [rdi + rax + 0x10] ; ret
0x00000000000abc78 : lea rax, [rdi + rax + 0x20] ; ret
0x00000000000abb72 : lea rax, [rdi + rax + 0x30] ; ret
0x000000000018e504 : lea rax, [rdi + rax - 0x20] ; vzeroupper ; ret
0x00000000000a8625 : lea rax, [rdi + rax - 1] ; mov qword ptr [rdi], rdx ; ret
0x00000000000a8613 : lea rax, [rdi + rax - 1] ; ret
0x00000000000b1166 : lea rax, [rdi + rax] ; ret
0x000000000018a199 : lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000001413df : lea rax, [rdi + rsi + 8] ; ret
0x0000000000030204 : lea rax, [rdi + rsi*4] ; mov eax, dword ptr [rax + rdx] ; ret
0x00000000000b1418 : lea rax, [rdi + rsi] ; ret
0x00000000000d079d : lea rax, [rdi - 0x10] ; ret
0x00000000000d0900 : lea rax, [rdi - 0xc] ; ret
0x00000000000d0920 : lea rax, [rdi - 4] ; ret
0x00000000000d0910 : lea rax, [rdi - 8] ; ret
0x00000000000b7ea2 : lea rax, [rdi] ; ret
0x00000000001813fc : lea rax, [rdx + 0xa] ; ret
0x000000000018141c : lea rax, [rdx + 0xb] ; ret
0x000000000018143e : lea rax, [rdx + 0xc] ; ret
0x000000000018145e : lea rax, [rdx + 0xd] ; ret
0x000000000018147e : lea rax, [rdx + 0xe] ; ret
0x000000000018130e : lea rax, [rdx + 0xf] ; ret
0x0000000000181336 : lea rax, [rdx + 1] ; ret
0x000000000018134c : lea rax, [rdx + 2] ; ret
0x0000000000181364 : lea rax, [rdx + 3] ; ret
0x000000000018137a : lea rax, [rdx + 4] ; ret
0x000000000018138c : lea rax, [rdx + 5] ; ret
0x00000000001813aa : lea rax, [rdx + 6] ; ret
0x00000000001812b6 : lea rax, [rdx + 7] ; ret
0x00000000001813bc : lea rax, [rdx + 8] ; ret
0x00000000001813dc : lea rax, [rdx + 9] ; ret
0x000000000009a7e0 : lea rax, [rdx - 0x10] ; ret
0x000000000009a7c7 : lea rax, [rdx - 8] ; ret
0x0000000000181324 : lea rax, [rdx] ; ret
0x000000000002f0ef : lea rax, [rip + 0x184b83] ; ret
0x0000000000021c90 : lea rax, [rip + 0x191b34] ; ret
0x0000000000021ca0 : lea rax, [rip + 0x193971] ; ret
0x0000000000117ebc : lea rax, [rip + 0x2d6235] ; ret
0x0000000000117cdc : lea rax, [rip + 0x2d6415] ; ret
0x000000000011f6e8 : lea rax, [rip + 0x960e9] ; pop rbx ; ret
0x00000000000bd493 : lea rax, [rip + 0xd1bc6] ; je 0xbd466 ; ret
0x000000000009ec63 : lea rax, [rip + 0xebf36] ; je 0x9ec36 ; ret
0x00000000000d08d9 : lea rax, es:[rdi - 0x10] ; ret
0x000000000011464a : lea rbp, [rax + 1] ; mov rdi, rbp ; call 0x21109
0x000000000019c648 : lea rbp, [rbx + rax*8 + 8] ; nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000a14c4 : lea rbp, [rcx + 1] ; jne 0xa1458 ; pop rbx ; pop rbp ; ret
0x0000000000041fe0 : lea rbx, [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000b675d : lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000bd7ea : lea rcx, [rax + 1] ; call rbx
0x00000000000bd956 : lea rcx, [rax + 4] ; call rbx
0x00000000000bdd55 : lea rcx, [rax + 4] ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000081ae5 : lea rcx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000009a7d5 : lea rcx, [rdx - 8] ; cmovne rax, rcx ; ret
0x000000000009c1c8 : lea rcx, [rip + 0x117aaa] ; mov rdx, rcx ; jmp 0x9c16f
0x0000000000125846 : lea rcx, [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000014c1be : lea rdi, [rax + 0x18] ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000153b3d : lea rdi, [rbp + 0x10] ; call rax
0x0000000000156941 : lea rdi, [rbx + 0x58] ; call rax
0x0000000000155eb1 : lea rdi, [rbx + 0x68] ; call rax
0x0000000000152f14 : lea rdi, [rbx + 0xc8] ; call rax
0x00000000000794ba : lea rdi, [rip + 0x13aaa8] ; call 0x125789
0x000000000013ccbb : lea rdi, [rip + 0x2b2b1e] ; call r12
0x000000000013c9b1 : lea rdi, [rip + 0x2b2e28] ; call rax
0x000000000013115f : lea rdi, [rip - 0x176] ; call rax
0x00000000000ff5eb : lea rdx, [r10 + rax*8] ; jmp 0xff610
0x000000000016c8a3 : lea rdx, [r11 + rdx] ; jmp rdx
0x000000000012fd04 : lea rdx, [rcx + 0x70] ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x0000000000125622 : lea rdx, [rdx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000016cc97 : lea rdx, [rdx - 0x40] ; jmp r9
0x000000000005b1ee : lea rdx, [rip + 0x3d8d4800] ; xlatb ; retf 0x15
0x00000000001180f9 : lea rdx, [rsi + 1] ; jne 0x1180d7 ; ret
0x0000000000150d18 : lea rsi, [rbx + 8] ; mov rdi, rbp ; call 0x15cfa9
0x000000000004f010 : lea rsi, [rip + 0x349] ; call rax
0x000000000013cd3e : lea rsi, [rip + 0x79f73] ; call 0x148f69
0x000000000013cc82 : lea rsi, [rip + 0x7a02f] ; call 0x148f69
0x000000000008d609 : lea rsi, [rip - 0x100] ; call rax
0x000000000008ed27 : lea rsi, [rip - 0x181e] ; call rax
0x0000000000080761 : lea rsi, [rip - 0x198] ; call rax
0x000000000008f12e : lea rsi, [rip - 0x1c25] ; call rax
0x000000000008f434 : lea rsi, [rip - 0x1f2b] ; call rax
0x000000000008f797 : lea rsi, [rip - 0x228e] ; call rax
0x000000000008d8fe : lea rsi, [rip - 0x3f5] ; call rax
0x00000000000bb4de : lea rsi, [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000015cedc : lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x000000000015c750 : lea rsi, [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x000000000015c741 : lea rsi, [rsp + 8] ; call qword ptr [rax]
0x00000000000e2fd8 : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000e52ae : lea rsp, cs:[rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000003276e : leave ; adc eax, 0x89480018 ; ret 0xc031
0x000000000016c437 : leave ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000067b23 : leave ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001d0125 : leave ; add byte ptr [rax], al ; fsub st(5) ; out dx, al ; jmp qword ptr [rax]
0x00000000001d0139 : leave ; add byte ptr [rax], al ; in al, 0xe5 ; out dx, al ; call qword ptr [rax]
0x00000000000e85ab : leave ; add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000001520 : leave ; add eax, 0 ; add byte ptr [rax], al ; retf
0x0000000000186107 : leave ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003e161 : leave ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x00000000001b061d : leave ; bnd call qword ptr [rdx] ; retf
0x000000000002bcea : leave ; call r15
0x0000000000002ca0 : leave ; clc ; ret
0x00000000001c33c9 : leave ; cld ; push rsp ; adc al, byte ptr [rcx] ; add ah, al ; retf 0xfffc
0x00000000000bb386 : leave ; cmove rax, rdx ; ret
0x00000000001bf2b1 : leave ; in al, dx ; ljmp [rax - 0x2c] ; add byte ptr [rax], al ; push rsp ; retf 0xffec
0x00000000001cf02d : leave ; in eax, dx ; jmp qword ptr [rbx]
0x000000000019a1e2 : leave ; je 0x19a1ea ; call rcx
0x000000000002d647 : leave ; je 0x2d64f ; call rcx
0x0000000000087220 : leave ; je 0x87257 ; mov eax, edx ; pop rbx ; ret
0x00000000000bd07c : leave ; je 0xbd08d ; xor eax, eax ; ret
0x00000000000a8463 : leave ; jmp rcx
0x000000000014387c : leave ; jne 0x143865 ; ret
0x00000000000a8279 : leave ; jne 0xa826c ; ret
0x00000000000a83c8 : leave ; jne 0xa83be ; xor eax, eax ; ret
0x00000000000baea0 : leave ; jne 0xbae93 ; ret
0x00000000000baf50 : leave ; jne 0xbaf43 ; ret
0x00000000000bb210 : leave ; jne 0xbb207 ; sub rax, 1 ; ret
0x00000000000bd24c : leave ; jne 0xbd244 ; ret
0x00000000000bd31f : leave ; jne 0xbd318 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000d0bda : leave ; jne 0xd0b97 ; mov rax, rdx ; ret
0x000000000018a198 : leave ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000000b6081 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000bc0e4 : leave ; mov dword ptr [rdx], ecx ; jne 0xbc0de ; ret
0x0000000000156b51 : leave ; mov rdx, r13 ; call 0x122d96
0x000000000008fc3a : leave ; nop dword ptr [rax + rax] ; ret
0x0000000000054803 : leave ; ret
0x00000000000612c3 : leave ; retf
0x00000000001aacc1 : leave ; retf 0x6ee8
0x0000000000104ad3 : leave ; retf 0xa
0x00000000001a9429 : leave ; retf 0xcccb
0x00000000001c2b89 : leave ; stc ; jmp rax
0x00000000000bdcda : leave ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000122c42 : leave ; xor r8d, r8d ; mov eax, 0x2c ; syscall
0x0000000000122a12 : leave ; xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000001b05ef : ljmp [rax + 0x37fff2cd] ; ret
0x00000000001c0953 : ljmp [rax + 0x400016a] ; lodsd eax, dword ptr [rsi] ; hlt ; jmp rsp
0x00000000001bf10b : ljmp [rax + 0x440000cb] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; jmp rsp
0x00000000001c361b : ljmp [rax + rbp*2] ; add ah, dl ; ret
0x00000000001bf2b3 : ljmp [rax - 0x2c] ; add byte ptr [rax], al ; push rsp ; retf 0xffec
0x00000000001c1323 : ljmp [rax - 0x3bfffe63] ; sbb dh, dh ; call rsp
0x00000000001b0ccf : ljmp [rax - 0x57000c4a] ; mov dh, 0xf3 ; jmp rsp
0x00000000001bee6b : ljmp [rax - 0x6bffff45] ; in al, dx ; jmp rax
0x00000000001bd07f : ljmp [rax] ; cmp edi, ebx ; push rax ; cmp al, 0xfb ; call rax
0x00000000001b107b : ljmp [rbp + 0x20fff40a] ; or al, 0xf4 ; jmp qword ptr [rax]
0x00000000001c26db : ljmp [rbp + rcx + 0xef40002] ; stc ; jmp rax
0x00000000001b0827 : ljmp [rbx - 0xf000c9a] ; jmp rsp
0x00000000001309be : ljmp [rbx] ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x00000000001b16f5 : ljmp [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x00000000000fee99 : ljmp [rcx] ; ret 0x6348
0x0000000000068dd6 : ljmp [rcx] ; retf 0xc239
0x0000000000034d4e : ljmp [rdi] ; call 0x21054
0x000000000011f660 : ljmp [rdi] ; jne 0x11f694 ; mov rdx, rax ; jmp 0x11f67c
0x00000000001afeaf : ljmp [rdi] ; jne 0x1afea8 ; call qword ptr [rax]
0x00000000001afeaf : ljmp [rdi] ; jne 0x1afea9 ; call qword ptr [rax]
0x00000000001afeae : ljmp [rdi] ; jne 0x1afeaa ; call qword ptr [rax]
0x00000000001bdfab : ljmp [rdx + rbp*2] ; add byte ptr [rsi + rax - 0x19], al ; call rax
0x00000000001c2e2b : ljmp [rdx + rdi + 0x5440002] ; cli ; call rax
0x000000000009ffd6 : ljmp [rdx] ; cmp rdx, rcx ; jne 0x9ffd8 ; ret
0x00000000001ae70b : ljmp [rdx] ; imul ebp, esp, 0xec75a7ff ; jmp rsi
0x00000000001bdb3f : ljmp [rdx] ; mov bh, bl ; call rax
0x00000000001bdabb : ljmp [rsi + 0x3efffb8a] ; mov bh, bl ; jmp rsp
0x00000000001c087b : ljmp [rsi + 0x5f640001] ; hlt ; call rsp
0x00000000001bd4fb : ljmp [rsp + 0x643cfffb] ; sti ; jmp rdx
0x000000000019039e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001d275d : lock add byte ptr [rax], al ; loopne 0x1d2788 ; int1 ; jmp qword ptr [rcx]
0x0000000000021375 : lock add byte ptr [rax], al ; ret
0x000000000009d5f6 : lock add dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000001c86e5 : lock add dword ptr [rdx], eax ; ret 0xe0a
0x0000000000115788 : lock and byte ptr [rax - 0x77], cl ; ret
0x000000000011235d : lock dec dword ptr [rax + 0x39] ; ret
0x00000000001181a6 : lock dec dword ptr [rax - 0x73] ; adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x000000000011115e : lock dec dword ptr [rax - 0x77] ; ret
0x0000000000113329 : lock dec dword ptr [rax - 0x77] ; ret 0x348
0x00000000001190d1 : lock dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000013be1a : lock dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 4
0x000000000011f64c : lock dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdi*2 + 0x48], 0x39 ; ret
0x00000000001121c2 : lock dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000112891 : lock dec dword ptr [rcx - 0x73] ; push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x00000000001af35a : lock inc dword ptr [rax - 0x2f000ff8] ; or dh, al ; jmp qword ptr [rax]
0x00000000001af49a : lock inc dword ptr [rax - 0x5f000f81] ; jg 0x1af49c ; call rax
0x00000000001af48a : lock inc dword ptr [rax] ; jg 0x1af484 ; jmp qword ptr [rax]
0x00000000001af44a : lock inc dword ptr [rax] ; jge 0x1af444 ; jmp qword ptr [rax]
0x00000000001af46a : lock inc dword ptr [rax] ; jle 0x1af464 ; jmp qword ptr [rax]
0x00000000001af3c6 : lock inc dword ptr [rax] ; jne 0x1af3c0 ; call qword ptr [rax]
0x00000000001af58a : lock inc dword ptr [rax] ; test al, dh ; call qword ptr [rax]
0x00000000001af4d6 : lock inc dword ptr [rax] ; xor eax, 0xf08110ff ; jmp qword ptr [rax]
0x000000000011ed64 : lock inc dword ptr [rbp - 0x164a8b40] ; retf 0xfffe
0x0000000000119b29 : lock inc dword ptr [rbp - 0x7cee8b40] ; ret
0x00000000001af97e : lock inc dword ptr [rsi] ; ret 0xfff0
0x000000000000ad49 : lock or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000185200 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000007ed40 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000194ad0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001bec95 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; imul bl ; jmp rax
0x00000000001ce361 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; insb byte ptr [rdi], dx ; or ch, ch ; call qword ptr [rax]
0x00000000001c087c : lodsb al, byte ptr [rsi] ; add word ptr [rax], ax ; pop rdi ; hlt ; call rsp
0x00000000001501ce : lodsb al, byte ptr [rsi] ; and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; retf 0x8948
0x00000000000570db : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x9848
0x000000000015a097 : lodsb al, byte ptr [rsi] ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000d1994 : lodsb al, byte ptr [rsi] ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000001af391 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax - 0x2f000352]
0x00000000001c2e2c : lodsb al, byte ptr [rsi] ; cmp al, byte ptr [rdx] ; add byte ptr [rbp + rax - 6], al ; call rax
0x00000000000301a1 : lodsb al, byte ptr [rsi] ; cmp eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x00000000001d7104 : lodsb al, byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001da1e4 : lodsb al, byte ptr [rsi] ; idiv eax ; jmp qword ptr [rbx]
0x00000000001ac3e6 : lodsb al, byte ptr [rsi] ; loop 0x1ac3b3 ; retf
0x00000000001db084 : lodsb al, byte ptr [rsi] ; nop ; cmc ; jmp qword ptr [rdi]
0x0000000000185824 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001ad19d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001c26dc : lodsb al, byte ptr [rsi] ; or eax, 0xef40002 ; stc ; jmp rax
0x00000000001266a2 : lodsb al, byte ptr [rsi] ; out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001da1f4 : lodsb al, byte ptr [rsi] ; push 1 ; add byte ptr [rax + 0x62], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001beff4 : lodsb al, byte ptr [rsi] ; ret
0x00000000001e1444 : lodsb al, byte ptr [rsi] ; ret 0xfff7
0x000000000007bb00 : lodsb al, byte ptr [rsi] ; retf
0x00000000001c4ff4 : lodsb al, byte ptr [rsi] ; sbb byte ptr [rax], al ; add byte ptr [rax], bh ; fsubr st(6), st(0) ; call qword ptr [rsi]
0x00000000001d10f4 : lodsb al, byte ptr [rsi] ; sbb esi, eax ; jmp rsi
0x00000000001d61f4 : lodsb al, byte ptr [rsi] ; sub al, byte ptr [rcx] ; add byte ptr [rax], cl ; add dh, ah ; jmp qword ptr [rcx]
0x00000000001cdff4 : lodsb al, byte ptr [rsi] ; test al, 0 ; add byte ptr [rax], bh ; clc ; in al, dx ; call qword ptr [rax]
0x00000000001be58c : lodsb al, byte ptr [rsi] ; test byte ptr [rax], al ; add byte ptr [rdi + rcx*2 - 0x18], al ; jmp rsp
0x00000000001ced44 : lodsb al, byte ptr [rsi] ; xchg eax, ebp ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aaa1b : lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000001e1a04 : lodsb al, byte ptr [rsi] ; xchg eax, edx ; sti ; jmp qword ptr [rdx]
0x000000000004609c : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000008740f : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001becb5 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; xchg eax, esp ; add ebp, esp ; call rsp
0x000000000005c887 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx + 1], al ; ret 0x8949
0x00000000001bcbed : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rax - 0x51] ; cld ; jmp rax
0x00000000001b1c95 : lodsd eax, dword ptr [rsi] ; cmc ; call qword ptr [rdi]
0x00000000001c0959 : lodsd eax, dword ptr [rsi] ; hlt ; jmp rsp
0x00000000001bf161 : lodsd eax, dword ptr [rsi] ; in al, dx ; call rax
0x00000000000e67c5 : lodsd eax, dword ptr [rsi] ; mov eax, 0x40 ; ret
0x00000000001ac7c5 : lodsd eax, dword ptr [rsi] ; mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000189390 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001b107c : lodsd eax, dword ptr [rsi] ; or dh, ah ; jmp qword ptr [rax]
0x00000000000533f2 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000078d9a : lodsd eax, dword ptr [rsi] ; ret 0xffff
0x00000000001af205 : lodsd eax, dword ptr [rsi] ; sti ; call rax
0x00000000001bf160 : lodsd eax, dword ptr fs:[rsi] ; in al, dx ; call rax
0x000000000004609b : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000104bfc : loop 0x104c0f ; retf 0x8348
0x000000000010b260 : loop 0x10b24c ; retf 0xf15f
0x0000000000115c9e : loop 0x115c66 ; add dword ptr [rax + rax], edx ; mov eax, ecx ; syscall
0x000000000012f2d4 : loop 0x12f2ea ; adc dword ptr [rbp - 0x78], eax ; call rax
0x000000000012f4fb : loop 0x12f511 ; adc dword ptr [rbp - 0x78], eax ; call rax
0x000000000012f590 : loop 0x12f5a6 ; adc dword ptr [rbp - 0x78], eax ; call rax
0x000000000014387e : loop 0x143875 ; ret
0x0000000000150c3c : loop 0x150cc6 ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x0000000000158919 : loop 0x1588ab ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000158abd : loop 0x158a4f ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000015d2b8 : loop 0x15d23f ; ret 0x7401
0x000000000015d48e : loop 0x15d415 ; ret 0xf01
0x00000000001739ca : loop 0x1739c5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001739c9 : loop 0x1739c6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001764ea : loop 0x1764e5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001764e9 : loop 0x1764e6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000001ac3e7 : loop 0x1ac3b2 ; retf
0x00000000001ad53a : loop 0x1ad58f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001ae31d : loop 0x1ae30c ; call rdi
0x00000000001ae31c : loop 0x1ae30d ; call rdi
0x00000000001ae76d : loop 0x1ae75d ; jmp rax
0x00000000001ae76c : loop 0x1ae75e ; jmp rax
0x00000000001af2d9 : loop 0x1af2d0 ; inc eax ; in al, 0xef ; call rax
0x00000000001bdc69 : loop 0x1bdc6d ; inc eax ; jrcxz 0x1bdc71 ; call qword ptr [rax]
0x00000000001be811 : loop 0x1be7fd ; call rax
0x00000000001be819 : loop 0x1be805 ; jmp rsp
0x00000000001bf505 : loop 0x1bf50d ; add byte ptr [rax - 0x13], al ; jmp rax
0x00000000001bf7b9 : loop 0x1bf7aa ; call rax
0x00000000001c2095 : loop 0x1c209e ; add byte ptr [rax + rcx*8 - 9], dh ; jmp rax
0x00000000001e5928 : loop 0x1e5935 ; add byte ptr [rax], al ; jnp 0x1e593c ; add byte ptr [rax], al ; ret 4
0x000000000000265d : loop 0x2637 ; ret 0x943d
0x0000000000002cae : loop 0x2cc1 ; retf
0x0000000000043937 : loop 0x43960 ; mov eax, eax ; or rax, rdx ; ret
0x000000000006d67e : loop 0x6d684 ; dec dword ptr [rax - 0x39] ; ret
0x000000000007c75a : loop 0x7c6ec ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000086b1d : loop 0x86b1f ; add rdx, rcx ; jmp 0x86b35
0x00000000000aa10d : loop 0xaa145 ; shr byte ptr [rcx], 0xc8 ; ret
0x00000000000b73ba : loop 0xb73c5 ; add byte ptr [rax], al ; ret
0x00000000000bbabf : loop 0xbbad9 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000bd47a : loop 0xbd4fe ; or eax, 0x450f4800 ; ret 0xc3f3
0x00000000000bd47a : loop 0xbd500 ; or eax, 0x450f4800 ; ret 0xc3f3
0x00000000000c6fbe : loop 0xc6fee ; shr eax, 0x6a ; ret 0xfff8
0x00000000000f6769 : loop 0xf676e ; add esi, esi ; ret
0x00000000000fb096 : loop 0xfb027 ; sub byte ptr [rcx + 0x63], cl ; retf 0x949
0x00000000000fb3d1 : loop 0xfb3d8 ; add ah, bh ; dec dword ptr [rcx] ; retf 0x5089
0x000000000010441e : loope 0x104429 ; and byte ptr [rax + rax*8 - 0x76b2248b], al ; ret
0x000000000011736a : loope 0x117371 ; mov eax, 0xa9 ; syscall
0x00000000001187dd : loope 0x1187d3 ; mov rdx, r9 ; jmp 0x118815
0x0000000000150849 : loope 0x150885 ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x31] ; retf 0xc148
0x0000000000152ede : loope 0x152e73 ; ret
0x000000000017393a : loope 0x173935 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000173939 : loope 0x173936 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017645a : loope 0x176455 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000176459 : loope 0x176456 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000017ef6b : loope 0x17ef72 ; add byte ptr [rax], al ; ret
0x00000000001937fb : loope 0x193805 ; add byte ptr [rax], al ; lea rax, [rdi + 0xf] ; ret
0x00000000001966eb : loope 0x1966d8 ; ret
0x000000000019a36e : loope 0x19a3d0 ; pop rbp ; pop r12 ; ret
0x000000000019a736 : loope 0x19a795 ; ret
0x00000000001ac4f1 : loope 0x1ac573 ; pop rdx ; leave ; retf
0x00000000001b1dc9 : loope 0x1b1dd3 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001bccb0 : loope 0x1bccff ; std ; push qword ptr [rcx + 0x47] ; std ; call qword ptr [rcx]
0x00000000001bec51 : loope 0x1bec40 ; call rsp
0x00000000001cabc1 : loope 0x1cabb0 ; jmp qword ptr [rcx]
0x00000000001e18a9 : loope 0x1e18b0 ; add ah, al ; retf 0xfff7
0x00000000001e18c1 : loope 0x1e18c8 ; add ah, ch ; retf 0xfff7
0x00000000001e18ed : loope 0x1e18f4 ; add byte ptr [rax], dh ; retf
0x0000000000002736 : loope 0x26f1 ; hlt ; out 0xdf, eax ; syscall
0x00000000000037b2 : loope 0x37d8 ; retf 0x5038
0x000000000003f64e : loope 0x3f657 ; add byte ptr [rax], al ; adc byte ptr [rdi], cl ; ret 0x8b48
0x000000000004721b : loope 0x4726f ; mov edi, edi ; call 0x53496
0x0000000000053287 : loope 0x532d9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000532b8 : loope 0x5330b ; mov dword ptr [rdi - 8], ecx ; ret
0x000000000005332d : loope 0x53380 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000695aa : loope 0x695e8 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006a0e7 : loope 0x6a0ed ; dec dword ptr [rcx + 0x63] ; retf
0x00000000000875a1 : loope 0x87576 ; mov dword ptr [rdi], ecx ; ret
0x000000000009ffe4 : loope 0x9ffdb ; ret
0x00000000000a2c0c : loope 0xa2c5b ; cmp dl, cl ; jb 0xa2bf6 ; mov rdx, rax ; jmp 0xa2ba6
0x00000000000a428a : loope 0xa4211 ; retf 0xc180
0x00000000000bad99 : loope 0xbae08 ; nop dword ptr [rax + rax] ; ret
0x00000000000bc04e : loope 0xbc045 ; ret
0x00000000000d0dde : loope 0xd0df3 ; je 0xd0e04 ; ret
0x00000000000e6869 : loope 0xe6829 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000fccda : loope 0xfccdf ; add esi, esi ; ret 0xf04
0x000000000010f56c : loopne 0x10f5ce ; pop rbp ; pop r12 ; ret
0x000000000010f57d : loopne 0x10f5df ; pop rbp ; pop r12 ; ret
0x0000000000118585 : loopne 0x11857f ; mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1185c2
0x0000000000118715 : loopne 0x11870b ; mov rdx, r8 ; jmp 0x11874d
0x000000000011eb76 : loopne 0x11eb80 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001216dc : loopne 0x121706 ; and rax, rdi ; or rax, rsi ; ret
0x0000000000122000 : loopne 0x122007 ; ret
0x0000000000124f1e : loopne 0x124f24 ; ret
0x0000000000124f3a : loopne 0x124f49 ; movzx eax, ax ; ret
0x0000000000124fae : loopne 0x124fb4 ; ret
0x000000000012504e : loopne 0x125054 ; ret
0x000000000012506a : loopne 0x12506f ; ret
0x00000000001250de : loopne 0x1250e4 ; ret
0x00000000001250fa : loopne 0x125103 ; movzx eax, ax ; ret
0x000000000012516e : loopne 0x125174 ; ret
0x00000000001251fe : loopne 0x125204 ; ret
0x000000000012529e : loopne 0x1252a4 ; ret
0x000000000012533e : loopne 0x125344 ; ret
0x00000000001253de : loopne 0x1253e4 ; ret
0x00000000001253fa : loopne 0x125405 ; movzx eax, ax ; ret
0x000000000012546e : loopne 0x125474 ; ret
0x0000000000125509 : loopne 0x12550f ; ret
0x000000000012559e : loopne 0x1255a4 ; ret
0x000000000012577a : loopne 0x125780 ; ret
0x00000000001258b0 : loopne 0x1258b6 ; ret
0x00000000001258c3 : loopne 0x1258d2 ; movzx eax, ax ; ret
0x0000000000125930 : loopne 0x125936 ; ret
0x00000000001259b0 : loopne 0x1259b6 ; ret
0x00000000001259c3 : loopne 0x1259c8 ; ret
0x0000000000125a30 : loopne 0x125a36 ; ret
0x0000000000125a43 : loopne 0x125a4c ; movzx eax, ax ; ret
0x0000000000125ab0 : loopne 0x125ab6 ; ret
0x0000000000125b30 : loopne 0x125b36 ; ret
0x0000000000125bb0 : loopne 0x125bb6 ; ret
0x0000000000125c30 : loopne 0x125c36 ; ret
0x0000000000125cb0 : loopne 0x125cb6 ; ret
0x0000000000125cc3 : loopne 0x125cce ; movzx eax, ax ; ret
0x0000000000125d30 : loopne 0x125d36 ; ret
0x0000000000125dad : loopne 0x125db3 ; ret
0x0000000000125e30 : loopne 0x125e36 ; ret
0x0000000000125fda : loopne 0x125fe0 ; ret
0x000000000013006b : loopne 0x130070 ; ret
0x000000000013010f : loopne 0x1300cf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000130768 : loopne 0x13077d ; cmp eax, 4 ; je 0x130777 ; ret
0x0000000000130931 : loopne 0x130944 ; pop rbp ; pop r12 ; ret
0x000000000013115e : loopne 0x1311b0 ; lea edi, [rip - 0x176] ; call rax
0x00000000001401d4 : loopne 0x1401d3 ; add eax, 0x10 ; ret
0x00000000001413ab : loopne 0x1413b9 ; shr rax, 4 ; and eax, 0x7f ; ret
0x00000000001413b2 : loopne 0x141435 ; ret
0x0000000000148488 : loopne 0x148508 ; or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000014b8c1 : loopne 0x14b931 ; nop dword ptr [rax + rax] ; ret
0x00000000001599a7 : loopne 0x1599b0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016ccf1 : loopne 0x16cd08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ccf0 : loopne 0x16cd09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ce41 : loopne 0x16ce58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ce40 : loopne 0x16ce59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cf91 : loopne 0x16cfa8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016cf90 : loopne 0x16cfa9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d0e1 : loopne 0x16d0f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d0e0 : loopne 0x16d0f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d231 : loopne 0x16d248 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d230 : loopne 0x16d249 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d381 : loopne 0x16d398 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d380 : loopne 0x16d399 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d4d1 : loopne 0x16d4e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d4d0 : loopne 0x16d4e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d61f : loopne 0x16d636 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d61e : loopne 0x16d637 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d771 : loopne 0x16d788 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d770 : loopne 0x16d789 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d8c1 : loopne 0x16d8d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016d8c0 : loopne 0x16d8d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016da11 : loopne 0x16da28 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016da10 : loopne 0x16da29 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016db61 : loopne 0x16db78 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016db60 : loopne 0x16db79 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016dcb1 : loopne 0x16dcc8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016dcb0 : loopne 0x16dcc9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016de01 : loopne 0x16de18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016de00 : loopne 0x16de19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016df51 : loopne 0x16df68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016df50 : loopne 0x16df69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016f6c1 : loopne 0x16f6d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016f6c0 : loopne 0x16f6d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016f811 : loopne 0x16f828 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016f810 : loopne 0x16f829 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016f961 : loopne 0x16f978 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016f960 : loopne 0x16f979 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016fab1 : loopne 0x16fac8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016fab0 : loopne 0x16fac9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016fc01 : loopne 0x16fc18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016fc00 : loopne 0x16fc19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016fd51 : loopne 0x16fd68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016fd50 : loopne 0x16fd69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016fea1 : loopne 0x16feb8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016fea0 : loopne 0x16feb9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ffef : loopne 0x170006 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ffee : loopne 0x170007 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170141 : loopne 0x170158 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170140 : loopne 0x170159 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170291 : loopne 0x1702a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170290 : loopne 0x1702a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001703e1 : loopne 0x1703f8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001703e0 : loopne 0x1703f9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170531 : loopne 0x170548 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170530 : loopne 0x170549 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170681 : loopne 0x170698 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170680 : loopne 0x170699 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001707d1 : loopne 0x1707e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000001707d0 : loopne 0x1707e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170921 : loopne 0x170938 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000170920 : loopne 0x170939 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000019a94f : loopne 0x19a946 ; ret
0x00000000001aab14 : loopne 0x1aaaf4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001ae769 : loopne 0x1ae75d ; inc dword ptr [rax - 0x1e] ; in al, dx ; jmp rax
0x00000000001aec79 : loopne 0x1aec69 ; jmp qword ptr [rsi]
0x00000000001af1c4 : loopne 0x1af163 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001af1d4 : loopne 0x1af178 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001af1e4 : loopne 0x1af18d ; out dx, eax ; jmp qword ptr [rax]
0x00000000001af1f4 : loopne 0x1af1a2 ; out dx, eax ; jmp qword ptr [rax]
0x00000000001af448 : loopne 0x1af4cd ; lock inc dword ptr [rax] ; jge 0x1af446 ; jmp qword ptr [rax]
0x00000000001af468 : loopne 0x1af4ee ; lock inc dword ptr [rax] ; jle 0x1af466 ; jmp qword ptr [rax]
0x00000000001af488 : loopne 0x1af50f ; lock inc dword ptr [rax] ; jg 0x1af486 ; jmp qword ptr [rax]
0x00000000001afe90 : loopne 0x1aff04 ; push qword ptr [rax] ; jns 0x1afe8f ; jmp rax
0x00000000001afe90 : loopne 0x1aff05 ; push qword ptr [rax] ; jns 0x1afe90 ; jmp rax
0x00000000001afeac : loopne 0x1aff20 ; ljmp [rdi] ; jne 0x1afeab ; call qword ptr [rax]
0x00000000001afeac : loopne 0x1aff21 ; ljmp [rdi] ; jne 0x1afeac ; call qword ptr [rax]
0x00000000001bcb88 : loopne 0x1bcb19 ; cld ; call rax
0x00000000001bcf54 : loopne 0x1bcf74 ; sti ; jmp rax
0x00000000001bcf58 : loopne 0x1bcf7a ; sti ; jmp rax
0x00000000001bcfd4 : loopne 0x1bcff3 ; sti ; jmp rax
0x00000000001bcfd8 : loopne 0x1bcff9 ; sti ; jmp rax
0x00000000001bcfdc : loopne 0x1bd003 ; sti ; push qword ptr [rax + 0x11] ; sti ; jmp qword ptr [rax]
0x00000000001bd03c : loopne 0x1bd04f ; sti ; jmp qword ptr [rax]
0x00000000001bd1ac : loopne 0x1bd1ef ; sti ; call rax
0x00000000001c1ac4 : loopne 0x1c1a91 ; add dword ptr [rax], eax ; in al, 0x23 ; idiv edi ; hlt ; ret 1
0x00000000001c2c31 : loopne 0x1c2c2e ; call qword ptr [rax]
0x00000000001cf028 : loopne 0x1cefe9 ; add byte ptr [rax], al ; leave ; in eax, dx ; jmp qword ptr [rbx]
0x00000000001cf528 : loopne 0x1cf4ee ; add byte ptr [rax], al ; add al, 0xa0 ; out dx, al ; jmp rbx
0x00000000001d0150 : loopne 0x1d013a ; out dx, al ; call qword ptr [rdx]
0x00000000001d2760 : loopne 0x1d2785 ; int1 ; jmp qword ptr [rcx]
0x00000000001d337d : loopne 0x1d3365 ; jmp qword ptr [rbx]
0x00000000001d84a0 : loopne 0x1d8447 ; hlt ; jmp qword ptr [rcx]
0x00000000001e181d : loopne 0x1e1824 ; add byte ptr [rax], ah ; retf 0xfff7
0x00000000001e2328 : loopne 0x1e231c ; add dword ptr [rax], eax ; xchg eax, esp ; adc al, bh ; call qword ptr [rbx]
0x000000000002923d : loopne 0x292b8 ; jae 0x291ce ; retf 0xb941
0x00000000000304b3 : loopne 0x304c2 ; movzx eax, ax ; ret
0x00000000000304f3 : loopne 0x304fc ; movzx eax, ax ; ret
0x0000000000030593 : loopne 0x3059e ; movzx eax, ax ; ret
0x0000000000030673 : loopne 0x30678 ; ret
0x00000000000306ec : loopne 0x306f1 ; ret
0x00000000000306fc : loopne 0x3070b ; movzx eax, ax ; ret
0x000000000003073c : loopne 0x30745 ; movzx eax, ax ; ret
0x00000000000306c3 : loopne 0x30746 ; ret
0x00000000000307dc : loopne 0x307e7 ; movzx eax, ax ; ret
0x000000000003ddc7 : loopne 0x3ddae ; fsub dword ptr [rip + 0x200] ; ret
0x000000000003e4c5 : loopne 0x3e4d1 ; ret
0x000000000003e63f : loopne 0x3e6ae ; movq mm0, qword ptr [rsp - 0x28] ; ret
0x000000000003ea04 : loopne 0x3ea10 ; ret
0x000000000003f8f4 : loopne 0x3f944 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000004faa9 : loopne 0x4facd ; or eax, edx ; ret
0x0000000000052bfd : loopne 0x52c06 ; sub eax, 1 ; ret
0x00000000000586a4 : loopne 0x586f7 ; cmp esi, edi ; cmovb rax, rdi ; ret
0x000000000005d3b6 : loopne 0x5d405 ; mov ebx, edx ; jmp rax
0x000000000005ef8f : loopne 0x5ef1c ; ret
0x0000000000069f41 : loopne 0x69f90 ; mov eax, ecx ; jmp rax
0x0000000000006a40 : loopne 0x6a1d ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007cff9 : loopne 0x7d05d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007d7d5 : loopne 0x7d839 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007dd27 : loopne 0x7dd8d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000007ef6c : loopne 0x7ef72 ; add byte ptr [rax], al ; jmp rax
0x000000000007efa8 : loopne 0x7efae ; add byte ptr [rax], al ; call rax
0x000000000007ef71 : loopne 0x7efc3 ; mov eax, 0xffffffff ; ret
0x000000000007effa : loopne 0x7f000 ; add byte ptr [rax], al ; call rax
0x000000000007f03c : loopne 0x7f042 ; add byte ptr [rax], al ; jmp rax
0x000000000007f041 : loopne 0x7f0b2 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000082dfd : loopne 0x82e62 ; pop r12 ; pop r13 ; ret
0x00000000000875e9 : loopne 0x875f2 ; mov edx, eax ; mov eax, edx ; ret
0x00000000000876a8 : loopne 0x876ae ; mov edx, eax ; jmp 0x87660
0x00000000000876d9 : loopne 0x876e2 ; mov edx, eax ; mov eax, edx ; ret
0x0000000000087798 : loopne 0x8779e ; mov edx, eax ; jmp 0x87750
0x0000000000088877 : loopne 0x888dc ; pop r12 ; pop r13 ; ret
0x0000000000089afa : loopne 0x89b5c ; pop rbp ; pop r12 ; ret
0x000000000008a1f6 : loopne 0x8a1fb ; ret
0x000000000008a206 : loopne 0x8a20b ; ret
0x000000000009418f : loopne 0x941a3 ; xchg eax, esp ; ret 0x40e9
0x0000000000099d1f : loopne 0x99d85 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000009a40 : loopne 0x9a37 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000009d866 : loopne 0x9d87b ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000009d866 : loopne 0x9d87d ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000000a0933 : loopne 0xa0995 ; pop rbp ; pop r12 ; ret
0x00000000000a0945 : loopne 0xa09a7 ; pop rbp ; pop r12 ; ret
0x00000000000a1328 : loopne 0xa1372 ; cmp bh, 0x3d ; jne 0xa12f4 ; pop rbx ; ret
0x000000000000ad48 : loopne 0xad42 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000b74bc : loopne 0xb74c6 ; add byte ptr [rax], al ; ret
0x000000000000ba68 : loopne 0xba5f ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000bba2d : loopne 0xbba47 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000000d0a0 : loopne 0xd122 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000d2c31 : loopne 0xd2c38 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000df6ee : loopne 0xdf6f5 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000df78a : loopne 0xdf791 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000000e978 : loopne 0xe96f ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000efee1 : loopne 0xefeea ; add eax, 8 ; ret
0x00000000000f52fc : loopne 0xf52c2 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000a07e2 : mov ah, 0 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000001bed95 : mov ah, 0 ; add byte ptr [rax + rbp - 0x14], ah ; jmp qword ptr [rax]
0x000000000014bb5a : mov ah, 0 ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000152f77 : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000122421 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x00000000001bed8d : mov ah, 0 ; add byte ptr [rsi - 0x14], al ; call rsp
0x00000000001aa52a : mov ah, 0x13 ; ret
0x00000000001c32f8 : mov ah, 0x13 ; sti ; call rax
0x00000000001d4efc : mov ah, 0x17 ; add dword ptr [rax], eax ; jo 0x1d4ea5 ; call qword ptr [rax]
0x000000000019c196 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000019b8a2 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000000faa49 : mov ah, 0x24 ; mov eax, 0x89000000 ; ret 0xe8c0
0x00000000000d195c : mov ah, 0x24 ; test al, 0 ; add byte ptr [rax], al ; call rbx
0x000000000009082b : mov ah, 0x35 ; add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000001e2b5c : mov ah, 0x37 ; clc ; call qword ptr [rdi]
0x00000000001c1cb8 : mov ah, 0x41 ; idiv edi ; retf 1
0x00000000001c0524 : mov ah, 0x4c ; add dword ptr [rax], eax ; xchg eax, esp ; jl 0x1c0523 ; call rax
0x00000000001c0524 : mov ah, 0x4c ; add dword ptr [rax], eax ; xchg eax, esp ; jl 0x1c0524 ; call rax
0x00000000001c2f78 : mov ah, 0x4d ; cli ; call rax
0x00000000001beeb8 : mov ah, 0x4d ; in al, dx ; call qword ptr [rax]
0x00000000001c0d18 : mov ah, 0x4f ; cmc ; jmp rsp
0x00000000001c0700 : mov ah, 0x59 ; jmp rax
0x00000000001d92fc : mov ah, 0x5b ; add dword ptr [rax], eax ; xor dl, bl ; hlt ; call rsi
0x00000000001c2350 : mov ah, 0x5c ; clc ; call rax
0x00000000001bd3d8 : mov ah, 0x72 ; sti ; inc dword ptr [rdx + rsi*2 - 5] ; call rsp
0x00000000001c0de8 : mov ah, 0x7b ; cmc ; call qword ptr [rax]
0x00000000001c0d14 : mov ah, 0x7c ; add dword ptr [rax], eax ; mov ah, 0x4f ; cmc ; jmp rsp
0x00000000001c30e0 : mov ah, 0x7c ; cli ; jmp qword ptr [rax]
0x00000000001bd8d0 : mov ah, 0x99 ; sti ; inc dword ptr [rcx + rbx*4 - 5] ; call rsp
0x00000000001d825c : mov ah, 0x9f ; hlt ; jmp qword ptr [rcx]
0x00000000001bfb48 : mov ah, 0xa5 ; out dx, al ; jmp rsp
0x00000000001aa9d0 : mov ah, 0xa5 ; ret
0x00000000001d566c : mov ah, 0xb4 ; jmp qword ptr [rcx]
0x00000000001bf1e0 : mov ah, 0xb8 ; in al, dx ; jmp qword ptr [rax]
0x00000000001c3618 : mov ah, 0xc3 ; std ; ljmp [rax + rbp*2] ; add ah, dl ; ret
0x00000000001cfdfc : mov ah, 0xc6 ; add byte ptr [rax], al ; adc bh, dl ; out dx, al ; jmp qword ptr [rdi]
0x00000000001c33c0 : mov ah, 0xc6 ; cld ; jmp rax
0x00000000001bf08c : mov ah, 0xc8 ; add byte ptr [rax], al ; hlt ; xchg eax, ebp ; in al, dx ; call rax
0x00000000001c24d8 : mov ah, 0xd6 ; clc ; jmp rax
0x00000000001c24f8 : mov ah, 0xd8 ; clc ; call qword ptr [rax]
0x00000000001bf39c : mov ah, 0xda ; add byte ptr [rax], al ; push rsp ; clc ; in al, dx ; call rsp
0x00000000001aec78 : mov ah, 0xe0 ; in al, dx ; jmp qword ptr [rsi]
0x00000000001c3720 : mov ah, 0xe8 ; std ; jmp qword ptr [rax]
0x00000000001c25e8 : mov ah, 0xf0 ; clc ; jmp qword ptr [rax]
0x00000000001d2afc : mov ah, 0xf3 ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001d5681 : mov ah, 0xf3 ; call qword ptr [rbx]
0x00000000001d55fd : mov ah, 0xf3 ; jmp qword ptr [rcx]
0x0000000000002737 : mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x00000000001c1999 : mov ah, 0xf6 ; call rsp
0x00000000001da20c : mov ah, 0xf7 ; clc ; jmp qword ptr [rbx]
0x00000000001bf7b4 : mov ah, 0xfb ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; loop 0x1bf7af ; call rax
0x0000000000066e73 : mov ah, 1 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000ea1b4 : mov ah, 3 ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001aa324 : mov ah, bl ; push rsi ; ret
0x00000000001c238c : mov ah, dh ; add dword ptr [rax], eax ; and al, 0x7d ; clc ; jmp rsp
0x00000000000d1bab : mov al, 0 ; add byte ptr [rax], al ; mov rsi, rbp ; call rbx
0x00000000001221b1 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x000000000002bce4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x000000000000ee10 : mov al, 0x11 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001d51f8 : mov al, 0x1a ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rcx]
0x00000000001d55f8 : mov al, 0x1e ; add dword ptr [rax], eax ; add al, 0xb4 ; jmp qword ptr [rcx]
0x0000000000002974 : mov al, 0x1f ; retf
0x000000000014e47c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x000000000014e434 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x0000000000115844 : mov al, 0x2d ; add byte ptr [rcx - 0x77], cl ; retf 0x8b
0x00000000000062a8 : mov al, 0x39 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000004fd61 : mov al, 0x39 ; add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x20e8
0x000000000004011e : mov al, 0x3a ; add byte ptr [rcx], bh ; ret 0x237f
0x00000000001d7050 : mov al, 0x47 ; hlt ; call qword ptr [rdx]
0x000000000005c464 : mov al, 0x48 ; add eax, edi ; jmp rax
0x000000000011858a : mov al, 0x48 ; mov edx, eax ; jmp 0x1185bd
0x00000000001d4a70 : mov al, 0x5c ; call rax
0x00000000001da040 : mov al, 0x60 ; cmc ; jmp qword ptr [rsi]
0x00000000001da2f8 : mov al, 0x6b ; add dword ptr [rax], eax ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001bd264 : mov al, 0x71 ; sti ; inc dword ptr [rax + 0x71] ; sti ; call rax
0x0000000000001db0 : mov al, 0x72 ; retf
0x00000000000038fd : mov al, 0x85 ; jbe 0x38ac ; outsb dx, byte ptr [rsi] ; retf
0x00000000000c8b8e : mov al, 0x89 ; ret 0xff25
0x00000000001bdb74 : mov al, 0x8b ; sti ; jmp qword ptr [rax]
0x00000000001bd988 : mov al, 0x91 ; sti ; jmp qword ptr [rax]
0x00000000001bd974 : mov al, 0x95 ; sti ; inc dword ptr [rax - 0x6b] ; sti ; call rax
0x00000000001bd75c : mov al, 0x98 ; sti ; inc dword ptr [rax - 0x68] ; sti ; call rax
0x00000000001af3bc : mov al, 0xa1 ; cld ; jmp rax
0x00000000001af204 : mov al, 0xad ; sti ; call rax
0x00000000001d55c0 : mov al, 0xb3 ; jmp qword ptr [rcx]
0x00000000001af224 : mov al, 0xb6 ; sti ; call rax
0x00000000001deff8 : mov al, 0xb8 ; add dword ptr [rax], eax ; push rsp ; sbb al, 0xf7 ; call qword ptr [rsi]
0x00000000001db930 : mov al, 0xba ; cmc ; call rdx
0x00000000001c1bac : mov al, 0xc5 ; add dword ptr [rax], eax ; push rsp ; sub edi, esi ; call rsp
0x000000000018e19f : mov al, 0xc5 ; std ; xlatb ; ret
0x00000000001af2a4 : mov al, 0xcb ; sti ; jmp qword ptr [rax]
0x00000000001bcc38 : mov al, 0xd1 ; cld ; jmp rax
0x00000000001c45f8 : mov al, 0xe ; add byte ptr [rax], al ; pop rbx ; std ; jmp qword ptr [rdi]
0x00000000001af2d8 : mov al, 0xe2 ; out dx, eax ; inc eax ; in al, 0xef ; call rax
0x00000000001bdc78 : mov al, 0xe7 ; cld ; inc dword ptr [rax - 0x2c] ; cld ; jmp rax
0x0000000000149197 : mov al, 0xe8 ; ret
0x000000000006db38 : mov al, 0xe8 ; ret 0x4fe
0x00000000001ac7d6 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000001af241 : mov al, 0xef ; jmp rax
0x0000000000033a67 : mov al, 0xf ; retf
0x00000000001b1995 : mov al, 0xf5 ; call qword ptr [rdi]
0x00000000001c2449 : mov al, 0xf8 ; jmp rax
0x00000000001af399 : mov al, 0xfc ; call qword ptr [rax]
0x00000000001b32f0 : mov al, 0xfd ; stc ; dec eax ; std ; stc ; jmp rax
0x00000000000b74ec : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000b70ec : mov al, 8 ; add byte ptr [rax], al ; ret
0x00000000001cc1e5 : mov al, byte ptr [rax] ; add al, bh ; in al, dx ; call qword ptr [rsi]
0x0000000000000760 : mov al, byte ptr [rax] ; add byte ptr [rax], ah ; add byte ptr [rdx], dl ; retf
0x000000000010f9a1 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000005ef9b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x00000000000b345b : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x00000000000b3489 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b350d : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000181320 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b3435 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000002ec3 : mov al, byte ptr [rsi - 0x73] ; ret 0xc1bb
0x00000000001105e9 : mov ax, 0x48 ; add byte ptr [rax], al ; syscall
0x00000000000b3445 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001cee55 : mov bh, 0 ; add byte ptr [rax], bl ; fdivr st(4) ; call qword ptr [rax]
0x00000000001ceec9 : mov bh, 0 ; add byte ptr [rdx + rbx*4 - 0x13], al ; call qword ptr [rbx]
0x00000000000d3df7 : mov bh, 0x14 ; imul eax, dword ptr [rcx + rbp - 6], 0x39 ; ret 0x257e
0x0000000000174701 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000001ac860 : mov bh, 0x38 ; push 0xfd4cbe ; retf 0xf64
0x000000000002f1b2 : mov bh, 0x3b ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002c344 : mov bh, 0x43 ; add al, 0x89 ; retf
0x000000000002bebf : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000193698 : mov bh, 0x48 ; lea eax, [rdi + 7] ; ret
0x00000000001acb38 : mov bh, 0x4e ; retf 0x9d7d
0x00000000000a84e2 : mov bh, 0x54 ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a8694 : mov bh, 0x54 ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000d2e51 : mov bh, 0x57 ; adc byte ptr [rcx], ch ; ret 0x428d
0x00000000000d2d8d : mov bh, 0x5c ; inc byte ptr [r13 + 0x69] ; retf
0x0000000000030207 : mov bh, 0x8b ; add al, 0x10 ; ret
0x00000000000f2c21 : mov bh, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0xc141
0x0000000000002c9c : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x00000000001ab804 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000000304b6 : mov bh, 0xc0 ; ret
0x0000000000134dac : mov bh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000001a9426 : mov bh, 0xc8 ; leave ; retf 0xcccb
0x00000000001c4a01 : mov bh, 0xe6 ; call qword ptr [rdi]
0x00000000001be801 : mov bh, 0xe8 ; call qword ptr [rax]
0x00000000001d8c65 : mov bh, 0xf4 ; jmp rax
0x00000000000038b4 : mov bh, 0xfa ; add ebx, ebp ; in al, 0xee ; jne 0x389e ; ret 0x975
0x00000000001af3a5 : mov bh, 0xfc ; call rax
0x0000000000123403 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000019a26b : mov bh, 1 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000124f36 : mov bh, 4 ; js 0x124ec6 ; loopne 0x124f4d ; movzx eax, ax ; ret
0x0000000000125066 : mov bh, 4 ; js 0x124ff3 ; loopne 0x125073 ; ret
0x00000000001250f6 : mov bh, 4 ; js 0x125086 ; loopne 0x125107 ; movzx eax, ax ; ret
0x00000000001253f6 : mov bh, 4 ; js 0x125386 ; loopne 0x125409 ; movzx eax, ax ; ret
0x00000000001258bf : mov bh, 4 ; js 0x12584f ; loopne 0x1258d6 ; movzx eax, ax ; ret
0x00000000001259bf : mov bh, 4 ; js 0x12594c ; loopne 0x1259cc ; ret
0x0000000000125a3f : mov bh, 4 ; js 0x1259cf ; loopne 0x125a50 ; movzx eax, ax ; ret
0x0000000000125cbf : mov bh, 4 ; js 0x125c4f ; loopne 0x125cd2 ; movzx eax, ax ; ret
0x00000000000304af : mov bh, 4 ; js 0x3043f ; loopne 0x304c6 ; movzx eax, ax ; ret
0x00000000000304ef : mov bh, 4 ; js 0x3047f ; loopne 0x30500 ; movzx eax, ax ; ret
0x000000000003058f : mov bh, 4 ; js 0x3051f ; loopne 0x305a2 ; movzx eax, ax ; ret
0x000000000003066f : mov bh, 4 ; js 0x305fc ; loopne 0x3067c ; ret
0x00000000000306e8 : mov bh, 4 ; js 0x30675 ; loopne 0x306f5 ; ret
0x00000000000306f8 : mov bh, 4 ; js 0x30688 ; loopne 0x3070f ; movzx eax, ax ; ret
0x0000000000030738 : mov bh, 4 ; js 0x306c8 ; loopne 0x30749 ; movzx eax, ax ; ret
0x00000000000307d8 : mov bh, 4 ; js 0x30768 ; loopne 0x307eb ; movzx eax, ax ; ret
0x0000000000163f48 : mov bh, 5 ; xchg eax, edx ; ret
0x00000000001acf13 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000013afe3 : mov bh, 7 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000010eb11 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001bdb41 : mov bh, bl ; call rax
0x00000000001bdb7d : mov bh, bl ; jmp qword ptr [rax]
0x00000000001bdbbd : mov bh, bl ; jmp rax
0x00000000001bdac1 : mov bh, bl ; jmp rsp
0x00000000001bdb3d : mov bh, bl ; ljmp [rdx] ; mov bh, bl ; call rax
0x0000000000155d2c : mov bh, dl ; add byte ptr [rax], al ; add al, ch ; retf 0x38
0x00000000001ceabd : mov bl, 0 ; add byte ptr [rax + 0x2a], dl ; in eax, dx ; call rsp
0x00000000001224e4 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000194f8e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001acb9b : mov bl, 0x29 ; retf 0xbf4b
0x00000000000e6897 : mov bl, 0x48 ; cmp eax, 0x414a53 ; jne 0xe6872 ; jmp 0xe6853
0x00000000000d0bdc : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000002e782 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000001ac8e3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000000fb1b9 : mov bl, 0xa4 ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x00000000001acb80 : mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000000f638c : mov bl, 0xe9 ; ret
0x0000000000002e03 : mov bl, 0xee ; clc ; ret
0x0000000000001b13 : mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001af249 : mov bl, 0xef ; jmp rax
0x00000000001d55c1 : mov bl, 0xf3 ; jmp qword ptr [rcx]
0x0000000000133210 : mov bl, 0xf5 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000003c3d : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000015e423 : mov bl, 0xff ; dec dword ptr [rax - 0x75] ; cmp byte ptr [rax - 0x77], cl ; ret
0x00000000001deb01 : mov bl, 1 ; add ah, cl ; add bh, dh ; call qword ptr [rdi]
0x00000000001319c2 : mov bl, byte ptr [rdx + 0xf48fff8] ; ret 0xfc3
0x00000000001aa501 : mov bx, 0xf32d ; retf
0x0000000000143938 : mov byte ptr [r10], 0 ; ret
0x00000000001493d2 : mov byte ptr [r15], r9b ; xchg eax, esp ; ret 0x5522
0x000000000002272a : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x0000000000118dcd : mov byte ptr [r8 - 1], 0 ; ret
0x00000000000a2a70 : mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x00000000000a5c42 : mov byte ptr [rax + 0x29], cl ; ret 0x2e66
0x00000000000a5dea : mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x00000000000a52de : mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x00000000000fb040 : mov byte ptr [rax + 0x63], cl ; retf 0x3949
0x00000000001d8fd0 : mov byte ptr [rax + 1], bl ; add ah, bh ; retf
0x0000000000141286 : mov byte ptr [rax + 1], bl ; mov byte ptr [rax + 2], 0 ; pop rbx ; ret
0x0000000000160af0 : mov byte ptr [rax + 1], cl ; retf 0x8b48
0x0000000000141289 : mov byte ptr [rax + 2], 0 ; pop rbx ; ret
0x0000000000131da2 : mov byte ptr [rax + 3], cl ; jne 0x131d44 ; mov rax, rdi ; ret
0x0000000000131da1 : mov byte ptr [rax + 3], r9b ; jne 0x131d45 ; mov rax, rdi ; ret
0x00000000001bed8c : mov byte ptr [rax + rax - 0x13d9bc00], dh ; call rsp
0x00000000001a82ec : mov byte ptr [rax + rax], 0 ; enter 4, 0 ; retf 4
0x0000000000154a15 : mov byte ptr [rax + rax], al ; add al, ch ; ret 0xecc7
0x000000000004fb6a : mov byte ptr [rax + rdx], 0 ; ret
0x000000000002272b : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000000001b1114 : mov byte ptr [rax - 0xc], dh ; call rcx
0x0000000000118dce : mov byte ptr [rax - 1], 0 ; ret
0x00000000001cfdfd : mov byte ptr [rax], 0 ; adc bh, dl ; out dx, al ; jmp qword ptr [rdi]
0x000000000011c716 : mov byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x00000000001bf04d : mov byte ptr [rax], 0 ; mov gs, esp ; call qword ptr [rax]
0x000000000011f68e : mov byte ptr [rax], 0 ; mov rax, rbx ; pop rbx ; ret
0x000000000011e25e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001c29c4 : mov byte ptr [rax], ah ; add al, byte ptr [rax] ; xchg cl, r15b ; call rsp
0x00000000001c77d0 : mov byte ptr [rax], al ; add ah, cl ; ret
0x000000000011f58f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000011eda8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000087807 : mov byte ptr [rax], bh ; mov eax, r10d ; ret
0x00000000000c6bda : mov byte ptr [rax], bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf
0x000000000006b210 : mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001c3624 : mov byte ptr [rax], ch ; add byte ptr [rsp + rax*8], al ; std ; jmp rax
0x000000000006b211 : mov byte ptr [rax], ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012df16 : mov byte ptr [rax], cl ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000b6082 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000087806 : mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x00000000001c3144 : mov byte ptr [rbp + 2], cl ; add byte ptr [rbp + rax*4 - 6], al ; call rsp
0x0000000000034d4a : mov byte ptr [rbp + r12 - 1], 0x2f ; call 0x21058
0x0000000000123d65 : mov byte ptr [rbp - 0x7c9], 0x73 ; syscall
0x0000000000034d4b : mov byte ptr [rbp - 1], 0x2f ; call 0x21057
0x00000000000d8c0e : mov byte ptr [rbx + 0x1480c7b], cl ; ret 0x8d48
0x00000000001da2d0 : mov byte ptr [rbx + 1], ch ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001d82d0 : mov byte ptr [rbx + 1], cl ; add byte ptr [rax - 0xc], bl ; jmp qword ptr [rcx]
0x00000000001d7238 : mov byte ptr [rbx - 0xc], cl ; jmp qword ptr [rdx]
0x00000000001c3d28 : mov byte ptr [rbx - 3], ah ; jmp qword ptr [rdx]
0x0000000000092476 : mov byte ptr [rbx], 0 ; add dh, dh ; ret 0xf08
0x00000000001176f6 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000e6d85 : mov byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x00000000000e6cf0 : mov byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x000000000015cb98 : mov byte ptr [rbx], bpl ; mov eax, 1 ; jmp 0x15cb76
0x000000000015cb99 : mov byte ptr [rbx], ch ; mov eax, 1 ; jmp 0x15cb75
0x000000000000306a : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000007cee7 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x00000000000d2e70 : mov byte ptr [rcx + 1], cl ; retf 0xf42
0x000000000017efe3 : mov byte ptr [rcx + 2], dl ; ret
0x000000000017f002 : mov byte ptr [rcx + 4], dl ; ret
0x000000000017f043 : mov byte ptr [rcx + 8], dl ; ret
0x0000000000131c62 : mov byte ptr [rcx + rax + 1], cl ; jne 0x131c59 ; mov rax, rdi ; ret
0x000000000002e283 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000014dc31 : mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000fb093 : mov byte ptr [rcx - 0x2d], al ; loop 0xfb02a ; sub byte ptr [rcx + 0x63], cl ; retf 0x949
0x000000000009ee33 : mov byte ptr [rcx], 0 ; cmovne rax, rdx ; ret
0x00000000001c36a5 : mov byte ptr [rcx], 0 ; hlt ; retf
0x00000000000a80a0 : mov byte ptr [rcx], 0 ; mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x00000000000a81e7 : mov byte ptr [rcx], 0 ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000003529f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ed73b : mov byte ptr [rcx], 0x29 ; ret 0x6348
0x00000000000fad0c : mov byte ptr [rcx], 0x39 ; ret 0xce75
0x0000000000052862 : mov byte ptr [rcx], 0x48 ; cmp edx, esi ; jne 0x52861 ; xor eax, eax ; ret
0x00000000000e4bcc : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call rax
0x00000000001c0f45 : mov byte ptr [rcx], al ; add byte ptr [rsp + rdx*4], dh ; cmc ; jmp rsp
0x000000000008296e : mov byte ptr [rcx], bh ; ret
0x000000000008296d : mov byte ptr [rcx], dil ; ret
0x000000000017efc0 : mov byte ptr [rcx], dl ; ret
0x00000000000baa8a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000b8e6b : mov byte ptr [rdi + 0x10], cl ; lea rax, [rdi + 0x11] ; ret
0x00000000000b767b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000baa9b : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000b8018 : mov byte ptr [rdi + 0x10], dh ; lea rax, [rdi + 0x10] ; ret
0x00000000000b69a8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000baaa0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000baac2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000baae0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000bab00 : mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000b808e : mov byte ptr [rdi + 0x14], dh ; lea rax, [rdi + 0x14] ; ret
0x00000000000b69fe : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b8ef1 : mov byte ptr [rdi + 0x14], dl ; lea rax, [rdi + 0x15] ; ret
0x00000000000b76d1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000bab21 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bab26 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bab42 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bab62 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000bab82 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b8f73 : mov byte ptr [rdi + 0x18], cl ; lea rax, [rdi + 0x19] ; ret
0x00000000000b7753 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000baba3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000b8110 : mov byte ptr [rdi + 0x18], dh ; lea rax, [rdi + 0x18] ; ret
0x00000000000b6a80 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000baba8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000babca : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000babe8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000bac08 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bac24 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000bac44 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000bac64 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bac84 : mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b7855 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000baca5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000bacaa : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000bacfa : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000ba9d0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000ba9ee : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000baa0e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000baa30 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000baa50 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000baa70 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ba906 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000140e66 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000140e65 : mov byte ptr [rdi + 1], sil ; ret
0x00000000000a857d : mov byte ptr [rdi + 2], al ; mov rax, rdi ; ret
0x00000000000ba918 : mov byte ptr [rdi + 2], ch ; ret
0x00000000000b7ec6 : mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b68c6 : mov byte ptr [rdi + 2], dh ; ret
0x00000000000b8cf9 : mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000a84b0 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000ba929 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000ba92e : mov byte ptr [rdi + 3], ch ; ret
0x00000000000a859b : mov byte ptr [rdi + 4], al ; mov rax, rdi ; ret
0x00000000000ba946 : mov byte ptr [rdi + 4], ch ; ret
0x00000000000b7ee2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b68e2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b8d27 : mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000a84ce : mov byte ptr [rdi + 4], dl ; ret
0x00000000000ba957 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000ba95c : mov byte ptr [rdi + 5], ch ; ret
0x00000000000a85d4 : mov byte ptr [rdi + 6], al ; mov rax, rdi ; ret
0x00000000000ba96e : mov byte ptr [rdi + 6], ch ; ret
0x00000000000a8507 : mov byte ptr [rdi + 6], dl ; ret
0x0000000000150c42 : mov byte ptr [rdi + 7], al ; ret
0x00000000000ba98c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000edc10 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000edb89 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000edc00 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000edbc4 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000edc40 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000edc55 : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000edbdd : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000edb98 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000ba998 : mov byte ptr [rdi + 8], ch ; ret
0x00000000000b6923 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000000b8d79 : mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000b75f9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000ba9a9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000ba9ae : mov byte ptr [rdi + 9], ch ; ret
0x000000000014103e : mov byte ptr [rdi + rdx], 0 ; ret
0x00000000001acb95 : mov byte ptr [rdi - 0x17ac8d3c], al ; mov bl, 0x29 ; retf 0xbf4b
0x000000000016e31b : mov byte ptr [rdi - 1], dl ; ret
0x00000000000a8610 : mov byte ptr [rdi], 0 ; lea rax, [rdi + rax - 1] ; ret
0x000000000008a620 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000edbf4 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000edc2e : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000ba8f2 : mov byte ptr [rdi], ch ; ret
0x00000000000bb57b : mov byte ptr [rdi], cl ; ret
0x000000000018f025 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000001493d3 : mov byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5522
0x00000000000a8471 : mov byte ptr [rdi], dh ; add rax, rdi ; ret
0x00000000000b7ea0 : mov byte ptr [rdi], dh ; lea rax, [rdi] ; ret
0x00000000000b68a0 : mov byte ptr [rdi], dh ; ret
0x00000000000b8cd2 : mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000b7572 : mov byte ptr [rdi], dl ; ret
0x00000000000ba902 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a8470 : mov byte ptr [rdi], sil ; add rax, rdi ; ret
0x00000000000b620a : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000001d79d0 : mov byte ptr [rdx + 1], al ; add ah, bl ; jno 0x1d79d2 ; jmp rsp
0x0000000000181349 : mov byte ptr [rdx + 2], al ; lea rax, [rdx + 2] ; ret
0x00000000000b345e : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000181377 : mov byte ptr [rdx + 4], al ; lea rax, [rdx + 4] ; ret
0x00000000000b348c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000000b61a0 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000000b3510 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000139928 : mov byte ptr [rdx], 0 ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000143939 : mov byte ptr [rdx], 0 ; ret
0x00000000000a0d36 : mov byte ptr [rdx], 0xf8 ; dec dword ptr [rax + 0x29] ; ret
0x0000000000181322 : mov byte ptr [rdx], al ; lea rax, [rdx] ; ret
0x00000000000b3437 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000002f0c0 : mov byte ptr [rip + 0x3bdb17], dl ; ret
0x00000000001c0184 : mov byte ptr [rip + 0x63140001], dh ; int1 ; call rax
0x00000000000024e4 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x00000000001c317c : mov byte ptr [rsi + 2], cl ; add ah, ah ; xchg dl, bh ; jmp qword ptr [rax]
0x000000000009fd02 : mov byte ptr [rsi + 2], dl ; cmp rdi, rax ; jne 0x9fcf9 ; ret
0x0000000000095449 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x0000000000133413 : mov byte ptr [rsi*2 - 0x776b717], al ; ret
0x0000000000133412 : mov byte ptr [rsi*2 - 0x776b717], r8b ; ret
0x00000000000587ef : mov byte ptr [rsi], al ; jne 0x587df ; mov rax, rsi ; ret
0x0000000000058873 : mov byte ptr [rsi], al ; jne 0x58857 ; mov rax, rsi ; ret
0x0000000000115b37 : mov byte ptr [rsp + 0x10], al ; mov eax, r10d ; syscall
0x00000000000bc099 : mov byte ptr [rsp + rbx*8 - 0xd], dh ; ret
0x0000000000162aa4 : mov ch, 0 ; add byte ptr [rax], al ; syscall
0x00000000001bedb5 : mov ch, 0 ; add byte ptr [rsi + rbp - 0x14], dl ; jmp qword ptr [rax]
0x000000000000271e : mov ch, 0x24 ; retf 0x54da
0x00000000001aa322 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000001ab663 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001ac2f6 : mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000001ac9ff : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000001ad3aa : mov ch, 0xab ; ret
0x00000000000038b3 : mov ch, 0xb7 ; cli ; add ebx, ebp ; in al, 0xee ; jne 0x389f ; ret 0x975
0x000000000011ed69 : mov ch, 0xe9 ; retf 0xfffe
0x0000000000145b14 : mov ch, 0xed ; dec dword ptr [rax + 0x39] ; ret
0x00000000001b017d : mov ch, 0xf2 ; call qword ptr [rdi]
0x00000000001b0229 : mov ch, 0xf2 ; jmp rax
0x00000000001af3a1 : mov ch, 0xfc ; call qword ptr [rax - 0x2f000349]
0x0000000000001b70 : mov ch, 4 ; retf
0x0000000000190f16 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000010eb67 : mov ch, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000009bf4d : mov cl, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000122271 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000003d00 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x000000000019c62d : mov cl, 0x24 ; add byte ptr [rax - 0x7d], cl ; in al, dx ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000115794 : mov cl, 0x2d ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000913a6 : mov cl, 0x35 ; add byte ptr [rax - 0x7d], cl ; retf
0x000000000009c6a3 : mov cl, 0x35 ; call qword ptr [rdx]
0x000000000013d81f : mov cl, 0x35 ; ret
0x000000000004ef0f : mov cl, 0x35 ; retf
0x00000000000d4350 : mov cl, 0x35 ; retf 0x3198
0x000000000009c5d8 : mov cl, 0x35 ; retf 0x3513
0x00000000001ace01 : mov cl, 0x3f ; retf
0x00000000000f17e4 : mov cl, 0x48 ; add eax, ecx ; jmp rax
0x000000000014b8b8 : mov cl, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000002c9d : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x000000000011b4bb : mov cl, 0x69 ; lock dec dword ptr [rax - 0x77] ; ret
0x000000000009f7b0 : mov cl, 0xe8 ; retf 0x954
0x0000000000165da0 : mov cl, 0xe9 ; add esi, ebx ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000001bea89 : mov cl, 0xe9 ; jmp rax
0x000000000002565b : mov cl, 0xf ; retf 0xd285
0x00000000001b0181 : mov cl, 0xf2 ; jmp qword ptr [rbx]
0x00000000001db755 : mov cl, 0xf5 ; call rdx
0x00000000001c1835 : mov cl, 1 ; add ah, ah ; jp 0x1c1837 ; call rsp
0x00000000001c184d : mov cl, 1 ; add byte ptr [rsp + rdi*2 - 0xa], ah ; call qword ptr [rax]
0x00000000000a0c6b : mov cl, 3 ; clc ; dec dword ptr [rcx - 0x77] ; ret 0xcb8
0x000000000002ee87 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000a5de6 : mov cl, byte ptr [rax - 0x75] ; push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x00000000000ae885 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x00000000000a8ab4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000001ac7d2 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000018ad24 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x00000000001925d0 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000d0ddb : mov cl, dl ; and cl, 0xf ; je 0xd0e07 ; ret
0x0000000000067b22 : mov cs, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000001aca8c : mov cs, edi ; ret 0x8b36
0x000000000004615d : mov cs, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000ef13c : mov cs, word ptr [rax - 0x77] ; retf 0xc148
0x00000000000f2c80 : mov cs, word ptr [rbx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000063b62 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000018b7de : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x00000000000b68c0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000005891a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000162af4 : mov dh, 0 ; add byte ptr [rax], al ; syscall
0x000000000008dfa9 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d16f : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a253 : mov dh, 0 ; ret
0x0000000000087db1 : mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000003e2a5 : mov dh, 0x16 ; add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000174771 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000ac344 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000003cfe4 : mov dh, 0x17 ; test dl, dl ; jne 0x3cfca ; ret
0x00000000000a303a : mov dh, 0x1c ; jge 0xffffffff895331bb ; retf
0x00000000000a30e2 : mov dh, 0x24 ; cmove ecx, dword ptr [rbp - 0x76b6febf] ; retf
0x00000000000a5416 : mov dh, 0x34 ; adc byte ptr [rcx - 0x77], cl ; ret 0xb60f
0x000000000006214e : mov dh, 0x34 ; add dword ptr [rbp - 0x41f040be], ecx ; retf 0x53c
0x000000000007f78d : mov dh, 0x36 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000005c15b : mov dh, 0x38 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000002ac58 : mov dh, 0x40 ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x000000000007cefc : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000002ac6e : mov dh, 0x40 ; add ecx, dword ptr [rax + 0x39] ; retf
0x000000000014e1a2 : mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x000000000002ac82 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000000e85a7 : mov dh, 0x42 ; add al, byte ptr [rbx - 0x7cb7fd37] ; ret 0xe902
0x00000000000e80d8 : mov dh, 0x42 ; add dword ptr [rax - 0x7d], ecx ; ret 0x8401
0x00000000000e80ec : mov dh, 0x42 ; add dword ptr [rbx - 0x7cb7fb37], eax ; ret 0xeb01
0x000000000014848c : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000e98f9 : mov dh, 0x43 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a37fe : mov dh, 0x45 ; ret
0x00000000000a37f0 : mov dh, 0x45 ; ret 0x8349
0x00000000000a721b : mov dh, 0x45 ; ret 0x8b48
0x0000000000065e4b : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000194b61 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000194b51 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000194b21 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000194b41 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000194b31 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000059809 : mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000014febd : mov dh, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d9ff1 : mov dh, 0x4b ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000673e9 : mov dh, 0x4c ; mov edi, ebp ; call 0x836d6
0x000000000002868d : mov dh, 0x4e ; add dword ptr [rcx - 0x77], eax ; retf
0x00000000000286ce : mov dh, 0x4e ; add eax, dword ptr [rcx - 0x77] ; retf
0x00000000001ab7c2 : mov dh, 0x4e ; ret 0x474c
0x00000000000f3d2d : mov dh, 0x50 ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x00000000000a8503 : mov dh, 0x54 ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a86b5 : mov dh, 0x54 ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a84ca : mov dh, 0x54 ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a84ac : mov dh, 0x54 ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000a4032 : mov dh, 0x54 ; syscall
0x00000000000a3f3e : mov dh, 0x55 ; ret
0x00000000000a4f92 : mov dh, 0x55 ; ret 0x5488
0x00000000000a42d1 : mov dh, 0x55 ; ret 0x8349
0x00000000000a3f35 : mov dh, 0x55 ; ret 0x8841
0x00000000000a6da7 : mov dh, 0x55 ; ret 0x8842
0x0000000000194b65 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000000fee58 : mov dh, 0x56 ; cmp dh, dh ; ret 0x7408
0x0000000000194b55 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000194b25 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000064522 : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf01
0x000000000006476b : mov dh, 0x56 ; or al, 0xf6 ; ret 0xf40
0x0000000000194b35 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000107125 : mov dh, 0x58 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b41
0x00000000000a43d2 : mov dh, 0x64 ; syscall
0x0000000000146fb9 : mov dh, 0x66 ; nop dword ptr [rax + rax] ; ret
0x000000000005ecb8 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x00000000001bd2ac : mov dh, 0x70 ; sti ; inc dword ptr [rsi + 0x70] ; sti ; call rsi
0x000000000003543a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x0000000000045204 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000029796 : mov dh, 0x78 ; add cl, byte ptr [rax + 0x39] ; retf
0x0000000000029781 : mov dh, 0x78 ; add dword ptr [rax + 0x39], ecx ; retf
0x00000000000297ab : mov dh, 0x78 ; add ecx, dword ptr [rax + 0x39] ; retf
0x0000000000144223 : mov dh, 0x78 ; or byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x0000000000029ad4 : mov dh, 0x7a ; add cl, byte ptr [rax - 0x73] ; add rcx, qword ptr [rax + 0x39] ; retf
0x00000000001bd7a4 : mov dh, 0x97 ; sti ; inc dword ptr [rsi - 0x69] ; sti ; call rsi
0x00000000000400f2 : mov dh, 0xb0 ; cmp al, byte ptr [rax] ; ret
0x00000000000a5f26 : mov dh, 0xc ; adc byte ptr [rcx - 0x77], cl ; ret 0xb60f
0x00000000000f9851 : mov dh, 0xc ; and al, 0x89 ; retf 0xe183
0x0000000000153d97 : mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015e1cc : mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x0000000000111c12 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000014e55b : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d0108 : mov dh, 0xc0 ; lea eax, [rax + rax - 1] ; ret
0x00000000000e687f : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x00000000000ec142 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000006b559 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000007cc78 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000007bd1d : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x000000000007bcea : mov dh, 0xc0 ; neg eax ; ret
0x000000000014fe8b : mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x00000000000deddc : mov dh, 0xc0 ; pop rbx ; ret
0x000000000003f97c : mov dh, 0xc0 ; ret
0x0000000000022c01 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000d9f90 : mov dh, 0xc1 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000bba91 : mov dh, 0xc1 ; pop rbx ; ret
0x000000000008d362 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000134d9e : mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x00000000001aca04 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000ac36a : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000030355 : mov dh, 0xe ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000000bb579 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x00000000000a9e61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000018ad34 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000006be17 : mov dh, 0xe4 ; movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000f172f : mov dh, 0xe4 ; movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x0000000000145ac4 : mov dh, 0xed ; dec dword ptr [rax + 0x39] ; ret
0x00000000001af251 : mov dh, 0xef ; jmp rax
0x000000000013997d : mov dh, 0xf2 ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x00000000001b0cd5 : mov dh, 0xf3 ; jmp rsp
0x000000000010d154 : mov dh, 0xf4 ; dec dword ptr [rax - 0x77] ; ret
0x00000000000f17df : mov dh, 0xf6 ; movsxd rax, dword ptr [rcx + r14*4] ; add rax, rcx ; jmp rax
0x000000000003ca45 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x00000000001af225 : mov dh, 0xfb ; call rax
0x0000000000095295 : mov dh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x000000000008d181 : mov dh, 2 ; ret
0x00000000000f0503 : mov dh, 4 ; add dword ptr [rax - 0x77], ecx ; ret 0x8b48
0x00000000000efe7c : mov dh, 4 ; xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000018ad31 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ac341 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000a9e64 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000000bcfbd : mov dh, bl ; ret
0x00000000000bc04c : mov dh, byte ptr [rcx - 0xd] ; ret
0x00000000000d5223 : mov dh, byte ptr [rcx] ; add bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000001c01f1 : mov dh, cl ; jmp qword ptr [rax]
0x00000000000c8b02 : mov dh, dh ; ret
0x00000000001224b4 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000003be8 : mov dl, 0x1e ; ret
0x0000000000001f81 : mov dl, 0x3a ; jrcxz 0x1f63 ; retf 0xbe35
0x00000000000e621e : mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000019ac7d : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001bd310 : mov dl, 0x73 ; sti ; inc dword ptr [rdx + 0x73] ; sti ; call rdx
0x000000000014dd6d : mov dl, 0x8b ; push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x00000000001bd800 : mov dl, 0x94 ; sti ; jmp qword ptr [rdx]
0x00000000001bd808 : mov dl, 0x9a ; sti ; inc dword ptr [rdx - 0x66] ; sti ; call rdx
0x00000000001d5561 : mov dl, 0xf3 ; call qword ptr [rcx]
0x00000000001d554d : mov dl, 0xf3 ; jmp qword ptr [rcx]
0x00000000001c0979 : mov dl, 0xf4 ; jmp qword ptr [rax]
0x00000000001db7b9 : mov dl, 0xf5 ; call rdi
0x0000000000125625 : mov dl, 3 ; add al, 0xa ; ret
0x0000000000125642 : mov dl, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsp ; retf 0x8b40
0x0000000000062c72 : mov dl, byte ptr [rbx + 0x29490015] ; ret
0x00000000000b7593 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b75b2 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b75f3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000016e3a0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000000b8cd0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, [rdi + 1] ; ret
0x00000000000b7570 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000ba900 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000001c234c : mov dl, dh ; add dword ptr [rax], eax ; mov ah, 0x5c ; clc ; call rax
0x00000000001ace1e : mov ds, word ptr [rdx + rdx - 0x71] ; retf
0x00000000001334fd : mov dword ptr [r11 + 0xc], eax ; jne 0x1334a7 ; mov rax, rdi ; ret
0x00000000000d1246 : mov dword ptr [r11 + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000014dbde : mov dword ptr [r14], 0 ; ret
0x000000000014112f : mov dword ptr [r8], ecx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x0000000000044373 : mov dword ptr [r8], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000130e40 : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000000000141190 : mov dword ptr [r8], r10d ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x00000000001925c6 : mov dword ptr [r9 - 2], ecx ; ret
0x00000000001925b1 : mov dword ptr [r9 - 4], ecx ; ret
0x0000000000083359 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000083399 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000843a8 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000893fc : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x000000000008335d : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000008442a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000024e6f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000024e72 : mov dword ptr [rax + 0x54], edx ; ret
0x000000000008eb45 : mov dword ptr [rax + 8], 0 ; ret
0x0000000000133411 : mov dword ptr [rax + rcx*4 + 4], ecx ; jne 0x133409 ; mov rax, rdi ; ret
0x0000000000052316 : mov dword ptr [rax - 0x77], ecx ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000000bd125 : mov dword ptr [rax - 0xa], 0xd88948ff ; pop rbx ; ret
0x000000000015e43d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x0000000000143962 : mov dword ptr [rax], 0 ; ret
0x000000000006f2f7 : mov dword ptr [rax], 0x16 ; jmp 0x6b579
0x00000000000618cd : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000011cf68 : mov dword ptr [rax], 0x16 ; ret
0x0000000000045622 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000167518 : mov dword ptr [rax], 0x26 ; xor eax, eax ; ret
0x000000000003d258 : mov dword ptr [rax], 0x2a ; mov rax, rcx ; ret
0x000000000006f683 : mov dword ptr [rax], 0xc ; jmp 0x6b8b8
0x000000000009547a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x000000000009d0a8 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000001164f4 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x000000000011fab0 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000022568 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x000000000013e9e5 : mov dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xdf89
0x00000000000bcd43 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010f971 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000103f74 : mov dword ptr [rax], eax ; mov eax, 0xffffffff ; ret
0x00000000000734f4 : mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012deb8 : mov dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000081aea : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x0000000000141130 : mov dword ptr [rax], ecx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x0000000000118cf1 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000097056 : mov dword ptr [rax], edi ; ret
0x0000000000121733 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd531 : mov dword ptr [rax], edx ; jne 0xbd52d ; ret
0x0000000000140f19 : mov dword ptr [rax], edx ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000044374 : mov dword ptr [rax], edx ; mov dword ptr [rsi], edx ; ret
0x0000000000103fc2 : mov dword ptr [rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000141191 : mov dword ptr [rax], edx ; mov qword ptr [r9], rax ; mov eax, edx ; ret
0x0000000000091ec2 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000301a5 : mov dword ptr [rax], edx ; ret
0x000000000008471b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x0000000000002dec : mov dword ptr [rax], esp ; mov eax, 0xf3f8ec1c ; ret
0x0000000000103f73 : mov dword ptr [rax], r8d ; mov eax, 0xffffffff ; ret
0x00000000000346bf : mov dword ptr [rbp - 0x1e8], edx ; call 0x21108
0x0000000000118588 : mov dword ptr [rbp - 0x50], eax ; mov rdx, rax ; jmp 0x1185bf
0x000000000005bf67 : mov dword ptr [rbp - 0x510], ecx ; call 0x589e8
0x000000000005bf66 : mov dword ptr [rbp - 0x510], r9d ; call 0x589e9
0x0000000000076cf2 : mov dword ptr [rbp - 0x520], eax ; jmp 0x7372c
0x00000000000777af : mov dword ptr [rbp - 0x524], ebx ; jmp 0x73ab8
0x0000000000079748 : mov dword ptr [rbp - 0x580], esi ; jmp 0x75a1c
0x000000000006f622 : mov dword ptr [rbp - 0x600], eax ; jmp 0x6b8b8
0x000000000006f5ee : mov dword ptr [rbp - 0x614], eax ; jmp 0x6b8b8
0x0000000000071fa3 : mov dword ptr [rbp - 0x670], eax ; jmp 0x6ea43
0x000000000012f6ee : mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000012feb3 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000012f77b : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x0000000000123b9f : mov dword ptr [rbp - 0x830], eax ; mov eax, r10d ; syscall
0x000000000009b4ba : mov dword ptr [rbp], eax ; je 0x9b679 ; call rax
0x0000000000127020 : mov dword ptr [rbp], eax ; jmp 0x126ff4
0x0000000000128d40 : mov dword ptr [rbp], eax ; jmp 0x128d14
0x0000000000137d90 : mov dword ptr [rbp], eax ; jmp 0x137d64
0x00000000001385a0 : mov dword ptr [rbp], eax ; jmp 0x138574
0x000000000013dba0 : mov dword ptr [rbp], eax ; jmp 0x13db74
0x0000000000152a30 : mov dword ptr [rbp], eax ; jmp 0x152a04
0x0000000000152d70 : mov dword ptr [rbp], eax ; jmp 0x152d44
0x000000000009d4f8 : mov dword ptr [rbp], ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000438aa : mov dword ptr [rbp], edx ; call rax
0x000000000013eec2 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013eec1 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002cb42 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000008a877 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000001663f6 : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000008a95f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000129efa : mov dword ptr [rbx + 0x10], esi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015df95 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00000000001663ae : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000088a9a : mov dword ptr [rbx + 0x18], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000129f3a : mov dword ptr [rbx + 0x18], esi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015dff8 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010150b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000089421 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x000000000009cbb5 : mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000f401e : mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ffa5 : mov dword ptr [rbx + 0x38], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003ebed : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x000000000008e33d : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009cc6d : mov dword ptr [rbx + 0x48], ecx ; mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000008de7b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x00000000000845da : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008fa3d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014ef94 : mov dword ptr [rbx + 0x68], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c132 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000833e4 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000842a1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001334fe : mov dword ptr [rbx + 0xc], eax ; jne 0x1334a6 ; mov rax, rdi ; ret
0x00000000000d1247 : mov dword ptr [rbx + 0xc], edi ; pop rbp ; pop r12 ; pop r14 ; ret
0x000000000010e9c5 : mov dword ptr [rbx + 4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002cb57 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000087f21 : mov dword ptr [rbx + 8], edx ; movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000129eba : mov dword ptr [rbx + 8], esi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009d04d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe356 : mov dword ptr [rbx + rdi + 4], 0x89537fbe ; ret 0xd139
0x000000000011cf52 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x000000000008e2cc : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000009b29d : mov dword ptr [rbx], eax ; je 0x9b458 ; call rax
0x0000000000166871 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000008e340 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000159665 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000011cef0 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000081e95 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000843ab : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000009cbb9 : mov dword ptr [rbx], edi ; call rcx
0x000000000006b20e : mov dword ptr [rbx], edx ; mov byte ptr [rax], bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000734f2 : mov dword ptr [rbx], edx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d103 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009cc71 : mov dword ptr [rbx], esi ; mov rdi, r9 ; call rcx
0x000000000007f112 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ed01 : mov dword ptr [rcx + 0x130], edx ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000017f022 : mov dword ptr [rcx + 3], edx ; ret
0x00000000000bcfa0 : mov dword ptr [rcx + 4], eax ; jne 0xbcf6e ; ret
0x000000000017f013 : mov dword ptr [rcx + 4], edx ; ret
0x00000000000bcf9f : mov dword ptr [rcx + 4], r8d ; jne 0xbcf6f ; ret
0x000000000017f084 : mov dword ptr [rcx + 5], edx ; ret
0x000000000017f094 : mov dword ptr [rcx + 6], edx ; ret
0x000000000017f063 : mov dword ptr [rcx + 7], edx ; ret
0x000000000017f054 : mov dword ptr [rcx + 8], edx ; ret
0x00000000000a8460 : mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x0000000000141029 : mov dword ptr [rcx + rax - 2], edx ; mov eax, r8d ; ret
0x0000000000052817 : mov dword ptr [rcx + rdi + 8], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000a8427 : mov dword ptr [rcx - 0x7c], 0xf3db75f9 ; ret
0x00000000000251c5 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x00000000001925c7 : mov dword ptr [rcx - 2], ecx ; ret
0x00000000001925b2 : mov dword ptr [rcx - 4], ecx ; ret
0x00000000001925a1 : mov dword ptr [rcx - 8], ecx ; ret
0x000000000009ecc3 : mov dword ptr [rcx], 0x450f4800 ; ret 0xfc3
0x00000000001c1c1d : mov dword ptr [rcx], 0xf731d400 ; call rsp
0x00000000001c1c2d : mov dword ptr [rcx], 0xf7328400 ; call qword ptr [rax]
0x00000000000efaa8 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000e4a0c : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0xe49e0
0x0000000000141133 : mov dword ptr [rcx], eax ; mov eax, edx ; ret
0x000000000003f19a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000827f7 : mov dword ptr [rcx], eax ; ret
0x000000000008733a : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000008196c : mov dword ptr [rcx], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000082661 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000001411c8 : mov dword ptr [rcx], edi ; ret
0x000000000017efe1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017f000 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000017f041 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017f020 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000017f061 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017f071 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017f081 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017f091 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017f0a1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017f0b1 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017f010 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000017f051 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017efd1 : mov dword ptr [rcx], edx ; ret
0x000000000010f472 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x0000000000090854 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x00000000000b802d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b8e8d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b806b : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b8ecb : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x14] ; ret
0x00000000000b80ed : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b8f4d : mov dword ptr [rdi + 0x10], ecx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b69fb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b76ce : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b6a7d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000005343f : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000baabd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000baafb : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bab7d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b7750 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b6ac0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b6ae0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b6aa1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000010f45a : mov dword ptr [rdi + 0x10c], esi ; xor eax, eax ; ret
0x0000000000115ec5 : mov dword ptr [rdi + 0x16], eax ; ret
0x00000000000b8153 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b8fb3 : mov dword ptr [rdi + 0x17], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b6ac3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000babe3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000015dbc0 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x000000000008dd73 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000089957 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000b8135 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x19] ; ret
0x00000000000b8f95 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b8173 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1b] ; ret
0x00000000000b8fd3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b6aa5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000babc5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bac03 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000015dc52 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x000000000015db86 : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000d2ec5 : mov dword ptr [rdi + 0x20], ecx ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000090851 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000015db63 : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000015dd01 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000155f98 : mov dword ptr [rdi + 0x48], eax ; mov eax, 1 ; ret
0x000000000008dda3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000155f05 : mov dword ptr [rdi + 0x54], eax ; mov eax, 1 ; ret
0x0000000000155fc5 : mov dword ptr [rdi + 0x58], eax ; mov eax, 1 ; ret
0x00000000000bd162 : mov dword ptr [rdi + 0xc], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000001401fa : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x00000000000b80ad : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b8f0d : mov dword ptr [rdi + 0xe], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b6a1d : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000bab3d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b804b : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b8eab : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x13] ; ret
0x00000000000b80cd : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b8f2d : mov dword ptr [rdi + 0xf], ecx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b69db : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000baadb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000bab5d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001745b5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001743f8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000174698 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000174545 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000174388 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000044883 : mov dword ptr [rdi + 2], edx ; ret
0x00000000000b7f17 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000b8d57 : mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000001744d5 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000174318 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6907 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000ba987 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a85b4 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000004487d : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000b7ef9 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x00000000000b8d39 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 6] ; ret
0x00000000001742a8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000a84e7 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000ba969 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000010eb50 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000b7fab : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b8dfb : mov dword ptr [rdi + 5], edx ; lea rax, [rdi + 0xd] ; ret
0x0000000000174238 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b696b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000baa2b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b7fcb : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b8e1b : mov dword ptr [rdi + 6], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000001741c8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b697b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000baa4b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b7f69 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b8db9 : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b7feb : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b8e3b : mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xf] ; ret
0x0000000000174158 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b6949 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000ba9e9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000baa6b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000118d28 : mov dword ptr [rdi + 8], 0 ; ret
0x00000000000bd62b : mov dword ptr [rdi + 8], eax ; je 0xbd680 ; mov rax, rcx ; ret
0x0000000000054cae : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x000000000008dd77 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000087dad : mov dword ptr [rdi + 8], ecx ; movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x00000000000533c4 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000044354 : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000004433c : mov dword ptr [rdi + 8], ecx ; xor eax, eax ; ret
0x00000000000b8d9b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b7f89 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b8dd9 : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b7f4b : mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 9] ; ret
0x0000000000052a84 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x000000000008a24f : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x00000000000b693b : mov dword ptr [rdi + 8], edx ; ret
0x00000000000ba9cb : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000baa09 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x0000000000115942 : mov dword ptr [rdi + 8], esi ; ret
0x000000000003fd31 : mov dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00000000000bb9ab : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x00000000000bb5a5 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x00000000000bb9a3 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000018f045 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000bb595 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x00000000000bb99b : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb587 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000016e065 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016e0a3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000005332f : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000016e3ec : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173c08 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e5cc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173b88 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e7bc : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173b08 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e98d : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000173a79 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016eb8d : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001739e9 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016ed8d : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000173959 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000b7890 : mov dword ptr [rdi - 1], edx ; ret
0x000000000016e76d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000016e585 : mov dword ptr [rdi - 2], edx ; ret
0x000000000016e769 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000016eb49 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e21f : mov dword ptr [rdi - 4], edx ; ret
0x000000000016eb46 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ed46 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ef46 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000532ba : mov dword ptr [rdi - 8], ecx ; ret
0x000000000016e0a7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000016e21c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e318 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016e264 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173c88 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000081ec0 : mov dword ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000043a62 : mov dword ptr [rdi], 0 ; pop rbx ; ret
0x00000000000a84b9 : mov dword ptr [rdi], eax ; add rax, rdi ; ret
0x0000000000044339 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x0000000000118d15 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000586eb : mov dword ptr [rdi], eax ; mov rax, rdi ; ret
0x000000000004435a : mov dword ptr [rdi], eax ; ret
0x00000000000532b4 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x00000000000533be : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000003fdfb : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000006418a : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b7ee5 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 4] ; ret
0x00000000000b7f37 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 8] ; ret
0x00000000000a8660 : mov dword ptr [rdi], ecx ; lea rax, [rdi + rax - 1] ; ret
0x00000000000b7ec4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, [rdi + 2] ; ret
0x00000000000b68c4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000b8cf7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, [rdi + 3] ; ret
0x00000000000b7597 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000b8d25 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, [rdi + 5] ; ret
0x00000000000b75b5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b8d77 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, [rdi + 9] ; ret
0x00000000000b75f7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b7f15 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 6] ; ret
0x00000000000b8d55 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, [rdi + 7] ; ret
0x00000000000b6905 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000b7f67 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b8db7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b6947 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b7f87 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xb] ; ret
0x00000000000b8dd7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b6957 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000192c87 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x00000000000b6968 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b6978 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b6988 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a8588 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000b68f6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b6938 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000192c93 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000003e166 : mov dword ptr [rdi], ecx ; ret
0x000000000018f03f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x00000000000a8491 : mov dword ptr [rdi], edx ; add rax, rdi ; ret
0x00000000000b7eb4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 1] ; ret
0x00000000000b8ce4 : mov dword ptr [rdi], edx ; lea rax, [rdi + 2] ; ret
0x00000000000b7ed2 : mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000000b8d12 : mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000b7f24 : mov dword ptr [rdi], edx ; lea rax, [rdi + 7] ; ret
0x00000000000b8d64 : mov dword ptr [rdi], edx ; lea rax, [rdi + 8] ; ret
0x00000000000b78b0 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000b78f1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b7911 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b7921 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000014395f : mov dword ptr [rdi], edx ; mov qword ptr [rax], 0 ; ret
0x00000000000b7931 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b7941 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b78c0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b7901 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a81f3 : mov dword ptr [rdi], edx ; pop rbx ; ret
0x000000000003e4a6 : mov dword ptr [rdi], edx ; ret
0x00000000000ba914 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000ba942 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000ba994 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a8631 : mov dword ptr [rdi], esi ; lea rax, [rdi + rax - 1] ; ret
0x00000000001925af : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000054a76 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009d509 : mov dword ptr [rdi], esi ; mov eax, 1 ; ret
0x000000000019259e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x00000000000a8561 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000001925c3 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x0000000000054a5b : mov dword ptr [rdi], esi ; ret
0x000000000010eb2d : mov dword ptr [rdi], esi ; xor eax, eax ; ret
0x000000000016cc82 : mov dword ptr [rdi], esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x280f
0x00000000000a84b8 : mov dword ptr [rdi], r8d ; add rax, rdi ; ret
0x00000000001568ec : mov dword ptr [rdx + 0x10], eax ; mov eax, 1 ; ret
0x000000000008a8d5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x000000000008265e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000827f4 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x000000000014ebc0 : mov dword ptr [rdx + 0x20], esi ; ret
0x000000000008296a : mov dword ptr [rdx + 0x28], esi ; mov byte ptr [rcx], dil ; ret
0x000000000014eb9c : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000009df13 : mov dword ptr [rdx + 0x63480034], edi ; ret
0x000000000014eba0 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000152ffe : mov dword ptr [rdx + 0x6c], eax ; mov eax, 1 ; ret
0x00000000001567ec : mov dword ptr [rdx + 0xc], eax ; mov eax, 1 ; ret
0x00000000001813a7 : mov dword ptr [rdx + 3], eax ; lea rax, [rdx + 6] ; ret
0x00000000000b34cc : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000007be3e : mov dword ptr [rdx + 4], 1 ; ret
0x0000000000181389 : mov dword ptr [rdx + 4], eax ; lea rax, [rdx + 5] ; ret
0x00000000000b34ae : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000018143b : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 0xc] ; ret
0x00000000001813b9 : mov dword ptr [rdx + 5], eax ; lea rax, [rdx + 8] ; ret
0x000000000017d069 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000018145b : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 0xd] ; ret
0x00000000001813d9 : mov dword ptr [rdx + 6], eax ; lea rax, [rdx + 9] ; ret
0x000000000017d079 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000001813f9 : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xa] ; ret
0x000000000018147b : mov dword ptr [rdx + 7], eax ; lea rax, [rdx + 0xe] ; ret
0x00000000000b3550 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000181419 : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xb] ; ret
0x000000000018130b : mov dword ptr [rdx + 8], eax ; lea rax, [rdx + 0xf] ; ret
0x00000000000b3532 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000007bdeb : mov dword ptr [rdx + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000078ef8 : mov dword ptr [rdx], 0 ; jmp 0x751ef
0x000000000009ade5 : mov dword ptr [rdx], 0xc7480000 ; ret 0xffdf
0x0000000000181334 : mov dword ptr [rdx], eax ; lea rax, [rdx + 1] ; ret
0x0000000000181362 : mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000001812b4 : mov dword ptr [rdx], eax ; lea rax, [rdx + 7] ; ret
0x00000000001106b0 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x110684
0x0000000000118b22 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; jmp 0x118afe
0x000000000003f16a : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000054a78 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000054c95 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000e17fd : mov dword ptr [rdx], eax ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000004493a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x00000000000b3449 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000000e0f82 : mov dword ptr [rdx], eax ; mov rax, rsi ; add rsp, 8 ; ret
0x000000000003093d : mov dword ptr [rdx], eax ; ret
0x00000000000880ac : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000bc0e5 : mov dword ptr [rdx], ecx ; jne 0xbc0dd ; ret
0x0000000000103cc7 : mov dword ptr [rdx], ecx ; pop rdx ; pop rcx ; pop rbx ; ret
0x00000000000a8095 : mov dword ptr [rdx], ecx ; ret
0x00000000001011ab : mov dword ptr [rdx], edi ; ret
0x00000000000e1653 : mov dword ptr [rdx], esi ; add rsp, 0x18 ; ret
0x00000000000e171d : mov dword ptr [rdx], esi ; add rsp, 8 ; ret
0x000000000009f2c1 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e17fc : mov dword ptr [rdx], r8d ; mov eax, esi ; add rsp, 0x48 ; ret
0x000000000019a72f : mov dword ptr [rip + 0x25314b], ebx ; jne 0x19a721 ; pop rbx ; ret
0x000000000016760f : mov dword ptr [rip + 0x28631b], esi ; xor eax, eax ; ret
0x00000000001310d8 : mov dword ptr [rip + 0x2be1a2], eax ; pop rbp ; ret
0x00000000001240a0 : mov dword ptr [rip + 0x2c72ba], ebx ; pop rbx ; ret
0x000000000011b80a : mov dword ptr [rip + 0x2cfb38], edi ; ret
0x000000000009de18 : mov dword ptr [rip + 0x34fbca], eax ; ret
0x00000000000908b7 : mov dword ptr [rip + 0x35a9d3], eax ; ret
0x00000000000908ce : mov dword ptr [rip + 0x35a9d8], eax ; ret
0x000000000009088f : mov dword ptr [rip + 0x35a9f3], eax ; ret
0x000000000009086f : mov dword ptr [rip + 0x35aa0b], eax ; ret
0x0000000000090755 : mov dword ptr [rip + 0x35ab8d], eax ; ret
0x0000000000090745 : mov dword ptr [rip + 0x35ab95], eax ; ret
0x0000000000090733 : mov dword ptr [rip + 0x35ab97], edx ; ret
0x00000000000906f5 : mov dword ptr [rip + 0x35ab9d], eax ; ret
0x00000000000906e5 : mov dword ptr [rip + 0x35abb5], eax ; ret
0x00000000000908e4 : mov dword ptr [rip + 0x35d042], eax ; ret
0x000000000004013b : mov dword ptr [rip + 0x3ab06b], eax ; mov eax, edx ; ret
0x000000000004012c : mov dword ptr [rip + 0x3ab076], edx ; ret
0x000000000002134b : mov dword ptr [rip + 0x3cf17f], edx ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000996b3 : mov dword ptr [rip - 0x7cb7ffcb], esp ; retf 0x4901
0x0000000000101a24 : mov dword ptr [rsi + 0x10], eax ; ret
0x00000000000442bd : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000442c1 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x0000000000087803 : mov dword ptr [rsi + 0x28], ecx ; mov byte ptr [rax], dil ; mov eax, r10d ; ret
0x0000000000102e81 : mov dword ptr [rsi + 0x2c], eax ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000011578b : mov dword ptr [rsi + 0x48], eax ; ret
0x0000000000114a46 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000447ab : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x0000000000044837 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000bcf48 : mov dword ptr [rsi + 4], 0 ; ret
0x0000000000101a07 : mov dword ptr [rsi + 8], 0 ; ret
0x000000000014dbc1 : mov dword ptr [rsi + 8], eax ; ret
0x0000000000101a20 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000043f3d : mov dword ptr [rsi + 8], edx ; jns 0x43f0b ; xor eax, eax ; ret
0x0000000000052516 : mov dword ptr [rsi + rcx + 8], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000d0491 : mov dword ptr [rsi + rcx], edx ; jne 0xd048e ; ret
0x0000000000192c96 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000192c89 : mov dword ptr [rsi - 4], ecx ; ret
0x000000000014dbdf : mov dword ptr [rsi], 0 ; ret
0x0000000000044146 : mov dword ptr [rsi], 0 ; xor eax, eax ; ret
0x000000000014dc60 : mov dword ptr [rsi], 0xa ; ret
0x000000000014dc50 : mov dword ptr [rsi], 0xb ; ret
0x000000000014dc80 : mov dword ptr [rsi], 0xc ; ret
0x000000000014dbbb : mov dword ptr [rsi], 7 ; mov dword ptr [rsi + 8], eax ; ret
0x000000000014dc70 : mov dword ptr [rsi], 8 ; ret
0x000000000008995b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000001401fe : mov dword ptr [rsi], edi ; ret
0x000000000014075f : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x00000000000440fb : mov dword ptr [rsi], edx ; pop rbp ; ret
0x0000000000044376 : mov dword ptr [rsi], edx ; ret
0x00000000000440fa : mov dword ptr [rsi], r10d ; pop rbp ; ret
0x000000000003dbb5 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00000000000941ad : mov dword ptr [rsp + 0x18], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000014d1c7 : mov dword ptr [rsp + 0x18], edx ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x0000000000094273 : mov dword ptr [rsp + 0x18], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000000f47cb : mov dword ptr [rsp + 0x18], esi ; call 0x212c6
0x00000000000f480c : mov dword ptr [rsp + 0x20], edx ; call 0x212c6
0x000000000012180b : mov dword ptr [rsp + 0x38], ecx ; movaps xmmword ptr [rsp + 0x20], xmm0 ; syscall
0x00000000000d1ed3 : mov dword ptr [rsp + 0xa8], ebp ; call rbx
0x00000000000d195b : mov dword ptr [rsp + 0xa8], esi ; call rbx
0x000000000015a2d3 : mov dword ptr [rsp + 0xc8], edx ; call rax
0x00000000000941b2 : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000015d1e5 : mov dword ptr [rsp + 8], eax ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x0000000000093da3 : mov dword ptr [rsp + 8], ebx ; mov rdi, r12 ; call qword ptr [rax]
0x0000000000038a3b : mov dword ptr [rsp + 8], ecx ; call 0x35546
0x0000000000149dd1 : mov dword ptr [rsp + 8], ecx ; call r12
0x00000000000a0fcf : mov dword ptr [rsp + 8], ecx ; mov rbx, rax ; call 0x9d9f9
0x0000000000085b4e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000004685c : mov dword ptr [rsp + 8], edx ; call 0x53346
0x000000000009402f : mov dword ptr [rsp + 8], edx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000094137 : mov dword ptr [rsp + 8], esi ; xor edi, edi ; call qword ptr [rax]
0x0000000000094c1b : mov dword ptr [rsp + rsi*2], 0x58b48e9 ; retf 0x3561
0x000000000003dc84 : mov dword ptr [rsp - 0x10], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000054bea : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000008ae52 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x000000000008dee5 : mov dword ptr [rsp], edi ; call 0x8a155
0x000000000014484e : mov dword ptr [rsp], edx ; call 0x212c5
0x000000000006f2f6 : mov dword ptr fs:[rax], 0x16 ; jmp 0x6b57a
0x00000000000618cc : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000011cf67 : mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000045621 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000167517 : mov dword ptr fs:[rax], 0x26 ; xor eax, eax ; ret
0x000000000006f682 : mov dword ptr fs:[rax], 0xc ; jmp 0x6b8b9
0x000000000009d0a7 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x000000000011faaf : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000022567 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x0000000000118cf0 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000103fc1 : mov dword ptr fs:[rax], edx ; mov eax, 0xffffffff ; ret
0x0000000000103f72 : mov dword ptr fs:[rax], r8d ; mov eax, 0xffffffff ; ret
0x000000000012701f : mov dword ptr fs:[rbp], eax ; jmp 0x126ff5
0x0000000000128d3f : mov dword ptr fs:[rbp], eax ; jmp 0x128d15
0x0000000000137d8f : mov dword ptr fs:[rbp], eax ; jmp 0x137d65
0x000000000013859f : mov dword ptr fs:[rbp], eax ; jmp 0x138575
0x000000000013db9f : mov dword ptr fs:[rbp], eax ; jmp 0x13db75
0x0000000000152a2f : mov dword ptr fs:[rbp], eax ; jmp 0x152a05
0x0000000000152d6f : mov dword ptr fs:[rbp], eax ; jmp 0x152d45
0x000000000013eec0 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4a0b : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0xe49e1
0x000000000003f199 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000001106af : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x110685
0x0000000000118b21 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; jmp 0x118aff
0x000000000003f169 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000e1652 : mov dword ptr fs:[rdx], esi ; add rsp, 0x18 ; ret
0x00000000000e171c : mov dword ptr fs:[rdx], esi ; add rsp, 8 ; ret
0x00000000000bb594 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000016e580 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000000b68b0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000114d53 : mov eax, 0 ; cmova eax, edx ; ret
0x00000000000a1435 : mov eax, 0 ; cmovne rax, rdi ; ret
0x000000000014c1d4 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000bbb0b : mov eax, 0x10 ; pop rbx ; ret
0x000000000007be50 : mov eax, 0x10 ; ret
0x0000000000115a7a : mov eax, 0x10 ; syscall
0x0000000000115ebf : mov eax, 0x100 ; mov word ptr [rdi + 0x16], ax ; ret
0x0000000000140aa8 : mov eax, 0x100 ; ret
0x0000000000140a90 : mov eax, 0x101 ; ret
0x000000000010feac : mov eax, 0x101 ; syscall
0x0000000000140a87 : mov eax, 0x102 ; cmovne eax, edx ; ret
0x000000000010fbe0 : mov eax, 0x102 ; syscall
0x000000000010f8ca : mov eax, 0x103 ; syscall
0x0000000000111473 : mov eax, 0x104 ; syscall
0x0000000000118c25 : mov eax, 0x105 ; syscall
0x000000000010f922 : mov eax, 0x106 ; syscall
0x0000000000111d70 : mov eax, 0x107 ; syscall
0x000000000007bd63 : mov eax, 0x108 ; syscall
0x0000000000111c53 : mov eax, 0x109 ; syscall
0x0000000000111cb0 : mov eax, 0x10a ; syscall
0x0000000000111d13 : mov eax, 0x10b ; syscall
0x000000000010fb4d : mov eax, 0x10c ; syscall
0x00000000001103f8 : mov eax, 0x10d ; syscall
0x00000000001170e2 : mov eax, 0x10e ; syscall
0x0000000000114c93 : mov eax, 0x10f ; syscall
0x000000000010e630 : mov eax, 0x11 ; syscall
0x0000000000122540 : mov eax, 0x110 ; syscall
0x0000000000121d80 : mov eax, 0x113 ; syscall
0x0000000000121c20 : mov eax, 0x114 ; syscall
0x00000000001157a0 : mov eax, 0x115 ; syscall
0x0000000000121cd0 : mov eax, 0x116 ; syscall
0x0000000000115688 : mov eax, 0x118 ; syscall
0x0000000000121996 : mov eax, 0x119 ; syscall
0x00000000001225a0 : mov eax, 0x11b ; syscall
0x0000000000115850 : mov eax, 0x11d ; syscall
0x00000000001225d3 : mov eax, 0x11e ; syscall
0x0000000000122600 : mov eax, 0x11f ; syscall
0x000000000010e6e0 : mov eax, 0x12 ; syscall
0x00000000001231f0 : mov eax, 0x120 ; syscall
0x0000000000121a80 : mov eax, 0x122 ; syscall
0x0000000000122210 : mov eax, 0x123 ; syscall
0x00000000001109d0 : mov eax, 0x124 ; syscall
0x0000000000110a30 : mov eax, 0x125 ; syscall
0x0000000000122330 : mov eax, 0x126 ; syscall
0x0000000000116753 : mov eax, 0x127 ; syscall
0x0000000000116803 : mov eax, 0x128 ; syscall
0x00000000001232a0 : mov eax, 0x12b ; syscall
0x0000000000122630 : mov eax, 0x12c ; syscall
0x0000000000122093 : mov eax, 0x12d ; syscall
0x0000000000121b03 : mov eax, 0x12e ; syscall
0x0000000000115f97 : mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000122663 : mov eax, 0x12f ; syscall
0x000000000011660d : mov eax, 0x13 ; syscall
0x0000000000121e4d : mov eax, 0x130 ; syscall
0x0000000000122150 : mov eax, 0x131 ; syscall
0x0000000000117330 : mov eax, 0x132 ; syscall
0x0000000000123350 : mov eax, 0x133 ; syscall
0x0000000000122690 : mov eax, 0x134 ; syscall
0x000000000010f677 : mov eax, 0x135 ; syscall
0x00000000001226c3 : mov eax, 0x136 ; syscall
0x00000000001226f3 : mov eax, 0x137 ; syscall
0x000000000002c6dc : mov eax, 0x139c4ee8 ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x00000000000448cd : mov eax, 0x13e ; syscall
0x0000000000122720 : mov eax, 0x13f ; syscall
0x00000000001166ad : mov eax, 0x14 ; syscall
0x00000000000e4eba : mov eax, 0x142 ; syscall
0x00000000001155af : mov eax, 0x146 ; syscall
0x00000000001168d2 : mov eax, 0x147 ; syscall
0x00000000001169e2 : mov eax, 0x148 ; syscall
0x0000000000121f68 : mov eax, 0x149 ; syscall
0x0000000000122750 : mov eax, 0x14a ; syscall
0x0000000000122780 : mov eax, 0x14b ; syscall
0x0000000000110240 : mov eax, 0x15 ; syscall
0x000000000009aef0 : mov eax, 0x16 ; ret
0x0000000000110a00 : mov eax, 0x16 ; syscall
0x0000000000116ff0 : mov eax, 0x17 ; syscall
0x0000000000103e50 : mov eax, 0x18 ; syscall
0x00000000001223f3 : mov eax, 0x19 ; syscall
0x000000000011bb1d : mov eax, 0x1a ; syscall
0x000000000011bbe0 : mov eax, 0x1b ; syscall
0x000000000010f487 : mov eax, 0x1c ; syscall
0x00000000001ce300 : mov eax, 0x1c0000ab ; or ch, ch ; jmp qword ptr [rcx]
0x0000000000123843 : mov eax, 0x1d ; syscall
0x00000000001237e0 : mov eax, 0x1e ; syscall
0x0000000000123870 : mov eax, 0x1f ; syscall
0x00000000000e6792 : mov eax, 0x20 ; cmovne rax, rdx ; ret
0x00000000000bbb19 : mov eax, 0x20 ; pop rbx ; ret
0x00000000000e6773 : mov eax, 0x20 ; ret
0x0000000000110970 : mov eax, 0x20 ; syscall
0x0000000000030697 : mov eax, 0x200 ; ret
0x00000000001109a0 : mov eax, 0x21 ; syscall
0x00000000000e48ed : mov eax, 0x22 ; syscall
0x00000000000e499d : mov eax, 0x23 ; syscall
0x00000000000d5e20 : mov eax, 0x24 ; syscall
0x00000000000e4840 : mov eax, 0x25 ; syscall
0x00000000000d5e50 : mov eax, 0x26 ; syscall
0x00000000000e58e0 : mov eax, 0x27 ; syscall
0x0000000000115203 : mov eax, 0x28 ; syscall
0x0000000000122ec0 : mov eax, 0x29 ; syscall
0x00000000001228ad : mov eax, 0x2a ; syscall
0x00000000001227dd : mov eax, 0x2b ; syscall
0x0000000000122c46 : mov eax, 0x2c ; syscall
0x00000000001d2000 : mov eax, 0x2c0000e8 ; div eax ; call rsi
0x0000000000122a16 : mov eax, 0x2d ; syscall
0x0000000000122cfd : mov eax, 0x2e ; syscall
0x0000000000122b9d : mov eax, 0x2f ; syscall
0x00000000000bbb12 : mov eax, 0x30 ; pop rbx ; ret
0x0000000000122e90 : mov eax, 0x30 ; syscall
0x0000000000122870 : mov eax, 0x31 ; syscall
0x00000000001229d0 : mov eax, 0x32 ; syscall
0x0000000000122970 : mov eax, 0x33 ; syscall
0x0000000000122940 : mov eax, 0x34 ; syscall
0x00000000001c0f44 : mov eax, 0x34000188 ; xchg eax, esp ; cmc ; jmp rsp
0x0000000000122ef3 : mov eax, 0x35 ; syscall
0x0000000000122e63 : mov eax, 0x36 ; syscall
0x00000000001229a3 : mov eax, 0x37 ; syscall
0x000000000004f025 : mov eax, 0x38 ; syscall
0x00000000000e4da1 : mov eax, 0x3a ; syscall
0x00000000000e4e30 : mov eax, 0x3b ; syscall
0x0000000000121892 : mov eax, 0x3c ; syscall
0x00000000000e45ea : mov eax, 0x3d ; syscall
0x000000000004f368 : mov eax, 0x3e ; mov edi, ebx ; syscall
0x000000000003f180 : mov eax, 0x3e ; syscall
0x00000000000e4540 : mov eax, 0x3f ; syscall
0x00000000000bbb27 : mov eax, 0x40 ; pop rbx ; ret
0x00000000000e67c6 : mov eax, 0x40 ; ret
0x00000000001236e0 : mov eax, 0x40 ; syscall
0x00000000001236b0 : mov eax, 0x41 ; syscall
0x0000000000123742 : mov eax, 0x42 ; syscall
0x0000000000123810 : mov eax, 0x43 ; syscall
0x0000000000123650 : mov eax, 0x44 ; syscall
0x00000000001c0d84 : mov eax, 0x4400017f ; jb 0x1c0d87 ; jmp rax
0x00000000001234f0 : mov eax, 0x45 ; syscall
0x00000000001aa91b : mov eax, 0x45155e93 ; ret 0x591c
0x00000000001235a0 : mov eax, 0x46 ; syscall
0x0000000000123680 : mov eax, 0x47 ; syscall
0x00000000001105ea : mov eax, 0x48 ; syscall
0x0000000000068c64 : mov eax, 0x48000001 ; add eax, edi ; jmp rax
0x0000000000110770 : mov eax, 0x49 ; syscall
0x000000000011720d : mov eax, 0x4a ; syscall
0x00000000001172bd : mov eax, 0x4b ; syscall
0x0000000000118c60 : mov eax, 0x4c ; syscall
0x0000000000118c90 : mov eax, 0x4d ; syscall
0x0000000000110bfb : mov eax, 0x4f ; syscall
0x0000000000110af0 : mov eax, 0x50 ; syscall
0x0000000000110b20 : mov eax, 0x51 ; syscall
0x000000000007bd30 : mov eax, 0x52 ; syscall
0x000000000010fbb0 : mov eax, 0x53 ; syscall
0x0000000000111da0 : mov eax, 0x54 ; syscall
0x0000000000110a6d : mov eax, 0x55 ; syscall
0x0000000000111c20 : mov eax, 0x56 ; syscall
0x0000000000111d40 : mov eax, 0x57 ; syscall
0x0000000000111c80 : mov eax, 0x58 ; syscall
0x0000000000111ce0 : mov eax, 0x59 ; syscall
0x000000000010fac0 : mov eax, 0x5a ; syscall
0x000000000010faf0 : mov eax, 0x5b ; syscall
0x000000000002bf18 : mov eax, 0x5b000000 ; pop r12 ; ret
0x0000000000157ca7 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000001113e0 : mov eax, 0x5c ; syscall
0x0000000000111410 : mov eax, 0x5d ; syscall
0x0000000000111440 : mov eax, 0x5e ; syscall
0x000000000010fab0 : mov eax, 0x5f ; syscall
0x00000000000bbb20 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000d2a30 : mov eax, 0x60 ; syscall
0x0000000000116010 : mov eax, 0x62 ; syscall
0x0000000000122510 : mov eax, 0x63 ; syscall
0x0000000000003608 : mov eax, 0x637514da ; jle 0x3646 ; retf 0x8792
0x00000000000e4570 : mov eax, 0x64 ; syscall
0x0000000000117938 : mov eax, 0x65 ; syscall
0x00000000000e5900 : mov eax, 0x66 ; syscall
0x0000000000122390 : mov eax, 0x67 ; syscall
0x00000000000e5920 : mov eax, 0x68 ; syscall
0x00000000000e598e : mov eax, 0x69 ; syscall
0x00000000000e5a1e : mov eax, 0x6a ; syscall
0x00000000000e5910 : mov eax, 0x6b ; syscall
0x00000000000e5930 : mov eax, 0x6c ; syscall
0x00000000000e5b70 : mov eax, 0x6d ; syscall
0x00000000000e58f0 : mov eax, 0x6e ; syscall
0x00000000000e5ba0 : mov eax, 0x6f ; syscall
0x00000000000e5c00 : mov eax, 0x70 ; syscall
0x0000000000116ade : mov eax, 0x71 ; syscall
0x0000000000116b7e : mov eax, 0x72 ; syscall
0x00000000000e5940 : mov eax, 0x73 ; syscall
0x00000000000e0e5e : mov eax, 0x74 ; syscall
0x000000000010f0c5 : mov eax, 0x75 ; mov edi, edx ; syscall
0x00000000000e5cae : mov eax, 0x75 ; syscall
0x00000000000e5c30 : mov eax, 0x76 ; syscall
0x000000000010f0e9 : mov eax, 0x77 ; mov edi, edx ; syscall
0x00000000000e5d4e : mov eax, 0x77 ; syscall
0x00000000000e5c60 : mov eax, 0x78 ; syscall
0x00000000000e5b40 : mov eax, 0x79 ; syscall
0x0000000000121920 : mov eax, 0x7a ; syscall
0x0000000000121950 : mov eax, 0x7b ; syscall
0x00000000000e5bd0 : mov eax, 0x7c ; syscall
0x00000000001220f0 : mov eax, 0x7d ; syscall
0x00000000000e66d0 : mov eax, 0x7d00 ; ret
0x00000000000e66e0 : mov eax, 0x7e ; ret
0x0000000000122120 : mov eax, 0x7e ; syscall
0x00000000000e6672 : mov eax, 0x7f ; cmovne rax, rdx ; ret
0x00000000000e66a2 : mov eax, 0x7f ; ret
0x000000000003f1b5 : mov eax, 0x7f ; syscall
0x0000000000141680 : mov eax, 0x7fffffff ; ret
0x00000000000bbafd : mov eax, 0x80 ; pop rbx ; ret
0x0000000000040362 : mov eax, 0x81 ; syscall
0x000000000003f202 : mov eax, 0x82 ; syscall
0x000000000003f740 : mov eax, 0x83 ; syscall
0x000000000010f690 : mov eax, 0x84 ; syscall
0x00000000001c1ab4 : mov eax, 0x840001c2 ; and esi, edi ; dec esp ; ret 1
0x000000000010f866 : mov eax, 0x85 ; syscall
0x0000000000122570 : mov eax, 0x86 ; syscall
0x0000000000121b30 : mov eax, 0x87 ; syscall
0x000000000011eda7 : mov eax, 0x88 ; syscall
0x000000000010f970 : mov eax, 0x89 ; syscall
0x00000000000faa4b : mov eax, 0x89000000 ; ret 0xe8c0
0x000000000015b341 : mov eax, 0x89480005 ; ret 0xff31
0x000000000010f9a0 : mov eax, 0x8a ; syscall
0x00000000001163c0 : mov eax, 0x8c ; syscall
0x0000000000116400 : mov eax, 0x8d ; syscall
0x0000000000103d90 : mov eax, 0x8e ; syscall
0x0000000000103dc0 : mov eax, 0x8f ; syscall
0x0000000000103df0 : mov eax, 0x90 ; syscall
0x0000000000103e20 : mov eax, 0x91 ; syscall
0x0000000000103e80 : mov eax, 0x92 ; syscall
0x0000000000103eb0 : mov eax, 0x93 ; syscall
0x0000000000103ee0 : mov eax, 0x94 ; syscall
0x000000000011bc40 : mov eax, 0x95 ; syscall
0x000000000011bc70 : mov eax, 0x96 ; syscall
0x000000000011bca0 : mov eax, 0x97 ; syscall
0x000000000011bcd0 : mov eax, 0x98 ; syscall
0x0000000000117650 : mov eax, 0x99 ; syscall
0x0000000000122050 : mov eax, 0x9a ; syscall
0x0000000000122450 : mov eax, 0x9b ; syscall
0x0000000000122483 : mov eax, 0x9d ; syscall
0x0000000000122020 : mov eax, 0x9e ; syscall
0x00000000001220c0 : mov eax, 0x9f ; syscall
0x00000000001201ae : mov eax, 0xa ; pop rbx ; pop rbp ; ret
0x000000000011bae0 : mov eax, 0xa ; syscall
0x00000000001171d0 : mov eax, 0xa1 ; syscall
0x0000000000003278 : mov eax, 0xa1a3e95a ; ret 0xba88
0x0000000000117280 : mov eax, 0xa2 ; syscall
0x00000000001171a0 : mov eax, 0xa3 ; syscall
0x00000000000d2b10 : mov eax, 0xa4 ; syscall
0x00000000001223c3 : mov eax, 0xa5 ; syscall
0x00000000001218c0 : mov eax, 0xa6 ; syscall
0x0000000000117680 : mov eax, 0xa7 ; syscall
0x00000000001176b0 : mov eax, 0xa8 ; syscall
0x000000000011736c : mov eax, 0xa9 ; syscall
0x0000000000116ef0 : mov eax, 0xaa ; syscall
0x0000000000116fb0 : mov eax, 0xab ; syscall
0x0000000000121780 : mov eax, 0xac ; syscall
0x00000000001d5900 : mov eax, 0xac000121 ; ret
0x00000000001d7100 : mov eax, 0xac000139 ; hlt ; jmp qword ptr [rcx]
0x00000000001e1a00 : mov eax, 0xac0001e2 ; xchg eax, edx ; sti ; jmp qword ptr [rdx]
0x0000000000121750 : mov eax, 0xad ; syscall
0x0000000000122180 : mov eax, 0xae ; syscall
0x00000000001222a3 : mov eax, 0xaf ; syscall
0x000000000011bab0 : mov eax, 0xb ; syscall
0x00000000001221b0 : mov eax, 0xb0 ; syscall
0x0000000000122270 : mov eax, 0xb1 ; syscall
0x00000000001224b3 : mov eax, 0xb2 ; syscall
0x00000000001224e3 : mov eax, 0xb3 ; syscall
0x0000000000122420 : mov eax, 0xb4 ; syscall
0x0000000000162aa3 : mov eax, 0xb5 ; syscall
0x0000000000162af3 : mov eax, 0xb6 ; syscall
0x00000000001e3556 : mov eax, 0xb702b301 ; add al, 0 ; ret 0x504
0x000000000015308f : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001b0aa8 : mov eax, 0xb8fff364 ; call qword ptr fs:[rax]
0x000000000003ee62 : mov eax, 0xba ; syscall
0x00000000001218f0 : mov eax, 0xbb ; syscall
0x000000000011fa23 : mov eax, 0xbc ; syscall
0x000000000011f9c3 : mov eax, 0xbd ; syscall
0x000000000011f8a3 : mov eax, 0xbe ; syscall
0x000000000011f8d3 : mov eax, 0xbf ; syscall
0x00000000000f4031 : mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x000000000010e7bc : mov eax, 0xc ; pop rbx ; pop rbp ; ret
0x00000000000f4100 : mov eax, 0xc ; ret
0x000000000011f933 : mov eax, 0xc0 ; syscall
0x000000000011f813 : mov eax, 0xc1 ; syscall
0x000000000011f900 : mov eax, 0xc2 ; syscall
0x000000000011f960 : mov eax, 0xc3 ; syscall
0x000000000011f840 : mov eax, 0xc4 ; syscall
0x000000000011f9f0 : mov eax, 0xc5 ; syscall
0x000000000011f990 : mov eax, 0xc6 ; syscall
0x000000000011f870 : mov eax, 0xc7 ; syscall
0x00000000000f507f : mov eax, 0xc8938b48 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000d2970 : mov eax, 0xc9 ; syscall
0x00000000001cf029 : mov eax, 0xc9440000 ; in eax, dx ; jmp qword ptr [rbx]
0x0000000000162dc2 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000162dbc : mov eax, 0xca ; ret
0x00000000001306a5 : mov eax, 0xca ; syscall
0x00000000001ce400 : mov eax, 0xcc0000ac ; or ch, ch ; call qword ptr [rcx]
0x00000000001deb00 : mov eax, 0xcc0001b3 ; add bh, dh ; call qword ptr [rdi]
0x00000000001bef8c : mov eax, 0xd40000c1 ; in al, dx ; jmp rsp
0x00000000001221e0 : mov eax, 0xd5 ; syscall
0x000000000011bc13 : mov eax, 0xd8 ; syscall
0x00000000001237b3 : mov eax, 0xdc ; syscall
0x00000000001e1b00 : mov eax, 0xdc0001e3 ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x0000000000169407 : mov eax, 0xdc3d8d48 ; ret
0x0000000000114d43 : mov eax, 0xdd ; syscall
0x000000000003ee90 : mov eax, 0xe ; syscall
0x00000000001599a6 : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000130efa : mov eax, 0xe3 ; syscall
0x00000000000dedcc : mov eax, 0xe4 ; syscall
0x00000000000e6b45 : mov eax, 0xe5 ; syscall
0x0000000000130f64 : mov eax, 0xe6 ; syscall
0x0000000000121b70 : mov eax, 0xe8 ; syscall
0x0000000000122243 : mov eax, 0xe9 ; syscall
0x000000000003ee6e : mov eax, 0xea ; syscall
0x0000000000118a40 : mov eax, 0xeb ; syscall
0x000000000003ef21 : mov eax, 0xf ; syscall
0x0000000000002dee : mov eax, 0xf3f8ec1c ; ret
0x00000000000e47a3 : mov eax, 0xf7 ; syscall
0x000000000011e0d8 : mov eax, 0xf9fd22e8 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000e66c2 : mov eax, 0xfa ; ret
0x00000000000e6710 : mov eax, 0xfc17 ; ret
0x0000000000122300 : mov eax, 0xfd ; syscall
0x00000000000e6654 : mov eax, 0xfde8 ; jne 0xe66aa ; ret
0x00000000001222d0 : mov eax, 0xfe ; syscall
0x0000000000122360 : mov eax, 0xff ; syscall
0x00000000000e6702 : mov eax, 0xfffa ; ret
0x000000000016761e : mov eax, 0xfffffffe ; ret
0x0000000000140a42 : mov eax, 0xffffffff ; cmove eax, edx ; ret
0x00000000001106b2 : mov eax, 0xffffffff ; jmp 0x110682
0x0000000000118b24 : mov eax, 0xffffffff ; jmp 0x118afc
0x000000000003f6a0 : mov eax, 0xffffffff ; jmp 0x3f670
0x00000000000e4a0e : mov eax, 0xffffffff ; jmp 0xe49de
0x00000000001415d7 : mov eax, 0xffffffff ; mov rdx, rax ; ret
0x0000000000116475 : mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x0000000000042c9e : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7bdf : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r14 ; ret
0x000000000008197c : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003d2be : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000003edbd : mov eax, 0xffffffff ; ret
0x00000000001179cf : mov eax, 1 ; add rsp, 8 ; ret
0x0000000000195660 : mov eax, 1 ; jg 0x195679 ; neg eax ; ret
0x00000000000bcdd0 : mov eax, 1 ; jg 0xbcde2 ; neg eax ; ret
0x0000000000192416 : mov eax, 1 ; jl 0x192429 ; neg eax ; ret
0x000000000015cb9b : mov eax, 1 ; jmp 0x15cb73
0x000000000005c40d : mov eax, 1 ; jmp rax
0x00000000000e68b2 : mov eax, 1 ; js 0xe68c8 ; ret
0x0000000000054a55 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000156834 : mov eax, 1 ; movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x00000000001567fc : mov eax, 1 ; movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x0000000000152f8c : mov eax, 1 ; movups xmmword ptr [rdi + 8], xmm0 ; ret
0x0000000000152fa5 : mov eax, 1 ; movups xmmword ptr [rdx], xmm0 ; ret
0x000000000014e4f5 : mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000526f7 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d33d : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x0000000000052543 : mov eax, 1 ; ret
0x000000000011014d : mov eax, 1 ; syscall
0x000000000011fff9 : mov eax, 2 ; pop rbx ; pop rbp ; ret
0x0000000000054c97 : mov eax, 2 ; ret
0x0000000000130e35 : mov eax, 3 ; cmovne eax, edx ; ret
0x00000000000d0e51 : mov eax, 3 ; ret
0x00000000001108cd : mov eax, 3 ; syscall
0x00000000000d0e61 : mov eax, 4 ; ret
0x000000000010f76e : mov eax, 4 ; syscall
0x0000000000131057 : mov eax, 5 ; pop r12 ; pop rbp ; ret
0x0000000000108c7c : mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000d0e71 : mov eax, 5 ; ret
0x000000000010f7bc : mov eax, 5 ; syscall
0x00000000000d0e81 : mov eax, 6 ; ret
0x000000000010f80e : mov eax, 6 ; syscall
0x000000000012e46c : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000d0e91 : mov eax, 7 ; ret
0x0000000000114bbd : mov eax, 7 ; syscall
0x00000000000bbb04 : mov eax, 8 ; pop rbx ; ret
0x0000000000022c50 : mov eax, 8 ; ret
0x0000000000110210 : mov eax, 8 ; syscall
0x000000000010e9d0 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ba0c : mov eax, 9 ; syscall
0x0000000000130bd2 : mov eax, dword ptr [0x10] ; ret
0x000000000012f6e9 : mov eax, dword ptr [r12 + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000015c458 : mov eax, dword ptr [rax + 0x10] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000011fa91 : mov eax, dword ptr [rax + 0x160] ; ret
0x000000000016631f : mov eax, dword ptr [rax + 0x170] ; jmp rax
0x00000000001244f0 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000015c495 : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000001245f0 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000145bc7 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x145bd8 ; ret
0x0000000000116da8 : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0x116dbb ; ret
0x00000000000860e1 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000130019 : mov eax, dword ptr [rax + 0x30] ; ret
0x0000000000124de7 : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000011f7fc : mov eax, dword ptr [rax + 0x38] ; test eax, eax ; cmove eax, edx ; ret
0x0000000000155e4d : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000086bd4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000015677d : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000439c6 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000008ea88 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x8ea89 ; ret
0x000000000002f14e : mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000011fa8a : mov eax, dword ptr [rax + 8] ; ret
0x000000000002d4a7 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x2d4b9 ; call rax
0x0000000000030695 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000030857 : mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000301bf : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000030208 : mov eax, dword ptr [rax + rdx] ; ret
0x0000000000125774 : mov eax, dword ptr [rax + rdx] ; shr eax, cl ; and eax, 1 ; ret
0x00000000001cc251 : mov eax, dword ptr [rax] ; add byte ptr [rcx + rax*2 - 0x14], bh ; call qword ptr [rdx]
0x000000000002f14c : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000003066c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000439c3 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000145c99 : mov eax, dword ptr [rax] ; ret
0x0000000000110077 : mov eax, dword ptr [rax] ; test eax, eax ; jne 0x110098 ; xor eax, eax ; syscall
0x0000000000091650 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x91660 ; call rax
0x0000000000001ac9 : mov eax, dword ptr [rbp + 0x7872a51b] ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x000000000015d29e : mov eax, dword ptr [rbp + 8] ; mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000069b71 : mov eax, dword ptr [rbp - 0x520] ; jmp rax
0x000000000008decd : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000008941d : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008e589 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000009cf4c : mov eax, dword ptr [rbx + 0x40] ; jne 0x9cf90 ; mov rdi, r13 ; call rax
0x000000000009d020 : mov eax, dword ptr [rbx + 0x40] ; jne 0x9d000 ; mov rdi, rsi ; call rax
0x00000000000bc111 : mov eax, dword ptr [rbx + 1] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000014eae5 : mov eax, dword ptr [rbx + 8] ; mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000015960a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x159620 ; pop rbx ; ret
0x00000000000b34c9 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000017d066 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000017d076 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000000b354d : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000000b356d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000018676a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000188042 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000001c369d : mov eax, dword ptr [rcx] ; add ah, al ; retf
0x0000000000181360 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, [rdx + 3] ; ret
0x00000000000b3475 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x00000000001812b1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x000000000017cf81 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000181331 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b3446 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001e32c3 : mov eax, dword ptr [rcx] ; retf 2
0x000000000008468e : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x000000000008fb20 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000008fb48 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000e4c5d : mov eax, dword ptr [rdi + 0x10] ; test rax, rax ; je 0xe4c72 ; call rax
0x000000000015dfbe : mov eax, dword ptr [rdi + 0x18] ; jbe 0x15dfd8 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000015db21 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e0011 : mov eax, dword ptr [rdi + 0x20] ; ret
0x000000000019a2dd : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x19a2f4 ; call rax
0x00000000000bcd50 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xbcdd8 ; ret
0x00000000000bcd65 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xbcdd8 ; ret
0x000000000015df40 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000089461 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000bcd70 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xbcdd8 ; ret
0x00000000000bcd8b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xbcdd8 ; ret
0x00000000000bcda0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xbcdd8 ; ret
0x00000000000bcdb5 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xbcdd8 ; ret
0x00000000000bcdc0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xbcdd8 ; ret
0x0000000000089351 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000086bd1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x00000000000efeb8 : mov eax, dword ptr [rdi + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000efeb0 : mov eax, dword ptr [rdi + 0x4c] ; ret
0x000000000008fe11 : mov eax, dword ptr [rdi + 0x68] ; ret
0x00000000000877b8 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x877d0 ; ret
0x000000000010eb40 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000001158f0 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000015c626 : mov eax, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000015ced9 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x000000000015c73e : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000015a0b1 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbp ; mov rdi, r15 ; call qword ptr [rax]
0x000000000014ea41 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000bd25d : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0xbd239 ; ret
0x00000000000893c0 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000089390 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000153010 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000008fb15 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x00000000000908e1 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x35d042], eax ; ret
0x00000000000e0120 : mov eax, dword ptr [rdi] ; ret
0x000000000008a1f0 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x000000000008a200 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000153d74 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x153d87 ; ret
0x0000000000153d73 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x153d88 ; ret
0x000000000015a964 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x15a977 ; ret
0x000000000015a963 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x15a978 ; ret
0x0000000000084f29 : mov eax, dword ptr [rdx + 0x48] ; jmp 0x84ef5
0x0000000000030623 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000bc047 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0xbc039 ; ret
0x00000000000ae886 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000002f11e : mov eax, dword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001011a8 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000081aec : mov eax, dword ptr [rdx] ; ret
0x000000000008fb01 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x8fb00 ; ret
0x0000000000163624 : mov eax, dword ptr [rip + 0x288f26] ; call qword ptr [rax]
0x0000000000162fd7 : mov eax, dword ptr [rip + 0x289573] ; call qword ptr [rax]
0x0000000000166489 : mov eax, dword ptr [rip + 0x28a019] ; call qword ptr [rax]
0x0000000000159980 : mov eax, dword ptr [rip + 0x291502] ; pop rbx ; ret
0x0000000000159951 : mov eax, dword ptr [rip + 0x291531] ; pop rbx ; ret
0x00000000001598c0 : mov eax, dword ptr [rip + 0x29162a] ; pop rbx ; ret
0x0000000000159891 : mov eax, dword ptr [rip + 0x291659] ; pop rbx ; ret
0x0000000000159800 : mov eax, dword ptr [rip + 0x2917da] ; pop rbx ; ret
0x00000000001597d1 : mov eax, dword ptr [rip + 0x291809] ; pop rbx ; ret
0x0000000000159748 : mov eax, dword ptr [rip + 0x29183a] ; pop rbx ; ret
0x00000000001596c1 : mov eax, dword ptr [rip + 0x2918c1] ; pop rbx ; ret
0x0000000000124de1 : mov eax, dword ptr [rip + 0x2c6071] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000009cd4a : mov eax, dword ptr [rip + 0x34e1f8] ; call qword ptr [rax]
0x000000000009cc85 : mov eax, dword ptr [rip + 0x34e2bd] ; call qword ptr [rax]
0x000000000009cbca : mov eax, dword ptr [rip + 0x34e378] ; call qword ptr [rax]
0x000000000009704f : mov eax, dword ptr [rip + 0x353e7b] ; mov qword ptr [rax], rdi ; ret
0x0000000000094047 : mov eax, dword ptr [rip + 0x356d73] ; xor edi, edi ; call qword ptr [rax]
0x000000000008fdf1 : mov eax, dword ptr [rip + 0x35c869] ; ret
0x0000000000040100 : mov eax, dword ptr [rip + 0x3ab0a2] ; ret
0x00000000000400f0 : mov eax, dword ptr [rip + 0x3ab0b6] ; ret
0x000000000003019e : mov eax, dword ptr [rip + 0x3bac3c] ; mov qword ptr [rax], rdx ; ret
0x000000000002bdc1 : mov eax, dword ptr [rip + 0x3c0c69] ; ret
0x00000000000238a1 : mov eax, dword ptr [rip + 0x3ccc31] ; ret
0x0000000000023891 : mov eax, dword ptr [rip + 0x3ccc51] ; ret
0x0000000000030851 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030861 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002f129 : mov eax, dword ptr [rsi + rax*8 + 0x80] ; ret
0x000000000008388f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000025165 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000021b91 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000274cc : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000137d8b : mov eax, dword ptr [rsp + 0x24] ; mov dword ptr fs:[rbp], eax ; jmp 0x137d69
0x0000000000152d6b : mov eax, dword ptr [rsp + 0x24] ; mov dword ptr fs:[rbp], eax ; jmp 0x152d49
0x000000000014d8c2 : mov eax, dword ptr [rsp + 0x28] ; call rax
0x000000000013d386 : mov eax, dword ptr [rsp + 0x30] ; call rax
0x000000000012701b : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0x126ff9
0x0000000000128d3b : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0x128d19
0x000000000013859b : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0x138579
0x000000000013db9b : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0x13db79
0x0000000000152a2b : mov eax, dword ptr [rsp + 0x34] ; mov dword ptr fs:[rbp], eax ; jmp 0x152a09
0x000000000012f6ea : mov eax, dword ptr [rsp + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x000000000003f249 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e4923 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000007f006 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000041ebd : mov eax, dword ptr [rsp + 8] ; call rax
0x00000000000e4abf : mov eax, dword ptr [rsp + 8] ; test rax, rax ; je 0xe4ad3 ; call rax
0x0000000000199abd : mov eax, dword ptr [rsp] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000124e43 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000124ea4 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000011ce22 : mov eax, dword ptr [rsp] ; jne 0x11ce35 ; add rsp, 0x18 ; ret
0x00000000000444d5 : mov eax, dword ptr [rsp] ; jne 0x444e8 ; add rsp, 0x18 ; ret
0x0000000000044522 : mov eax, dword ptr [rsp] ; jne 0x44535 ; add rsp, 0x18 ; ret
0x0000000000044575 : mov eax, dword ptr [rsp] ; jne 0x44588 ; add rsp, 0x18 ; ret
0x00000000000445c2 : mov eax, dword ptr [rsp] ; jne 0x445d5 ; add rsp, 0x18 ; ret
0x0000000000092040 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010689a : mov eax, eax ; call r12
0x000000000007db93 : mov eax, eax ; jmp 0x7db65
0x000000000014103c : mov eax, eax ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000009d60e : mov eax, eax ; mov qword ptr [rdi], rsi ; ret
0x00000000001100a9 : mov eax, eax ; mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000022409 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000043939 : mov eax, eax ; or rax, rdx ; ret
0x000000000009a0e2 : mov eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082760 : mov eax, eax ; pop rbx ; ret
0x00000000000bbb42 : mov eax, eax ; ret
0x000000000018fe34 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x00000000000e4e02 : mov eax, eax ; syscall
0x000000000018e8d1 : mov eax, eax ; vzeroupper ; ret
0x0000000000149c67 : mov eax, ebp ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x000000000007edab : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011dd24 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x000000000007eec3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e2fe : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e93b : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000897cd : mov eax, ebp ; syscall
0x0000000000052bc3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000089f0f : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a4e33 : mov eax, ebx ; cmp r8b, dil ; jb 0xa4e1f ; mov rdx, rax ; jmp 0xa4dd5
0x00000000000a5ddb : mov eax, ebx ; cmp r9b, r8b ; jb 0xa5dc7 ; mov rdx, rax ; jmp 0xa5d7a
0x00000000001160b0 : mov eax, ebx ; jne 0x116108 ; add rsp, 0x70 ; pop rbx ; ret
0x00000000001170e0 : mov eax, ebx ; mov eax, 0x10e ; syscall
0x00000000000a1916 : mov eax, ebx ; pop rbx ; cmovne rax, rdx ; ret
0x000000000007f421 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002cc9a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034ba5 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000043ce8 : mov eax, ebx ; pop rbx ; ret
0x000000000011c65a : mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000078932 : mov eax, ebx ; xor r12d, r12d ; jmp 0x74bcf
0x0000000000052a87 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000103f27 : mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x0000000000069f43 : mov eax, ecx ; jmp rax
0x000000000016925b : mov eax, ecx ; mov esi, 0x80 ; syscall
0x0000000000069f1a : mov eax, ecx ; mov r15d, 1 ; jmp rax
0x000000000011b830 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x000000000010e936 : mov eax, ecx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003d24c : mov eax, ecx ; ret
0x000000000004faa6 : mov eax, ecx ; shl eax, 0x1e ; or eax, edx ; ret
0x000000000003ee5b : mov eax, ecx ; syscall
0x00000000000306c0 : mov eax, edi ; and eax, 0x7f ; ret
0x0000000000134d56 : mov eax, edi ; and eax, 0xffffff ; ret
0x0000000000134d30 : mov eax, edi ; bswap eax ; ret
0x0000000000043941 : mov eax, edi ; cqo ; idiv rsi ; ret
0x0000000000118e3a : mov eax, edi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000081e93 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002255b : mov eax, edi ; neg eax ; ret
0x0000000000092310 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x00000000000a89d5 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002256e : mov eax, edi ; ret
0x0000000000134d40 : mov eax, edi ; ror ax, 8 ; ret
0x00000000000438e2 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x0000000000134bfa : mov eax, edi ; sar rax, 6 ; ret
0x0000000000134dd6 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000091ec5 : mov eax, edx ; add rsp, 8 ; ret
0x000000000012be4c : mov eax, edx ; cmove eax, ecx ; ret
0x00000000000a0b1c : mov eax, edx ; cmovne rax, rdi ; ret
0x0000000000117805 : mov eax, edx ; jne 0x117816 ; add rsp, 0x58 ; ret
0x0000000000142989 : mov eax, edx ; jne 0x14299a ; add rsp, 0x18 ; ret
0x0000000000157fed : mov eax, edx ; jne 0x15800d ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000158730 : mov eax, edx ; jne 0x158758 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015e293 : mov eax, edx ; jne 0x15e2a6 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015e306 : mov eax, edx ; jne 0x15e319 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000016743d : mov eax, edx ; jne 0x16745c ; add rsp, 0x38 ; ret
0x0000000000169863 : mov eax, edx ; jne 0x169876 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001698e9 : mov eax, edx ; jne 0x1698fc ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d14a6 : mov eax, edx ; jne 0xd14b7 ; add rsp, 0x28 ; ret
0x0000000000115b68 : mov eax, edx ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000001415c3 : mov eax, edx ; movsxd rdx, esi ; ret
0x00000000000e144b : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000813b0 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000051f36 : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000063f9a : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000004fcb7 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000539d5 : mov eax, edx ; pop rbx ; ret
0x0000000000040141 : mov eax, edx ; ret
0x0000000000021be2 : mov eax, edx ; syscall
0x00000000000e17ff : mov eax, esi ; add rsp, 0x48 ; ret
0x000000000014ec31 : mov eax, esi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e0f85 : mov eax, esi ; add rsp, 8 ; ret
0x00000000000e08c1 : mov eax, esi ; call rax
0x0000000000118dcb : mov eax, esi ; mov byte ptr [r8 - 1], 0 ; ret
0x000000000003eca7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000002ff9f : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007ec38 : mov eax, esi ; pop rbp ; pop r12 ; ret
0x000000000007f304 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007c17d : mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007c477 : mov eax, esi ; pop rbx ; ret
0x00000000000587f4 : mov eax, esi ; ret
0x00000000000e4df2 : mov eax, esi ; syscall
0x0000000000082dfc : mov eax, esp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007cff8 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000089af9 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115b67 : mov eax, r10d ; mov r12d, dword ptr fs:[r8] ; syscall
0x00000000000878d2 : mov eax, r10d ; pop rbx ; ret
0x0000000000087809 : mov eax, r10d ; ret
0x0000000000044995 : mov eax, r10d ; syscall
0x0000000000082dfb : mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000010f56a : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001535e4 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000897cc : mov eax, r13d ; syscall
0x000000000007db92 : mov eax, r8d ; jmp 0x7db66
0x000000000014103b : mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x000000000008275f : mov eax, r8d ; pop rbx ; ret
0x000000000014102d : mov eax, r8d ; ret
0x00000000000e4e01 : mov eax, r8d ; syscall
0x00000000000617b4 : mov eax, r9d ; ret
0x000000000008956e : mov eax, r9d ; syscall
0x00000000000ac101 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000ac111 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x00000000000ac0f1 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000018aa71 : mov ebp, 0x60c083c0 ; add rax, rdi ; ret
0x00000000001ac814 : mov ebp, 0x63b1101 ; rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000001cf4c5 : mov ebp, 0x70780000 ; out dx, al ; jmp qword ptr [rbx]
0x00000000001cf4d9 : mov ebp, 0x76940000 ; out dx, al ; call rsp
0x00000000000401d7 : mov ebp, 0x83000000 ; clc ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd521
0x000000000005b97b : mov ebp, 0x89480038 ; ret 0x2948
0x00000000001cf529 : mov ebp, 0xa0040000 ; out dx, al ; jmp rbx
0x00000000001bcc0d : mov ebp, 0xbef0fffc ; cld ; call rax
0x00000000001af265 : mov ebp, 0xbf60ffef ; out dx, eax ; jmp rax
0x00000000001a4ae4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000001a941d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000000ac171 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000018aaa1 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000ac151 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000ac131 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000004f8fe : mov ebp, 0xebfffffb ; ret
0x000000000000363e : mov ebp, 0xef5aa220 ; nop ; retf 0xe9ee
0x00000000000ac217 : mov ebp, 0xf80148c0 ; add rax, rsi ; ret
0x00000000000ac047 : mov ebp, 0xf80148c0 ; ret
0x000000000018a960 : mov ebp, 0xf80148c0 ; vzeroupper ; ret
0x00000000000b160c : mov ebp, 0xf80148c6 ; ret
0x00000000001ab546 : mov ebp, 0xfb67d10d ; ret
0x0000000000065afe : mov ebp, 0xfffff730 ; call rax
0x000000000005946c : mov ebp, 0xfffff758 ; call rax
0x000000000007811c : mov ebp, 0xfffffa80 ; add byte ptr [rdi], cl ; test eax, esi ; retf
0x0000000000068513 : mov ebp, 0xfffffaf0 ; add byte ptr [rcx - 0x77], al ; ret
0x0000000000168392 : mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0x1683b5
0x00000000000e8762 : mov ebp, 0xfffffb20 ; mov rdx, rax ; jmp 0xe8785
0x0000000000105aa3 : mov ebp, 0xfffffe60 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000609d5 : mov ebp, 0xffffff40 ; call rax
0x00000000000897c7 : mov ebp, 0xffffff7c ; mov eax, r13d ; syscall
0x00000000000d48af : mov ebp, 2 ; call 0x212cf
0x0000000000078e2a : mov ebp, dword ptr [rbp - 0x598] ; jmp 0x7593b
0x000000000003ecad : mov ebp, ecx ; nop ; jmp rdx
0x00000000000f811f : mov ebp, esi ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000130fe4 : mov ebp, esp ; pop rbp ; ret
0x00000000001ac564 : mov ebx, 0x1b5c347e ; jmp 0x1ac53c
0x0000000000002dc2 : mov ebx, 0x24d3e900 ; and eax, ebp ; clc ; ret
0x0000000000173e47 : mov ebx, 0x46f00ff2 ; retf
0x00000000001bee6d : mov ebx, 0x47940000 ; in al, dx ; jmp rax
0x000000000010fcaa : mov ebx, 0x48000000 ; add esp, 0x68 ; ret
0x00000000000a86e1 : mov ebx, 0x48000037 ; cmove eax, edx ; ret
0x00000000000a07e1 : mov ebx, 0x480000b4 ; cmove eax, edx ; ret
0x000000000016e9a4 : mov ebx, 0x4e6f0ff3 ; retf
0x000000000016e9c2 : mov ebx, 0x4f7f0ff3 ; retf
0x00000000001c0619 : mov ebx, 0x50d4fff2 ; add dword ptr [rax], eax ; ret
0x00000000001cf26d : mov ebx, 0x72800000 ; sti ; call qword ptr [rax]
0x0000000000001f47 : mov ebx, 0x79e33a1c ; retf 0x6321
0x00000000000d7771 : mov ebx, 0x85fff498 ; ror byte ptr [rdi], 0x85 ; retf
0x000000000012db61 : mov ebx, 0x85ffffbf ; ror byte ptr [rdi], 0x84 ; ret
0x000000000013ac7c : mov ebx, 0x89480007 ; ret 0xff31
0x000000000009f599 : mov ebx, 0x89480c75 ; ret 0x8d48
0x00000000001cf30d : mov ebx, 0x8d900000 ; sti ; call qword ptr [rax]
0x0000000000003789 : mov ebx, 0x952a6c41 ; ret
0x00000000001cf2e5 : mov ebx, 0xa1080000 ; cli ; call qword ptr [rax]
0x00000000000ee020 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0xd189
0x0000000000130704 : mov ebx, 0xafb8341 ; je 0x130713 ; ret
0x00000000001af0e9 : mov ebx, 0xbc80ffee ; out dx, al ; call qword ptr [rax]
0x00000000001cf295 : mov ebx, 0xbce80000 ; sti ; call qword ptr [rax]
0x00000000001a941b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000152f16 : mov ebx, 0xc8 ; call rax
0x00000000001cf335 : mov ebx, 0xd2b80000 ; sti ; call qword ptr [rax]
0x00000000001cf2bd : mov ebx, 0xf5f00000 ; in eax, dx ; call qword ptr [rax]
0x000000000005cf91 : mov ebx, dword ptr [rbp - 0x530] ; jmp rax
0x00000000000e5108 : mov ebx, dword ptr [rbp - 8] ; leave ; ret
0x00000000001acb84 : mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000000a0fd4 : mov ebx, eax ; call 0x9d9f4
0x0000000000127df1 : mov ebx, eax ; call 0xe4844
0x000000000014e5eb : mov ebx, eax ; jne 0x14e589 ; xor eax, eax ; pop rbx ; ret
0x000000000008a49f : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000133227 : mov ebx, eax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000847c1 : mov ebx, edi ; mov rdi, rdx ; call 0x212cf
0x000000000002e986 : mov ebx, edi ; test rax, rax ; je 0x2e996 ; call rax
0x000000000005d3b8 : mov ebx, edx ; jmp rax
0x000000000005d30a : mov ebx, edx ; mov r9d, 1 ; jmp rax
0x00000000000e00a0 : mov ebx, esi ; sub rsp, 8 ; syscall
0x000000000008a4b1 : mov ebx, esp ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000121ef8 : mov ecx, 0x145 ; mov eax, ecx ; syscall
0x000000000003ee56 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000000346ab : mov ecx, 0x48000001 ; mov edi, ebx ; call 0x21109
0x00000000001aaa19 : mov ecx, 0x5b92ac50 ; retf
0x00000000001af97c : mov ecx, 0x6fff0c1 ; ret 0xfff0
0x0000000000001dad : mov ecx, 0x72b02084 ; retf
0x00000000001ac4ee : mov ecx, 0x7ce1a201 ; pop rdx ; leave ; retf
0x000000000007868f : mov ecx, 0x83000016 ; ret 0xbf08
0x00000000001cf0b5 : mov ecx, 0xbae80000 ; sti ; call rsp
0x00000000001bcc05 : mov ecx, 0xbb40fffc ; cld ; call qword ptr [rax]
0x00000000001164b0 : mov ecx, 0xc ; mov eax, ecx ; syscall
0x0000000000103f80 : mov ecx, 0xcb ; mov eax, ecx ; syscall
0x000000000005b7ea : mov ecx, 1 ; jmp rax
0x00000000000876a3 : mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x87665
0x0000000000087793 : mov ecx, dword ptr [r8 + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x87755
0x00000000000876a4 : mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x87664
0x0000000000087794 : mov ecx, dword ptr [rax + 4] ; and eax, 1 ; mov edx, eax ; jmp 0x87754
0x000000000019a1dd : mov ecx, dword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x19a1ef ; call rcx
0x000000000002d642 : mov ecx, dword ptr [rax + rsi*8] ; test rcx, rcx ; je 0x2d654 ; call rcx
0x000000000014b9d7 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00000000001925ac : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000015dc60 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x15dc79 ; xor eax, eax ; ret
0x000000000015dca0 : mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jae 0x15dcb9 ; xor eax, eax ; ret
0x00000000000520e6 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000016c7ce : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000086bab : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x00000000000ae883 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000000bd249 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0xbd247 ; ret
0x0000000000052416 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000001ac9a4 : mov ecx, dword ptr [rsi + rdi*2 + 0xaaed8a9] ; jne 0x1ac9d9 ; retf 0x32dd
0x000000000016eb43 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ed43 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016ef43 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000105eca : mov ecx, dword ptr [rsi] ; call r12
0x00000000000b68e0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6921 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000001745b3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000174543 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001744d3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000001743f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000174385 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000174315 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001742a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000174235 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001741c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000174155 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000174695 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000000b68c1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001531ee : mov ecx, dword ptr [rsp + 0x28] ; call rcx
0x000000000014d841 : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000011b833 : mov ecx, dword ptr [rsp + 8] ; syscall
0x000000000009d1b1 : mov ecx, eax ; jmp 0x9d17b
0x00000000000ff5e9 : mov ecx, eax ; lea rdx, [r10 + rax*8] ; jmp 0xff612
0x00000000000a80a4 : mov ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000a845b : mov ecx, eax ; movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x000000000014dc2c : mov ecx, eax ; movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x0000000000149fdb : mov ecx, ebp ; call r10
0x0000000000022b8b : mov ecx, ebp ; call rbx
0x0000000000124f19 : mov ecx, edi ; shr eax, cl ; and eax, 1 ; ret
0x000000000008e9c0 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x00000000000bb562 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000008e9fa : mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000014a176 : mov ecx, esi ; call r10
0x00000000000be045 : mov ecx, esi ; call rbx
0x0000000000149c6a : mov ecx, esi ; mov rdi, r13 ; call r12
0x00000000000a2c0b : mov ecx, esp ; cmp r10b, r9b ; jb 0xa2bf7 ; mov rdx, rax ; jmp 0xa2ba7
0x000000000004721a : mov ecx, esp ; mov rdi, r15 ; call 0x53497
0x000000000012a158 : mov edi, 0x2000004 ; call rcx
0x00000000001b0fa0 : mov edi, 0x20fff40b ; or al, 0xf4 ; jmp qword ptr [rax]
0x000000000007951f : mov edi, 0x2e ; call 0x125817
0x00000000000cc5d4 : mov edi, 0x39480031 ; ret
0x00000000001df65d : mov edi, 0x41900001 ; idiv edi ; ret 2
0x000000000005ac9a : mov edi, 0x440f48c0 ; ret 0xa4e9
0x000000000005c51d : mov edi, 0x48fffff7 ; add eax, esi ; jmp rax
0x0000000000123c10 : mov edi, 0x89ee894c ; fild word ptr [rcx + rcx*4 - 0x30] ; syscall
0x000000000009ec67 : mov edi, 0xc274000e ; ret
0x000000000007efa7 : mov edi, 0xe0 ; call rax
0x000000000007ef6b : mov edi, 0xe0 ; jmp rax
0x0000000000127da9 : mov edi, 0xf ; call 0xe4847
0x000000000010fc87 : mov edi, 0xffffff9c ; syscall
0x00000000000a7c8a : mov edi, 1 ; jmp 0xa3f7a
0x0000000000069f1d : mov edi, 1 ; jmp rax
0x00000000000a8012 : mov edi, 2 ; jmp 0xa4a81
0x00000000000a7be8 : mov edi, 4 ; jmp 0xa3e8b
0x0000000000003e2a : mov edi, cs ; retf
0x000000000011487a : mov edi, dword ptr [r12 + 0x28] ; call 0x110b27
0x000000000004303c : mov edi, dword ptr [rax + 0x20] ; call rdx
0x0000000000168391 : mov edi, dword ptr [rbp - 0x4e0] ; mov rdx, rax ; jmp 0x1683b6
0x00000000000e8761 : mov edi, dword ptr [rbp - 0x4e0] ; mov rdx, rax ; jmp 0xe8786
0x00000000000248ab : mov edi, dword ptr [rbp - 0x58] ; call 0x212cd
0x000000000011d77c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000013f315 : mov edi, dword ptr [rbp - 0x60] ; mov eax, 3 ; syscall
0x00000000000897c6 : mov edi, dword ptr [rbp - 0x84] ; mov eax, r13d ; syscall
0x000000000005946b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x0000000000065afd : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x00000000000609d4 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000011d264 : mov edi, dword ptr [rbp] ; call r12
0x0000000000041eb9 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000009cff9 : mov edi, dword ptr [rbx + 0x48] ; call rax
0x000000000009cf89 : mov edi, dword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x000000000013c87d : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x13c879 ; pop rbx ; ret
0x00000000000f5029 : mov edi, dword ptr [rbx] ; add rbx, 0x10 ; call 0x212d0
0x000000000011d23e : mov edi, dword ptr [rbx] ; call r12
0x0000000000140180 : mov edi, dword ptr [rbx] ; mov eax, 3 ; syscall
0x000000000009dc91 : mov edi, dword ptr [rcx] ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000009cd39 : mov edi, dword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x00000000000520ea : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000007efa6 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000007ef6a : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000001307ab : mov edi, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000001400d0 : mov edi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x0000000000156b4e : mov edi, dword ptr [rdi] ; xor ecx, ecx ; mov rdx, r13 ; call 0x122d99
0x000000000012e7e9 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000001ab806 : mov edi, dword ptr [rdx] ; ret
0x00000000000bdb09 : mov edi, dword ptr [rsi] ; lea r9, [rsp + 0x28] ; call r12
0x00000000000ccf08 : mov edi, dword ptr [rsi] ; lea r9, [rsp + 0x30] ; call r12
0x000000000014d85d : mov edi, dword ptr [rsp + 0x10] ; call rax
0x0000000000148295 : mov edi, dword ptr [rsp + 0x10] ; mov eax, 0x81 ; syscall
0x000000000014d83c : mov edi, dword ptr [rsp + 0x10] ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000011714b : mov edi, dword ptr [rsp + 0x14] ; syscall
0x000000000010ff39 : mov edi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x00000000001672d4 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000025295 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000025160 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000e0a53 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000051c6a : mov edi, dword ptr [rsp + 0x24] ; call rax
0x000000000011487b : mov edi, dword ptr [rsp + 0x28] ; call 0x110b26
0x0000000000025b71 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000025d49 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000026033 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x000000000002666b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x000000000002962f : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000025879 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000025585 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000027aaa : mov edi, dword ptr [rsp + 0x40] ; call r15
0x000000000002a256 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x00000000000274c7 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x00000000000d1a9f : mov edi, dword ptr [rsp + 0x50] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000010096a : mov edi, dword ptr [rsp + 0x60] ; mov rsi, rbp ; call 0xfcbd9
0x0000000000110669 : mov edi, dword ptr [rsp + 0xc] ; mov eax, 0x48 ; syscall
0x000000000008e5bb : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000000000e07d6 : mov edi, dword ptr [rsp + 8] ; call r12
0x0000000000114ceb : mov edi, dword ptr [rsp + 8] ; mov eax, 0x10f ; syscall
0x0000000000130fb8 : mov edi, dword ptr [rsp + 8] ; mov eax, 0xe6 ; syscall
0x000000000011d341 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000008def6 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000145022 : mov edi, dword ptr [rsp] ; call 0x212cd
0x0000000000040265 : mov edi, dword ptr [rsp] ; mov eax, ecx ; syscall
0x0000000000022896 : mov edi, eax ; call 0x9eb64
0x0000000000157f84 : mov edi, eax ; call qword ptr [r10]
0x000000000009ba09 : mov edi, eax ; call rax
0x000000000009af54 : mov edi, eax ; call rcx
0x0000000000157e57 : mov edi, eax ; lea r9, [rsp + 0x14] ; call qword ptr [r10]
0x00000000001587eb : mov edi, eax ; lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x00000000000e4909 : mov edi, eax ; mov eax, 0x22 ; syscall
0x0000000000121890 : mov edi, eax ; mov eax, 0x3c ; syscall
0x0000000000169a3d : mov edi, eax ; mov eax, 0x3e ; syscall
0x000000000010f864 : mov edi, eax ; mov eax, 0x85 ; syscall
0x000000000003ee60 : mov edi, eax ; mov eax, 0xba ; syscall
0x000000000014b9d4 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000044990 : mov edi, eax ; sub rsi, r8 ; mov eax, r10d ; syscall
0x0000000000034ea1 : mov edi, ebp ; add rbx, 1 ; call 0x21108
0x000000000013c4fe : mov edi, ebp ; call 0x148f64
0x0000000000150d1d : mov edi, ebp ; call 0x15cfa4
0x0000000000150f7a : mov edi, ebp ; call 0x15d214
0x000000000011464f : mov edi, ebp ; call 0x21104
0x0000000000035069 : mov edi, ebp ; call 0x212cc
0x00000000000673eb : mov edi, ebp ; call 0x836d4
0x000000000015d2a5 : mov edi, ebp ; call qword ptr [rax]
0x000000000014e6a2 : mov edi, ebp ; call qword ptr [rbx]
0x000000000002c58c : mov edi, ebp ; call r12
0x000000000011df84 : mov edi, ebp ; call r14
0x00000000000803fe : mov edi, ebp ; call rax
0x00000000000bdef1 : mov edi, ebp ; call rbx
0x000000000015dd31 : mov edi, ebp ; call rcx
0x000000000014e155 : mov edi, ebp ; call rdx
0x000000000014cca8 : mov edi, ebp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x0000000000116947 : mov edi, ebp ; mov eax, 0x147 ; syscall
0x0000000000116a57 : mov edi, ebp ; mov eax, 0x148 ; syscall
0x000000000011ba0a : mov edi, ebp ; mov eax, 9 ; syscall
0x000000000008956c : mov edi, ebp ; mov eax, r9d ; syscall
0x00000000000be042 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000013d383 : mov edi, ebp ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000041f49 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000014a173 : mov edi, ebp ; mov rcx, r14 ; call r10
0x000000000009c856 : mov edi, ebp ; mov rdx, rbx ; mov rsi, r12 ; call rax
0x000000000015d16f : mov edi, ebp ; xor eax, eax ; call r8
0x000000000015d1d1 : mov edi, ebp ; xor eax, eax ; call rcx
0x000000000014da4d : mov edi, ebp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000164743 : mov edi, ebx ; call 0x1109a4
0x0000000000114904 : mov edi, ebx ; call 0x110b24
0x00000000000346b0 : mov edi, ebx ; call 0x21104
0x0000000000024791 : mov edi, ebx ; call 0x21234
0x0000000000132125 : mov edi, ebx ; call 0x8eb54
0x00000000001bdb79 : mov edi, ebx ; call qword ptr [rax + 0x20fffb8a]
0x000000000014eaec : mov edi, ebx ; call qword ptr [rax]
0x00000000000e79cc : mov edi, ebx ; call r12
0x0000000000022e8e : mov edi, ebx ; call r14
0x000000000007d262 : mov edi, ebx ; call rax
0x00000000000a6a8d : mov edi, ebx ; cmp r8b, dil ; jb 0xa6a79 ; mov rdx, rax ; jmp 0xa6a39
0x00000000001bdb75 : mov edi, ebx ; jmp qword ptr [rax]
0x000000000019a44b : mov edi, ebx ; jne 0x19a440 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a68a : mov edi, ebx ; jne 0x19a67d ; pop rbx ; ret
0x0000000000115df9 : mov edi, ebx ; mov eax, 0x10 ; syscall
0x000000000010e66e : mov edi, ebx ; mov eax, 0x11 ; syscall
0x0000000000121dd1 : mov edi, ebx ; mov eax, 0x113 ; syscall
0x0000000000121c5c : mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000001157de : mov edi, ebx ; mov eax, 0x115 ; syscall
0x0000000000121d0e : mov edi, ebx ; mov eax, 0x116 ; syscall
0x00000000001219e5 : mov edi, ebx ; mov eax, 0x119 ; syscall
0x000000000011588c : mov edi, ebx ; mov eax, 0x11d ; syscall
0x000000000010e71e : mov edi, ebx ; mov eax, 0x12 ; syscall
0x000000000012322e : mov edi, ebx ; mov eax, 0x120 ; syscall
0x0000000000116791 : mov edi, ebx ; mov eax, 0x127 ; syscall
0x0000000000116841 : mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000001232e6 : mov edi, ebx ; mov eax, 0x12b ; syscall
0x000000000011663e : mov edi, ebx ; mov eax, 0x13 ; syscall
0x0000000000121e7e : mov edi, ebx ; mov eax, 0x130 ; syscall
0x000000000012338e : mov edi, ebx ; mov eax, 0x133 ; syscall
0x000000000010f675 : mov edi, ebx ; mov eax, 0x135 ; syscall
0x0000000000044900 : mov edi, ebx ; mov eax, 0x13e ; syscall
0x00000000001166de : mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000001155e8 : mov edi, ebx ; mov eax, 0x146 ; syscall
0x0000000000117036 : mov edi, ebx ; mov eax, 0x17 ; syscall
0x000000000011bb50 : mov edi, ebx ; mov eax, 0x1a ; syscall
0x00000000000e49c7 : mov edi, ebx ; mov eax, 0x23 ; syscall
0x00000000001228de : mov edi, ebx ; mov eax, 0x2a ; syscall
0x000000000012280e : mov edi, ebx ; mov eax, 0x2b ; syscall
0x0000000000122c8d : mov edi, ebx ; mov eax, 0x2c ; syscall
0x0000000000122a5d : mov edi, ebx ; mov eax, 0x2d ; syscall
0x0000000000122d2e : mov edi, ebx ; mov eax, 0x2e ; syscall
0x0000000000122bce : mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000e46b9 : mov edi, ebx ; mov eax, 0x3d ; syscall
0x000000000012352e : mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000001235e6 : mov edi, ebx ; mov eax, 0x46 ; syscall
0x0000000000110a95 : mov edi, ebx ; mov eax, 0x55 ; syscall
0x000000000003f22d : mov edi, ebx ; mov eax, 0x82 ; syscall
0x0000000000121bae : mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000e47df : mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000011017e : mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000114bf0 : mov edi, ebx ; mov eax, 7 ; syscall
0x0000000000130ed8 : mov edi, ebx ; mov eax, ecx ; syscall
0x0000000000123c14 : mov edi, ebx ; mov eax, r10d ; syscall
0x000000000011722c : mov edi, ebx ; mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000001172dc : mov edi, ebx ; mov edx, eax ; mov eax, 0x4b ; syscall
0x00000000001108ec : mov edi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x0000000000149dce : mov edi, ebx ; mov qword ptr [rsp + 8], rcx ; call r12
0x00000000001531eb : mov edi, ebx ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000149fd8 : mov edi, ebx ; mov rcx, r13 ; call r10
0x00000000001533de : mov edi, ebx ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x0000000000080c4c : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x000000000008370f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000004f36d : mov edi, ebx ; syscall
0x0000000000163c8d : mov edi, ebx ; xor eax, eax ; call 0x1106c6
0x00000000001100ae : mov edi, ebx ; xor eax, eax ; syscall
0x0000000000080f64 : mov edi, ebx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000009cc74 : mov edi, ecx ; call rcx
0x0000000000043611 : mov edi, ecx ; call rdx
0x000000000010f8c8 : mov edi, ecx ; mov eax, 0x103 ; syscall
0x000000000012d856 : mov edi, edi ; call 0x129b24
0x0000000000024574 : mov edi, edi ; call 0x21054
0x000000000004721d : mov edi, edi ; call 0x53494
0x0000000000094034 : mov edi, edi ; call qword ptr [rax]
0x0000000000086f38 : mov edi, edi ; call r12
0x0000000000085b53 : mov edi, edi ; call rax
0x000000000002346b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000001259bc : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000847c4 : mov edi, edx ; call 0x212cc
0x0000000000058871 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x58859 ; mov rax, rsi ; ret
0x00000000000e4df0 : mov edi, edx ; mov eax, esi ; syscall
0x00000000000e4dff : mov edi, edx ; mov eax, r8d ; syscall
0x00000000000f4809 : mov edi, edx ; mov qword ptr [rsp + 0x20], rdx ; call 0x212c9
0x000000000010f0ca : mov edi, edx ; syscall
0x0000000000034e61 : mov edi, esi ; add r13, 1 ; call 0x21108
0x000000000009d026 : mov edi, esi ; call rax
0x000000000002c6e3 : mov edi, esi ; call rbx
0x000000000002c9c1 : mov edi, esi ; call rdx
0x0000000000149983 : mov edi, esp ; call 0x166454
0x00000000000d43b4 : mov edi, esp ; call 0xd0ea4
0x0000000000093da8 : mov edi, esp ; call qword ptr [rax]
0x0000000000021c35 : mov edi, esp ; call rax
0x0000000000086c60 : mov edi, esp ; call rbx
0x000000000015c4cf : mov edi, esp ; call rdx
0x00000000001bcb85 : mov edi, esp ; jmp rax
0x0000000000110bf9 : mov edi, esp ; mov eax, 0x4f ; syscall
0x0000000000040360 : mov edi, esp ; mov eax, 0x81 ; syscall
0x000000000012fc33 : mov edi, esp ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x00000000001bcb81 : mov edi, esp ; push rax ; mov edi, esp ; jmp rax
0x00000000001dc0c4 : mov edi, gs ; cmc ; call qword ptr [rbx]
0x000000000004035f : mov edi, r12d ; mov eax, 0x81 ; syscall
0x000000000012fc32 : mov edi, r12d ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x000000000008956b : mov edi, r13d ; mov eax, r9d ; syscall
0x000000000010f8c7 : mov edi, r9d ; mov eax, 0x103 ; syscall
0x0000000000123446 : mov edx, 0 ; cmovb rax, rdx ; ret
0x00000000000bba46 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000165538 : mov edx, 0 ; cmovne rax, rdx ; jmp 0x1655c1
0x00000000000a1350 : mov edx, 0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000140a5d : mov edx, 0x104 ; cmove eax, edx ; ret
0x000000000008a8d6 : mov edx, 0x130 ; pop rbx ; ret
0x0000000000173dc7 : mov edx, 0x46f00ff2 ; retf 0xff3
0x000000000016eba4 : mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x000000000016ebc2 : mov edx, 0x4f7f0ff3 ; retf 0x894c
0x00000000001240a2 : mov edx, 0x5b002c72 ; ret
0x00000000001bd43c : mov edx, 0x60fffb6e ; outsb dx, byte ptr [rsi] ; sti ; call rax
0x000000000009df14 : mov edx, 0x63480034 ; ret
0x00000000001cf245 : mov edx, 0x80580000 ; cli ; call qword ptr [rax]
0x000000000014bd8a : mov edx, 0x89002a41 ; ret 0xc166
0x00000000000f574c : mov edx, 0x8948fff2 ; ret
0x00000000000e55c5 : mov edx, 0x8948fff3 ; ret 0x8949
0x00000000000d64d5 : mov edx, 0x8948ffff ; ret 0xc031
0x00000000000290be : mov edx, 0x89fffff3 ; retf 0xe283
0x00000000001b2221 : mov edx, 0xba50fff9 ; stc ; jmp qword ptr [rax]
0x00000000001af25d : mov edx, 0xbc60ffef ; out dx, eax ; jmp rax
0x00000000001cf231 : mov edx, 0xd44c0000 ; in eax, dx ; jmp qword ptr [rsi]
0x00000000001cf21d : mov edx, 0xd4500000 ; in eax, dx ; call qword ptr [rax]
0x000000000010acfd : mov edx, 0xe8000005 ; retf 0xf256
0x0000000000062686 : mov edx, 0xf6000017 ; ret 0xf40
0x000000000009d993 : mov edx, 0xffffffff ; cmovbe eax, edx ; ret
0x0000000000024f37 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000051f7e : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000015c285 : mov edx, 0xffffffff ; mov rdi, rbp ; call r14
0x000000000004398f : mov edx, 0xffffffff ; test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x000000000003fb21 : mov edx, 1 ; cmove eax, edx ; ret
0x00000000001542fe : mov edx, 5 ; call 0x30d77
0x00000000001542d7 : mov edx, 5 ; xor ebp, ebp ; call 0x30d79
0x00000000000a7ead : mov edx, 6 ; jmp 0xa4105
0x00000000000a7ea2 : mov edx, 7 ; jmp 0xa4105
0x00000000000a7e97 : mov edx, 8 ; jmp 0xa4105
0x000000000003efe4 : mov edx, 8 ; mov eax, ecx ; syscall
0x0000000000121a48 : mov edx, 8 ; syscall
0x00000000000a7e81 : mov edx, 9 ; jmp 0xa4105
0x00000000000893f8 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000021b8e : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000012feb0 : mov edx, dword ptr [rbp + 0x60] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x000000000002c9ba : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000018803f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000018676d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000018f192 : mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x18f182 ; ret
0x000000000009d075 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x9d079 ; ret
0x00000000000b6902 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000000b68f3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000000b6943 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000d0131 : mov edx, dword ptr [rsi + 8] ; cmp dword ptr [rdi + 8], edx ; jne 0xd010d ; ret
0x00000000000b6953 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000016e581 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000016e940 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e1d1 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000b7ed0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x00000000000b8d10 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 4] ; ret
0x00000000000b68d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000ba940 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000b7f21 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000b8d61 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000b6911 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000b7eb1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000b8ce1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b68b1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001672d9 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000012a154 : mov edx, dword ptr [rsp + 0x18] ; mov edi, 0x2000004 ; call rcx
0x000000000014c6f9 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000001533e1 : mov edx, dword ptr [rsp + 0x20] ; call rdx
0x000000000009d701 : mov edx, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000121876 : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x000000000011858c : mov edx, eax ; jmp 0x1185bb
0x0000000000118718 : mov edx, eax ; jmp 0x11874a
0x000000000011f665 : mov edx, eax ; jmp 0x11f677
0x00000000001571da : mov edx, eax ; jmp 0x15717a
0x0000000000168398 : mov edx, eax ; jmp 0x1683af
0x00000000001686ea : mov edx, eax ; jmp 0x168689
0x0000000000021642 : mov edx, eax ; jmp 0x2160c
0x000000000002a7aa : mov edx, eax ; jmp 0x2a761
0x000000000002a8e1 : mov edx, eax ; jmp 0x2a8a0
0x000000000002abaf : mov edx, eax ; jmp 0x2ab66
0x000000000002ac26 : mov edx, eax ; jmp 0x2abdd
0x000000000007d6f2 : mov edx, eax ; jmp 0x7d6c0
0x00000000000818da : mov edx, eax ; jmp 0x8186e
0x00000000000876aa : mov edx, eax ; jmp 0x8765e
0x000000000008779a : mov edx, eax ; jmp 0x8774e
0x00000000000878fc : mov edx, eax ; jmp 0x8788c
0x0000000000087e98 : mov edx, eax ; jmp 0x87e38
0x000000000008800d : mov edx, eax ; jmp 0x87faf
0x000000000008834c : mov edx, eax ; jmp 0x882dc
0x000000000009af59 : mov edx, eax ; jmp 0x9af0c
0x00000000000a1f16 : mov edx, eax ; jmp 0xa1ea1
0x00000000000a2066 : mov edx, eax ; jmp 0xa1ff1
0x00000000000a22d6 : mov edx, eax ; jmp 0xa2267
0x00000000000a24f6 : mov edx, eax ; jmp 0xa2487
0x00000000000a2c13 : mov edx, eax ; jmp 0xa2b9f
0x00000000000a4e3b : mov edx, eax ; jmp 0xa4dcd
0x00000000000a5de3 : mov edx, eax ; jmp 0xa5d72
0x00000000000a6a95 : mov edx, eax ; jmp 0xa6a31
0x00000000000a6c1f : mov edx, eax ; jmp 0xa6bbd
0x00000000000d9f31 : mov edx, eax ; jmp 0xd9efa
0x00000000000e8768 : mov edx, eax ; jmp 0xe877f
0x00000000000e8aba : mov edx, eax ; jmp 0xe8a59
0x000000000011722e : mov edx, eax ; mov eax, 0x4a ; syscall
0x00000000001172de : mov edx, eax ; mov eax, 0x4b ; syscall
0x000000000003ee6c : mov edx, eax ; mov eax, 0xea ; syscall
0x00000000001108ee : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000875eb : mov edx, eax ; mov eax, edx ; ret
0x00000000000a8600 : mov edx, eax ; movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000001415de : mov edx, eax ; ret
0x0000000000156b53 : mov edx, ebp ; call 0x122d94
0x00000000000d43b1 : mov edx, ebp ; mov rdi, r12 ; call 0xd0ea7
0x0000000000158f4c : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000012f77f : mov edx, ebx ; call rax
0x000000000019aa17 : mov edx, ebx ; jne 0x19aa0d ; pop rbx ; ret
0x0000000000114c91 : mov edx, ebx ; mov eax, 0x10f ; syscall
0x00000000000d4428 : mov edx, ebx ; mov rdi, r12 ; call 0xd0ea7
0x000000000009c859 : mov edx, ebx ; mov rsi, r12 ; call rax
0x000000000009c2c7 : mov edx, ebx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000012fb66 : mov edx, ebx ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x0000000000115684 : mov edx, ecx ; je 0x1156bb ; mov eax, 0x118 ; syscall
0x0000000000121f64 : mov edx, ecx ; je 0x121fa1 ; mov eax, 0x149 ; syscall
0x00000000001187e0 : mov edx, ecx ; jmp 0x118812
0x000000000009c1d0 : mov edx, ecx ; jmp 0x9c167
0x00000000000dc3d1 : mov edx, ecx ; jmp 0xdc3a1
0x00000000000dc3d1 : mov edx, ecx ; jmp 0xdc3a3
0x0000000000111471 : mov edx, ecx ; mov eax, 0x104 ; syscall
0x000000000010f920 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x000000000007bd61 : mov edx, ecx ; mov eax, 0x108 ; syscall
0x0000000000111c51 : mov edx, ecx ; mov eax, 0x109 ; syscall
0x0000000000111d11 : mov edx, ecx ; mov eax, 0x10b ; syscall
0x00000000001225d1 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x0000000000122091 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x0000000000121b01 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x0000000000122661 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x00000000001226c1 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x00000000001226f1 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x00000000001155ad : mov edx, ecx ; mov eax, 0x146 ; syscall
0x00000000001223f1 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x0000000000115201 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x0000000000122ef1 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x0000000000122e61 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000001229a1 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000e4761 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x0000000000122481 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x00000000001223c1 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x00000000001222a1 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x00000000001224b1 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x00000000001224e1 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x0000000000162aa1 : mov edx, ecx ; mov eax, 0xb5 ; syscall
0x0000000000162af1 : mov edx, ecx ; mov eax, 0xb6 ; syscall
0x000000000011fa21 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x000000000011f9c1 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x000000000011f8a1 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x000000000011f8d1 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x000000000011f931 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x000000000011f811 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x000000000011bc11 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x00000000001237b1 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x0000000000114d41 : mov edx, ecx ; mov eax, 0xdd ; syscall
0x0000000000122241 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x00000000000dc43d : mov edx, ecx ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000009ba06 : mov edx, edi ; mov rdi, r8 ; call rax
0x00000000001396bf : mov edx, edi ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x00000000000bb8b8 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000050c10 : mov edx, edi ; sub rdx, r15 ; add rdx, rcx ; jmp 0x50c30
0x0000000000103f25 : mov edx, edx ; mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x0000000000166b86 : mov edx, esi ; add r9, qword ptr [rsp + 8] ; call rax
0x0000000000145943 : mov edx, esi ; call 0x142364
0x00000000000228be : mov edx, esi ; call 0x9eb64
0x0000000000169259 : mov edx, esi ; mov eax, ecx ; mov esi, 0x80 ; syscall
0x00000000001692c6 : mov edx, esi ; mov esi, 0x80 ; mov eax, ecx ; syscall
0x0000000000022893 : mov edx, esi ; mov rdi, rax ; call 0x9eb67
0x00000000000be2ba : mov edx, esi ; mov rdi, rbp ; call rbx
0x00000000000dc4b0 : mov edx, esi ; movsxd rax, dword ptr [rdi + rdx*4] ; add rax, rdi ; jmp rax
0x0000000000050f11 : mov edx, esi ; sub rdx, r15 ; add rdx, rcx ; jmp 0x50f30
0x0000000000114f70 : mov edx, esi ; xor esi, esi ; syscall
0x000000000012feb7 : mov edx, esp ; call rax
0x00000000001103f6 : mov edx, esp ; mov eax, 0x10d ; syscall
0x0000000000115c9d : mov edx, esp ; mov esi, 0x5401 ; mov eax, ecx ; syscall
0x000000000012f2d3 : mov edx, esp ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x00000000000c6fbd : mov edx, esp ; sub ecx, eax ; call 0x53236
0x00000000001103f5 : mov edx, r12d ; mov eax, 0x10d ; syscall
0x0000000000145942 : mov edx, r14d ; call 0x142365
0x000000000003ee6b : mov edx, r8d ; mov eax, 0xea ; syscall
0x000000000002a059 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x00000000000f2ca9 : mov es, esp ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], al ; retf
0x00000000000275a2 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x00000000001be79d : mov es, word ptr [rax] ; add ah, dl ; jg 0x1be791 ; jmp rsp
0x00000000001cc595 : mov es, word ptr [rax] ; add byte ptr [rax + 0x4e], cl ; in al, dx ; call rbx
0x0000000000103d91 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000125849 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x00000000001dc599 : mov es, word ptr [rcx] ; add ah, ah ; psadbw mm7, mm7 ; retf 0
0x00000000000b8b2e : mov es, word ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000000000a8376 : mov esi, 0x39410704 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x000000000010fecf : mov esi, 0x48000000 ; add esp, 0x78 ; ret
0x00000000000d083e : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x0000000000024e6c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000001ac7c6 : mov esi, 0x497b96cc ; retf 0x99e0
0x0000000000046097 : mov esi, 0x4c8d4803 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000c7985 : mov esi, 0x515405d9 ; str word ptr [rax - 0x77] ; ret 0xc148
0x0000000000115c9f : mov esi, 0x5401 ; mov eax, ecx ; syscall
0x00000000001bef15 : mov esi, 0x56440000 ; in al, dx ; call rsp
0x00000000001ac863 : mov esi, 0x6400fd4c ; retf 0xf64
0x00000000001aa94a : mov esi, 0x6a25743d ; scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000000a8251 : mov esi, 0x74c08407 ; xor dword ptr [rcx], edi ; ret 0x2d74
0x00000000000a83c5 : mov esi, 0x75c98408 ; in eax, dx ; xor eax, eax ; ret
0x00000000001692c8 : mov esi, 0x80 ; mov eax, ecx ; syscall
0x0000000000130b49 : mov esi, 0x80 ; mov eax, r9d ; syscall
0x0000000000130788 : mov esi, 0x80 ; syscall
0x00000000000e4c88 : mov esi, 0x81 ; mov eax, r13d ; syscall
0x00000000000f05bd : mov esi, 0x83318841 ; ret 0x4801
0x0000000000024022 : mov esi, 0x83480147 ; ret
0x000000000010aa34 : mov esi, 0x89010444 ; ret
0x0000000000047673 : mov esi, 0x8941240c ; retf
0x00000000000809d6 : mov esi, 0x89480036 ; ret
0x000000000005b8a8 : mov esi, 0x89480038 ; ret 0x2948
0x000000000012db16 : mov esi, 0x89482404 ; ret 0xe883
0x000000000009b303 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000f52fd : mov esi, 0x8948fff2 ; ret
0x0000000000104656 : mov esi, 0x894d024e ; ret
0x00000000000a82f1 : mov esi, 0x89c63907 ; ret 0xb8
0x00000000000e257c : mov esi, 0x8b486408 ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000565be : mov esi, 0xbe0f0055 ; ret 0x8d4c
0x000000000006000e : mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x00000000001af3b1 : mov esi, 0xc090fffc ; cld ; call rax
0x00000000001a941e : mov esi, 0xc2c1c0bf ; ret
0x0000000000129e60 : mov esi, 0xc48348c3 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a8275 : mov esi, 0xc984070c ; jne 0xa8270 ; ret
0x0000000000003e27 : mov esi, 0xcf8cb236 ; retf
0x00000000000a8231 : mov esi, 0xd2840714 ; jne 0xa8230 ; ret
0x0000000000130bbe : mov esi, 0xebfffffe ; retf 0xb7e8
0x00000000000bb9d4 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000119506 : mov esi, 0xf233c03 ; xchg eax, ebp ; ret 0x2f3c
0x0000000000002ca5 : mov esi, 0xf8cbeb8f ; ret
0x00000000001047e3 : mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x00000000000693fd : mov esi, 1 ; jmp rax
0x000000000007d25c : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000a7e67 : mov esi, 2 ; jmp 0xa48c3
0x000000000011d1d8 : mov esi, 2 ; jmp rax
0x000000000011d1eb : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000164451 : mov esi, 7 ; xor eax, eax ; call 0x1106c9
0x0000000000157f7e : mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x000000000002346e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x0000000000073612 : mov esi, dword ptr [rip + 0x377948] ; call rax
0x000000000006b359 : mov esi, dword ptr [rip + 0x37fc01] ; call rax
0x000000000006b029 : mov esi, dword ptr [rip + 0x37ff31] ; call rax
0x0000000000067e67 : mov esi, dword ptr [rip + 0x3830f3] ; call rax
0x000000000005e6b0 : mov esi, dword ptr [rip + 0x38c8aa] ; call rax
0x000000000005b483 : mov esi, dword ptr [rip + 0x38fad7] ; call rax
0x000000000005241a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000000bb593 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000014c6fe : mov esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000156b1c : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call rbx
0x0000000000117147 : mov esi, dword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x0000000000022b86 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000014c298 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x000000000009a2c1 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000025d44 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000025874 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x000000000002a251 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000097c21 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x000000000013ca51 : mov esi, dword ptr [rsp] ; mov rdi, r13 ; call r12
0x000000000013d071 : mov esi, dword ptr [rsp] ; mov rdi, rbp ; call r12
0x000000000010f0c3 : mov esi, eax ; mov eax, 0x75 ; mov edi, edx ; syscall
0x000000000010f0e7 : mov esi, eax ; mov eax, 0x77 ; mov edi, edx ; syscall
0x0000000000165d9f : mov esi, eax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000010096f : mov esi, ebp ; call 0xfcbd4
0x000000000009cd3d : mov esi, ebp ; call rax
0x00000000000d1bb0 : mov esi, ebp ; call rbx
0x000000000010e66c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x0000000000121c5a : mov esi, ebp ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000001157dc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x0000000000121d0c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x000000000011588a : mov esi, ebp ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x000000000010e71c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x000000000012322c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x000000000011678f : mov esi, ebp ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x000000000011683f : mov esi, ebp ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000001232e4 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x000000000011663c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x13 ; syscall
0x0000000000121e7c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x130 ; syscall
0x000000000012338c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000001166dc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000001155e6 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x0000000000117034 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x00000000001228dc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2a ; syscall
0x000000000012280c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2b ; syscall
0x0000000000122d2c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2e ; syscall
0x0000000000122bcc : mov esi, ebp ; mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000e46b7 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x000000000012352c : mov esi, ebp ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000001235e4 : mov esi, ebp ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x0000000000121bac : mov esi, ebp ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000e47dd : mov esi, ebp ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000011017c : mov esi, ebp ; mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000130ed6 : mov esi, ebp ; mov edi, ebx ; mov eax, ecx ; syscall
0x0000000000123c12 : mov esi, ebp ; mov edi, ebx ; mov eax, r10d ; syscall
0x00000000001100ac : mov esi, ebp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000000d17e0 : mov esi, ebp ; mov rdi, r12 ; call rbx
0x000000000015a0b5 : mov esi, ebp ; mov rdi, r15 ; call qword ptr [rax]
0x000000000009af51 : mov esi, ebp ; mov rdi, rax ; call rcx
0x000000000014a170 : mov esi, ebp ; mov rdi, rbp ; mov rcx, r14 ; call r10
0x000000000015d16c : mov esi, ebp ; mov rdi, rbp ; xor eax, eax ; call r8
0x000000000015d1ce : mov esi, ebp ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000009b749 : mov esi, ebp ; mov rdi, rbx ; call rax
0x00000000000998d2 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000051732 : mov esi, ebp ; sub rsi, rdi ; call 0x9d9f7
0x000000000012a048 : mov esi, ebp ; xor r15d, r15d ; call rax
0x00000000000a6c17 : mov esi, ebx ; cmp sil, cl ; jb 0xa6c04 ; mov rdx, rax ; jmp 0xa6bc5
0x00000000000401c6 : mov esi, ebx ; mov eax, ecx ; syscall
0x0000000000089569 : mov esi, ebx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000040262 : mov esi, ebx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000009c6e1 : mov esi, ebx ; mov rdi, r12 ; call rax
0x000000000011df81 : mov esi, ebx ; mov rdi, r13 ; call r14
0x000000000015dd2e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000dedc8 : mov esi, ebx ; xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000040954 : mov esi, edi ; call r14
0x0000000000081dc7 : mov esi, edi ; jmp 0x81d99
0x00000000001c1f71 : mov esi, edi ; jmp rax
0x0000000000115f95 : mov esi, edi ; mov eax, 0x12e ; xor edi, edi ; syscall
0x0000000000116c2c : mov esi, edi ; mov eax, 0x75 ; mov edi, edx ; syscall
0x0000000000116cfc : mov esi, edi ; mov eax, 0x77 ; mov edi, edx ; syscall
0x000000000010fc85 : mov esi, edi ; mov edi, 0xffffff9c ; syscall
0x0000000000059468 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x00000000000dedb3 : mov esi, edi ; xor edi, edi ; call rax
0x0000000000153ada : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000012e7ed : mov esi, edx ; call rax
0x000000000010f76c : mov esi, edx ; mov eax, 4 ; syscall
0x000000000010f7ba : mov esi, edx ; mov eax, 5 ; syscall
0x000000000010f80c : mov esi, edx ; mov eax, 6 ; syscall
0x00000000001dd319 : mov esi, esi ; call qword ptr [rcx]
0x00000000000609d1 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000009c2ca : mov esi, esi ; mov rdi, r13 ; call rax
0x0000000000024571 : mov esi, esi ; mov rdi, r15 ; call 0x21057
0x000000000015de80 : mov esi, esi ; mov rdi, rbp ; call r12
0x0000000000152f64 : mov esi, esi ; movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000e6219 : mov esi, esi ; movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000014ea45 : mov esi, esp ; call qword ptr [rax]
0x000000000009c85c : mov esi, esp ; call rax
0x000000000007951d : mov esi, esp ; mov edi, 0x2e ; call 0x125819
0x0000000000116945 : mov esi, esp ; mov edi, ebp ; mov eax, 0x147 ; syscall
0x0000000000116a55 : mov esi, esp ; mov edi, ebp ; mov eax, 0x148 ; syscall
0x0000000000121dcf : mov esi, esp ; mov edi, ebx ; mov eax, 0x113 ; syscall
0x00000000001219e3 : mov esi, esp ; mov edi, ebx ; mov eax, 0x119 ; syscall
0x0000000000122c8b : mov esi, esp ; mov edi, ebx ; mov eax, 0x2c ; syscall
0x0000000000122a5b : mov esi, esp ; mov edi, ebx ; mov eax, 0x2d ; syscall
0x000000000015d2a2 : mov esi, esp ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000158f4f : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000014eae9 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000149fd5 : mov esi, esp ; mov rdi, rbx ; mov rcx, r13 ; call r10
0x000000000008370c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000038fb : mov esi, fs ; mov al, 0x85 ; jbe 0x38ae ; outsb dx, byte ptr [rsi] ; retf
0x00000000001cf3ad : mov esp, 0x1f800000 ; out dx, al ; jmp rdx
0x0000000000002971 : mov esp, 0x1fb02742 ; retf
0x000000000003c7db : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000001df3c9 : mov esp, 0x32a40001 ; idiv edi ; retf 0
0x00000000001cfa04 : mov esp, 0x380000c2 ; cmp bh, ah ; call qword ptr [rbx]
0x00000000001c134c : mov esp, 0x400019e ; sbb esi, esi ; call rax
0x00000000001c2dec : mov esp, 0x4000239 ; add bh, dl ; call rax
0x000000000009eed7 : mov esp, 0x440f48c7 ; ret 0xc083
0x00000000000abc11 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x00000000000abc41 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x00000000000abc31 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001beea5 : mov esp, 0x4ce40000 ; in al, dx ; jmp rax
0x00000000001beeb5 : mov esp, 0x4db40000 ; in al, dx ; call qword ptr [rax]
0x00000000001be2a4 : mov esp, 0x64000078 ; add al, ch ; call rax
0x00000000001c3584 : mov esp, 0x6400011c ; pop rax ; std ; jmp rax
0x00000000000ffa2e : mov esp, 0x8024 ; add byte ptr [rax - 0x77], cl ; retf
0x00000000001bfb3c : mov esp, 0x8400010f ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call rax
0x00000000001443f2 : mov esp, 0x8824 ; add al, ch ; retf
0x000000000008f082 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000025a8d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000001c2d5c : mov esp, 0xa4000237 ; std ; stc ; jmp rax
0x0000000000025f0f : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x00000000000d1ba9 : mov esp, 0xb024 ; add byte ptr [rax - 0x77], cl ; out dx, al ; call rbx
0x00000000001c32f4 : mov esp, 0xb4000113 ; adc edi, ebx ; call rax
0x00000000001c2f74 : mov esp, 0xb4000243 ; cli ; call rax
0x000000000009eec6 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x00000000000b6fe5 : mov esp, 0xc28348d2 ; adc byte ptr [rax + 0x29], cl ; retf 0x394c
0x00000000000b17b3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000001bf5cc : mov esp, 0xe40000e5 ; sub ebp, ebp ; call rax
0x00000000001cf411 : mov esp, 0xf30c0000 ; sti ; jmp qword ptr [rax]
0x00000000001c2cdc : mov esp, 0xf4000234 ; out dx, eax ; stc ; jmp rax
0x0000000000001edc : mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x00000000001c5604 : mov esp, 0xf800001e ; xchg bh, ah ; call qword ptr [rcx]
0x00000000000abcfb : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x00000000000abc21 : mov esp, 0xf80148c0 ; ret
0x000000000018a692 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x0000000000115b6c : mov esp, dword ptr [rax] ; syscall
0x000000000004f8fa : mov esp, eax ; jne 0x4f4c8 ; jmp 0x4f8d0
0x000000000003ecaa : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x00000000001c574d : mov esp, edi ; call qword ptr [rdx]
0x00000000001c5725 : mov esp, edi ; jmp qword ptr [rcx]
0x000000000011d780 : mov esp, esi ; call r15
0x000000000011c655 : mov esp, esi ; lcall [rax + 0x48] ; mov eax, ebx ; pop rdx ; pop rbx ; ret
0x0000000000026d1d : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x000000000002b29d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000001bf051 : mov gs, esp ; call qword ptr [rax]
0x000000000000394d : mov gs, word ptr [rbx] ; retf 0x707d
0x00000000001925a0 : mov qword ptr [r9 - 8], rcx ; ret
0x0000000000141132 : mov qword ptr [r9], rax ; mov eax, edx ; ret
0x00000000001411c7 : mov qword ptr [r9], rdi ; ret
0x0000000000083358 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000083398 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000843a7 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000893fb : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x000000000008335c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000084429 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000008eb44 : mov qword ptr [rax + 8], 0 ; ret
0x00000000001164f3 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000143961 : mov qword ptr [rax], 0 ; ret
0x0000000000140f18 : mov qword ptr [rax], r10 ; lea eax, [r9 + r8 + 2] ; pop rbx ; ret
0x0000000000081ae9 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000097055 : mov qword ptr [rax], rdi ; ret
0x0000000000121732 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000301a4 : mov qword ptr [rax], rdx ; ret
0x000000000008471a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000346be : mov qword ptr [rbp - 0x1e8], rdx ; call 0x21109
0x0000000000118587 : mov qword ptr [rbp - 0x50], rax ; mov rdx, rax ; jmp 0x1185c0
0x0000000000076cf1 : mov qword ptr [rbp - 0x520], rax ; jmp 0x7372d
0x0000000000079747 : mov qword ptr [rbp - 0x580], rsi ; jmp 0x75a1d
0x0000000000071fa2 : mov qword ptr [rbp - 0x670], rax ; jmp 0x6ea44
0x00000000000438a9 : mov qword ptr [rbp], rdx ; call rax
0x000000000002cb41 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000008a876 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000001663f5 : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x000000000008a95e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000129ef9 : mov qword ptr [rbx + 0x10], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015df94 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x00000000001663ad : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000129f39 : mov qword ptr [rbx + 0x18], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000015dff7 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010150a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000089420 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008de7a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000008fa3c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000014ef93 : mov qword ptr [rbx + 0x68], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129eb9 : mov qword ptr [rbx + 8], rsi ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009d04c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011cf51 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x000000000009b29c : mov qword ptr [rbx], rax ; je 0x9b459 ; call rax
0x0000000000166870 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000159664 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x000000000009cbb8 : mov qword ptr [rbx], rdi ; call rcx
0x00000000000734f1 : mov qword ptr [rbx], rdx ; mov dword ptr [rax], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009d102 : mov qword ptr [rbx], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009cc70 : mov qword ptr [rbx], rsi ; mov rdi, r9 ; call rcx
0x000000000007ed00 : mov qword ptr [rcx + 0x130], rdx ; ret
0x000000000017f083 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000017f093 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000017f0a3 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000017f0b3 : mov qword ptr [rcx + 8], rdx ; ret
0x0000000000052816 : mov qword ptr [rcx + rdi + 8], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000efaa7 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000087339 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000017f040 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000017f060 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000017f070 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000017f080 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000017f090 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000017f0a0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000017f0b0 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000017f050 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000017f030 : mov qword ptr [rcx], rdx ; ret
0x000000000005343e : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000b80ec : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b8f4c : mov qword ptr [rdi + 0x10], rcx ; lea rax, [rdi + 0x18] ; ret
0x00000000000b6a7c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000b6a5c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000bab7c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000b774f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000b6abf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000b6adf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000b6aa0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000008dd72 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000089956 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000015db85 : mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000008dda2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000b80ac : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x15] ; ret
0x00000000000b8f0c : mov qword ptr [rdi + 0xe], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b6a1c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000bab3c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000b80cc : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x16] ; ret
0x00000000000b8f2c : mov qword ptr [rdi + 0xf], rcx ; lea rax, [rdi + 0x17] ; ret
0x00000000000b6a3c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000bab5c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001743f7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000174387 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000174317 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000001742a7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b7faa : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xc] ; ret
0x00000000000b8dfa : mov qword ptr [rdi + 5], rdx ; lea rax, [rdi + 0xd] ; ret
0x0000000000174237 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b696a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000baa2a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000b7fca : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xd] ; ret
0x00000000000b8e1a : mov qword ptr [rdi + 6], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000001741c7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b697a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000baa4a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000b7fea : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xe] ; ret
0x00000000000b8e3a : mov qword ptr [rdi + 7], rdx ; lea rax, [rdi + 0xf] ; ret
0x0000000000174157 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000000b698a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000baa6a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x0000000000118d27 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000052a83 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000533c3 : mov qword ptr [rdi + 8], r9 ; ret
0x0000000000054cad : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x000000000008dd76 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000044353 : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000004433b : mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x000000000008a24e : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x0000000000118d17 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000003fd30 : mov qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000bb99a : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x00000000000bb586 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000016e064 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016e0a2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000005332e : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000016e3eb : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173c07 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e5cb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173b87 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e7bb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173b07 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000016e98c : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000173a78 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016eb8c : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000001739e8 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000016ed8c : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000173958 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000000b78d0 : mov qword ptr [rdi - 1], rdx ; ret
0x00000000000532b9 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000016e068 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000016e0a6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000016e21b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e317 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016e263 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000173c87 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000064189 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000044338 : mov qword ptr [rdi], r8 ; mov qword ptr [rdi + 8], rcx ; xor eax, eax ; ret
0x0000000000044359 : mov qword ptr [rdi], r8 ; ret
0x0000000000053288 : mov qword ptr [rdi], r9 ; ret
0x0000000000118d14 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000586ea : mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x000000000003fdfa : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000b7f36 : mov qword ptr [rdi], rcx ; lea rax, [rdi + 8] ; ret
0x00000000000b75f6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b6946 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b6956 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b6967 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b6977 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b6987 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000000b6937 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000b6926 : mov qword ptr [rdi], rcx ; ret
0x000000000018f03e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000000b7f23 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 7] ; ret
0x00000000000b8d63 : mov qword ptr [rdi], rdx ; lea rax, [rdi + 8] ; ret
0x00000000000b78f0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x00000000000b7910 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000000b7920 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000000b7930 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x00000000000b7940 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x00000000000b7900 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x00000000000a81f2 : mov qword ptr [rdi], rdx ; pop rbx ; ret
0x00000000000a815f : mov qword ptr [rdi], rdx ; ret
0x00000000000ba993 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000009d508 : mov qword ptr [rdi], rsi ; mov eax, 1 ; ret
0x000000000019259d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000054a5a : mov qword ptr [rdi], rsi ; ret
0x000000000008a8d4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x000000000008265d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x00000000000827f3 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000014ebbf : mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000082969 : mov qword ptr [rdx + 0x28], rsi ; mov byte ptr [rcx], dil ; ret
0x000000000014eb9b : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000014eb9f : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000018143a : mov qword ptr [rdx + 5], rax ; lea rax, [rdx + 0xc] ; ret
0x000000000017d0aa : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000018145a : mov qword ptr [rdx + 6], rax ; lea rax, [rdx + 0xd] ; ret
0x000000000017d0ca : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000018147a : mov qword ptr [rdx + 7], rax ; lea rax, [rdx + 0xe] ; ret
0x000000000017d0ea : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000007bdea : mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000018130a : mov qword ptr [rdx + 8], rax ; lea rax, [rdx + 0xf] ; ret
0x000000000017cfda : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000001812b3 : mov qword ptr [rdx], rax ; lea rax, [rdx + 7] ; ret
0x00000000001238ae : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x000000000017cf83 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000003093c : mov qword ptr [rdx], rax ; ret
0x00000000000880ab : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000a8094 : mov qword ptr [rdx], rcx ; ret
0x00000000001011aa : mov qword ptr [rdx], rdi ; ret
0x000000000016760e : mov qword ptr [rip + 0x28631b], rsi ; xor eax, eax ; ret
0x00000000001310d7 : mov qword ptr [rip + 0x2be1a2], rax ; pop rbp ; ret
0x000000000012409f : mov qword ptr [rip + 0x2c72ba], rbx ; pop rbx ; ret
0x000000000009de17 : mov qword ptr [rip + 0x34fbca], rax ; ret
0x00000000000908b6 : mov qword ptr [rip + 0x35a9d3], rax ; ret
0x000000000009088e : mov qword ptr [rip + 0x35a9f3], rax ; ret
0x000000000009086e : mov qword ptr [rip + 0x35aa0b], rax ; ret
0x0000000000090754 : mov qword ptr [rip + 0x35ab8d], rax ; ret
0x0000000000090744 : mov qword ptr [rip + 0x35ab95], rax ; ret
0x0000000000090732 : mov qword ptr [rip + 0x35ab97], rdx ; ret
0x00000000000906f4 : mov qword ptr [rip + 0x35ab9d], rax ; ret
0x00000000000906e4 : mov qword ptr [rip + 0x35abb5], rax ; ret
0x0000000000101a23 : mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000014dbfe : mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000442c0 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000011578a : mov qword ptr [rsi + 0x48], rax ; ret
0x00000000000447aa : mov qword ptr [rsi + 0xc], rax ; xor eax, eax ; ret
0x0000000000101a06 : mov qword ptr [rsi + 8], 0 ; ret
0x000000000014dbce : mov qword ptr [rsi + 8], rax ; ret
0x0000000000101a1f : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000043f3c : mov qword ptr [rsi + 8], rdx ; jns 0x43f0c ; xor eax, eax ; ret
0x0000000000052515 : mov qword ptr [rsi + rcx + 8], rax ; xor eax, eax ; pop rbx ; ret
0x000000000008995a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001401fd : mov qword ptr [rsi], rdi ; ret
0x000000000014075e : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000f47ca : mov qword ptr [rsp + 0x18], rsi ; call 0x212c7
0x00000000000f480b : mov qword ptr [rsp + 0x20], rdx ; call 0x212c7
0x00000000000d1ed2 : mov qword ptr [rsp + 0xa8], r13 ; call rbx
0x00000000000d195a : mov qword ptr [rsp + 0xa8], r14 ; call rbx
0x000000000015a2d2 : mov qword ptr [rsp + 0xc8], rdx ; call rax
0x000000000004685b : mov qword ptr [rsp + 8], r10 ; call 0x53347
0x0000000000093da2 : mov qword ptr [rsp + 8], r11 ; mov rdi, r12 ; call qword ptr [rax]
0x00000000000941b1 : mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000038a3a : mov qword ptr [rsp + 8], rcx ; call 0x35547
0x0000000000149dd0 : mov qword ptr [rsp + 8], rcx ; call r12
0x0000000000085b4d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x000000000009402e : mov qword ptr [rsp + 8], rdx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000094136 : mov qword ptr [rsp + 8], rsi ; xor edi, edi ; call qword ptr [rax]
0x000000000008ae51 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x000000000008dee4 : mov qword ptr [rsp], rdi ; call 0x8a156
0x0000000000043f3b : mov qword ptr ds:[rsi + 8], rdx ; jns 0x43f0d ; xor eax, eax ; ret
0x00000000001595ee : mov qword ptr fs:[rax], rdx ; ret
0x00000000000438a8 : mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000159663 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000003093b : mov qword ptr fs:[rdx], rax ; ret
0x00000000000bb585 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x0000000000111470 : mov r10, rcx ; mov eax, 0x104 ; syscall
0x000000000007bd60 : mov r10, rcx ; mov eax, 0x108 ; syscall
0x0000000000111c50 : mov r10, rcx ; mov eax, 0x109 ; syscall
0x0000000000111d10 : mov r10, rcx ; mov eax, 0x10b ; syscall
0x00000000001225d0 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x0000000000122090 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x0000000000121b00 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x0000000000122660 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000001226c0 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000001226f0 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000001155ac : mov r10, rcx ; mov eax, 0x146 ; syscall
0x00000000001223f0 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x0000000000115200 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x0000000000122ef0 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x0000000000122e60 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000001229a0 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000e4760 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x0000000000122480 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x00000000001223c0 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x00000000001222a0 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x00000000001224b0 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000001224e0 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x0000000000162aa0 : mov r10, rcx ; mov eax, 0xb5 ; syscall
0x0000000000162af0 : mov r10, rcx ; mov eax, 0xb6 ; syscall
0x000000000011fa20 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x000000000011f9c0 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x000000000011f8a0 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x000000000011f8d0 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x000000000011f930 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x000000000011f810 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x000000000011bc10 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000001237b0 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x0000000000122240 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x0000000000103f24 : mov r10, rdx ; mov eax, ecx ; cmovbe rsi, r9 ; syscall
0x0000000000173dc6 : mov r10d, 0x46f00ff2 ; retf 0xff3
0x000000000016ebc1 : mov r10d, 0x4f7f0ff3 ; retf 0x894c
0x00000000000a7eac : mov r10d, 6 ; jmp 0xa4106
0x00000000000a7ea1 : mov r10d, 7 ; jmp 0xa4106
0x00000000000a7e96 : mov r10d, 8 ; jmp 0xa4106
0x000000000003efe3 : mov r10d, 8 ; mov eax, ecx ; syscall
0x00000000000a7e80 : mov r10d, 9 ; jmp 0xa4106
0x0000000000021641 : mov r10d, eax ; jmp 0x2160d
0x00000000000878fb : mov r10d, eax ; jmp 0x8788d
0x000000000008834b : mov r10d, eax ; jmp 0x882dd
0x00000000000d9f30 : mov r10d, eax ; jmp 0xd9efb
0x00000000000dc3d0 : mov r10d, ecx ; jmp 0xdc3a2
0x00000000000dc3d0 : mov r10d, ecx ; jmp 0xdc3a4
0x0000000000114d40 : mov r10d, ecx ; mov eax, 0xdd ; syscall
0x000000000005cf90 : mov r11, qword ptr [rbp - 0x530] ; jmp rax
0x000000000005d3b7 : mov r11, rdx ; jmp rax
0x000000000005d309 : mov r11, rdx ; mov r9d, 1 ; jmp rax
0x000000000013320f : mov r11b, 0xf5 ; dec dword ptr [rax + 0x39] ; ret
0x0000000000173e46 : mov r11d, 0x46f00ff2 ; retf
0x000000000016e9c1 : mov r11d, 0x4f7f0ff3 ; retf
0x0000000000115b6b : mov r12d, dword ptr [r8] ; syscall
0x0000000000115b6a : mov r12d, dword ptr fs:[r8] ; syscall
0x000000000011d77f : mov r12d, r14d ; call r15
0x00000000000d48ae : mov r13d, 2 ; call 0x212d0
0x0000000000078e29 : mov r13d, dword ptr [rbp - 0x598] ; jmp 0x7593c
0x0000000000069f1c : mov r15d, 1 ; jmp rax
0x0000000000069b70 : mov r8, qword ptr [rbp - 0x520] ; jmp rax
0x0000000000084f28 : mov r8, qword ptr [rdx + 0x48] ; jmp 0x84ef6
0x000000000011b82f : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000106899 : mov r8, rax ; call r12
0x00000000001170df : mov r8, rbx ; mov eax, 0x10e ; syscall
0x0000000000078931 : mov r8, rbx ; xor r12d, r12d ; jmp 0x74bd0
0x0000000000069f42 : mov r8, rcx ; jmp rax
0x0000000000069f19 : mov r8, rcx ; mov r15d, 1 ; jmp rax
0x0000000000118dca : mov r8, rsi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000118589 : mov r8b, 0x48 ; mov edx, eax ; jmp 0x1185be
0x0000000000149196 : mov r8b, 0xe8 ; ret
0x000000000010fb4c : mov r8d, 0x10c ; syscall
0x000000000005c40c : mov r8d, 1 ; jmp rax
0x000000000011b832 : mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000022b8a : mov r9, r13 ; call rbx
0x00000000000be044 : mov r9, r14 ; call rbx
0x000000000005b7e9 : mov r9d, 1 ; jmp rax
0x000000000003edbc : mov rax, -1 ; ret
0x000000000003ef20 : mov rax, 0xf ; syscall
0x00000000000d0e30 : mov rax, 1 ; ret
0x00000000000d0e40 : mov rax, 2 ; ret
0x00000000000d0e50 : mov rax, 3 ; ret
0x00000000000d0e60 : mov rax, 4 ; ret
0x00000000000d0e70 : mov rax, 5 ; ret
0x00000000000d0e80 : mov rax, 6 ; ret
0x00000000000d0e90 : mov rax, 7 ; ret
0x0000000000130bd1 : mov rax, qword ptr [0x10] ; ret
0x000000000011fa90 : mov rax, qword ptr [rax + 0x160] ; ret
0x000000000016631e : mov rax, qword ptr [rax + 0x170] ; jmp rax
0x00000000001244ef : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000001245ef : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000000860e0 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000130018 : mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000155e4c : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000086bd3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000015677c : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000011faa0 : mov rax, qword ptr [rax + 0x58] ; ret
0x000000000011fa89 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002d4a6 : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x2d4ba ; call rax
0x00000000000306b4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x00000000000301be : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002f14b : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000439c2 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000145c98 : mov rax, qword ptr [rax] ; ret
0x000000000009164f : mov rax, qword ptr [rax] ; test rax, rax ; je 0x91661 ; call rax
0x000000000008decc : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000008941c : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x000000000008e588 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000009cf4b : mov rax, qword ptr [rbx + 0x40] ; jne 0x9cf91 ; mov rdi, r13 ; call rax
0x000000000009d01f : mov rax, qword ptr [rbx + 0x40] ; jne 0x9d001 ; mov rdi, rsi ; call rax
0x0000000000159609 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x159621 ; pop rbx ; ret
0x00000000001c369c : mov rax, qword ptr [rcx] ; add ah, al ; retf
0x000000000017cf80 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000000e4c5c : mov rax, qword ptr [rdi + 0x10] ; test rax, rax ; je 0xe4c73 ; call rax
0x000000000015dfbd : mov rax, qword ptr [rdi + 0x18] ; jbe 0x15dfd9 ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000015db20 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000e0010 : mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000019a2dc : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x19a2f5 ; call rax
0x0000000000089460 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000089350 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000086bd0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000008fe10 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000015c625 : mov rax, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000015ced8 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax]
0x000000000015c73d : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x000000000014ea40 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000008fb14 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000030652 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000002f11d : mov rax, qword ptr [rdx + rdi*8 + 0x40] ; ret
0x00000000001011a7 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000008fb00 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x8fb01 ; ret
0x0000000000163623 : mov rax, qword ptr [rip + 0x288f26] ; call qword ptr [rax]
0x0000000000162fd6 : mov rax, qword ptr [rip + 0x289573] ; call qword ptr [rax]
0x0000000000166488 : mov rax, qword ptr [rip + 0x28a019] ; call qword ptr [rax]
0x000000000015997f : mov rax, qword ptr [rip + 0x291502] ; pop rbx ; ret
0x0000000000159950 : mov rax, qword ptr [rip + 0x291531] ; pop rbx ; ret
0x00000000001598bf : mov rax, qword ptr [rip + 0x29162a] ; pop rbx ; ret
0x0000000000159890 : mov rax, qword ptr [rip + 0x291659] ; pop rbx ; ret
0x00000000001597ff : mov rax, qword ptr [rip + 0x2917da] ; pop rbx ; ret
0x00000000001597d0 : mov rax, qword ptr [rip + 0x291809] ; pop rbx ; ret
0x0000000000159747 : mov rax, qword ptr [rip + 0x29183a] ; pop rbx ; ret
0x00000000001596c0 : mov rax, qword ptr [rip + 0x2918c1] ; pop rbx ; ret
0x000000000009cd49 : mov rax, qword ptr [rip + 0x34e1f8] ; call qword ptr [rax]
0x000000000009cc84 : mov rax, qword ptr [rip + 0x34e2bd] ; call qword ptr [rax]
0x000000000009cbc9 : mov rax, qword ptr [rip + 0x34e378] ; call qword ptr [rax]
0x0000000000094046 : mov rax, qword ptr [rip + 0x356d73] ; xor edi, edi ; call qword ptr [rax]
0x000000000008fdf0 : mov rax, qword ptr [rip + 0x35c869] ; ret
0x000000000002bdc0 : mov rax, qword ptr [rip + 0x3c0c69] ; ret
0x00000000000238a0 : mov rax, qword ptr [rip + 0x3ccc31] ; ret
0x0000000000023890 : mov rax, qword ptr [rip + 0x3ccc51] ; ret
0x000000000002f128 : mov rax, qword ptr [rsi + rax*8 + 0x80] ; ret
0x0000000000025164 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000021b90 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000274cb : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000014d8c1 : mov rax, qword ptr [rsp + 0x28] ; call rax
0x000000000013d385 : mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000007f005 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x0000000000041ebc : mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000199abc : mov rax, qword ptr [rsp] ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000124e42 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x0000000000124ea3 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x0000000000130bd0 : mov rax, qword ptr fs:[0x10] ; ret
0x0000000000145c97 : mov rax, qword ptr fs:[rax] ; ret
0x000000000009f2c3 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007cff7 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000089af8 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011d70d : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e08c0 : mov rax, r14 ; call rax
0x000000000009203f : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009d60d : mov rax, r8 ; mov qword ptr [rdi], rsi ; ret
0x000000000018e8d0 : mov rax, r8 ; vzeroupper ; ret
0x000000000011dd23 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000007eec2 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008b886 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009df05 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000089f0e : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a1915 : mov rax, rbx ; pop rbx ; cmovne rax, rdx ; ret
0x000000000007f420 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002cc99 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000034ba4 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000043ce7 : mov rax, rbx ; pop rbx ; ret
0x000000000011c659 : mov rax, rbx ; pop rdx ; pop rbx ; ret
0x000000000003d24b : mov rax, rcx ; ret
0x0000000000043940 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000118e39 : mov rax, rdi ; mov byte ptr [r8 - 1], 0 ; ret
0x0000000000081e92 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009230f : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000a89d4 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000586ed : mov rax, rdi ; ret
0x0000000000134bf9 : mov rax, rdi ; sar rax, 6 ; ret
0x0000000000091ec4 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000000a0b1b : mov rax, rdx ; cmovne rax, rdi ; ret
0x000000000016743c : mov rax, rdx ; jne 0x16745d ; add rsp, 0x38 ; ret
0x00000000000d14a5 : mov rax, rdx ; jne 0xd14b8 ; add rsp, 0x28 ; ret
0x00000000001415c2 : mov rax, rdx ; movsxd rdx, esi ; ret
0x00000000000dfcca : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009187c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000539d4 : mov rax, rdx ; pop rbx ; ret
0x0000000000052c59 : mov rax, rdx ; ret
0x00000000000e0f84 : mov rax, rsi ; add rsp, 8 ; ret
0x000000000007ec37 : mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000810ca : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009544c : mov rax, rsi ; pop rbx ; ret
0x00000000000587f3 : mov rax, rsi ; ret
0x000000000003ecac : mov rbp, r9 ; nop ; jmp rdx
0x0000000000130fe3 : mov rbp, rsp ; pop rbp ; ret
0x00000000000e5107 : mov rbx, qword ptr [rbp - 8] ; leave ; ret
0x00000000000a0fd3 : mov rbx, rax ; call 0x9d9f5
0x000000000014e5ea : mov rbx, rax ; jne 0x14e58a ; xor eax, eax ; pop rbx ; ret
0x0000000000133226 : mov rbx, rax ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000847c0 : mov rbx, rdi ; mov rdi, rdx ; call 0x212d0
0x000000000002e985 : mov rbx, rdi ; test rax, rax ; je 0x2e997 ; call rax
0x00000000000e009f : mov rbx, rsi ; sub rsp, 8 ; syscall
0x0000000000105ec9 : mov rcx, qword ptr [r14] ; call r12
0x000000000002d641 : mov rcx, qword ptr [rax + r14*8] ; test rcx, rcx ; je 0x2d655 ; call rcx
0x000000000019a1dc : mov rcx, qword ptr [rax + rbx*8] ; test rcx, rcx ; je 0x19a1f0 ; call rcx
0x000000000014b9d6 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x00000000000b6920 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000001531ed : mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x000000000014d840 : mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000047219 : mov rcx, r12 ; mov rdi, r15 ; call 0x53498
0x0000000000149fda : mov rcx, r13 ; call r10
0x000000000014a175 : mov rcx, r14 ; call r10
0x0000000000149c69 : mov rcx, r14 ; mov rdi, r13 ; call r12
0x00000000000a80a3 : mov rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000000000009d1b0 : mov rcx, rax ; jmp 0x9d17c
0x00000000000ff5e8 : mov rcx, rax ; lea rdx, [r10 + rax*8] ; jmp 0xff613
0x00000000000bb561 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000011de3b : mov rdi, qword ptr [r13] ; call r12
0x0000000000041eb8 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000000bdb08 : mov rdi, qword ptr [r14] ; lea r9, [rsp + 0x28] ; call r12
0x00000000000ccf07 : mov rdi, qword ptr [r14] ; lea r9, [rsp + 0x30] ; call r12
0x000000000004303b : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x0000000000168390 : mov rdi, qword ptr [rbp - 0x4e0] ; mov rdx, rax ; jmp 0x1683b7
0x00000000000e8760 : mov rdi, qword ptr [rbp - 0x4e0] ; mov rdx, rax ; jmp 0xe8787
0x00000000000248aa : mov rdi, qword ptr [rbp - 0x58] ; call 0x212ce
0x000000000011d77b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000005946a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x0000000000065afc : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x00000000000609d3 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000011d263 : mov rdi, qword ptr [rbp] ; call r12
0x000000000009cff8 : mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000009cf88 : mov rdi, qword ptr [rbx + 0x48] ; mov rsi, r13 ; call rax
0x00000000000f5028 : mov rdi, qword ptr [rbx] ; add rbx, 0x10 ; call 0x212d1
0x000000000011d23d : mov rdi, qword ptr [rbx] ; call r12
0x000000000009cd38 : mov rdi, qword ptr [rdi + 0x48] ; mov rsi, rbp ; call rax
0x00000000000520e9 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000007efa5 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000007ef69 : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x00000000001307aa : mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000012e7e8 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000014d85c : mov rdi, qword ptr [rsp + 0x10] ; call rax
0x0000000000025294 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000025b70 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000025d48 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000026032 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000002666a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x000000000002962e : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000025878 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000027aa9 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x000000000002a255 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000000e07d5 : mov rdi, qword ptr [rsp + 8] ; call r12
0x000000000008def5 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000145021 : mov rdi, qword ptr [rsp] ; call 0x212ce
0x0000000000040264 : mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x00000000000d43b3 : mov rdi, r12 ; call 0xd0ea5
0x0000000000093da7 : mov rdi, r12 ; call qword ptr [rax]
0x0000000000021c34 : mov rdi, r12 ; call rax
0x0000000000086c5f : mov rdi, r12 ; call rbx
0x0000000000110bf8 : mov rdi, r12 ; mov eax, 0x4f ; syscall
0x0000000000034ea0 : mov rdi, r13 ; add rbx, 1 ; call 0x21109
0x00000000000673ea : mov rdi, r13 ; call 0x836d5
0x000000000002c58b : mov rdi, r13 ; call r12
0x000000000011df83 : mov rdi, r13 ; call r14
0x000000000009c2cc : mov rdi, r13 ; call rax
0x0000000000041f48 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000009c855 : mov rdi, r13 ; mov rdx, rbx ; mov rsi, r12 ; call rax
0x0000000000034e60 : mov rdi, r14 ; add r13, 1 ; call 0x21109
0x000000000002c6e2 : mov rdi, r14 ; call rbx
0x000000000002c9c0 : mov rdi, r14 ; call rdx
0x000000000012d855 : mov rdi, r15 ; call 0x129b25
0x0000000000024573 : mov rdi, r15 ; call 0x21055
0x000000000004721c : mov rdi, r15 ; call 0x53495
0x0000000000094033 : mov rdi, r15 ; call qword ptr [rax]
0x0000000000086f37 : mov rdi, r15 ; call r12
0x0000000000085b52 : mov rdi, r15 ; call rax
0x000000000002346a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000009ba08 : mov rdi, r8 ; call rax
0x000000000010f863 : mov rdi, r8 ; mov eax, 0x85 ; syscall
0x000000000004498f : mov rdi, r8 ; sub rsi, r8 ; mov eax, r10d ; syscall
0x000000000009cc73 : mov rdi, r9 ; call rcx
0x0000000000043610 : mov rdi, r9 ; call rdx
0x0000000000022895 : mov rdi, rax ; call 0x9eb65
0x0000000000022894 : mov rdi, rax ; call 0x9eb66
0x0000000000157f83 : mov rdi, rax ; call qword ptr [r10]
0x000000000009af53 : mov rdi, rax ; call rcx
0x0000000000157e56 : mov rdi, rax ; lea r9, [rsp + 0x14] ; call qword ptr [r10]
0x00000000001587ea : mov rdi, rax ; lea r9, [rsp + 0x1c] ; call qword ptr [r10]
0x000000000012188f : mov rdi, rax ; mov eax, 0x3c ; syscall
0x000000000003ee5f : mov rdi, rax ; mov eax, 0xba ; syscall
0x000000000014b9d3 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000013c4fd : mov rdi, rbp ; call 0x148f65
0x0000000000150d1c : mov rdi, rbp ; call 0x15cfa5
0x0000000000150f79 : mov rdi, rbp ; call 0x15d215
0x000000000011464e : mov rdi, rbp ; call 0x21105
0x0000000000035068 : mov rdi, rbp ; call 0x212cd
0x000000000015d2a4 : mov rdi, rbp ; call qword ptr [rax]
0x000000000014e6a1 : mov rdi, rbp ; call qword ptr [rbx]
0x000000000013cfd4 : mov rdi, rbp ; call r12
0x000000000014c29c : mov rdi, rbp ; call r14
0x00000000000803fd : mov rdi, rbp ; call rax
0x00000000000bdef0 : mov rdi, rbp ; call rbx
0x000000000015dd30 : mov rdi, rbp ; call rcx
0x000000000014e154 : mov rdi, rbp ; call rdx
0x000000000014cca7 : mov rdi, rbp ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x000000000011ba09 : mov rdi, rbp ; mov eax, 9 ; syscall
0x00000000000be041 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000013d382 : mov rdi, rbp ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x000000000014a172 : mov rdi, rbp ; mov rcx, r14 ; call r10
0x000000000015d16e : mov rdi, rbp ; xor eax, eax ; call r8
0x000000000015d1d0 : mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000014da4c : mov rdi, rbp ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000346af : mov rdi, rbx ; call 0x21105
0x0000000000024790 : mov rdi, rbx ; call 0x21235
0x0000000000132124 : mov rdi, rbx ; call 0x8eb55
0x000000000014eaeb : mov rdi, rbx ; call qword ptr [rax]
0x00000000000e79cb : mov rdi, rbx ; call r12
0x0000000000022e8d : mov rdi, rbx ; call r14
0x000000000007d261 : mov rdi, rbx ; call rax
0x000000000019a44a : mov rdi, rbx ; jne 0x19a441 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a689 : mov rdi, rbx ; jne 0x19a67e ; pop rbx ; ret
0x000000000010f674 : mov rdi, rbx ; mov eax, 0x135 ; syscall
0x00000000000448ff : mov rdi, rbx ; mov eax, 0x13e ; syscall
0x000000000011bb4f : mov rdi, rbx ; mov eax, 0x1a ; syscall
0x00000000000e49c6 : mov rdi, rbx ; mov eax, 0x23 ; syscall
0x0000000000110a94 : mov rdi, rbx ; mov eax, 0x55 ; syscall
0x000000000003f22c : mov rdi, rbx ; mov eax, 0x82 ; syscall
0x0000000000114bef : mov rdi, rbx ; mov eax, 7 ; syscall
0x0000000000149dcd : mov rdi, rbx ; mov qword ptr [rsp + 8], rcx ; call r12
0x00000000001531ea : mov rdi, rbx ; mov rcx, qword ptr [rsp + 0x28] ; call rcx
0x0000000000149fd7 : mov rdi, rbx ; mov rcx, r13 ; call r10
0x00000000001533dd : mov rdi, rbx ; mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x0000000000080c4b : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000008370e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000080f63 : mov rdi, rbx ; xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000847c3 : mov rdi, rdx ; call 0x212cd
0x000000000009d025 : mov rdi, rsi ; call rax
0x0000000000149982 : mov rdi, rsp ; call 0x166455
0x000000000015c4ce : mov rdi, rsp ; call rdx
0x00000000000893f7 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x0000000000021b8d : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000016e1d0 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000000b6910 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000001672d8 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x00000000001533e0 : mov rdx, qword ptr [rsp + 0x20] ; call rdx
0x000000000012feb6 : mov rdx, r12 ; call rax
0x000000000012f2d2 : mov rdx, r12 ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x00000000000c6fbc : mov rdx, r12 ; sub ecx, eax ; call 0x53237
0x0000000000156b52 : mov rdx, r13 ; call 0x122d95
0x0000000000158f4b : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000166b85 : mov rdx, r14 ; add r9, qword ptr [rsp + 8] ; call rax
0x00000000000228bd : mov rdx, r14 ; call 0x9eb65
0x0000000000022892 : mov rdx, r14 ; mov rdi, rax ; call 0x9eb68
0x00000000000be2b9 : mov rdx, r14 ; mov rdi, rbp ; call rbx
0x000000000009ba05 : mov rdx, r15 ; mov rdi, r8 ; call rax
0x00000000001396be : mov rdx, r15 ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000118717 : mov rdx, r8 ; jmp 0x11874b
0x000000000007d6f1 : mov rdx, r8 ; jmp 0x7d6c1
0x00000000001187df : mov rdx, r9 ; jmp 0x118813
0x000000000011858b : mov rdx, rax ; jmp 0x1185bc
0x000000000011f664 : mov rdx, rax ; jmp 0x11f678
0x00000000001571d9 : mov rdx, rax ; jmp 0x15717b
0x0000000000168397 : mov rdx, rax ; jmp 0x1683b0
0x00000000001686e9 : mov rdx, rax ; jmp 0x16868a
0x000000000002a7a9 : mov rdx, rax ; jmp 0x2a762
0x000000000002a8e0 : mov rdx, rax ; jmp 0x2a8a1
0x000000000002abae : mov rdx, rax ; jmp 0x2ab67
0x000000000002ac25 : mov rdx, rax ; jmp 0x2abde
0x000000000009af58 : mov rdx, rax ; jmp 0x9af0d
0x00000000000a1f15 : mov rdx, rax ; jmp 0xa1ea2
0x00000000000a2065 : mov rdx, rax ; jmp 0xa1ff2
0x00000000000a22d5 : mov rdx, rax ; jmp 0xa2268
0x00000000000a24f5 : mov rdx, rax ; jmp 0xa2488
0x00000000000a2c12 : mov rdx, rax ; jmp 0xa2ba0
0x00000000000a4e3a : mov rdx, rax ; jmp 0xa4dce
0x00000000000a5de2 : mov rdx, rax ; jmp 0xa5d73
0x00000000000a6a94 : mov rdx, rax ; jmp 0xa6a32
0x00000000000a6c1e : mov rdx, rax ; jmp 0xa6bbe
0x00000000000e8767 : mov rdx, rax ; jmp 0xe8780
0x00000000000e8ab9 : mov rdx, rax ; jmp 0xe8a5a
0x00000000001415dd : mov rdx, rax ; ret
0x00000000000d43b0 : mov rdx, rbp ; mov rdi, r12 ; call 0xd0ea8
0x000000000012f77e : mov rdx, rbx ; call rax
0x000000000019aa16 : mov rdx, rbx ; jne 0x19aa0e ; pop rbx ; ret
0x0000000000114c90 : mov rdx, rbx ; mov eax, 0x10f ; syscall
0x00000000000d4427 : mov rdx, rbx ; mov rdi, r12 ; call 0xd0ea8
0x000000000009c858 : mov rdx, rbx ; mov rsi, r12 ; call rax
0x000000000009c2c6 : mov rdx, rbx ; mov rsi, r14 ; mov rdi, r13 ; call rax
0x000000000012fb65 : mov rdx, rbx ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x000000000009c1cf : mov rdx, rcx ; jmp 0x9c168
0x000000000010f91f : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000000bb8b7 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000050c0f : mov rdx, rdi ; sub rdx, r15 ; add rdx, rcx ; jmp 0x50c31
0x0000000000050f10 : mov rdx, rsi ; sub rdx, r15 ; add rdx, rcx ; jmp 0x50f31
0x0000000000114f6f : mov rdx, rsi ; xor esi, esi ; syscall
0x000000000002346d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000073611 : mov rsi, qword ptr [rip + 0x377948] ; call rax
0x000000000006b358 : mov rsi, qword ptr [rip + 0x37fc01] ; call rax
0x000000000006b028 : mov rsi, qword ptr [rip + 0x37ff31] ; call rax
0x0000000000067e66 : mov rsi, qword ptr [rip + 0x3830f3] ; call rax
0x000000000005e6af : mov rsi, qword ptr [rip + 0x38c8aa] ; call rax
0x000000000005b482 : mov rsi, qword ptr [rip + 0x38fad7] ; call rax
0x0000000000052419 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x000000000014c6fd : mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x0000000000156b1b : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call rbx
0x0000000000117146 : mov rsi, qword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0x14] ; syscall
0x0000000000022b85 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x000000000014c297 : mov rsi, qword ptr [rsp + 0x18] ; mov rdi, rbp ; call r14
0x000000000009a2c0 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000097c20 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000013ca50 : mov rsi, qword ptr [rsp] ; mov rdi, r13 ; call r12
0x000000000013d070 : mov rsi, qword ptr [rsp] ; mov rdi, rbp ; call r12
0x000000000009c85b : mov rsi, r12 ; call rax
0x0000000000158f4e : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000014eae8 : mov rsi, r12 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000009cf8c : mov rsi, r13 ; call rax
0x0000000000123c11 : mov rsi, r13 ; mov edi, ebx ; mov eax, r10d ; syscall
0x000000000015d16b : mov rsi, r13 ; mov rdi, rbp ; xor eax, eax ; call r8
0x000000000015d1cd : mov rsi, r13 ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000012a047 : mov rsi, r13 ; xor r15d, r15d ; call rax
0x000000000009c2c9 : mov rsi, r14 ; mov rdi, r13 ; call rax
0x0000000000024570 : mov rsi, r14 ; mov rdi, r15 ; call 0x21058
0x000000000015de7f : mov rsi, r14 ; mov rdi, rbp ; call r12
0x0000000000040953 : mov rsi, r15 ; call r14
0x0000000000165d9e : mov rsi, rax ; shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000010096e : mov rsi, rbp ; call 0xfcbd5
0x000000000009cd3c : mov rsi, rbp ; call rax
0x00000000000d1baf : mov rsi, rbp ; call rbx
0x0000000000130ed5 : mov rsi, rbp ; mov edi, ebx ; mov eax, ecx ; syscall
0x00000000001100ab : mov rsi, rbp ; mov edi, ebx ; xor eax, eax ; syscall
0x00000000000d17df : mov rsi, rbp ; mov rdi, r12 ; call rbx
0x000000000015a0b4 : mov rsi, rbp ; mov rdi, r15 ; call qword ptr [rax]
0x000000000009af50 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000009b748 : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000051731 : mov rsi, rbp ; sub rsi, rdi ; call 0x9d9f8
0x00000000000401c5 : mov rsi, rbx ; mov eax, ecx ; syscall
0x0000000000089568 : mov rsi, rbx ; mov edi, r13d ; mov eax, r9d ; syscall
0x0000000000040261 : mov rsi, rbx ; mov rdi, qword ptr [rsp] ; mov eax, ecx ; syscall
0x000000000009c6e0 : mov rsi, rbx ; mov rdi, r12 ; call rax
0x000000000011df80 : mov rsi, rbx ; mov rdi, r13 ; call r14
0x000000000015dd2d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x0000000000081dc6 : mov rsi, rdi ; jmp 0x81d9a
0x000000000010fc84 : mov rsi, rdi ; mov edi, 0xffffff9c ; syscall
0x00000000000dedb2 : mov rsi, rdi ; xor edi, edi ; call rax
0x0000000000153ad9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000012e7ec : mov rsi, rdx ; call rax
0x000000000010f76b : mov rsi, rdx ; mov eax, 4 ; syscall
0x000000000010f7b9 : mov rsi, rdx ; mov eax, 5 ; syscall
0x000000000010f80b : mov rsi, rdx ; mov eax, 6 ; syscall
0x000000000014ea44 : mov rsi, rsp ; call qword ptr [rax]
0x000000000015d2a1 : mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x000000000003eca9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000004c0a5 : mov ss, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000001925c5 : mov word ptr [r9 - 2], cx ; ret
0x0000000000160aec : mov word ptr [rax + 0x63], cs ; push rbp ; mov byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000000ff937 : mov word ptr [rax + rax*8], fs ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret
0x00000000000c63af : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000144599 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x00000000000fd689 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x000000000014d375 : mov word ptr [rax + rsi*4 + 0x75000001], ss ; ret
0x000000000012dbaa : mov word ptr [rax], cs ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000b7110 : mov word ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000001cc3a1 : mov word ptr [rax], es ; add ah, bl ; in al, dx ; call qword ptr [rsi]
0x00000000001cc38d : mov word ptr [rax], es ; add al, dl ; in al, dx ; call qword ptr [rsi]
0x00000000001163c1 : mov word ptr [rax], es ; add byte ptr [rax], al ; syscall
0x00000000001be725 : mov word ptr [rax], es ; add byte ptr [rdx + rbp*2 - 0x18], dl ; jmp qword ptr [rax]
0x000000000017f012 : mov word ptr [rcx + 4], dx ; ret
0x000000000017f053 : mov word ptr [rcx + 8], dx ; ret
0x0000000000141028 : mov word ptr [rcx + rax - 2], dx ; mov eax, r8d ; ret
0x00000000001cc284 : mov word ptr [rcx - 0x14], es ; call qword ptr [rdx]
0x000000000017efe0 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000017efd0 : mov word ptr [rcx], dx ; ret
0x00000000000b802c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x11] ; ret
0x00000000000b8e8c : mov word ptr [rdi + 0x10], cx ; lea rax, [rdi + 0x12] ; ret
0x00000000000b69bc : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000baabc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x0000000000115ec4 : mov word ptr [rdi + 0x16], ax ; ret
0x00000000000b8134 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x19] ; ret
0x00000000000b8f94 : mov word ptr [rdi + 0x18], cx ; lea rax, [rdi + 0x1a] ; ret
0x00000000000b6aa4 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000babc4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000174697 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000044882 : mov word ptr [rdi + 2], dx ; ret
0x00000000000a85b3 : mov word ptr [rdi + 4], ax ; mov rax, rdi ; ret
0x00000000000b7ef8 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x00000000000b8d38 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; ret
0x00000000000a84e6 : mov word ptr [rdi + 4], dx ; ret
0x00000000000ba968 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b8d9a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 0xa] ; ret
0x00000000000b7f4a : mov word ptr [rdi + 8], dx ; lea rax, [rdi + 9] ; ret
0x00000000000b693a : mov word ptr [rdi + 8], dx ; ret
0x00000000000ba9ca : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000bb9aa : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x00000000000bb5a4 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000016e76c : mov word ptr [rdi - 2], cx ; ret
0x000000000016e584 : mov word ptr [rdi - 2], dx ; ret
0x000000000016e768 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x00000000000b68c3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000b7596 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000192c92 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000000bb9af : mov word ptr [rdi], cx ; ret
0x000000000018f054 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x00000000000a8490 : mov word ptr [rdi], dx ; add rax, rdi ; ret
0x00000000000b7eb3 : mov word ptr [rdi], dx ; lea rax, [rdi + 1] ; ret
0x00000000000b8ce3 : mov word ptr [rdi], dx ; lea rax, [rdi + 2] ; ret
0x00000000000b68b3 : mov word ptr [rdi], dx ; ret
0x00000000000ba913 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a8630 : mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x00000000000a8560 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000001925c2 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x00000000000bb5a9 : mov word ptr [rdi], si ; ret
0x000000000010eb2c : mov word ptr [rdi], si ; xor eax, eax ; ret
0x0000000000152ffd : mov word ptr [rdx + 0x6c], ax ; mov eax, 1 ; ret
0x0000000000181388 : mov word ptr [rdx + 4], ax ; lea rax, [rdx + 5] ; ret
0x00000000000b34ad : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000000b3531 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000000239d : mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x0000000000181333 : mov word ptr [rdx], ax ; lea rax, [rdx + 1] ; ret
0x00000000000b3448 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001245df : mov word ptr [rdx], ax ; ret
0x00000000001c81d4 : mov word ptr [rdx], cs ; add al, cl ; retf
0x00000000001d54d4 : mov word ptr [rip - 0x5117ffff], ds ; call rdi
0x0000000000114a45 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000044836 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x0000000000192c95 : mov word ptr [rsi - 2], cx ; ret
0x000000000010eb13 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000001dfc20 : mov word ptr [rsi], es ; add dword ptr [rdi], 2 ; ret
0x00000000001d4380 : mov word ptr [rsi], es ; add dword ptr [rdi], 3 ; retf 0xa02
0x0000000000033bd3 : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000000c86b5 : mov word ptr [rsp + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x000000000003dc83 : mov word ptr [rsp - 0x10], ax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000bb5a3 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x00000000001cd378 : movabs al, byte ptr [0x1000009c34000000] ; ret 0xffec
0x000000000018ecd7 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x0000000000069489 : movabs al, byte ptr [0x840fc08548000000] ; ret 0x11
0x000000000010b748 : movabs al, byte ptr [0x840ff5394c000010] ; retf
0x0000000000130a20 : movabs al, byte ptr [0xc9f85d8b48000001] ; ret
0x00000000000c8afb : movabs al, byte ptr [0xf6887d8948000000] ; ret
0x000000000014d8bd : movabs byte ptr [0x2824448b48000001], al ; call rax
0x0000000000003c13 : movabs byte ptr [0xd0bd63067c9a2d95], al ; retf 0x6e33
0x00000000001ac903 : movabs byte ptr [0xd900432ac06c5d01], al ; retf 0xea91
0x000000000000255f : movabs byte ptr [0xdec51188012c607d], al ; retf 0x736c
0x00000000001ac561 : movabs byte ptr [0xeb1b5c347ebb9329], al ; retf
0x000000000009ec4a : movabs byte ptr [0xf3c2450f48000f4c], al ; ret
0x0000000000002d61 : movabs dword ptr [0x1ad04fca8653d0e9], eax ; retf 0x2217
0x0000000000061bf2 : movabs dword ptr [0x6f0f66ec500f0015], eax ; ret 0xe583
0x00000000000d8559 : movabs dword ptr [0x8948f1894cfff48b], eax ; ret 0x8948
0x00000000001672c9 : movabs dword ptr [0x894f75c085ffed78], eax ; ret
0x00000000001aa9a7 : movabs eax, dword ptr [0x2130504dd97d9556] ; retf
0x0000000000067be9 : movabs eax, dword ptr [0x6349001f0fffffe0] ; ret
0x00000000001540c3 : movabs eax, dword ptr [0x750438836400296d] ; ret
0x000000000000087f : movabs eax, dword ptr [0x8000010c8449000e] ; ret 0x440c
0x00000000000cbd30 : movabs eax, dword ptr [0x89fc247c8b410005] ; ret
0x00000000001ab25a : movabs eax, dword ptr [0x95a55d87a0d1e161] ; retf 0x33e6
0x0000000000009570 : movabs eax, dword ptr [0xb0000d0012000034] ; retf 9
0x000000000003e020 : movapd xmm0, xmm1 ; ret
0x000000000003e021 : movaps xmm0, xmm1 ; ret
0x000000000016ccf2 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016ccee : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016cd9c : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001643be : movaps xmmword ptr [rsp + 0x10], xmm0 ; call 0x1106c7
0x000000000012180f : movaps xmmword ptr [rsp + 0x20], xmm0 ; syscall
0x000000000010ed21 : movaps xmmword ptr [rsp + 0xa0], xmm0 ; syscall
0x000000000003ee4c : movaps xmmword ptr [rsp + 0xf0], xmm0 ; syscall
0x000000000003e4a3 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000003df3a : movd mm0, eax ; ret
0x000000000003df39 : movd mm0, rax ; ret
0x000000000003dfaf : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000003e316 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003e01d : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x000000000003e399 : movd mm1, edi ; movaps xmm0, xmm1 ; ret
0x000000000003dfae : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000003e01c : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x000000000003e4a2 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x000000000003e2ec : movd xmm0, eax ; ret
0x000000000003e315 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000003e398 : movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x000000000003ea87 : movdqa xmm0, xmm3 ; pop rbx ; ret
0x000000000003e640 : movdqa xmm0, xmmword ptr [rsp - 0x28] ; ret
0x000000000003e877 : movdqa xmm0, xmmword ptr [rsp] ; add rsp, 0x28 ; ret
0x000000000010eab0 : movdqu xmm0, xmmword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x000000000010eb00 : movdqu xmm0, xmmword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x00000000000b6990 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001412cb : movdqu xmm0, xmmword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000b81ed : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b904d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000b7850 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b6b5d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b92b3 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000b7a93 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000017436f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001742ff : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017428f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017421f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b818d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b8fed : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b6afd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000001741af : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b81ad : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b900d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b6b1d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000017413f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b81cd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b902d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b6b3d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000017475f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001746ef : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017467f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017460f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017459f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017452f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001744bf : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000017444f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001743df : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb91d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x00000000001738cb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000017393b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000b7950 : movdqu xmmword ptr [rdi - 1], xmm0 ; ret
0x00000000000b8e54 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b8004 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b7677 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b69a4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b69e7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b69d7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b6a58 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b6a18 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b6a38 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b69b8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b6b59 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b6af9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b6b19 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b6b39 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6994 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000baa84 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000174144 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000001f6b : movlhps xmm2, xmm3 ; ret
0x00000000000b3592 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b35b2 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b35d2 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b341c : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b33c6 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000000b3593 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x00000000000b35b3 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x00000000000b35d3 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x00000000000b341d : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x00000000000b33c7 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000003ea00 : movmskps eax, xmm0 ; and eax, 8 ; ret
0x000000000003ea88 : movq mm0, mm3 ; pop rbx ; ret
0x000000000010eab1 : movq mm0, qword ptr [rdi + 0x78] ; movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x000000000010eb01 : movq mm0, qword ptr [rsi + 0x70] ; movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x00000000000b6991 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000001412cc : movq mm0, qword ptr [rsi] ; movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x000000000003e641 : movq mm0, qword ptr [rsp - 0x28] ; ret
0x000000000003e9d3 : movq mm0, qword ptr [rsp] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003e878 : movq mm0, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x00000000000b81ee : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b904e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, [rdi + 0x20] ; ret
0x00000000000b7851 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000b6b5e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000bac7e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000b92b4 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, [rdi + 0x40] ; ret
0x00000000000b7a94 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000bacf4 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x0000000000174370 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000174300 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000174290 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000174220 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b818e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1c] ; ret
0x00000000000b8fee : movq qword ptr [rdi + 0xd], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b6afe : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000bac1e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000001741b0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b81ae : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1d] ; ret
0x00000000000b900e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b6b1e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000bac3e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x0000000000174140 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000b81ce : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1e] ; ret
0x00000000000b902e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, [rdi + 0x1f] ; ret
0x00000000000b6b3e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000bac5e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000174760 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001746f0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000174680 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000174610 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001745a0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000174530 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001744c0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000174450 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000001743e0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000000bb895 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000bb91e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000001738cc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000017393c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000174077 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173ff7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173f67 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173ee7 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173e67 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173de7 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173d67 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173ce7 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173c67 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173be7 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173b67 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173ae7 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173a57 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000001739c7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000173937 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000000b7951 : movq qword ptr [rdi - 1], mm0 ; ret
0x00000000000b8e55 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0x10] ; ret
0x00000000000b8005 : movq qword ptr [rdi], mm0 ; lea rax, [rdi + 0xf] ; ret
0x00000000000b7678 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000b69a5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000b69f8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000b76cb : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000b69e8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000b69d8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b6a59 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000b6a19 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000b6a39 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b69b9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000b6b5a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000b6afa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000b6b1a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000b6b3a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000b6995 : movq qword ptr [rdi], mm0 ; ret
0x00000000000baa85 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x0000000000174145 : movq qword ptr [rdi], mm1 ; ret
0x000000000003df38 : movq xmm0, rax ; ret
0x000000000003dfad : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x000000000003e01b : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000001c2d1c : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr ss:[rax] ; test cl, bh ; stc ; call rax
0x00000000000fb1ba : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x000000000002bc0c : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001be4e0 : movsb byte ptr [rdi], byte ptr [rsi] ; and ebp, eax ; jmp rax
0x00000000001d50d9 : movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rcx]
0x00000000001d5049 : movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdx]
0x00000000000bb4e5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000001cf97c : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; sti ; call qword ptr [rbx]
0x00000000001d51fc : movsb byte ptr [rdi], byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp qword ptr [rcx]
0x00000000001d8569 : movsb byte ptr [rdi], byte ptr [rsi] ; hlt ; jmp qword ptr [rcx]
0x00000000001da1bc : movsb byte ptr [rdi], byte ptr [rsi] ; idiv eax ; jmp qword ptr [rbx]
0x00000000001bf58c : movsb byte ptr [rdi], byte ptr [rsi] ; in al, 0 ; add byte ptr [rsi - 0x13], ah ; jmp rax
0x00000000001ab682 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001bf5a0 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, dx ; call qword ptr [rax]
0x00000000001c2370 : movsb byte ptr [rdi], byte ptr [rsi] ; jo 0x1c236e ; call rsp
0x00000000001bf7b8 : movsb byte ptr [rdi], byte ptr [rsi] ; loop 0x1bf7ab ; call rax
0x00000000001e18ec : movsb byte ptr [rdi], byte ptr [rsi] ; loope 0x1e18f5 ; add byte ptr [rax], dh ; retf
0x000000000009efde : movsb byte ptr [rdi], byte ptr [rsi] ; or eax, 0x450f4800 ; ret 0xc3f3
0x00000000001bfb00 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, al ; jmp rsp
0x00000000001d26ec : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; add byte ptr [rax], al ; push rax ; and cl, dh ; call qword ptr [rdx]
0x00000000001d0cbc : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; call qword ptr [rdx]
0x00000000001af1e5 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; jmp qword ptr [rax]
0x00000000001c1104 : movsb byte ptr [rdi], byte ptr [rsi] ; pop qword ptr [rcx] ; add byte ptr [rbx + rdi*4], dl ; cmc ; jmp rax
0x00000000000bb4d7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001c1aac : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000007a34e : movsb byte ptr [rdi], byte ptr [rsi] ; retf
0x00000000001d01ec : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0
0x00000000001c3680 : movsb byte ptr [rdi], byte ptr [rsi] ; retf 0xfffd
0x00000000001d52ec : movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rcx] ; add al, dh ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001bfd54 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb eax, dword ptr [rcx] ; add byte ptr [rsp + rbx*8 - 0x11], dl ; call rax
0x00000000001c0ae0 : movsb byte ptr [rdi], byte ptr [rsi] ; sbb ebp, esi ; jmp rax
0x00000000001c2d60 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; stc ; jmp rax
0x0000000000145783 : movsb byte ptr [rdi], byte ptr [rsi] ; sub al, byte ptr [rax] ; test eax, eax ; je 0x145798 ; ret
0x00000000001aa565 : movsb byte ptr [rdi], byte ptr [rsi] ; sub eax, 0xea4ca798 ; retf
0x00000000001b0ae4 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, ebp ; call rsi
0x00000000001af1a8 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, esp ; out dx, eax ; inc esp ; xchg eax, esp ; out dx, eax ; call rsp
0x000000000003d86a : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0xeeb
0x00000000001cdca5 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; call 0x221cc9a6
0x00000000001af385 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x00000000001bcbd9 : movsd dword ptr [rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000030938 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp eax, dword ptr [rax] ; mov qword ptr fs:[rdx], rax ; ret
0x00000000001acb7d : movsd dword ptr [rdi], dword ptr [rsi] ; fxch st(0), st(6) ; mov bl, 0xe ; or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x00000000001acf15 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000001acc : movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4d ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001d5125 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp qword ptr [rcx]
0x00000000001ac7d1 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000001bfb41 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call rax
0x00000000001bfb49 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp rsp
0x0000000000003900 : movsd dword ptr [rdi], dword ptr [rsi] ; outsb dx, byte ptr [rsi] ; retf
0x000000000002c587 : movsd dword ptr [rdi], dword ptr [rsi] ; popfq ; adc eax, dword ptr [rax] ; mov rdi, r13 ; call r12
0x000000000005ed57 : movsd dword ptr [rdi], dword ptr [rsi] ; rcl dword ptr [rip + 0x6f0f6600], 1 ; ret 0x290f
0x00000000000532e2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000001ccf21 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; call qword ptr [rcx]
0x00000000001ab261 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x000000000003dfb2 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003df93 : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000d1548 : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000054ba3 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000165da5 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x000000000003e319 : movss dword ptr [rdi], xmm1 ; ret
0x000000000003e300 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000199c34 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000054b5d : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000129e5f : movsx eax, bl ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009d95a : movsx eax, dl ; ret
0x00000000000a8274 : movsx ecx, byte ptr [rdi + rax] ; test cl, cl ; jne 0xa8271 ; ret
0x00000000000a8230 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0xa8231 ; ret
0x000000000019772c : movsxd r12, dword ptr [rdx + r12*4] ; add rdx, r12 ; jmp rdx
0x00000000000a8ab1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x0000000000171d4b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000016c7cb : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, [r11 + r9] ; jmp r9
0x00000000000313fe : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x00000000000687cc : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rcx ; jmp rax
0x000000000005def3 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rdi ; jmp rax
0x000000000005be0c : movsxd rax, dword ptr [rax + rdx*4] ; add rax, rsi ; jmp rax
0x000000000005c462 : movsxd rax, dword ptr [rax + rsi*4] ; add rax, rdi ; jmp rax
0x000000000008e33e : movsxd rax, dword ptr [rax - 0x77] ; add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000080b0 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x57
0x0000000000122511 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001ab600 : movsxd rax, dword ptr [rbp + 0x275dcc4c] ; retf 0xd1cb
0x00000000000313ff : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000005cb4d : movsxd rax, dword ptr [rbx - 0x52f43] ; call qword ptr [rax]
0x00000000000f17e1 : movsxd rax, dword ptr [rcx + r14*4] ; add rax, rcx ; jmp rax
0x00000000000737d3 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x00000000000f17e2 : movsxd rax, dword ptr [rcx + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000d0799 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000bb55d : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000069f11 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rcx ; jmp rax
0x000000000007d417 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000dc4b3 : movsxd rax, dword ptr [rdi + rdx*4] ; add rax, rdi ; jmp rax
0x000000000006b80f : movsxd rax, dword ptr [rdx + r12*4] ; add rax, rdx ; jmp rax
0x00000000000ebb6f : movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x000000000002240c : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e6ae4 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000ebb70 : movsxd rax, dword ptr [rdx + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000e621c : movsxd rax, dword ptr [rdx + rsi*4] ; add rax, rdx ; jmp rax
0x000000000017eee9 : movsxd rax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000006b810 : movsxd rax, dword ptr [rdx] ; add rax, rdx ; jmp rax
0x00000000000f1731 : movsxd rax, dword ptr [rsi + r12*4] ; add rax, rsi ; jmp rax
0x000000000005bd6e : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000599d2 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rdx ; jmp rax
0x000000000007cc7b : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000bba08 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x00000000000bbac2 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x00000000000f1732 : movsxd rax, dword ptr [rsi] ; add rax, rsi ; jmp rax
0x000000000018a270 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000018a3ad : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x000000000018a157 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000018a104 : movsxd rax, ecx ; ret
0x000000000018a261 : movsxd rbx, dword ptr [rdi] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf40
0x00000000001ac42a : movsxd rbx, dword ptr [rsi + rax*8 + 0x74] ; retf 0x93a2
0x000000000000394a : movsxd rbx, ebp ; clc ; mov gs, word ptr [rbx] ; retf 0x707d
0x000000000018a149 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000000b6fca : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000018ffdd : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000b6759 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a845d : movsxd rcx, dword ptr [r9 + rcx*4] ; add rcx, r9 ; jmp rcx
0x00000000001598ec : movsxd rcx, dword ptr [rax + 5] ; test al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000014f67d : movsxd rcx, dword ptr [rax - 0x77] ; ret
0x000000000009e506 : movsxd rcx, dword ptr [rax - 0x7d] ; ret 0xe901
0x00000000000b6fcb : movsxd rcx, dword ptr [rbx + rax*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x0000000000171d4c : movsxd rcx, dword ptr [rbx + rcx*4] ; add r9, r11 ; jmp r9
0x000000000016c7cc : movsxd rcx, dword ptr [rbx + rcx*4] ; lea r9, [r11 + r9] ; jmp r9
0x000000000018ffde : movsxd rcx, dword ptr [rbx + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000000b675a : movsxd rcx, dword ptr [rbx + rdx*4] ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000000a845e : movsxd rcx, dword ptr [rcx + rcx*4] ; add rcx, r9 ; jmp rcx
0x00000000000a8ab2 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000000bba30 : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000018a197 : movsxd rcx, ecx ; lea rax, [rdi + rcx] ; sub rax, rsi ; ret
0x00000000000f0496 : movsxd rcx, edx ; jmp 0xf04a9
0x00000000000f0495 : movsxd rcx, edx ; jmp 0xf04aa
0x000000000003ca47 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000002e77f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000002e780 : movsxd rdi, dword ptr [rbx + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000003ca48 : movsxd rdi, dword ptr [rdx + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000000360c : movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x00000000001c3d29 : movsxd rdi, ebp ; jmp qword ptr [rdx]
0x0000000000030855 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000306e5 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000001c3071 : movsxd rdi, edx ; jmp rax
0x000000000009cbb3 : movsxd rdi, esi ; mov dword ptr [rbx + 0x30], eax ; mov qword ptr [rbx], rdi ; call rcx
0x00000000000fbf07 : movsxd rdx, dword ptr [r10 + rdx*4] ; add rdx, r10 ; jmp rdx
0x000000000016c89f : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000014dc2e : movsxd rdx, dword ptr [r8 + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000a8602 : movsxd rdx, dword ptr [r8 + rdx*4] ; add rdx, r8 ; jmp rdx
0x000000000014dc2f : movsxd rdx, dword ptr [rax + rcx*4] ; add rdx, r8 ; jmp rdx
0x00000000000a8603 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, r8 ; jmp rdx
0x00000000000a8532 : movsxd rdx, dword ptr [rax + rdx*4] ; add rdx, rax ; jmp rdx
0x00000000000fb4d4 : movsxd rdx, dword ptr [rbp + rdx*4] ; add rdx, rbp ; jmp rdx
0x000000000016c8a0 : movsxd rdx, dword ptr [rbx + rdx*4] ; lea rdx, [r11 + rdx] ; jmp rdx
0x000000000007a349 : movsxd rdx, dword ptr [rcx - 0x5b160001] ; retf
0x000000000003c75f : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000000fbf08 : movsxd rdx, dword ptr [rdx + rdx*4] ; add rdx, r10 ; jmp rdx
0x00000000001411c2 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x0000000000141039 : movsxd rdx, edx ; mov eax, r8d ; mov byte ptr [rdi + rdx], 0 ; ret
0x00000000001415c6 : movsxd rdx, esi ; ret
0x000000000002e280 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x000000000002e281 : movsxd rsi, dword ptr [rax + rcx*4] ; add rsi, r8 ; jmp rsi
0x00000000001da2c1 : movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001c0189 : movsxd rsi, ecx ; call rax
0x00000000001c1e41 : movsxd rsi, edi ; call qword ptr [rax]
0x00000000001c1e29 : movsxd rsi, edi ; call rsp
0x0000000000194aec : movsxd rsi, esi ; ret 0x7520
0x000000000015dff9 : movsxd rsp, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019772d : movsxd rsp, dword ptr [rdx] ; add rdx, r12 ; jmp rdx
0x000000000011590c : movups xmm0, xmmword ptr [rax] ; add bl, dh ; ret
0x00000000000a3f89 : movups xmm0, xmmword ptr [rcx + 0xf] ; xchg eax, ebx ; ret 0x3949
0x00000000000d1549 : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000054b5e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000054ba4 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000000bb6bf : movups xmmword ptr [r11], xmm4 ; ret
0x00000000000bb746 : movups xmmword ptr [r11], xmm8 ; ret
0x000000000012f2d5 : movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x0000000000044691 : movups xmmword ptr [rbx], xmm0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000bb747 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000000bb6c0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000000bb6bb : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000000bb6ba : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000156839 : movups xmmword ptr [rdi + 0x20], xmm0 ; ret
0x000000000010e7e1 : movups xmmword ptr [rdi + 0x30], xmm0 ; movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x0000000000156801 : movups xmmword ptr [rdi + 0x30], xmm0 ; ret
0x00000000000bb742 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000010e7e5 : movups xmmword ptr [rdi + 0x40], xmm0 ; ret
0x000000000003f8af : movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x000000000003f8b3 : movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x000000000010eb05 : movups xmmword ptr [rdi + 0x78], xmm0 ; ret
0x000000000010f43a : movups xmmword ptr [rdi + 0xf8], xmm0 ; ret
0x0000000000152f91 : movups xmmword ptr [rdi + 8], xmm0 ; ret
0x00000000001412cf : movups xmmword ptr [rdi + rdx + 8], xmm0 ; ret
0x00000000000bb482 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x00000000000bb629 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000000bb606 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000000bb47f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000003dfb3 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003df94 : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x000000000003e301 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000152faa : movups xmmword ptr [rdx], xmm0 ; ret
0x000000000010eab5 : movups xmmword ptr [rsi + 0x70], xmm0 ; ret
0x000000000014dc13 : movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000015e122 : movups xmmword ptr [rsp + 0x28], xmm0 ; call rdx
0x0000000000199c35 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000153d96 : movzx eax, al ; add eax, 1 ; ret
0x000000000015e1cb : movzx eax, al ; add rsp, 0x18 ; ret
0x0000000000111c11 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000014e55a : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d0107 : movzx eax, al ; lea eax, [rax + rax - 1] ; ret
0x00000000000e687e : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x000000000007bd1c : movzx eax, al ; neg eax ; pop rbx ; ret
0x000000000007bce9 : movzx eax, al ; neg eax ; ret
0x000000000014fe8a : movzx eax, al ; pop rbx ; pop rbp ; ret
0x00000000000deddb : movzx eax, al ; pop rbx ; ret
0x000000000003f97b : movzx eax, al ; ret
0x0000000000022c00 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x00000000000304b5 : movzx eax, ax ; ret
0x000000000008d360 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000150c3e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000008dfa8 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008d16e : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008a252 : movzx eax, byte ptr [rax] ; ret
0x00000000000a9e48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000018ad30 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x00000000000ac340 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000a9e63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000008d180 : movzx eax, byte ptr [rdx] ; ret
0x000000000008d361 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bba90 : movzx eax, cl ; pop rbx ; ret
0x0000000000134d9d : movzx eax, dh ; or eax, edi ; bswap eax ; ret
0x0000000000134dab : movzx eax, si ; or eax, edi ; bswap eax ; ret
0x0000000000134d9c : movzx eax, sil ; or eax, edi ; bswap eax ; ret
0x000000000003066e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x000000000010eb10 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000143877 : movzx ecx, byte ptr [rcx - 1] ; test cl, cl ; jne 0x14386a ; ret
0x00000000000bae9a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xbae99 ; ret
0x00000000000baf4a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xbaf49 ; ret
0x0000000000190e94 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x00000000000bb578 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000a9e60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000018ad33 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x0000000000123402 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000087db0 : movzx edx, byte ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000003cfe3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x3cfcb ; ret
0x00000000000aa021 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000018487f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000018acb8 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x00000000000a9eb3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000194b14 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000194b74 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000194b64 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000194b54 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000194b44 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000194b34 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000194b24 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000174090 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000190c47 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000194afb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x0000000000174770 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000ac343 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000a8502 : movzx edx, byte ptr [rsp + 0x16] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a86b4 : movzx edx, byte ptr [rsp + 0xe] ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a84c9 : movzx edx, byte ptr [rsp - 0xc] ; mov byte ptr [rdi + 4], dl ; ret
0x00000000000a84ab : movzx edx, byte ptr [rsp - 6] ; mov byte ptr [rdi + 2], dl ; ret
0x00000000000ac369 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000174010 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000174700 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000a84e1 : movzx edx, word ptr [rsp + 0xc] ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a8693 : movzx edx, word ptr [rsp - 0x14] ; mov word ptr [rdi + 4], dx ; ret
0x0000000000001dab : mul byte ptr [rax] ; mov ecx, 0x72b02084 ; retf
0x00000000000b1457 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003e041 : mulps xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000003e3b7 : mulps xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x000000000003e040 : mulsd xmm1, xmm0 ; movapd xmm0, xmm1 ; ret
0x000000000003e3b6 : mulss xmm1, xmm0 ; movaps xmm0, xmm1 ; ret
0x00000000000818d6 : neg byte ptr [rip - 0x3d770000] ; jmp 0x81872
0x0000000000143d21 : neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd095 : neg eax ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000003f197 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000018f17f : neg eax ; or eax, 1 ; vzeroupper ; ret
0x000000000007bd1f : neg eax ; pop rbx ; ret
0x000000000002255d : neg eax ; ret
0x00000000001c30d4 : nop ; add al, byte ptr [r8] ; and al, 0x7a ; cli ; call rsp
0x00000000001c306c : nop ; add al, byte ptr [rax] ; xor al, 0x63 ; cli ; jmp rax
0x00000000001d3bed : nop ; add al, byte ptr [rbx] ; ret
0x00000000001c5581 : nop ; add al, byte ptr [rdx] ; retf 0xe0a
0x000000000008b2e4 : nop ; add byte ptr [rax], al ; add al, ch ; ret
0x00000000000c6772 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000144921 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000014459b : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x840f
0x00000000001737c7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000003f2ef : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019706f : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x000000000011de67 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11de78 ; call r12
0x00000000000fd68b : nop ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000000000facc8 : nop ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x427e
0x00000000001902fc : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001c112d : nop ; add dword ptr [rax], eax ; add al, 0xc6 ; cmc ; jmp qword ptr [rax]
0x0000000000132a4c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000116f93 : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d2d58 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001d75d8 : nop ; add dword ptr ds:[rax], eax ; add al, 0x5d ; hlt ; call rsi
0x00000000001af350 : nop ; add eax, esi ; jmp rax
0x00000000000687ce : nop ; add rax, rcx ; jmp rax
0x000000000005def5 : nop ; add rax, rdi ; jmp rax
0x000000000005be0e : nop ; add rax, rsi ; jmp rax
0x00000000000a8605 : nop ; add rdx, r8 ; jmp rdx
0x00000000000a8534 : nop ; add rdx, rax ; jmp rdx
0x0000000000022d3f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000014e43f : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001bd1c4 : nop ; and al, 0xfb ; jmp rax
0x00000000000ac0df : nop ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000430ff : nop ; call qword ptr [rbx]
0x0000000000023470 : nop ; call rsi
0x00000000001bd754 : nop ; cdq ; sti ; jmp qword ptr [rax]
0x00000000001dc260 : nop ; clc ; cmc ; call qword ptr [rax]
0x00000000001db049 : nop ; cmc ; call qword ptr [rbx]
0x00000000001db085 : nop ; cmc ; jmp qword ptr [rdi]
0x00000000001c71d8 : nop ; cmp al, byte ptr [rax] ; add byte ptr [rbx + rax], al ; cli ; jmp qword ptr [rcx]
0x00000000001d74d8 : nop ; cmp eax, 0x59740001 ; hlt ; jmp rcx
0x00000000000a205f : nop ; cmp r10b, r8b ; jb 0xa2048 ; mov rdx, rax ; jmp 0xa1ff8
0x00000000000a205e : nop ; cmp r10b, r8b ; jb 0xa2049 ; mov rdx, rax ; jmp 0xa1ff9
0x00000000000a22cf : nop ; cmp r10b, r9b ; jb 0xa22b8 ; mov rdx, rax ; jmp 0xa226e
0x00000000000a1f0f : nop ; cmp r9b, r8b ; jb 0xa1ef8 ; mov rdx, rax ; jmp 0xa1ea8
0x00000000000a24ef : nop ; cmp r9b, r8b ; jb 0xa24d8 ; mov rdx, rax ; jmp 0xa248e
0x00000000001df660 : nop ; idiv r15d ; ret 2
0x00000000001bf81c : nop ; inc byte ptr [rax] ; add byte ptr [rdx + rsi*8], dh ; in eax, dx ; call rax
0x00000000001bd25c : nop ; jb 0x1bd25d ; jmp qword ptr [rax]
0x000000000017357c : nop ; jge 0x1735ac ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x000000000003ecaf : nop ; jmp rdx
0x000000000009a7df : nop ; lea rax, [rdx - 0x10] ; ret
0x00000000001bec94 : nop ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; imul bl ; jmp rax
0x00000000001af3a4 : nop ; mov bh, 0xfc ; call rax
0x00000000001bdb7c : nop ; mov bh, bl ; jmp qword ptr [rax]
0x000000000016e39f : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000130e3f : nop ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000000000908e3 : nop ; mov dword ptr [rip + 0x35d042], eax ; ret
0x000000000016e57f : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000001225ff : nop ; mov eax, 0x11f ; syscall
0x000000000012268f : nop ; mov eax, 0x134 ; syscall
0x000000000012271f : nop ; mov eax, 0x13f ; syscall
0x000000000011bbaf : nop ; mov eax, 0x1c ; syscall
0x00000000000e483f : nop ; mov eax, 0x25 ; syscall
0x0000000000122e8f : nop ; mov eax, 0x30 ; syscall
0x000000000012286f : nop ; mov eax, 0x31 ; syscall
0x00000000001229cf : nop ; mov eax, 0x32 ; syscall
0x000000000012293f : nop ; mov eax, 0x34 ; syscall
0x0000000000110aef : nop ; mov eax, 0x50 ; syscall
0x000000000010fbaf : nop ; mov eax, 0x53 ; syscall
0x0000000000111c1f : nop ; mov eax, 0x56 ; syscall
0x0000000000111d3f : nop ; mov eax, 0x57 ; syscall
0x0000000000111c7f : nop ; mov eax, 0x58 ; syscall
0x00000000001113df : nop ; mov eax, 0x5c ; syscall
0x000000000012250f : nop ; mov eax, 0x63 ; syscall
0x00000000000e5b3f : nop ; mov eax, 0x79 ; syscall
0x0000000000121b2f : nop ; mov eax, 0x87 ; syscall
0x000000000010f96f : nop ; mov eax, 0x89 ; syscall
0x000000000011bc3f : nop ; mov eax, 0x95 ; syscall
0x000000000011764f : nop ; mov eax, 0x99 ; syscall
0x00000000001220bf : nop ; mov eax, 0x9f ; syscall
0x000000000011719f : nop ; mov eax, 0xa3 ; syscall
0x000000000012226f : nop ; mov eax, 0xb1 ; syscall
0x000000000012241f : nop ; mov eax, 0xb4 ; syscall
0x000000000011f8ff : nop ; mov eax, 0xc2 ; syscall
0x000000000011f95f : nop ; mov eax, 0xc3 ; syscall
0x000000000011f83f : nop ; mov eax, 0xc4 ; syscall
0x000000000011f9ef : nop ; mov eax, 0xc5 ; syscall
0x00000000001306a4 : nop ; mov eax, 0xca ; syscall
0x00000000001222cf : nop ; mov eax, 0xfe ; syscall
0x000000000003f69f : nop ; mov eax, 0xffffffff ; jmp 0x3f671
0x0000000000140faf : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000084c7f : nop ; mov eax, 0xffffffff ; ret
0x000000000009d95f : nop ; mov eax, 1 ; ret
0x000000000010179f : nop ; mov eax, 2 ; ret
0x000000000012f6e8 : nop ; mov eax, dword ptr [r12 + 0x60] ; mov dword ptr [rbp - 0x80], eax ; call rcx
0x00000000000bcd6f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xbcdd9 ; ret
0x00000000000bcdbf : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xbcdd9 ; ret
0x00000000001158ef : nop ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000008a1ef : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x00000000000400ef : nop ; mov eax, dword ptr [rip + 0x3ab0b6] ; ret
0x0000000000134d3f : nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000004014f : nop ; mov eax, edx ; ret
0x00000000001cf4d8 : nop ; mov ebp, 0x76940000 ; out dx, al ; call rsp
0x00000000001164af : nop ; mov ecx, 0xc ; mov eax, ecx ; syscall
0x000000000016e93f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000b7ecf : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, [rdi + 3] ; ret
0x0000000000084719 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000090753 : nop ; mov qword ptr [rip + 0x35ab8d], rax ; ret
0x0000000000090743 : nop ; mov qword ptr [rip + 0x35ab95], rax ; ret
0x00000000000906f3 : nop ; mov qword ptr [rip + 0x35ab9d], rax ; ret
0x00000000000906e3 : nop ; mov qword ptr [rip + 0x35abb5], rax ; ret
0x00000000001226ef : nop ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000001223ef : nop ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000001151ff : nop ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000001224af : nop ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000001224df : nop ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x0000000000162a9f : nop ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x0000000000162aef : nop ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x000000000011f8cf : nop ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x000000000011f80f : nop ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x0000000000114d3f : nop ; mov r10d, ecx ; mov eax, 0xdd ; syscall
0x000000000008ef8f : nop ; mov rax, -1 ; ret
0x000000000011fa8f : nop ; mov rax, qword ptr [rax + 0x160] ; ret
0x00000000000e000f : nop ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000008945f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x000000000008934f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000001596bf : nop ; mov rax, qword ptr [rip + 0x2918c1] ; pop rbx ; ret
0x000000000004393f : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000009cf2f : nop ; mov rdi, rbp ; call rax
0x000000000009a2bf : nop ; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000097c1f : nop ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000123c2f : nop ; mov rsi, r13 ; mov edi, ebx ; mov eax, r10d ; syscall
0x00000000000a862f : nop ; mov word ptr [rdi], si ; lea rax, [rdi + rax - 1] ; ret
0x00000000000b698f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000003e9ff : nop ; movmskps eax, xmm0 ; and eax, 8 ; ret
0x00000000001af384 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; cld ; call rax
0x00000000001bd038 : nop ; or eax, 0xee0fffb ; sti ; jmp qword ptr [rax]
0x00000000000b033d : nop ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001bd474 : nop ; outsd dx, dword ptr [rsi] ; sti ; jmp qword ptr [rax]
0x000000000003e4bf : nop ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000000defef : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000019ac7f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009cb2f : nop ; pop rbx ; ret
0x000000000014e4ff : nop ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x00000000000e4d9f : nop ; pop rdi ; mov eax, 0x3a ; syscall
0x00000000001bd68c : nop ; push -5 ; call qword ptr [rax]
0x0000000000130fdf : nop ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001db460 : nop ; pushfq ; cmc ; jmp rax
0x000000000002cadf : nop ; ret
0x0000000000003072 : nop ; ret 0x5bdb
0x00000000001c1aa4 : nop ; ret 1
0x00000000001d8fc0 : nop ; retf
0x00000000001d01d8 : nop ; retf 0
0x0000000000047362 : nop ; retf 0x16
0x000000000000221a : nop ; retf 0x3844
0x0000000000003643 : nop ; retf 0xe9ee
0x00000000001d52d8 : nop ; sbb eax, dword ptr [rcx] ; add ah, dl ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001af394 : nop ; scasb al, byte ptr [rdi] ; cld ; call rax
0x00000000001d5f70 : nop ; stc ; call qword ptr [rdx]
0x00000000001bcd70 : nop ; std ; jmp qword ptr [rax]
0x00000000001bd098 : nop ; sti ; call qword ptr [rax + 0x20fffb48]
0x00000000001bd6a4 : nop ; sti ; call qword ptr [rax]
0x00000000001bdad1 : nop ; sti ; call rsp
0x00000000001bd995 : nop ; sti ; jmp qword ptr [rax + 0x20fffb8f]
0x00000000001bd09c : nop ; sti ; jmp qword ptr [rax]
0x0000000000163479 : nop ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012beff : nop ; sub eax, edi ; ret
0x00000000001bd218 : nop ; sub edi, ebx ; jmp rax
0x000000000008fb4f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000058c6c : nop ; test ah, bh ; dec dword ptr [rax + 0x29] ; ret
0x00000000000d093f : nop ; test rsi, rsi ; jne 0xd0952 ; xor rax, rax ; ret
0x00000000000104f0 : nop ; xchg eax, ebx ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000001b2210 : nop ; xchg eax, edi ; stc ; jmp qword ptr [rax - 0x2f000669]
0x00000000001bd96c : nop ; xchg eax, esi ; sti ; jmp qword ptr [rax]
0x00000000001c5630 : nop ; xchg edi, esp ; call qword ptr [rax]
0x00000000000449cf : nop ; xor eax, eax ; ret
0x00000000000a81ef : nop ; xor edx, edx ; mov qword ptr [rdi], rdx ; pop rbx ; ret
0x00000000001096eb : nop dword ptr [rax + rax] ; call 0xe5907
0x000000000019a7a8 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000143933 : nop dword ptr [rax + rax] ; mov byte ptr [r10], 0 ; ret
0x0000000000134d2b : nop dword ptr [rax + rax] ; mov eax, edi ; bswap eax ; ret
0x00000000000b68cb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000130013 : nop dword ptr [rax + rax] ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000b7b3b : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x0000000000159cb3 : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000860e8 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000021908 : nop dword ptr [rax + rax] ; ret
0x000000000010ea1b : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003fb2b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000bcddb : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000035d3 : nop dword ptr [rax - 0x80] ; fcmove st(0), st(5) ; retf
0x00000000000d0dfc : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000009de55 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000008a1dc : nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000019c64d : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000913d5 : nop dword ptr [rax] ; call rax
0x00000000000a8584 : nop dword ptr [rax] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000121a7c : nop dword ptr [rax] ; mov eax, 0x122 ; syscall
0x000000000011732d : nop dword ptr [rax] ; mov eax, 0x132 ; syscall
0x000000000011023c : nop dword ptr [rax] ; mov eax, 0x15 ; syscall
0x00000000000d5e1c : nop dword ptr [rax] ; mov eax, 0x24 ; syscall
0x00000000000e58dd : nop dword ptr [rax] ; mov eax, 0x27 ; syscall
0x000000000003f17c : nop dword ptr [rax] ; mov eax, 0x3e ; syscall
0x000000000012380c : nop dword ptr [rax] ; mov eax, 0x43 ; syscall
0x000000000007bd2d : nop dword ptr [rax] ; mov eax, 0x52 ; syscall
0x000000000010faac : nop dword ptr [rax] ; mov eax, 0x5f ; syscall
0x000000000011600c : nop dword ptr [rax] ; mov eax, 0x62 ; syscall
0x000000000003f73c : nop dword ptr [rax] ; mov eax, 0x83 ; syscall
0x00000000001163bc : nop dword ptr [rax] ; mov eax, 0x8c ; syscall
0x00000000001163fc : nop dword ptr [rax] ; mov eax, 0x8d ; syscall
0x000000000012201c : nop dword ptr [rax] ; mov eax, 0x9e ; syscall
0x000000000011727d : nop dword ptr [rax] ; mov eax, 0xa2 ; syscall
0x0000000000116fac : nop dword ptr [rax] ; mov eax, 0xab ; syscall
0x000000000012174c : nop dword ptr [rax] ; mov eax, 0xad ; syscall
0x0000000000118a3c : nop dword ptr [rax] ; mov eax, 0xeb ; syscall
0x0000000000040144 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000015c4ed : nop dword ptr [rax] ; mov eax, 1 ; ret
0x0000000000153abc : nop dword ptr [rax] ; mov eax, 2 ; ret
0x000000000011093d : nop dword ptr [rax] ; mov eax, 3 ; syscall
0x000000000011020c : nop dword ptr [rax] ; mov eax, 8 ; syscall
0x00000000000e011d : nop dword ptr [rax] ; mov eax, dword ptr [rdi] ; ret
0x00000000000306bd : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x0000000000081644 : nop dword ptr [rax] ; mov eax, edi ; ret
0x00000000000b759d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000d9f29 : nop dword ptr [rax] ; mov r10d, eax ; jmp 0xd9f02
0x00000000000dc3c9 : nop dword ptr [rax] ; mov r10d, ecx ; jmp 0xdc3a9
0x000000000005150c : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000091ecc : nop dword ptr [rax] ; mov rax, rdx ; ret
0x000000000009cff5 : nop dword ptr [rax] ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x000000000007efbd : nop dword ptr [rax] ; or dword ptr [rdi], 0x20 ; ret
0x00000000000cbdac : nop dword ptr [rax] ; pop rbx ; ret
0x000000000002e161 : nop dword ptr [rax] ; ret
0x000000000008c49d : nop dword ptr [rax] ; xor eax, eax ; jmp 0x8c46d
0x000000000008e525 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000110109 : nop dword ptr [rax] ; xor eax, eax ; syscall
0x000000000018faad : nop dword ptr [rax] ; xor eax, eax ; vzeroupper ; ret
0x0000000000133f5c : nop dword ptr [rax] ; xor esi, esi ; mov rax, rsi ; ret
0x00000000000b7557 : nop dword ptr cs:[rax + rax] ; ret
0x000000000009cff4 : nop dword ptr ds:[rax] ; mov rdi, qword ptr [rbx + 0x48] ; call rax
0x00000000000b7b3a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000014c7ca : nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000000a823a : nop word ptr [rax + rax] ; ret
0x000000000010ea1a : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003fb2a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000bcdda : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x00000000001bd7b4 : not byte ptr [rbp - 0x6a790005] ; sti ; call qword ptr [rsi]
0x000000000015e341 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x000000000003db3d : not eax ; and eax, ecx ; ret
0x000000000003de70 : not eax ; and eax, edx ; ret
0x00000000001674b3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000086b19 : not edx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x86b39
0x00000000001674b2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000086b18 : not rdx ; and rdx, 0xfffffffffffffffc ; add rdx, rcx ; jmp 0x86b3a
0x00000000001857f7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000189409 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185825 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000006f685 : or al, 0 ; add byte ptr [rax], al ; jmp 0x6b8b6
0x000000000011650a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000001164b1 : or al, 0 ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x000000000009547c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x00000000000f4032 : or al, 0 ; add byte ptr [rax], al ; pop rbp ; pop r12 ; ret
0x000000000010e7bd : or al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000f4101 : or al, 0 ; add byte ptr [rax], al ; ret
0x000000000009d0aa : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c9122 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; ret 0xc149
0x000000000016ba28 : or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000bd4df : or al, 0 ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x000000000009d827 : or al, 0 ; cmovne rax, rdx ; ret
0x00000000000e4eb8 : or al, 0 ; mov eax, 0x142 ; syscall
0x00000000000ebb6d : or al, 0 ; movsxd rax, dword ptr [rdx + r15*4] ; add rax, rdx ; jmp rax
0x00000000000e9bcb : or al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x00000000000e6ae1 : or al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000001e34f1 : or al, 0 ; retf
0x00000000001bfb5c : or al, 0x10 ; add dword ptr [rax], eax ; je 0x1bfb0f ; out dx, al ; jmp qword ptr [rax]
0x00000000000a9e46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000009544a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000001d5654 : or al, 0x1f ; add dword ptr [rax], eax ; cwde ; mov ah, 0xf3 ; jmp qword ptr [rcx]
0x000000000008ae53 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000009e7b0 : or al, 0x29 ; clc ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000001c6254 : or al, 0x2b ; add byte ptr [rax], al ; pop rax ; retf 0xffe7
0x00000000001d6654 : or al, 0x2f ; add dword ptr [rax], eax ; or rsi, rsp ; jmp qword ptr [rcx]
0x000000000012169a : or al, 0x30 ; ror byte ptr [rcx], 0xd0 ; ret
0x00000000001c0104 : or al, 0x32 ; add dword ptr [rax], eax ; add al, 0x38 ; int1 ; jmp qword ptr [rax]
0x00000000001c6f54 : or al, 0x38 ; add byte ptr [rax], al ; sub byte ptr [rax - 0x18], dl ; call qword ptr [rdx]
0x0000000000121ffb : or al, 0x3f ; shr eax, cl ; and eax, 3 ; ret
0x00000000000e46d9 : or al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003f24c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000000000e49e6 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e4926 : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000001401fc : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000008dee3 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x8a157
0x00000000000bd164 : or al, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000009da53 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x0000000000001ecd : or al, 0x5c ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000d1249 : or al, 0x5d ; pop r12 ; pop r14 ; ret
0x0000000000130932 : or al, 0x5d ; pop r12 ; ret
0x00000000001da394 : or al, 0x64 ; cmc ; call qword ptr [rdx]
0x00000000000a84e5 : or al, 0x66 ; mov dword ptr [rdi + 4], edx ; ret
0x00000000001da154 : or al, 0x6a ; add dword ptr [rax], eax ; cmp byte ptr [rdx - 0xb], ah ; jmp qword ptr [rbx]
0x000000000003e4f3 : or al, 0x75 ; or dh, bl ; addps xmm0, xmm0 ; ret
0x0000000000133500 : or al, 0x75 ; wait ; mov rax, rdi ; ret
0x00000000001be2bc : or al, 0x79 ; add byte ptr [rax], al ; add eax, r13d ; jmp qword ptr [rax]
0x00000000000defa5 : or al, 0x7c ; ret 0x850f
0x00000000001d7ce4 : or al, 0x7d ; hlt ; jmp qword ptr [rcx]
0x000000000007cf13 : or al, 0x7e ; ret 0x8944
0x00000000000004b3 : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000002cb03 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x2cb17 ; ret
0x00000000000b6fcc : or al, 0x83 ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000005980b : or al, 0x83 ; ret
0x000000000009a9e6 : or al, 0x83 ; retf 0x8902
0x00000000000bba31 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x00000000000a845f : or al, 0x89 ; add rcx, r9 ; jmp rcx
0x000000000005ecba : or al, 0x89 ; ret 0xc689
0x00000000000bbabb : or al, 0x89 ; ret 0xe283
0x00000000000e5e49 : or al, 0x89 ; retf 0x8948
0x00000000000a8ab3 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x00000000000ae884 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001be6dc : or al, 0x8b ; add byte ptr [rax], al ; test byte ptr [rax - 0x18], ch ; jmp qword ptr [rax]
0x0000000000171d4d : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000145f67 : or al, 0x8b ; cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000016c7cd : or al, 0x8b ; lea r9, [r11 + r9] ; jmp r9
0x00000000001be724 : or al, 0x8c ; add byte ptr [rax], al ; push rsp ; push -0x18 ; jmp qword ptr [rax]
0x0000000000125848 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x00000000001cc654 : or al, 0x8f ; add byte ptr [rax], al ; push rdi ; in al, dx ; call qword ptr [rcx]
0x00000000001e1e64 : or al, 0x8f ; sti ; jmp qword ptr [rdx]
0x000000000018ffdf : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x00000000000b675b : or al, 0x93 ; lea rcx, [r11 + rcx] ; jmp rcx
0x00000000001d81e4 : or al, 0x9f ; hlt ; jmp qword ptr [rcx]
0x0000000000002c82 : or al, 0xaf ; xbegin 0xfffffffff8c6f086 ; ret
0x000000000016c7d1 : or al, 0xb ; jmp r9
0x00000000000b675f : or al, 0xb ; jmp rcx
0x00000000001cee54 : or al, 0xb7 ; add byte ptr [rax], al ; sbb al, bl ; cld ; call qword ptr [rax]
0x00000000001567ee : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001e3555 : or al, 0xb8 ; add dword ptr [rbx + 0x4b702], esi ; ret 0x504
0x00000000001dff54 : or al, 0xc8 ; add dword ptr [rax], eax ; sbb byte ptr [rdx - 9], ch ; call rax
0x000000000019a1de : or al, 0xd8 ; test rcx, rcx ; je 0x19a1ee ; call rcx
0x00000000001d6e2c : or al, 0xe6 ; add byte ptr [rax], al ; and byte ptr [rdi], ch ; hlt ; call qword ptr [rdx]
0x000000000002aa3f : or al, 0xe9 ; ret
0x00000000000844bc : or al, 0xeb ; ret 0x5590
0x00000000001d67a4 : or al, 0xf ; hlt ; jmp qword ptr [rcx]
0x00000000000a3f33 : or al, 0xf ; mov dh, 0x55 ; ret 0x8841
0x0000000000154831 : or al, 0xf ; retf 0x5089
0x000000000014dd80 : or al, 0xf ; retf 0xd189
0x000000000003332f : or al, 0xf ; retf 0xd289
0x00000000000bccc5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b7253 : or al, 0xf ; test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x000000000002d643 : or al, 0xf0 ; test rcx, rcx ; je 0x2d653 ; call rcx
0x0000000000174293 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000003f1c3 : or al, 0xf3 ; ret
0x00000000001cf7c4 : or al, 0xf3 ; sti ; call rsp
0x00000000001cf414 : or al, 0xf3 ; sti ; jmp qword ptr [rax]
0x00000000000e0692 : or al, 0xf4 ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000001b103d : or al, 0xf4 ; dec dword ptr [rcx] ; or esi, esp ; jmp qword ptr [rax]
0x00000000001b1071 : or al, 0xf4 ; dec esi ; or dh, ah ; jmp qword ptr [rax]
0x00000000001b0fa5 : or al, 0xf4 ; jmp qword ptr [rax]
0x00000000001b0ff9 : or al, 0xf4 ; jmp qword ptr [rbx]
0x00000000001d66e5 : or al, 0xf4 ; jmp qword ptr [rcx]
0x00000000001b10cd : or al, 0xf4 ; lcall [rdx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000001b10bd : or al, 0xf4 ; push qword ptr [rsi + 0xa] ; hlt ; jmp qword ptr [rax]
0x0000000000062565 : or al, 0xf6 ; ret 0xf01
0x000000000006476d : or al, 0xf6 ; ret 0xf40
0x0000000000119b73 : or al, 0xf7 ; ret 0xfc07
0x00000000001bd035 : or al, 0xfb ; call qword ptr [rax - 0x1f0004f3]
0x000000000010f3c2 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000010fb4e : or al, 1 ; add byte ptr [rax], al ; syscall
0x000000000010f45c : or al, 1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000000971 : or al, 1 ; or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000001e3aa8 : or al, 3 ; add byte ptr [rax], al ; retf
0x00000000000b7490 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000155b4d : or al, 6 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000a8276 : or al, 7 ; test cl, cl ; jne 0xa826f ; ret
0x000000000009a781 : or al, 9 ; ret 0xaee9
0x000000000004fa54 : or al, 9 ; retf 0xbe0f
0x0000000000195ebe : or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000001849cd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001875e1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001849f1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000009670 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdx]
0x000000000000522a : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001201af : or al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000014dc62 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bae1 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000055a4a : or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret
0x00000000000aaee8 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000005a04f : or al, byte ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000087591 : or al, byte ptr [rax] ; add rsp, 0x80 ; ret
0x000000000010bc34 : or al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000008a1da : or al, byte ptr [rax] ; nop dword ptr [rax] ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000bd24a : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x0000000000036b0d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x0000000000039f9c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x00000000000f3d2f : or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x0000000000111cb1 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001bfa85 : or al, byte ptr [rcx] ; add byte ptr [rbp + rbp - 0x12], dh ; jmp qword ptr [rax]
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x00000000001c2655 : or al, byte ptr [rdx] ; add byte ptr [rbx + rax], al ; stc ; call qword ptr [rax]
0x00000000001e2229 : or al, byte ptr [rdx] ; retf
0x000000000018d547 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000a89f8 : or al, ch ; add al, byte ptr [rsi + 0x3948fff7] ; ret
0x0000000000038a3e : or al, ch ; cld ; retf 0xffff
0x000000000013320d : or al, ch ; mov r11b, 0xf5 ; dec dword ptr [rax + 0x39] ; ret
0x000000000003899d : or al, ch ; popfq ; retf
0x0000000000153b63 : or al, ch ; push rdi ; retf
0x0000000000038ae4 : or al, ch ; push rsi ; retf 0xffff
0x000000000004679e : or al, ch ; pushfq ; retf
0x000000000003a7ff : or al, ch ; ret
0x000000000014ee98 : or al, ch ; ret 0xed22
0x00000000000f4700 : or al, ch ; ret 0xf2cb
0x000000000003a278 : or al, ch ; ret 0xffb2
0x000000000003666f : or al, ch ; retf
0x0000000000115670 : or al, ch ; retf 0x1b0
0x000000000004fbcd : or al, ch ; std ; hlt ; std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000098b45 : or al, ch ; xchg eax, ebp ; retf
0x000000000009ee32 : or al, dh ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000001af35d : or al, dh ; call rax
0x00000000001307ad : or bh, bh ; and bl, dh ; ret
0x000000000008993d : or bh, byte ptr [rax - 1] ; ret
0x00000000000cbc6f : or bh, byte ptr [rcx] ; ret
0x000000000012c7f1 : or bh, byte ptr [rcx] ; retf 0x840f
0x00000000000c7af4 : or bh, byte ptr [rip + 0xff] ; je 0xc7b07 ; ret
0x00000000001e2650 : or bh, ch ; add dword ptr [rax], eax ; sbb r15b, al ; jmp qword ptr [rcx]
0x00000000000f6742 : or bh, dh ; ret
0x000000000009eca8 : or bh, dh ; ret 0
0x000000000014dc4e : or bl, al ; mov dword ptr [rsi], 0xb ; ret
0x000000000014b10e : or bl, al ; mov eax, 1 ; ret
0x0000000000103f5c : or bl, al ; nop ; ret
0x0000000000091eca : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x00000000000e1722 : or bl, al ; nop dword ptr [rax] ; ret
0x00000000001413e3 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000123e7e : or bl, al ; ret
0x00000000001bd069 : or bl, bh ; call qword ptr [rax]
0x00000000000352bd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000a0b75 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000103cc8 : or bl, byte ptr [rdx + 0x59] ; pop rbx ; ret
0x0000000000052314 : or bl, ch ; mov dword ptr [rax - 0x77], ecx ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000001bf704 : or bl, dh ; add byte ptr [rax], al ; and al, 0xaa ; in eax, dx ; call qword ptr [rax]
0x0000000000174453 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000115fa7 : or bl, dh ; ret
0x000000000014dc4d : or bl, r8b ; mov dword ptr [rsi], 0xb ; ret
0x00000000000edbc5 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000edb99 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000e983a : or byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x000000000003d208 : or byte ptr [r11 + r9*4 + 0x47], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000b352f : or byte ptr [r14 - 0x77], spl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x00000000000edb8a : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000edc56 : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000024116 : or byte ptr [r15], 0x8e ; ret 1
0x0000000000087dae : or byte ptr [r15], r9b ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000582b5 : or byte ptr [r8 + 0x21], r9b ; retf 0xc689
0x0000000000085ee1 : or byte ptr [r8 + 0x29], r9b ; ret
0x00000000000420bd : or byte ptr [r8 + 0x39], cl ; ret
0x00000000000f3609 : or byte ptr [r8 + 0x39], r9b ; retf 0x1274
0x00000000000f4165 : or byte ptr [r8 + 0x63], r9b ; retf 0x6348
0x0000000000025463 : or byte ptr [r8 + 0xf], cl ; ret
0x0000000000054caf : or byte ptr [r8 + 2], r15b ; ret
0x00000000000edc41 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bd62c : or byte ptr [r8 + r9*2 + 0x48], r14b ; mov eax, ecx ; ret
0x0000000000085faf : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000b350e : or byte ptr [r8 - 0x76b7f7be], cl ; clc ; ret
0x000000000017cfd8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000015d29f : or byte ptr [r8 - 0x77], r9b ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000015a0b2 : or byte ptr [r8 - 0x77], r9b ; out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x000000000003ad92 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000018d722 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000006999 : or byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000054cf4 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x00000000000f212d : or byte ptr [r9 + 0x63], cl ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x000000000014eae6 : or byte ptr [r9 + r9*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000b356e : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000015ed70 : or byte ptr [r9], dil ; ret 0x5275
0x0000000000160b14 : or byte ptr [r9], dil ; ret 0x5675
0x00000000000edc01 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000edbde : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x0000000000115bf8 : or byte ptr [r9], sil ; retf 0xc2f7
0x000000000014c1d3 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x0000000000114cee : or byte ptr [rax + 0x10f], bh ; syscall
0x000000000009d373 : or byte ptr [rax + 0x19], cl ; fild dword ptr [rbx - 0x7cb7fb1d] ; ret
0x00000000000582b6 : or byte ptr [rax + 0x21], cl ; retf 0xc689
0x0000000000085ee2 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000161d54 : or byte ptr [rax + 0x29], cl ; ret 0x1be
0x00000000000f294c : or byte ptr [rax + 0x29], cl ; ret 0x6349
0x0000000000129a4c : or byte ptr [rax + 0x29], cl ; retf
0x00000000000442d3 : or byte ptr [rax + 0x29], cl ; retf 0xc148
0x000000000008a945 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000015085e : or byte ptr [rax + 0x31], cl ; retf 0xe281
0x0000000000135516 : or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x0000000000121879 : or byte ptr [rax + 0x38], bh ; syscall
0x00000000000420be : or byte ptr [rax + 0x39], cl ; ret
0x0000000000026d18 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x00000000001675b9 : or byte ptr [rax + 0x39], cl ; ret 0xf177
0x00000000000530d8 : or byte ptr [rax + 0x39], cl ; retf
0x00000000000f360a : or byte ptr [rax + 0x39], cl ; retf 0x1274
0x00000000001098e4 : or byte ptr [rax + 0x39], cl ; retf 0x2974
0x000000000008480e : or byte ptr [rax + 0x39], cl ; retf 0x776
0x00000000001002de : or byte ptr [rax + 0x39], cl ; retf 0xe475
0x000000000008ff29 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000001544a7 : or byte ptr [rax + 0x63], cl ; ret
0x000000000012d2fa : or byte ptr [rax + 0x63], cl ; ret 0x8949
0x00000000000efb48 : or byte ptr [rax + 0x63], cl ; retf 0x6348
0x000000000012d2f9 : or byte ptr [rax + 0x63], r9b ; ret 0x8949
0x00000000001201ad : or byte ptr [rax + 0xa], bh ; pop rbx ; pop rbp ; ret
0x00000000001dfaa5 : or byte ptr [rax + 0xb], cl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001cb7e6 : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000010e7bb : or byte ptr [rax + 0xc], bh ; pop rbx ; pop rbp ; ret
0x0000000000130fbb : or byte ptr [rax + 0xe6], bh ; syscall
0x00000000000eb0f3 : or byte ptr [rax + 0xf], 0xa3 ; ret 0x830f
0x0000000000134d9b : or byte ptr [rax + 0xf], al ; mov dh, 0xc6 ; or eax, edi ; bswap eax ; ret
0x0000000000025464 : or byte ptr [rax + 0xf], cl ; ret
0x00000000000d50fe : or byte ptr [rax + 0xf], cl ; retf 0x8948
0x0000000000090f06 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000152fa4 : or byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000000000129ba5 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000011fff8 : or byte ptr [rax + 2], bh ; pop rbx ; pop rbp ; ret
0x0000000000054cb0 : or byte ptr [rax + 2], bh ; ret
0x000000000012e46b : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000bd62d : or byte ptr [rax + rcx*2 + 0x48], dh ; mov eax, ecx ; ret
0x00000000000e257d : or byte ptr [rax + rcx*2 - 0x75], ah ; xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x00000000000edc42 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000003e867 : or byte ptr [rax - 0x3f], 0xe0 ; xor byte ptr [rax + 0x21], cl ; retf 0x948
0x0000000000148ff6 : or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000085fb0 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000001db750 : or byte ptr [rax - 0x4ec3ffff], al ; cmc ; call rdx
0x000000000012fd03 : or byte ptr [rax - 0x73], 0x51 ; jo 0x12fd21 ; adc dword ptr [rbp - 0x78], eax ; call rax
0x000000000017f167 : or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x00000000000bd492 : or byte ptr [rax - 0x73], cl ; add eax, 0xd1bc6 ; je 0xbd467 ; ret
0x000000000009ec62 : or byte ptr [rax - 0x73], cl ; add eax, 0xebf36 ; je 0x9ec37 ; ret
0x00000000000fb88e : or byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000907a3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000124e41 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000124ea2 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x000000000011d344 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000010ce36 : or byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x77] ; ret
0x000000000007efa4 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000013ca4f : or byte ptr [rax - 0x75], cl ; xor al, 0x24 ; mov rdi, r13 ; call r12
0x00000000000b350f : or byte ptr [rax - 0x76b7f7be], cl ; clc ; ret
0x000000000012f77d : or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000012fb64 : or byte ptr [rax - 0x77], 0xda ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x0000000000149981 : or byte ptr [rax - 0x77], 0xe7 ; call 0x166456
0x000000000009d101 : or byte ptr [rax - 0x77], cl ; adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000011dd22 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe1113a8b
0x00000000000b3420 : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000134bf8 : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x0000000000052815 : or byte ptr [rax - 0x77], cl ; cmp dword ptr [rax], r9d ; xor eax, eax ; pop rbx ; ret
0x0000000000034ba3 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000083815 : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000007e2f5 : or byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf 0xfa2f
0x000000000017cfd9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000015d2a0 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000015a0b3 : or byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000150d1b : or byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x15cfa6
0x000000000014da4b : or byte ptr [rax - 0x77], cl ; out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x00000000000a0fd2 : or byte ptr [rax - 0x77], cl ; ret
0x000000000012d53f : or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000001080f0 : or byte ptr [rax - 0x77], cl ; ret 0x830f
0x000000000015c6e9 : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000e2ce3 : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000f7293 : or byte ptr [rax - 0x77], cl ; ret 0xed31
0x000000000008562b : or byte ptr [rax - 0x77], cl ; retf 0x294c
0x00000000000ef417 : or byte ptr [rax - 0x77], cl ; retf 0x894c
0x00000000000fbc5d : or byte ptr [rax - 0x77], cl ; retf 0xfde9
0x0000000000101538 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax - 0x75], 0x2d ; popfq ; retf 0x2e
0x000000000003ad93 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x000000000009d077 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000b9389 : or byte ptr [rax - 0x7bf0ffc8], al ; ret 0
0x00000000000430fe : or byte ptr [rax - 0x7cb7ec01], dl ; ret
0x00000000000965b0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000040fc0 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x00000000000ed738 : or byte ptr [rax - 0x7d], cl ; mov byte ptr [rcx], 0x29 ; ret 0x6348
0x00000000000536d6 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000004620d : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001135e6 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000015e50d : or byte ptr [rax - 0x7d], cl ; ret 0x8908
0x000000000010090a : or byte ptr [rax - 0x7d], cl ; ret 0xe808
0x000000000008197b : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000184c2c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000003d245 : or byte ptr [rax], 0x48 ; add ecx, dword ptr [rdi + 0x20] ; mov rax, rcx ; ret
0x00000000001af35c : or byte ptr [rax], 0xf0 ; call rax
0x000000000009d29e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000091b6b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000c66dc : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0xec75
0x0000000000198314 : or byte ptr [rax], al ; add byte ptr [rax + 9], cl ; fmul dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000046ebe : or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000184c2d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187781 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184c51 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000008eb47 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000005998 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000001d7d8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b45
0x000000000001dbb0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b47
0x000000000001e300 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0x1b4b
0x000000000000d648 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 5
0x0000000000010a92 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000699a : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x000000000000ba3a : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x000000000019c71c : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000197c2c : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; retf 0x8b48
0x000000000002540a : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000a7e98 : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0xa4104
0x0000000000121992 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x119 ; syscall
0x000000000003f1b1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000003f1fe : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x000000000003f142 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x000000000003efe5 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000401c1 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, rbx ; mov eax, ecx ; syscall
0x00000000000bbb05 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000022c51 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000018bac : or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x0000000000110211 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000ab068 : or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001e3aa5 : or byte ptr [rax], al ; add byte ptr [rbx + rax], cl ; add byte ptr [rax], al ; retf
0x000000000013f76e : or byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret 0x840f
0x0000000000096eb6 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x96e89 ; ret
0x0000000000097f1c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x00000000001df982 : or byte ptr [rax], al ; and byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000e0735 : or byte ptr [rax], al ; call r14
0x00000000000586e8 : or byte ptr [rax], al ; mov qword ptr [rdi], rax ; mov rax, rdi ; ret
0x00000000000e08be : or byte ptr [rax], al ; mov rax, r14 ; call rax
0x0000000000123400 : or byte ptr [rax], al ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000ba9cd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000baa0b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000ba9ab : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000018bd1e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000141504 : or byte ptr [rbp + 0x32], dh ; add rsp, 0x38 ; ret
0x0000000000053031 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x00000000001410cf : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x0000000000102e61 : or byte ptr [rbp + 1], al ; rol byte ptr [rcx + 0x39], 1 ; retf
0x000000000003e1d7 : or byte ptr [rbp + 6], dh ; addsd xmm0, xmm0 ; ret
0x0000000000052cb3 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000004dc4e : or byte ptr [rbp + rcx*4 + 0x48], al ; dec dword ptr [rax + 1] ; retf 0xc148
0x00000000000d0136 : or byte ptr [rbp - 0x35], dh ; ret
0x000000000019c2d3 : or byte ptr [rbp - 0x77], cl ; ret
0x00000000000ef365 : or byte ptr [rbp - 0x77], cl ; retf
0x00000000000db2b8 : or byte ptr [rbp - 0x7b], al ; rol byte ptr [rbp + 0xf], 0x44 ; ret
0x000000000011110c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000110c23 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x00000000000f45c1 : or byte ptr [rbp - 0x9dd8b0a], al ; ret
0x00000000001cc250 : or byte ptr [rbx + 0x417c0000], cl ; in al, dx ; call qword ptr [rdx]
0x0000000000003e3f : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000014ec4b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x000000000015c45e : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000042da5 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009d04f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000022d43 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000159a2e : or byte ptr [rbx + 0x74fff878], al ; jae 0x1599c1 ; ret 0x3901
0x000000000011dbae : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x0000000000095547 : or byte ptr [rbx + 0x94807e0], al ; ret
0x0000000000095546 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x0000000000147eb5 : or byte ptr [rbx + r14 + 0x56], r9b ; adc byte ptr [rbp + 9], cl ; retf 0x850f
0x00000000000f728e : or byte ptr [rbx + r9*4 + 0x55], r9b ; or byte ptr [rax - 0x77], cl ; ret 0xed31
0x00000000001c9599 : or byte ptr [rbx + rcx + 0x47], al ; ret
0x000000000003d209 : or byte ptr [rbx + rcx*4 + 0x47], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f4162 : or byte ptr [rbx + rcx*4 + 0x4d], cl ; or byte ptr [rax + 0x63], cl ; retf 0x6348
0x00000000000f728f : or byte ptr [rbx + rcx*4 + 0x55], cl ; or byte ptr [rax - 0x77], cl ; ret 0xed31
0x0000000000147eb6 : or byte ptr [rbx + rsi + 0x56], cl ; adc byte ptr [rbp + 9], cl ; retf 0x850f
0x000000000005e997 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000015ff0e : or byte ptr [rbx - 0x6bf0f502], al ; ret
0x000000000007e369 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x0000000000130784 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000001c2e44 : or byte ptr [rbx], bh ; add al, byte ptr [rax] ; in al, 5 ; cli ; jmp qword ptr [rax]
0x00000000000549db : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000054cf5 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x00000000000f28ee : or byte ptr [rcx + 0x39], cl ; ret
0x0000000000063f99 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000080b17 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000007f303 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x00000000000fbf06 : or byte ptr [rcx + 0x63], cl ; adc al, 0x92 ; add rdx, r10 ; jmp rdx
0x00000000000f212e : or byte ptr [rcx + 0x63], cl ; ror byte ptr [rax + 1], 1 ; ret 0x8948
0x00000000000f8a0a : or byte ptr [rcx + 0x80bd], cl ; add byte ptr [rax + 1], cl ; ret 0xc748
0x00000000000a5413 : or byte ptr [rcx + 0xf], al ; mov dh, 0x34 ; adc byte ptr [rcx - 0x77], cl ; ret 0xb60f
0x000000000007cef9 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x00000000000a5f23 : or byte ptr [rcx + 0xf], al ; mov dh, 0xc ; adc byte ptr [rcx - 0x77], cl ; ret 0xb60f
0x0000000000052bbb : or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000000f33c2 : or byte ptr [rcx + 9], al ; ret 0x8944
0x00000000000f33b4 : or byte ptr [rcx + 9], al ; retf 0x8141
0x00000000000539d0 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000000e2859 : or byte ptr [rcx + rcx*4 + 0x3c], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000001449f1 : or byte ptr [rcx + rcx*4 + 0x50], al ; add al, 0xe9 ; retf
0x00000000000460ec : or byte ptr [rcx + rcx*4 + 4], cl ; and al, 0xe8 ; retf 0xd7
0x0000000000093da6 : or byte ptr [rcx + rcx*4 - 0x19], cl ; call qword ptr [rax]
0x000000000014eae7 : or byte ptr [rcx + rcx*4 - 0x1a], cl ; mov rdi, rbx ; call qword ptr [rax]
0x000000000012f2d1 : or byte ptr [rcx + rcx*4 - 0x1e], 0xf ; adc dword ptr [rbp - 0x78], eax ; call rax
0x0000000000094032 : or byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x0000000000085b51 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000040952 : or byte ptr [rcx + rcx*4 - 2], cl ; call r14
0x00000000000a83c6 : or byte ptr [rcx + rcx*8 - 0x3fce128b], al ; ret
0x0000000000052bc2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000043f3f : or byte ptr [rcx - 0x3e], bh ; xor eax, eax ; ret
0x00000000000fb3cf : or byte ptr [rcx - 0x3ff001e], al ; dec dword ptr [rcx] ; retf 0x5089
0x000000000011dc1b : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x00000000000efc36 : or byte ptr [rcx - 0x75], cl ; je 0xefc66 ; or byte ptr [rcx], ch ; ret
0x00000000000b356f : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000000981bf : or byte ptr [rcx - 0x77], cl ; ret
0x00000000001074b5 : or byte ptr [rcx - 0x77], cl ; ret 0x6de9
0x0000000000107127 : or byte ptr [rcx - 0x77], cl ; ret 0x8b41
0x000000000003c93a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000011d3ea : or byte ptr [rcx - 0x77], cl ; retf
0x0000000000100f2e : or byte ptr [rcx - 0x78], al ; cmp r9b, r13b ; retf 0xfffb
0x0000000000124f18 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x124f2a ; ret
0x0000000000124fa8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x124fba ; ret
0x0000000000125048 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12505a ; ret
0x00000000001250d8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1250ea ; ret
0x0000000000125168 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12517a ; ret
0x00000000001251f8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12520a ; ret
0x0000000000125298 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1252aa ; ret
0x0000000000125338 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12534a ; ret
0x00000000001253d8 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1253ea ; ret
0x0000000000125468 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12547a ; ret
0x0000000000125503 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125515 ; ret
0x0000000000125598 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1255aa ; ret
0x00000000001258aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1258bc ; ret
0x000000000012592a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x12593c ; ret
0x00000000001259aa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x1259bc ; ret
0x0000000000125a2a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125a3c ; ret
0x0000000000125aaa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125abc ; ret
0x0000000000125b2a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125b3c ; ret
0x0000000000125baa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125bbc ; ret
0x0000000000125c2a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125c3c ; ret
0x0000000000125caa : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125cbc ; ret
0x0000000000125d2a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125d3c ; ret
0x0000000000125da7 : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125db9 ; ret
0x0000000000125e2a : or byte ptr [rcx - 0x7c172c07], cl ; loopne 0x125e3c ; ret
0x0000000000095792 : or byte ptr [rcx - 0x7d], cl ; and al, 8 ; add eax, ebp ; ret 0xffd4
0x00000000000bd3ed : or byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x00000000000f5367 : or byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000000f8301 : or byte ptr [rcx - 0x7d], cl ; ret 0x4c30
0x0000000000095791 : or byte ptr [rcx - 0x7d], r9b ; and al, 8 ; add eax, ebp ; ret 0xffd4
0x0000000000144225 : or byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x0000000000123a93 : or byte ptr [rcx - 0x81f7b], cl ; dec dword ptr [rax + 0x63] ; ret 0x8b41
0x000000000011d3b6 : or byte ptr [rcx - 0xa], al ; ret
0x00000000001dfd18 : or byte ptr [rcx - 9], ah ; jmp qword ptr [rax]
0x000000000007b9c5 : or byte ptr [rcx], ah ; test byte ptr [rax + 9], cl ; ret
0x000000000010f3d2 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000007bd64 : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000010f474 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000edc2c : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000edbdf : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x00000000000d0133 : or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x000000000015ed71 : or byte ptr [rcx], bh ; ret 0x5275
0x0000000000160b15 : or byte ptr [rcx], bh ; ret 0x5675
0x00000000000edc02 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000efc3b : or byte ptr [rcx], ch ; ret
0x0000000000043833 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000010126b : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000115bf9 : or byte ptr [rcx], dh ; retf 0xc2f7
0x00000000000d8f89 : or byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x000000000008fb93 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000113871 : or byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0xc3 ; ret
0x000000000007b9c4 : or byte ptr [rcx], spl ; test byte ptr [rax + 9], cl ; ret
0x00000000001ad19e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001dfa59 : or byte ptr [rdi + 0xb], al ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret
0x000000000006c2c6 : or byte ptr [rdi + r9 - 0x4a], r8b ; sub byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000107122 : or byte ptr [rdi + rcx - 0x4a], al ; pop rax ; or byte ptr [rcx - 0x77], cl ; ret 0x8b41
0x000000000006c2c7 : or byte ptr [rdi + rcx - 0x4a], al ; sub byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000289ab : or byte ptr [rdi], 0x85 ; retf 0xfffa
0x0000000000028d37 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000024117 : or byte ptr [rdi], 0x8e ; ret 1
0x00000000000304b4 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000008a251 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000087daf : or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000014848a : or byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000a42cf : or byte ptr [rdi], cl ; mov dh, 0x55 ; ret 0x8349
0x0000000000045202 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000153d95 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add eax, 1 ; ret
0x000000000015e1ca : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x18 ; ret
0x0000000000111c10 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x0000000000121ac8 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000014fe89 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; pop rbx ; pop rbp ; ret
0x000000000004f468 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000005216f : or byte ptr [rdi], cl ; ret 0x8d4c
0x000000000003f644 : or byte ptr [rdi], cl ; ret 0xc289
0x0000000000033324 : or byte ptr [rdi], cl ; retf 0x8941
0x000000000014dd70 : or byte ptr [rdi], cl ; retf 0xd189
0x000000000016cd9b : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000009267e : or byte ptr [rdi], cl ; test dword ptr [rbx], eax ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f677f : or byte ptr [rdi], cl ; test dword ptr [rdi], edi ; add al, 0 ; add dh, dh ; ret 0x7420
0x00000000000fe8e3 : or byte ptr [rdi], cl ; test dword ptr [rsi - 0xa000000], eax ; ret 0x7420
0x0000000000097d23 : or byte ptr [rdi], cl ; test esi, ebx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000053633 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000021bca : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x000000000009d60a : or byte ptr [rdx + 0xb], dh ; mov rax, r8 ; mov qword ptr [rdi], rsi ; ret
0x0000000000084293 : or byte ptr [rdx + rbx - 0x7d], dh ; retf 0x4808
0x000000000004068c : or byte ptr [rdx], 0 ; add rsp, 8 ; ret
0x00000000001d5950 : or byte ptr [rdx], ah ; add dword ptr [rax], eax ; sbb al, 0xc4 ; jmp qword ptr [rcx]
0x00000000001d61f8 : or byte ptr [rdx], al ; hlt ; jmp qword ptr [rcx]
0x00000000000edb9a : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000edbc6 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000001158f2 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000001158f1 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000001be79c : or byte ptr [rsi + 0x7fd40000], 0xe8 ; jmp rsp
0x00000000000b6121 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000005fa8 : or byte ptr [rsi + 6], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000b3530 : or byte ptr [rsi - 0x77], ah ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000000973 : or byte ptr [rsi], al ; and al, 0xa0 ; add byte ptr [rax], al ; ret
0x00000000000edc57 : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000edb8b : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003e3e : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001160f7 : or ch, bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000001e3254 : or ch, byte ptr [rdi + 5] ; ret
0x00000000001ce365 : or ch, ch ; call qword ptr [rax]
0x00000000001ce405 : or ch, ch ; call qword ptr [rcx]
0x00000000001ce305 : or ch, ch ; jmp qword ptr [rcx]
0x00000000001c7bf9 : or ch, cl ; jmp qword ptr [rdx]
0x000000000003dd0b : or cl, bl ; std ; fstp st(1) ; ret
0x00000000001c9596 : or cl, byte ptr [r14] ; or byte ptr [rbx + rcx + 0x47], al ; ret
0x000000000002bec1 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000000f1e12 : or cl, byte ptr [rax + 0x39] ; ret 0x8d44
0x0000000000085449 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x00000000001015be : or cl, byte ptr [rax - 0x77] ; ret 0x79e8
0x00000000001839dc : or cl, byte ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x0000000000080ab7 : or cl, byte ptr [rax - 0x7d] ; ret
0x000000000009e1a2 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000058cbe : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000c0706 : or cl, byte ptr [rax - 0x7d] ; xlatb ; add byte ptr [rax + 0x29], cl ; ret 0xf66
0x0000000000102fd2 : or cl, byte ptr [rbx + rcx*4 + 0x14] ; ret 0x894c
0x0000000000134dd5 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x0000000000166b84 : or cl, byte ptr [rcx + rcx*4 - 0xe] ; add r9, qword ptr [rsp + 8] ; call rax
0x0000000000002deb : or cl, byte ptr [rcx - 0x13e347e0] ; clc ; ret
0x00000000000d9502 : or cl, byte ptr [rcx - 0x77] ; ror dword ptr [rax - 0x7d], 1 ; ret 0xf601
0x0000000000134d55 : or cl, byte ptr [rcx - 0xda08] ; inc dword ptr [rax] ; ret
0x000000000017ef06 : or cl, byte ptr [rdi] ; test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x0000000000130bbb : or cl, byte ptr [rdi] ; test dword ptr [rsi - 0x14000002], edi ; retf 0xb7e8
0x000000000015ff11 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000d480d : or cl, byte ptr [rsi] ; add al, ch ; retf
0x00000000001c9597 : or cl, byte ptr [rsi] ; or byte ptr [rbx + rcx + 0x47], al ; ret
0x0000000000136627 : or cl, ch ; ret 0xfffd
0x000000000008b4e6 : or cl, ch ; retf
0x0000000000002c9f : or cl, cl ; clc ; ret
0x00000000000bb385 : or cl, cl ; cmove rax, rdx ; ret
0x00000000001b0e91 : or dh, ah ; call qword ptr [rax]
0x00000000001b0e25 : or dh, ah ; call rax
0x00000000001b1051 : or dh, ah ; jmp qword ptr [rax]
0x00000000001af361 : or dh, al ; jmp qword ptr [rax]
0x00000000001acb82 : or dh, al ; mov ebx, dword ptr [rdx] ; retf 0x7272
0x000000000003e4f5 : or dh, bl ; addps xmm0, xmm0 ; ret
0x0000000000174373 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000011edb5 : or dh, bl ; ret
0x0000000000064232 : or dh, byte ptr [rax + 0x38] ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000001ac9aa : or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x00000000001e31d0 : or dh, byte ptr [rbp + 5] ; retf
0x00000000000bc0e6 : or dh, byte ptr [rbp - 0x11] ; ret
0x00000000000efe61 : or dh, byte ptr [rsp + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000145f55 : or dh, dh ; ret 0x7401
0x000000000014e1a4 : or dh, dh ; ret 0x8802
0x00000000000921a7 : or dh, dh ; ret 0xf02
0x00000000001c2e79 : or dl, bh ; jmp rsp
0x000000000010f486 : or dword ptr [rax + 0x1c], edi ; syscall
0x0000000000147a1b : or dword ptr [rax + 0x39], ecx ; ret 0x850f
0x00000000000ef2d2 : or dword ptr [rax + 0x39], ecx ; ret 0xdb77
0x00000000000024e3 : or dword ptr [rax + 0x41001835], 0xffffffdd ; out 0xa9, al ; ret 0xbd07
0x000000000002efab : or dword ptr [rax + 0x440ffff9], eax ; retf 0xd88
0x0000000000097f1a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x0000000000104034 : or dword ptr [rax + 8], 0x2000 ; ret
0x0000000000018b7b : or dword ptr [rax + rax], edx ; add byte ptr [rax], al ; and al, 0 ; add byte ptr [rax], al ; retf
0x000000000016b2f7 : or dword ptr [rax + rax], edx ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000115dc3 : or dword ptr [rax + rax], edx ; mov eax, 0x10 ; syscall
0x000000000013c9b0 : or dword ptr [rax - 0x73], ecx ; cmp eax, 0x2b2e28 ; call rax
0x0000000000152f13 : or dword ptr [rax - 0x73], ecx ; mov ebx, 0xc8 ; call rax
0x000000000009cd48 : or dword ptr [rax - 0x75], ecx ; add eax, 0x34e1f8 ; call qword ptr [rax]
0x000000000009cc83 : or dword ptr [rax - 0x75], ecx ; add eax, 0x34e2bd ; call qword ptr [rax]
0x000000000009cbc8 : or dword ptr [rax - 0x75], ecx ; add eax, 0x34e378 ; call qword ptr [rax]
0x000000000007ef68 : or dword ptr [rax - 0x75], ecx ; mov edi, 0xe0 ; jmp rax
0x000000000013a059 : or dword ptr [rax - 0x77], ecx ; ret 0x850f
0x00000000000fbcbc : or dword ptr [rax - 0x7b], ecx ; ror byte ptr [rdi], 0x85 ; ret
0x00000000000a1561 : or dword ptr [rax - 0x7c], eax ; test byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000514d5 : or dword ptr [rax - 0x7d], ecx ; call 0xffffffffc33e5ce5
0x000000000002eaee : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000c8c2a : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000ca731 : or dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x00000000000ca208 : or dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000f619f : or dword ptr [rax - 0x7d], ecx ; ret 0x4c04
0x00000000000b644e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000001c40a1 : or dword ptr [rax], eax ; add byte ptr [rax + rbp - 0x1a], cl ; call rcx
0x00000000001058c1 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000184b5d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018bbcf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184ab7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000006a42 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000009a42 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000a7e82 : or dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xa4104
0x0000000000086587 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002256a : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000157f7f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x000000000014dc47 : or dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rsi + 8], xmm0 ; ret
0x000000000010e9d1 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011ba0d : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000004c88a : or dword ptr [rax], eax ; add byte ptr [rax], bh ; ret
0x00000000000b058e : or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000b5675 : or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000011f6ed : or dword ptr [rax], eax ; pop rbx ; ret
0x0000000000029bc3 : or dword ptr [rax], ebp ; add byte ptr [rcx - 0x77], al ; ret 0x5be9
0x00000000001597d3 : or dword ptr [rax], ebx ; sub dword ptr [rax], eax ; pop rbx ; ret
0x00000000001a9b17 : or dword ptr [rax], ecx ; retf
0x00000000000531c1 : or dword ptr [rbp + 0x39], ecx ; retf
0x00000000001ac2f3 : or dword ptr [rbp + 0x68], edi ; mov ch, 0x41 ; outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x0000000000191416 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000002f0f2 : or dword ptr [rbx + 0x18], 0 ; ret
0x000000000011a973 : or dword ptr [rbx - 0x76b7ffff], esp ; ret 0x91e8
0x00000000000fcd94 : or dword ptr [rbx - 0x7af00002], eax ; ret 9
0x000000000007efb3 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a970 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000090408 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x00000000001b1040 : or dword ptr [rbx], ecx ; hlt ; jmp qword ptr [rax]
0x0000000000043e9c : or dword ptr [rcx - 0x7d], 0xfffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x00000000000a0812 : or dword ptr [rcx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000014e69d : or dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000111c54 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000023e0 : or dword ptr [rdi + 0x2735a120], 0xffffff98 ; retf 0x81c0
0x0000000000097533 : or dword ptr [rdi + 0x35], eax ; add byte ptr [rax - 0x7d], cl ; retf 0x4901
0x0000000000167493 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x000000000007efc0 : or dword ptr [rdi], 0x20 ; ret
0x000000000003f8f6 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001395dd : or dword ptr [rdi], ecx ; retf
0x000000000017eee6 : or dword ptr [rdi], ecx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x00000000000c911e : or dword ptr [rdi], ecx ; xchg byte ptr [rdi], ah ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; ret 0xc149
0x000000000005bdd1 : or dword ptr [rdi], ecx ; xchg byte ptr [rsp + rbx], dh ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007d602 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000009d909 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x3145
0x000000000004865c : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8348
0x000000000009d8b1 : or dword ptr [rdi], ecx ; xchg eax, esi ; ret 0xf631
0x000000000014429d : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x841
0x000000000011c713 : or dword ptr [rdi], ecx ; xchg esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x000000000004b638 : or dword ptr [rdi], edx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001588bb : or dword ptr [rdx + 0x5b90ffec], ecx ; ret
0x00000000001acb4e : or dword ptr [rdx + 2], edx ; rcr dword ptr [rcx], cl ; retf 0xbb9a
0x000000000009d992 : or dword ptr [rdx - 1], edi ; cmovbe eax, edx ; ret
0x000000000009ef8e : or dword ptr [rip + 0x450f4800], 0xffffffc2 ; ret
0x000000000007ed13 : or dword ptr [rsi + rsi + 0x158d4800], edx ; ret 0x368e
0x00000000000cd051 : or dword ptr [rsi], 0x3d8d4800 ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000155e2d : or dword ptr [rsi], eax ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000049384 : or dword ptr [rsi], edx ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x000000000018d63f : or dword ptr cs:[rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015dd3a : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009c1ca : or eax, 0x117aaa ; mov rdx, rcx ; jmp 0x9c16d
0x000000000003dedb : or eax, 0x17df30 ; orpd xmm0, xmm1 ; ret
0x00000000000b8191 : or eax, 0x1c478d48 ; ret
0x00000000000b8ff1 : or eax, 0x1d478d48 ; ret
0x000000000017ef68 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x00000000000e7aa0 : or eax, 0x358d4800 ; retf 0xcd9
0x000000000007d422 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000007cc8a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000bd508 : or eax, 0x440f4800 ; ret 0x90c3
0x000000000002ebfa : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001484ba : or eax, 0x441f0f ; add byte ptr [rcx - 0x73], al ; ret
0x000000000009d867 : or eax, 0x450f4800 ; ret 0xc3f3
0x00000000000b1162 : or eax, 0x48c0bc0f ; lea eax, [rdi + rax] ; ret
0x00000000000d674a : or eax, 0x48d08948 ; add esp, 8 ; ret
0x0000000000103d7f : or eax, 0x48fffff9 ; add esp, 0x18 ; ret
0x000000000007b5e2 : or eax, 0x5bd88948 ; ret
0x00000000000b7275 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x0000000000115999 : or eax, 0x80000000 ; mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000185707 : or eax, 0x83480000 ; ret 0x4910
0x00000000001872a1 : or eax, 0x83480000 ; ret 0xe910
0x0000000000185735 : or eax, 0x83480000 ; ret 0xeb10
0x00000000000e220d : or eax, 0x83480feb ; ret
0x000000000002f8fb : or eax, 0x83486274 ; ret
0x00000000000b8939 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000110407 : or eax, 0x89000001 ; ret
0x000000000005cfc7 : or eax, 0x894c0000 ; retf 0x894c
0x00000000000aabe8 : or eax, 0x894d0000 ; retf
0x000000000003d32a : or eax, 0x89c08500 ; ret
0x000000000019ade2 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000015c472 : or eax, 0x8c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d3cc6 : or eax, 0x940fc085 ; ret
0x00000000000bd07a : or eax, 0x974c985 ; xor eax, eax ; ret
0x00000000000d0a62 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x00000000001aa9a1 : or eax, 0xcad7947e ; jmp 0x1aa94d
0x00000000001a4839 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000001a4845 : or eax, 0xdc80000 ; add byte ptr [rax], al ; retf
0x00000000001acb33 : or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000000285f5 : or eax, 0xea810000 ; ret 0
0x00000000001bd039 : or eax, 0xee0fffb ; sti ; jmp qword ptr [rax]
0x00000000001ac7d3 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x00000000001c26dd : or eax, 0xef40002 ; stc ; jmp rax
0x00000000000bd498 : or eax, 0xf3c27400 ; ret
0x000000000009ef16 : or eax, 0xf48000e ; ret 0xc3f3
0x0000000000174223 : or eax, 0xf7f0ff3 ; ret
0x0000000000002e01 : or eax, 0xf8eeb385 ; ret
0x000000000003f19d : or eax, 0xffffffff ; ret
0x000000000018acf9 : or eax, 1 ; ret
0x000000000018f181 : or eax, 1 ; vzeroupper ; ret
0x00000000001d02dc : or eax, dword ptr [r8] ; add byte ptr [rax], cl ; add byte ptr [rax], al ; pushfq ; retf
0x0000000000094fa4 : or eax, dword ptr [rax] ; add al, ch ; int 0xc3
0x000000000012c821 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ror byte ptr [rbx + 0x25], 1 ; ret 0x2beb
0x00000000000ca683 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001848fd : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187441 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184921 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001dfa0e : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add ah, cl ; ret 1
0x00000000000040f0 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010630 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001e0224 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ah ; retf 1
0x00000000001e019c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; cmp al, 0 ; add byte ptr [rax], al ; pop rsp ; retf 1
0x00000000001e02ef : or eax, dword ptr [rax] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x000000000014dc52 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000011bab1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001d0291 : or eax, dword ptr [rax] ; add byte ptr [rax], cl ; add byte ptr [rax], al ; push rax ; retf
0x00000000001d02dd : or eax, dword ptr [rax] ; add byte ptr [rax], cl ; add byte ptr [rax], al ; pushfq ; retf
0x00000000000aad68 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000caf18 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0x8d44
0x00000000000caf40 : or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0xc283
0x000000000005a138 : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000400c8 : or eax, dword ptr [rax] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000f90e1 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000ff2ba : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000001e351e : or eax, dword ptr [rax] ; retf
0x00000000001df9da : or eax, dword ptr [rax] ; xor byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 1
0x0000000000111d14 : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001cb7e8 : or eax, dword ptr [rdx] ; jae 0x1cb7fa ; ret
0x00000000001e30d2 : or eax, dword ptr [rdx] ; ret 0xe0a
0x00000000001dd23d : or eax, dword ptr [rdx] ; ret 0xf00e
0x0000000000155c02 : or eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000003e247 : or eax, ecx ; sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000134da0 : or eax, edi ; bswap eax ; ret
0x000000000003e155 : or eax, edx ; movq xmm0, rax ; ret
0x000000000004393c : or eax, edx ; ret
0x00000000001216e2 : or eax, esi ; ret
0x000000000008fb44 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000bd431 : or ebp, dword ptr [rip + 0xf480001] ; ret 0x66c3
0x00000000001afdf8 : or ebp, dword ptr [rsi - 0xe] ; jmp rax
0x000000000009c69f : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call qword ptr [rdx]
0x000000000008f7cb : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x0000000000081eb0 : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001743e3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000007bd3e : or ebx, esi ; ret
0x000000000011379a : or ecx, dword ptr [rax + 0x2b] ; push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000009accf : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000008b207 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000081408 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000009e95c : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000119383 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000019ae5f : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x000000000012c08d : or ecx, dword ptr [rax - 0x7d] ; ret 0x4830
0x0000000000090409 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x0000000000052e93 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x00000000001285b1 : or ecx, dword ptr [rbp - 0x76b70011] ; ret 0x8948
0x00000000000bcd64 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000bcdb4 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000ca432 : or ecx, dword ptr [rcx + 0x63] ; retf 0x8d4c
0x0000000000147811 : or ecx, dword ptr [rcx + rcx*4 + 0x3c] ; ret 0x2e66
0x000000000009d60c : or ecx, dword ptr [rcx + rcx*4 - 0x40] ; mov qword ptr [rdi], rsi ; ret
0x0000000000197adc : or ecx, dword ptr [rcx - 0x7d] ; ret 0x4904
0x00000000000a0811 : or ecx, dword ptr [rcx] ; add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x000000000014dd64 : or ecx, dword ptr [rdi] ; retf 0xd285
0x00000000000b7233 : or ecx, dword ptr [rdi] ; test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000e6653 : or edi, dword ptr [rax + 0xfde8] ; jne 0xe66ab ; ret
0x0000000000129b2c : or edi, dword ptr [rax + 1] ; ret
0x00000000000a4bd0 : or edi, dword ptr [rax] ; retf
0x000000000012f236 : or edi, dword ptr [rcx] ; ret 0xf7e
0x0000000000140a5c : or edi, dword ptr [rdx + 0x104] ; cmove eax, edx ; ret
0x00000000000bad97 : or edi, edi ; loope 0xbae0a ; nop dword ptr [rax + rax] ; ret
0x000000000003e396 : or edi, edx ; movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x000000000011ba70 : or edx, 0x40 ; mov eax, ecx ; syscall
0x000000000003fffd : or edx, dword ptr [rax + rax*8] ; mov qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000002ddf : or edx, ebp ; clc ; ret
0x000000000003dcf5 : or edx, esi ; je 0x3dc7d ; ret
0x00000000001d374d : or edx, esi ; jmp rdx
0x00000000001de808 : or esi, dword ptr [r14 + r9 + 0x18] ; ret
0x000000000014bc34 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001de809 : or esi, dword ptr [rsi + rcx + 0x18] ; ret
0x000000000011593e : or esi, eax ; xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x000000000007f110 : or esi, ebp ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000174303 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000003f154 : or esi, ebx ; ret
0x0000000000003bb0 : or esi, edx ; push rbp ; jg 0x3c23 ; xchg eax, ebp ; retf 0x10bf
0x00000000001b0fed : or esi, esp ; inc dword ptr [rbx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000001b0fd5 : or esi, esp ; jmp qword ptr [rax + 0x20fff40b]
0x00000000001b0f99 : or esi, esp ; jmp qword ptr [rax]
0x00000000001d6659 : or esi, esp ; jmp qword ptr [rcx]
0x000000000007efb4 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008a971 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000000306b : or esp, dword ptr [rdx] ; js 0x3025 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000019a24b : or esp, dword ptr [rip - 0x74b79c00] ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001ca396 : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000114a44 : or esp, dword ptr [rsi - 0x77] ; push rsi ; xor ax, ax ; ret
0x00000000001d657d : or esp, esi ; jmp qword ptr [rcx]
0x0000000000104033 : or qword ptr [rax + 8], 0x2000 ; ret
0x0000000000043e9b : or qword ptr [rcx - 0x7d], 0xfffffffffffffff9 ; add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000167492 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x000000000003f8f5 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000017eee5 : or qword ptr [rdi], rcx ; test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000011ba6f : or r10d, 0x40 ; mov eax, ecx ; syscall
0x0000000000174452 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001743e2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000174372 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001b0ff0 : or r14d, esp ; jmp qword ptr [rax]
0x0000000000174302 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000001e30d1 : or r8d, dword ptr [r10] ; ret 0xe0a
0x00000000001e02ee : or r8d, dword ptr [r8] ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; retf
0x00000000001df9d9 : or r8d, dword ptr [r8] ; xor byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 1
0x000000000002bec0 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x000000000017ef67 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000007d421 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000007cc89 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003f19c : or rax, 0xffffffffffffffff ; ret
0x000000000018d422 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185987 : or rax, qword ptr [r8] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000400c7 : or rax, qword ptr [r8] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001dfa0d : or rax, qword ptr [rax] ; add byte ptr [rax], al ; add ah, cl ; ret 1
0x00000000001d0290 : or rax, qword ptr [rax] ; add byte ptr [rax], cl ; add byte ptr [rax], al ; push rax ; retf
0x00000000001cb7e7 : or rax, qword ptr [rdx] ; jae 0x1cb7fb ; ret
0x00000000001dd23c : or rax, qword ptr [rdx] ; ret 0xf00e
0x000000000003e154 : or rax, rdx ; movq xmm0, rax ; ret
0x000000000004393b : or rax, rdx ; ret
0x00000000001216e1 : or rax, rsi ; ret
0x00000000001d6658 : or rsi, rsp ; jmp qword ptr [rcx]
0x00000000001ca395 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x000000000014e1a3 : or sil, sil ; ret 0x8802
0x0000000000155e2c : or word ptr [rsi], ax ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000003dee0 : orpd xmm0, xmm1 ; ret
0x000000000003dee1 : orps xmm0, xmm1 ; ret
0x000000000003e2ae : orps xmm0, xmm3 ; ret
0x0000000000130f65 : out 0, al ; add byte ptr [rax], al ; syscall
0x00000000001bf61d : out 0, al ; add byte ptr [rsi + rbp - 0x13], al ; call rsp
0x0000000000134da9 : out 0x10, eax ; movzx eax, si ; or eax, edi ; bswap eax ; ret
0x000000000003d785 : out 0x25, eax ; or eax, 0x89c08500 ; ret
0x000000000012c7dd : out 0x2b, al ; add byte ptr [rax + 0x63], cl ; retf 0x4864
0x000000000014b160 : out 0x31, eax ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000010f569 : out 0x44, al ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000015d2a3 : out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x0000000000158f50 : out 0x48, al ; mov edi, ebp ; call rax
0x000000000014eaea : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000149fd6 : out 0x48, al ; mov edi, ebx ; mov rcx, r13 ; call r10
0x000000000008370d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000000bce40 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000052c58 : out 0x48, eax ; mov eax, edx ; ret
0x000000000009a850 : out 0x48, eax ; sub eax, 0x10 ; ret
0x00000000000a0930 : out 0x4c, eax ; mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000001b16 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x00000000000eb163 : out 0x77, eax ; retf
0x00000000001ac3c0 : out 0x78, al ; jnp 0x1ac422 ; retf
0x00000000000306d3 : out 0x80, eax ; sete al ; ret
0x0000000000121dd0 : out 0x89, al ; fistp qword ptr [rax + 0x113] ; syscall
0x00000000001219e4 : out 0x89, al ; fistp qword ptr [rax + 0x119] ; syscall
0x0000000000122c8c : out 0x89, al ; fistp qword ptr [rax + 0x2c] ; syscall
0x0000000000122a5c : out 0x89, al ; fistp qword ptr [rax + 0x2d] ; syscall
0x0000000000116946 : out 0x89, al ; out dx, eax ; mov eax, 0x147 ; syscall
0x0000000000116a56 : out 0x89, al ; out dx, eax ; mov eax, 0x148 ; syscall
0x0000000000106175 : out 0x8d, eax ; push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000024ea : out 0xa9, al ; ret 0xbd07
0x00000000000038fc : out 0xb0, al ; test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x00000000001aa951 : out 0xb3, al ; retf 0xe80
0x00000000001ab680 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000163156 : out 0xd7, al ; cli ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; sahf ; ret 0x8349
0x0000000000002739 : out 0xdf, eax ; syscall
0x000000000009d865 : out 0xe0, eax ; or eax, 0x450f4800 ; ret 0xc3f3
0x00000000001c38fd : out 0xe5, al ; call qword ptr [rcx]
0x00000000000d442c : out 0xe8, eax ; outsb dx, byte ptr [rsi] ; retf 0xffff
0x000000000002f747 : out 0xe8, eax ; ret
0x00000000000c4bef : out 0xe8, eax ; retf
0x0000000000148880 : out 0xe8, eax ; retf 0x1db
0x000000000002c660 : out 0xe8, eax ; retf 0xff4b
0x00000000001cacb1 : out 0xeb, al ; jmp qword ptr [rdi]
0x00000000001ae2f5 : out 0xeb, al ; jmp rcx
0x00000000001cad4d : out 0xeb, eax ; jmp qword ptr [rbx]
0x0000000000034aca : out 0xeb, eax ; retf 0x8b49
0x00000000001d01dd : out 0xee, al ; call qword ptr [rax]
0x00000000001d01f1 : out 0xee, al ; call qword ptr [rdx]
0x00000000001af2e1 : out 0xef, al ; jmp rax
0x000000000012fc34 : out 0xf, eax ; adc dword ptr [rbp - 0x78], eax ; call rax
0x00000000000f828c : out 0xf, eax ; xchg eax, esp ; ret
0x00000000001d1bc9 : out 0xf0, al ; jmp qword ptr [rdi]
0x0000000000112890 : out 0xf0, eax ; dec dword ptr [rcx - 0x73] ; push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x0000000000173bea : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000009fd09 : out 0xf3, al ; ret
0x00000000001d5ba1 : out 0xf3, eax ; jmp rax
0x0000000000173c6a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000000e6ab1 : out 0xf5, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000001ad3a8 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000001bdc79 : out 0xfc, eax ; inc dword ptr [rax - 0x2c] ; cld ; jmp rax
0x000000000002163a : out 0xfe, eax ; and eax, 0x3ff ; mov r10d, eax ; jmp 0x21614
0x00000000000cb9bf : out 0xff, al ; dec dword ptr [rcx - 0x77] ; ret
0x00000000001be28a : out 0xff, eax ; cmp byte ptr [rax], 0 ; xchg eax, esp ; jmp rdi
0x00000000001bdfaa : out 0xff, eax ; insb byte ptr [rdi], dx ; push 0 ; add byte ptr [rsi + rax - 0x19], al ; call rax
0x00000000001e1e61 : out 1, eax ; add byte ptr [rdi + rcx*4], cl ; sti ; jmp qword ptr [rdx]
0x00000000001413dd : out 4, al ; lea rax, [rdi + rsi + 8] ; ret
0x000000000013ab07 : out dx, al ; adc bh, dh ; ret 0x8080
0x0000000000150223 : out dx, al ; adc cl, byte ptr [rcx + 0x31] ; retf 0xc148
0x000000000002b29e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000001bf6b5 : out dx, al ; add byte ptr [rax], al ; hlt ; xchg ch, ch ; call rax
0x00000000001c371d : out dx, al ; add byte ptr [rax], al ; mov ah, 0xe8 ; std ; jmp qword ptr [rax]
0x0000000000140e63 : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x140e70 ; ret
0x00000000001c2295 : out dx, al ; add dword ptr [rax], eax ; je 0x1c22d5 ; clc ; jmp rax
0x00000000001c22a5 : out dx, al ; add dword ptr [rax], eax ; push rsp ; clc ; call qword ptr [rax]
0x00000000000a1303 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000a13c3 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000000000100970 : out dx, al ; call 0xfcbd3
0x00000000001af0ee : out dx, al ; call qword ptr [rax]
0x00000000001cf8a2 : out dx, al ; call qword ptr [rdx]
0x000000000009cd3e : out dx, al ; call rax
0x00000000000d1bb1 : out dx, al ; call rbx
0x00000000001cf4de : out dx, al ; call rsp
0x0000000000002e04 : out dx, al ; clc ; ret
0x00000000001bfb5a : out dx, al ; dec dword ptr [rax + rdx] ; add dword ptr [rax], eax ; je 0x1bfb11 ; out dx, al ; jmp qword ptr [rax]
0x0000000000001b14 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001ac7d7 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000003be5 : out dx, al ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001bfa7a : out dx, al ; inc dword ptr [rdx + rcx + 0x2c940001] ; out dx, al ; call rax
0x00000000001af0e6 : out dx, al ; inc eax ; mov ebx, 0xbc80ffee ; out dx, al ; call qword ptr [rax]
0x00000000001bfa8a : out dx, al ; jmp qword ptr [rax]
0x00000000001cf4ca : out dx, al ; jmp qword ptr [rbx]
0x00000000001cfe02 : out dx, al ; jmp qword ptr [rdi]
0x00000000001bf9e2 : out dx, al ; jmp rax
0x00000000001cf52e : out dx, al ; jmp rbx
0x00000000001cf3b2 : out dx, al ; jmp rdx
0x00000000001bfb02 : out dx, al ; jmp rsp
0x00000000000038b9 : out dx, al ; jne 0x3899 ; ret 0x975
0x0000000000121ff9 : out dx, al ; lea ecx, [rdi + rdi] ; shr eax, cl ; and eax, 3 ; ret
0x000000000011235c : out dx, al ; lock dec dword ptr [rax + 0x39] ; ret
0x000000000007f111 : out dx, al ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000003277 : out dx, al ; mov eax, 0xa1a3e95a ; ret 0xba88
0x000000000010e66d : out dx, al ; mov edi, ebx ; mov eax, 0x11 ; syscall
0x0000000000121c5b : out dx, al ; mov edi, ebx ; mov eax, 0x114 ; syscall
0x00000000001157dd : out dx, al ; mov edi, ebx ; mov eax, 0x115 ; syscall
0x0000000000121d0d : out dx, al ; mov edi, ebx ; mov eax, 0x116 ; syscall
0x000000000011588b : out dx, al ; mov edi, ebx ; mov eax, 0x11d ; syscall
0x000000000010e71d : out dx, al ; mov edi, ebx ; mov eax, 0x12 ; syscall
0x000000000012322d : out dx, al ; mov edi, ebx ; mov eax, 0x120 ; syscall
0x0000000000116790 : out dx, al ; mov edi, ebx ; mov eax, 0x127 ; syscall
0x0000000000116840 : out dx, al ; mov edi, ebx ; mov eax, 0x128 ; syscall
0x00000000001232e5 : out dx, al ; mov edi, ebx ; mov eax, 0x12b ; syscall
0x000000000011663d : out dx, al ; mov edi, ebx ; mov eax, 0x13 ; syscall
0x0000000000121e7d : out dx, al ; mov edi, ebx ; mov eax, 0x130 ; syscall
0x000000000012338d : out dx, al ; mov edi, ebx ; mov eax, 0x133 ; syscall
0x00000000001166dd : out dx, al ; mov edi, ebx ; mov eax, 0x14 ; syscall
0x00000000001155e7 : out dx, al ; mov edi, ebx ; mov eax, 0x146 ; syscall
0x0000000000117035 : out dx, al ; mov edi, ebx ; mov eax, 0x17 ; syscall
0x00000000001228dd : out dx, al ; mov edi, ebx ; mov eax, 0x2a ; syscall
0x000000000012280d : out dx, al ; mov edi, ebx ; mov eax, 0x2b ; syscall
0x0000000000122d2d : out dx, al ; mov edi, ebx ; mov eax, 0x2e ; syscall
0x0000000000122bcd : out dx, al ; mov edi, ebx ; mov eax, 0x2f ; syscall
0x00000000000e46b8 : out dx, al ; mov edi, ebx ; mov eax, 0x3d ; syscall
0x000000000012352d : out dx, al ; mov edi, ebx ; mov eax, 0x45 ; syscall
0x00000000001235e5 : out dx, al ; mov edi, ebx ; mov eax, 0x46 ; syscall
0x0000000000121bad : out dx, al ; mov edi, ebx ; mov eax, 0xe8 ; syscall
0x00000000000e47de : out dx, al ; mov edi, ebx ; mov eax, 0xf7 ; syscall
0x000000000011017d : out dx, al ; mov edi, ebx ; mov eax, 1 ; syscall
0x0000000000130ed7 : out dx, al ; mov edi, ebx ; mov eax, ecx ; syscall
0x0000000000123c13 : out dx, al ; mov edi, ebx ; mov eax, r10d ; syscall
0x00000000001100ad : out dx, al ; mov edi, ebx ; xor eax, eax ; syscall
0x000000000004035e : out dx, al ; mov edi, r12d ; mov eax, 0x81 ; syscall
0x000000000016e3ea : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000d17e1 : out dx, al ; mov rdi, r12 ; call rbx
0x000000000015a0b6 : out dx, al ; mov rdi, r15 ; call qword ptr [rax]
0x000000000009af52 : out dx, al ; mov rdi, rax ; call rcx
0x000000000011ba08 : out dx, al ; mov rdi, rbp ; mov eax, 9 ; syscall
0x000000000014a171 : out dx, al ; mov rdi, rbp ; mov rcx, r14 ; call r10
0x000000000015d16d : out dx, al ; mov rdi, rbp ; xor eax, eax ; call r8
0x000000000015d1cf : out dx, al ; mov rdi, rbp ; xor eax, eax ; call rcx
0x000000000009b74a : out dx, al ; mov rdi, rbx ; call rax
0x00000000000448fe : out dx, al ; mov rdi, rbx ; mov eax, 0x13e ; syscall
0x000000000011bb4e : out dx, al ; mov rdi, rbx ; mov eax, 0x1a ; syscall
0x0000000000114bee : out dx, al ; mov rdi, rbx ; mov eax, 7 ; syscall
0x0000000000173ffa : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000002219 : out dx, al ; nop ; retf 0x3844
0x000000000018ba7e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001acb32 : out dx, al ; or eax, 0xe6d46ec6 ; mov bh, 0x4e ; retf 0x9d7d
0x00000000001ac3bf : out dx, al ; out 0x78, al ; jnp 0x1ac423 ; retf
0x00000000000998d3 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000009776e : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000067c48 : out dx, al ; ret 0x14
0x00000000000e059e : out dx, al ; ret 0x30
0x000000000000262a : out dx, al ; ret 0x88ad
0x0000000000002919 : out dx, al ; retf 0x182c
0x0000000000051733 : out dx, al ; sub rsi, rdi ; call 0x9d9f6
0x00000000000bd321 : out dx, al ; xor edi, edi ; mov rax, rdi ; ret
0x000000000012a049 : out dx, al ; xor r15d, r15d ; call rax
0x00000000000d060d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000008048d : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001d26ed : out dx, eax ; add byte ptr [rax], al ; push rax ; and cl, dh ; call qword ptr [rdx]
0x000000000007d8e1 : out dx, eax ; add byte ptr ss:[rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000001e2651 : out dx, eax ; add dword ptr [rax], eax ; sbb r15b, al ; jmp qword ptr [rcx]
0x000000000013f9b2 : out dx, eax ; add ecx, dword ptr [rax - 0x7d] ; call qword ptr [rcx]
0x0000000000034ea2 : out dx, eax ; add rbx, 1 ; call 0x21107
0x000000000008448e : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000844ea : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000013c4ff : out dx, eax ; call 0x148f63
0x0000000000150d1e : out dx, eax ; call 0x15cfa3
0x0000000000150f7b : out dx, eax ; call 0x15d213
0x0000000000114650 : out dx, eax ; call 0x21103
0x000000000003506a : out dx, eax ; call 0x212cb
0x00000000000673ec : out dx, eax ; call 0x836d3
0x00000000001af34e : out dx, eax ; call qword ptr [rax - 0x1f000fff]
0x000000000015d2a6 : out dx, eax ; call qword ptr [rax]
0x000000000014e6a3 : out dx, eax ; call qword ptr [rbx]
0x00000000001d0cbe : out dx, eax ; call qword ptr [rdx]
0x00000000001d0b9a : out dx, eax ; call qword ptr [rsi]
0x000000000002c58d : out dx, eax ; call r12
0x000000000011df85 : out dx, eax ; call r14
0x00000000000803ff : out dx, eax ; call rax
0x00000000000bdef2 : out dx, eax ; call rbx
0x000000000015dd32 : out dx, eax ; call rcx
0x000000000014e156 : out dx, eax ; call rdx
0x00000000001af1ae : out dx, eax ; call rsp
0x00000000001dc0c5 : out dx, eax ; cmc ; call qword ptr [rbx]
0x00000000001ad425 : out dx, eax ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x0000000000129de0 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret
0x00000000001266a3 : out dx, eax ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000012d377 : out dx, eax ; dec dword ptr [rcx - 0x75] ; cmp byte ptr [rax - 0x77], r9b ; ret 0x2b49
0x0000000000001acf : out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001af34a : out dx, eax ; inc dword ptr [rax - 1] ; out dx, eax ; call qword ptr [rax - 0x1f000fff]
0x00000000001af2ea : out dx, eax ; inc dword ptr [rax] ; in eax, dx ; out dx, eax ; call qword ptr [rax]
0x00000000001af1ba : out dx, eax ; inc dword ptr [rsp + rdx*4 - 0x665f0011] ; out dx, eax ; jmp rax
0x00000000001af2da : out dx, eax ; inc eax ; in al, 0xef ; call rax
0x00000000001af1aa : out dx, eax ; inc esp ; xchg eax, esp ; out dx, eax ; call rsp
0x00000000001af1ee : out dx, eax ; jmp qword ptr [rax - 0x1f001058]
0x00000000001af1de : out dx, eax ; jmp qword ptr [rax - 0x1f00105d]
0x00000000001af1ce : out dx, eax ; jmp qword ptr [rax - 0x1f001062]
0x00000000001af1be : out dx, eax ; jmp qword ptr [rax - 0x1f001067]
0x00000000001af1c6 : out dx, eax ; jmp qword ptr [rax]
0x00000000001d0d4e : out dx, eax ; jmp qword ptr [rbx]
0x00000000001d0aaa : out dx, eax ; jmp qword ptr [rcx]
0x00000000001af1c2 : out dx, eax ; jmp rax
0x000000000014cca9 : out dx, eax ; lea r9, [rsp + 0x20] ; call qword ptr [rax]
0x00000000001b061c : out dx, eax ; leave ; bnd call qword ptr [rdx] ; retf
0x00000000001121c1 : out dx, eax ; lock dec dword ptr [rbp + rcx*4 + 0x2c] ; sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x0000000000116948 : out dx, eax ; mov eax, 0x147 ; syscall
0x0000000000116a58 : out dx, eax ; mov eax, 0x148 ; syscall
0x000000000011ba0b : out dx, eax ; mov eax, 9 ; syscall
0x000000000008956d : out dx, eax ; mov eax, r9d ; syscall
0x000000000016e21a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e316 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016e262 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000be043 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000011fa88 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x000000000013d384 : out dx, eax ; mov rax, qword ptr [rsp + 0x30] ; call rax
0x0000000000041f4a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000053480 : out dx, eax ; mov rax, rdx ; ret
0x000000000014a174 : out dx, eax ; mov rcx, r14 ; call r10
0x000000000009c857 : out dx, eax ; mov rdx, rbx ; mov rsi, r12 ; call rax
0x000000000017407a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000003642 : out dx, eax ; nop ; retf 0xe9ee
0x00000000001b1050 : out dx, eax ; or dh, ah ; jmp qword ptr [rax]
0x000000000018bb7d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000002918 : out dx, eax ; out dx, al ; retf 0x182c
0x00000000001af2f1 : out dx, eax ; out dx, eax ; jmp qword ptr [rax]
0x0000000000190463 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19043b
0x00000000001904e1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1904b9
0x0000000000190973 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19094b
0x00000000001909f1 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1909c9
0x0000000000191a93 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191a6b
0x0000000000191b11 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191ae9
0x0000000000191fa3 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191f7b
0x0000000000192021 : out dx, eax ; pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191ff9
0x00000000001af2d6 : out dx, eax ; push qword ptr [rax - 0x3f00101e] ; in al, 0xef ; call rax
0x00000000001af2f6 : out dx, eax ; push qword ptr [rax] ; out dx, eax ; call rax
0x0000000000190063 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000190078 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019008d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000bc0e8 : out dx, eax ; ret
0x00000000000bafe3 : out dx, eax ; ret 0xf66
0x000000000003451d : out dx, eax ; retf
0x0000000000043e04 : out dx, eax ; retf 0x3a
0x00000000000bafc6 : out dx, eax ; retf 0x4466
0x00000000001acafb : out dx, eax ; retf 0xab0d
0x00000000000ce270 : out dx, eax ; ror byte ptr [rax - 0x7d], cl ; ret 0x6601
0x000000000015e120 : out dx, eax ; ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x000000000011c5cd : out dx, eax ; sbb eax, 0x415d002d ; pop rsp ; ret
0x00000000000a8a5a : out dx, eax ; shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x000000000011c149 : out dx, eax ; shl byte ptr [rsi + 0xf], cl ; retf 0x67a
0x000000000019157c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191565 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000019154e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000019000a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001c2ce1 : out dx, eax ; stc ; jmp rax
0x00000000001997d7 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000015d170 : out dx, eax ; xor eax, eax ; call r8
0x000000000015d1d2 : out dx, eax ; xor eax, eax ; call rcx
0x000000000014da4e : out dx, eax ; xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000052568 : out dx, eax ; xor eax, eax ; ret
0x0000000000186bae : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000007f726 : outsb dx, byte ptr [rsi] ; add al, 1 ; je 0x7f75a ; mov rax, rdx ; pop rbx ; ret
0x0000000000088f36 : outsb dx, byte ptr [rsi] ; add al, 1 ; je 0x88f6a ; mov rax, rdx ; pop rbx ; ret
0x00000000001936be : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000000000004ed63 : outsb dx, byte ptr [rsi] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001acf83 : outsb dx, byte ptr [rsi] ; ja 0x1acf0c ; ret 0x48f
0x00000000001b02fc : outsb dx, byte ptr [rsi] ; ret
0x0000000000003902 : outsb dx, byte ptr [rsi] ; retf
0x000000000005bf6e : outsb dx, byte ptr [rsi] ; retf 0xffff
0x00000000001aacc4 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x00000000001ac2f8 : outsb dx, byte ptr [rsi] ; sbb edi, ebp ; retf
0x00000000001bd281 : outsb dx, byte ptr [rsi] ; sti ; call qword ptr [rsi]
0x00000000001bd441 : outsb dx, byte ptr [rsi] ; sti ; call rax
0x00000000001bd3c1 : outsb dx, byte ptr [rsi] ; sti ; jmp rsp
0x00000000001bd3bd : outsb dx, byte ptr [rsi] ; sti ; push qword ptr [rsi + rbp*2 - 5] ; jmp rsp
0x0000000000003785 : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000006436a : outsd dx, dword ptr [rsi] ; adc dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000003e9d4 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000003e879 : outsd dx, dword ptr [rsi] ; add al, 0x24 ; add rsp, 0x28 ; ret
0x00000000000a7418 : outsd dx, dword ptr [rsi] ; add byte ptr [rbp + 0x29], cl ; ret
0x0000000000090852 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x000000000003e642 : outsd dx, dword ptr [rsi] ; and al, 0xd8 ; ret
0x00000000000582ca : outsd dx, dword ptr [rsi] ; and al, 0xe8 ; pinsrw xmm0, eax, 6 ; ret
0x00000000000ef39f : outsd dx, dword ptr [rsi] ; call 0xffffffffc3e30310
0x00000000000ef7f5 : outsd dx, dword ptr [rsi] ; enter 0xf66, -0x2c ; ret
0x00000000000c076d : outsd dx, dword ptr [rsi] ; enter 0xf66, 0x62 ; ret
0x00000000000ef39b : outsd dx, dword ptr [rsi] ; enter 0xf66, 0x6f ; call 0xffffffffc3e30314
0x00000000000a8c08 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x00000000000aca3e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000010eb02 : outsd dx, dword ptr [rsi] ; jo 0x10eb1c ; adc dword ptr [rdi + 0x78], eax ; ret
0x000000000010eab2 : outsd dx, dword ptr [rsi] ; js 0x10eacc ; adc dword ptr [rsi + 0x70], eax ; ret
0x000000000011af34 : outsd dx, dword ptr [rsi] ; lock dec dword ptr [rax - 0x77] ; ret
0x000000000016e9a2 : outsd dx, dword ptr [rsi] ; mov ebx, 0x4e6f0ff3 ; retf
0x000000000016eba2 : outsd dx, dword ptr [rsi] ; mov edx, 0x4e6f0ff3 ; retf 0x8b4c
0x00000000000809d5 : outsd dx, dword ptr [rsi] ; mov esi, 0x89480036 ; ret
0x000000000019137d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000019141d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000190f42 : outsd dx, dword ptr [rsi] ; push rdi ; retf
0x0000000000190fc2 : outsd dx, dword ptr [rsi] ; push rdi ; retf 0xcab2
0x00000000000b145a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003ea89 : outsd dx, dword ptr [rsi] ; ret
0x000000000003ea29 : outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000003ea52 : outsd dx, dword ptr [rsi] ; ret 0x37e8
0x000000000005ed86 : outsd dx, dword ptr [rsi] ; ret 0x3e8
0x0000000000091aba : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000001ab686 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000061c1e : outsd dx, dword ptr [rsi] ; ret 0x6be8
0x0000000000091482 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000000c0783 : outsd dx, dword ptr [rsi] ; ret 0x8948
0x000000000016eb57 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000003eadc : outsd dx, dword ptr [rsi] ; ret 0xade8
0x0000000000191422 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000061bfa : outsd dx, dword ptr [rsi] ; ret 0xe583
0x00000000000645a1 : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000163afd : outsd dx, dword ptr [rsi] ; ret 0xfffa
0x000000000006f2fe : outsd dx, dword ptr [rsi] ; ret 0xffff
0x000000000003e77f : outsd dx, dword ptr [rsi] ; retf
0x0000000000186559 : outsd dx, dword ptr [rsi] ; retf 0x4466
0x000000000016ec22 : outsd dx, dword ptr [rsi] ; retf 0x8b4c
0x000000000006436e : outsd dx, dword ptr [rsi] ; retf 0xf66
0x000000000019045a : outsd dx, dword ptr [rsi] ; retf 0xff3
0x0000000000086acd : outsd dx, dword ptr [rsi] ; sar bh, 1 ; dec dword ptr [rax + 0x29] ; ret
0x000000000005ed24 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000104722 : outsd dx, dword ptr [rsi] ; sbb al, ch ; lahf ; retf
0x0000000000061bc0 : outsd dx, dword ptr [rsi] ; sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000001bd279 : outsd dx, dword ptr [rsi] ; sti ; call qword ptr [rax]
0x00000000001bd475 : outsd dx, dword ptr [rsi] ; sti ; jmp qword ptr [rax]
0x00000000001bd27d : outsd dx, dword ptr [rsi] ; sti ; jmp qword ptr [rsi + 0x16fffb6e]
0x00000000001bd339 : outsd dx, dword ptr [rsi] ; sti ; jmp rdx
0x000000000009f14d : outsd dx, dword ptr [rsi] ; sub ecx, dword ptr [rip + 0x450f4800] ; ret 0xc3f3
0x00000000001ab685 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001847f2 : pcmpeqb mm0, mm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000000d0df4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000d0ddf : pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000001847f1 : pcmpeqb xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x00000000001aca85 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000001aca86 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000000ac035 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x000000000018f026 : pextrw edi, mm0, 0x77 ; ret
0x00000000000582cf : pinsrw mm0, eax, 6 ; ret
0x00000000000582ce : pinsrw xmm0, eax, 6 ; ret
0x000000000003e1a1 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x000000000003e4c1 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x00000000000ac043 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000abc02 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xabc69 ; xor eax, eax ; ret
0x00000000000ac0a5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xac129 ; xor eax, eax ; ret
0x00000000000ac0d4 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xac159 ; xor eax, eax ; ret
0x00000000000d03d2 : pmovmskb eax, mm1 ; test eax, eax ; jne 0xd0439 ; xor eax, eax ; ret
0x000000000003e1a0 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x000000000003e4c0 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000000228f : pmuludq mm4, mm7 ; retf
0x00000000001cc655 : pop qword ptr [rax] ; add byte ptr [rax + 0x57], cl ; in al, dx ; call qword ptr [rcx]
0x0000000000103dc1 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001c1105 : pop qword ptr [rcx] ; add byte ptr [rbx + rdi*4], dl ; cmc ; jmp rax
0x00000000001e5180 : pop qword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 2
0x00000000001306b5 : pop r10 ; ret
0x00000000001acf0f : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000088347 : pop r11 ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x882e1
0x0000000000080f6a : pop r12 ; jmp rax
0x000000000011d1d6 : pop r12 ; mov esi, 2 ; jmp rax
0x0000000000097771 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000099e1c : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000000989e3 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002219c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021558 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007dd29 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000023e65 : pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000042865 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000021a43 : pop r12 ; pop r13 ; ret
0x00000000000d1199 : pop r12 ; pop r14 ; ret
0x00000000000e2fdd : pop r12 ; pop rbp ; ret
0x0000000000023992 : pop r12 ; ret
0x0000000000097773 : pop r13 ; pop r14 ; jmp rax
0x0000000000099e1e : pop r13 ; pop r14 ; jmp rcx
0x00000000000989e5 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002219e : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002155a : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007dd2b : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000023e67 : pop r13 ; pop r14 ; ret
0x0000000000042867 : pop r13 ; pop rbp ; ret
0x0000000000021a45 : pop r13 ; ret
0x0000000000097775 : pop r14 ; jmp rax
0x0000000000099e20 : pop r14 ; jmp rcx
0x00000000000989e7 : pop r14 ; pop r15 ; jmp rax
0x00000000000221a0 : pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002155c : pop r14 ; pop r15 ; ret
0x000000000007dd2d : pop r14 ; pop rbp ; ret
0x0000000000023e69 : pop r14 ; ret
0x00000000000989e9 : pop r15 ; jmp rax
0x00000000000221a2 : pop r15 ; pop rbp ; ret
0x000000000002155e : pop r15 ; ret
0x0000000000155fc6 : pop r8 ; mov eax, 1 ; ret
0x00000000001bc3df : pop r9 ; clc ; ret 0x6e1f
0x000000000015679e : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001dbbdc : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x13fffe7c], bl ; retf 0xfff5
0x00000000001c62dc : pop rax ; add byte ptr [rax], al ; add byte ptr [rax - 0x13ffffd5], bl ; retf
0x0000000000095ed4 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x00000000001d8fd1 : pop rax ; add dword ptr [rax], eax ; cld ; retf
0x00000000001c06fd : pop rax ; add dword ptr [rax], eax ; mov ah, 0x59 ; jmp rax
0x00000000001d8fbd : pop rax ; add dword ptr [rax], eax ; nop ; retf
0x00000000001c368d : pop rax ; add dword ptr [rax], eax ; retf
0x0000000000141287 : pop rax ; add esi, eax ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000156944 : pop rax ; call rax
0x00000000001c70a0 : pop rax ; cmp dword ptr [rax], eax ; add byte ptr [rsp + rdi*2 - 0x18], bl ; call rdi
0x0000000000047770 : pop rax ; idiv bh ; dec dword ptr [rax + 0x39] ; ret
0x000000000005a586 : pop rax ; idiv edi ; dec dword ptr [rax + 0x63] ; retf
0x00000000001dcc98 : pop rax ; idiv r15b ; ret 0
0x00000000001da0a0 : pop rax ; imul eax, dword ptr [rcx], 0xf5613c00 ; jmp qword ptr [rbx]
0x00000000001567a6 : pop rax ; jmp rcx
0x0000000000063cae : pop rax ; jrcxz 0x63cb6 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000021374 : pop rax ; lock add byte ptr [rax], al ; ret
0x0000000000095294 : pop rax ; mov dh, 0xff ; dec dword ptr [rax + 0x39] ; retf 0x2a74
0x0000000000155fc7 : pop rax ; mov eax, 1 ; ret
0x0000000000030694 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000030622 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000003e26 : pop rax ; mov esi, 0xcf8cb236 ; retf
0x000000000014eb9e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000011c658 : pop rax ; mov rax, rbx ; pop rdx ; pop rbx ; ret
0x00000000001cc3a0 : pop rax ; mov word ptr [rax], es ; add ah, bl ; in al, dx ; call qword ptr [rsi]
0x000000000019c2d2 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000107126 : pop rax ; or byte ptr [rcx - 0x77], cl ; ret 0x8b41
0x00000000001c40a0 : pop rax ; or dword ptr [rax], eax ; add byte ptr [rax + rbp - 0x1a], cl ; call rcx
0x00000000000b5674 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x0000000000150077 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021351 : pop rax ; pop rbx ; pop rbp ; ret
0x000000000012188b : pop rax ; pop rdi ; call rax
0x00000000001663b1 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000000439c8 : pop rax ; ret
0x00000000001cf9a0 : pop rax ; ret 0
0x00000000001c7788 : pop rax ; ret 0xffe8
0x000000000003506c : pop rax ; ret 0xfffe
0x00000000001ace63 : pop rax ; retf
0x00000000001c6258 : pop rax ; retf 0xffe7
0x00000000001c3589 : pop rax ; std ; jmp rax
0x00000000001bd6f1 : pop rax ; sti ; jmp qword ptr [rax]
0x0000000000001ecf : pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000001d67a0 : pop rax ; xor byte ptr [rcx], al ; add byte ptr [rdi + rcx], cl ; hlt ; jmp qword ptr [rcx]
0x000000000002a8d9 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x2a951 ; mov rdx, rax ; jmp 0x2a8a8
0x00000000000f5f99 : pop rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000000000018ba9 : pop rbp ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001c3605 : pop rbp ; add byte ptr [rax], al ; ret
0x000000000008508c : pop rbp ; add byte ptr ss:[rax - 0x39], cl ; ret
0x000000000014ec4d : pop rbp ; add eax, edx ; ret
0x00000000000e5109 : pop rbp ; clc ; leave ; ret
0x00000000001c3051 : pop rbp ; cli ; call qword ptr [rax]
0x0000000000074be1 : pop rbp ; cmove r8, rdx ; jmp 0x74c00
0x0000000000002399 : pop rbp ; cmp al, 0x7a ; xlatb ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x0000000000129e2d : pop rbp ; cmp byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001d75dd : pop rbp ; hlt ; call rsi
0x00000000001ac905 : pop rbp ; insb byte ptr [rdi], dx ; shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x0000000000080c4f : pop rbp ; jmp rax
0x000000000014c1c5 : pop rbp ; jmp rcx
0x000000000014da52 : pop rbp ; jmp rdx
0x00000000000c8b8d : pop rbp ; mov al, 0x89 ; ret 0xff25
0x00000000000e6772 : pop rbp ; mov eax, 0x20 ; ret
0x00000000001ab260 : pop rbp ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; retf 0x33e6
0x0000000000080f69 : pop rbp ; pop r12 ; jmp rax
0x000000000011d1d5 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x0000000000097770 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000099e1b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000000989e2 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000021557 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000023e64 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021a42 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d1198 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000023991 : pop rbp ; pop r12 ; ret
0x0000000000097774 : pop rbp ; pop r14 ; jmp rax
0x0000000000099e1f : pop rbp ; pop r14 ; jmp rcx
0x00000000000989e6 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000002219f : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002155b : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000007dd2c : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000023e68 : pop rbp ; pop r14 ; ret
0x0000000000042868 : pop rbp ; pop rbp ; ret
0x0000000000052bc8 : pop rbp ; pop rbx ; ret
0x0000000000021353 : pop rbp ; ret
0x00000000000a7e9d : pop rbp ; ret 0xffff
0x000000000009d7f2 : pop rbp ; str word ptr [rax + 0xf] ; ret 0xc3f3
0x00000000000a7a0d : pop rbp ; test al, 0x88 ; push rbp ; ret 0xb60f
0x000000000012e05e : pop rbp ; xchg dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret 0xb2e9
0x000000000013c45f : pop rbp ; xor ebp, dword ptr [rbx] ; add byte ptr [rcx - 0x3f], cl ; retf 0x6411
0x000000000010f612 : pop rbp ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x0000000000088348 : pop rbx ; add byte ptr [rax], al ; mov r10d, eax ; jmp 0x882e0
0x00000000001d92fd : pop rbx ; add dword ptr [rax], eax ; xor dl, bl ; hlt ; call rsi
0x0000000000093bff : pop rbx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x00000000001aa258 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000000bbaf6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000013092f : pop rbx ; and eax, 0xc ; pop rbp ; pop r12 ; ret
0x00000000001aa256 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000058597 : pop rbx ; cmovb rax, rdi ; pop rbp ; pop r12 ; ret
0x00000000000a1918 : pop rbx ; cmovne rax, rdx ; ret
0x000000000008ded4 : pop rbx ; jmp rax
0x00000000000f4030 : pop rbx ; mov eax, 0xc ; pop rbp ; pop r12 ; ret
0x0000000000116474 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; pop r12 ; ret
0x000000000014e4f4 : pop rbx ; mov eax, 1 ; pop rbp ; pop r12 ; ret
0x00000000000edbf6 : pop rbx ; mov eax, 1 ; ret
0x0000000000131056 : pop rbx ; mov eax, 5 ; pop r12 ; pop rbp ; ret
0x0000000000108c7b : pop rbx ; mov eax, 5 ; pop rbp ; pop r12 ; ret
0x00000000000439c5 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000bbb41 : pop rbx ; mov eax, eax ; ret
0x00000000000813af : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000051f35 : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000132676 : pop rbx ; mov eax, esi ; pop rbp ; pop r12 ; ret
0x0000000000082dfa : pop rbx ; mov eax, r12d ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008e9f9 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x00000000000a81ea : pop rbx ; mov qword ptr [rdi], rdx ; ret
0x000000000009230e : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000007ec36 : pop rbx ; mov rax, rsi ; pop rbp ; pop r12 ; ret
0x00000000000e0734 : pop rbx ; or byte ptr [rax], al ; call r14
0x000000000007dd28 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000042864 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000e2fdc : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000002bf1c : pop rbx ; pop r12 ; ret
0x0000000000199657 : pop rbx ; pop r14 ; ret
0x000000000014ec4c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000080c4e : pop rbx ; pop rbp ; jmp rax
0x000000000014c1c4 : pop rbx ; pop rbp ; jmp rcx
0x000000000014da51 : pop rbx ; pop rbp ; jmp rdx
0x0000000000080f68 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000011d1d4 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000009776f : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000099e1a : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000023e63 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021a41 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d1197 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000023990 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c7be4 : pop rbx ; pop rbp ; pop r14 ; ret
0x0000000000021352 : pop rbx ; pop rbp ; ret
0x000000000002cb49 : pop rbx ; ret
0x0000000000001b18 : pop rbx ; ret 0x2a63
0x00000000001ad540 : pop rbx ; ret 0x6f9
0x00000000001aaa1d : pop rbx ; retf
0x000000000013c501 : pop rbx ; retf 0
0x00000000001c45fd : pop rbx ; std ; jmp qword ptr [rdi]
0x00000000001bd6f9 : pop rbx ; sti ; jmp qword ptr [rax]
0x0000000000003075 : pop rbx ; sub edi, esi ; retf 0x54f7
0x0000000000001d51 : pop rbx ; test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf 0x9226
0x0000000000131046 : pop rbx ; xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000352be : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000008e9c2 : pop rbx ; xor edx, edx ; jmp rax
0x000000000010541b : pop rcx ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x000000000016c5a7 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000009dcf6 : pop rcx ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000013b3fe : pop rcx ; add rsp, 0x38 ; ret
0x00000000000aea74 : pop rcx ; and al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001bbe30 : pop rcx ; clc ; ret 0x6e1f
0x000000000003e3b8 : pop rcx ; enter 0x280f, -0x3f ; ret
0x00000000001d74dd : pop rcx ; hlt ; jmp rcx
0x00000000001ae555 : pop rcx ; in al, dx ; call qword ptr [rcx - 0x1b001390]
0x00000000001c0701 : pop rcx ; jmp rax
0x00000000001d337c : pop rcx ; loopne 0x1d3366 ; jmp qword ptr [rbx]
0x000000000010d153 : pop rcx ; mov dh, 0xf4 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000185a77 : pop rcx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015eb9f : pop rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000011c59b : pop rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000103cca : pop rcx ; pop rbx ; ret
0x0000000000001b17 : pop rcx ; pop rbx ; ret 0x2a63
0x000000000003eb0b : pop rcx ; ret
0x000000000011bf7a : pop rcx ; retf
0x0000000000023c63 : pop rcx ; retf 0x10
0x00000000000c4703 : pop rcx ; retf 0xfff5
0x00000000001bd731 : pop rcx ; sti ; jmp qword ptr [rax + 0x20fffb5a]
0x00000000000440bb : pop rcx ; sub byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x00000000000f6956 : pop rcx ; sub byte ptr [rbx + rcx*4 + 0x3c], cl ; ret 0xefe8
0x000000000016cd98 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000010fb9a : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001d9711 : pop rdi ; add dword ptr [rax], eax ; cmp al, 0xf3 ; hlt ; call rsi
0x000000000018c20d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018a8b2 : pop rdi ; and ch, al ; std ; xlatb ; ret
0x000000000012188c : pop rdi ; call rax
0x00000000001c0881 : pop rdi ; hlt ; call rsp
0x000000000016e7b9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e5c9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001ac7fe : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000989ea : pop rdi ; jmp rax
0x00000000001ab7c1 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000000e4da0 : pop rdi ; mov eax, 0x3a ; syscall
0x000000000011dec2 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000011d3e9 : pop rdi ; or byte ptr [rcx - 0x77], cl ; retf
0x000000000011d3b5 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000016e3e9 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e219 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e315 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000016e261 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000000221a3 : pop rdi ; pop rbp ; ret
0x000000000002155f : pop rdi ; ret
0x000000000005b4fd : pop rdi ; ret 0x38
0x00000000001bbed0 : pop rdi ; retf
0x0000000000001c36 : pop rdi ; retf 0x49f2
0x00000000000cab21 : pop rdx ; add cl, byte ptr [rbp + 0x29] ; ret 0x8b47
0x0000000000185f76 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x000000000004ee41 : pop rdx ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000005b8ba : pop rdx ; and dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; retf 0x8948
0x00000000001b065d : pop rdx ; call rax
0x00000000001d7515 : pop rdx ; hlt ; call qword ptr [rdx]
0x0000000000003be2 : pop rdx ; int1 ; imul esi ; in eax, 0x78 ; mov dl, 0x1e ; ret
0x00000000001ac3e1 : pop rdx ; je 0x1ac3ab ; ret 0xacfc
0x00000000000643a2 : pop rdx ; jnp 0x643c1 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001ac4f3 : pop rdx ; leave ; retf
0x0000000000066e72 : pop rdx ; mov ah, 1 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000f6741 : pop rdx ; or bh, dh ; ret
0x00000000000e08bd : pop rdx ; or byte ptr [rax], al ; mov rax, r14 ; call rax
0x000000000009ecde : pop rdx ; or eax, 0x450f4800 ; ret 0xc3f3
0x00000000001ad3a7 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000003641 : pop rdx ; out dx, eax ; nop ; retf 0xe9ee
0x00000000001306b4 : pop rdx ; pop r10 ; ret
0x000000000011c65c : pop rdx ; pop rbx ; ret
0x0000000000103cc9 : pop rdx ; pop rcx ; pop rbx ; ret
0x00000000001306d9 : pop rdx ; pop rsi ; ret
0x0000000000001b96 : pop rdx ; ret
0x0000000000100972 : pop rdx ; ret 0xffff
0x00000000001ac3c3 : pop rdx ; retf
0x00000000001bd6f5 : pop rdx ; sti ; jmp qword ptr [rax + 0x20fffb5b]
0x00000000001bd735 : pop rdx ; sti ; jmp qword ptr [rax]
0x00000000001acf10 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000d08d5 : pop rdx ; test al, 0xf0 ; jne 0xd0909 ; lea rax, [rdi - 0x10] ; ret
0x00000000001318f2 : pop rdx ; wait ; clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000190464 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19043a
0x00000000001904e2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1904b8
0x0000000000190974 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x19094a
0x00000000001909f2 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x1909c8
0x0000000000191a94 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191a6a
0x0000000000191b12 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191ae8
0x0000000000191fa4 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191f7a
0x0000000000192022 : pop rsi ; adc byte ptr [rsi + 0xf], ah ; jmp 0x191ff8
0x000000000018c10e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012997b : pop rsi ; add dword ptr [rax + 0x39], ecx ; retf
0x0000000000123e9c : pop rsi ; add ecx, dword ptr [rax - 0x42] ; ret
0x000000000002c6b6 : pop rsi ; cmp byte ptr [rcx - 0x77], cl ; push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000097776 : pop rsi ; jmp rax
0x0000000000099e21 : pop rsi ; jmp rcx
0x000000000011de92 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x000000000012d53e : pop rsi ; or byte ptr [rax - 0x77], cl ; ret 0x2b49
0x00000000000bd507 : pop rsi ; or eax, 0x440f4800 ; ret 0x90c3
0x00000000001b0fec : pop rsi ; or esi, esp ; inc dword ptr [rbx + rcx - 0xc] ; jmp qword ptr [rax]
0x00000000000989e8 : pop rsi ; pop r15 ; jmp rax
0x00000000000221a1 : pop rsi ; pop r15 ; pop rbp ; ret
0x000000000002155d : pop rsi ; pop r15 ; ret
0x000000000007dd2e : pop rsi ; pop rbp ; ret
0x0000000000023e6a : pop rsi ; ret
0x000000000011c1c7 : pop rsi ; retf 0x37eb
0x00000000000024bf : pop rsi ; retf 0x8a3f
0x00000000000a8018 : pop rsi ; retf 0xffff
0x00000000001505e9 : pop rsi ; sbb byte ptr [rcx + 0x31], cl ; retf 0x314d
0x0000000000186dc0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000186274 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000000ffb03 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x0000000000187ac0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x00000000000941ae : pop rsp ; and al, 0x18 ; mov qword ptr [rsp + 8], rax ; call rcx
0x00000000000d1545 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000093da4 : pop rsp ; and al, 8 ; mov rdi, r12 ; call qword ptr [rax]
0x00000000001d4a71 : pop rsp ; call rax
0x00000000001c2351 : pop rsp ; clc ; call rax
0x00000000000d2d8e : pop rsp ; inc byte ptr [r13 + 0x69] ; retf
0x00000000001c70a4 : pop rsp ; jl 0x1c7092 ; call rdi
0x0000000000080f6b : pop rsp ; jmp rax
0x000000000011d1d7 : pop rsp ; mov esi, 2 ; jmp rax
0x00000000001cdca4 : pop rsp ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; call 0x221cc9a7
0x0000000000184c50 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001b10d0 : pop rsp ; or dh, ah ; jmp qword ptr [rax]
0x00000000000e6ab0 : pop rsp ; out 0xf5, al ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000097772 : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x0000000000099e1d : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x00000000000989e4 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000002219d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000021559 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000007dd2a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000023e66 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000042866 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000021a44 : pop rsp ; pop r13 ; ret
0x00000000000d119a : pop rsp ; pop r14 ; ret
0x0000000000001ece : pop rsp ; pop rax ; xchg eax, edi ; retf 0x20f4
0x00000000000e2fde : pop rsp ; pop rbp ; ret
0x00000000001ae554 : pop rsp ; pop rcx ; in al, dx ; call qword ptr [rcx - 0x1b001390]
0x00000000001d7514 : pop rsp ; pop rdx ; hlt ; call qword ptr [rdx]
0x00000000000cab4d : pop rsp ; popfq ; add byte ptr [rbp + 0x29], cl ; ret 0x8d4c
0x00000000001da1a4 : pop rsp ; push 1 ; add byte ptr [rax + 0x62], cl ; cmc ; jmp qword ptr [rbx]
0x0000000000003960 : pop rsp ; ret
0x0000000000003281 : pop rsp ; ret 0x52c0
0x0000000000003732 : pop rsp ; ret 0xf84d
0x00000000001d8d84 : pop rsp ; ret 0xfff4
0x0000000000031066 : pop rsp ; retf
0x0000000000052aa9 : pop rsp ; retf 0x4df0
0x00000000001e01a4 : pop rsp ; retf 1
0x00000000001ac567 : pop rsp ; sbb ebp, ebx ; retf
0x00000000001e2da4 : pop rsp ; test byte ptr [rcx], 0 ; js 0x1e2df0 ; clc ; call rbx
0x00000000000e0871 : pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000013cfd0 : pop rsp ; xchg eax, ebx ; add al, byte ptr [rax] ; mov rdi, rbp ; call r12
0x00000000001188e2 : pop rsp ; xor byte ptr [rcx], dh ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x00000000001188a2 : pop rsp ; xor byte ptr [rcx], dh ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x000000000002c588 : popfq ; adc eax, dword ptr [rax] ; mov rdi, r13 ; call r12
0x000000000007fabc : popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000008815f : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007dcd4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001cd4d1 : popfq ; add byte ptr [rax], al ; pop rsp ; retf
0x00000000000cab4e : popfq ; add byte ptr [rbp + 0x29], cl ; ret 0x8d4c
0x000000000012ecc6 : popfq ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000000000067106 : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x00000000001ac4ec : popfq ; jrcxz 0x1ac4b1 ; add dword ptr [rdx - 0x36a5831f], esp ; retf
0x00000000001af1cd : popfq ; out dx, eax ; jmp qword ptr [rax - 0x1f001062]
0x0000000000102ec0 : popfq ; ret
0x00000000000d3e6c : popfq ; ret 0x3948
0x000000000004aead : popfq ; ret 0x841
0x00000000000d1b7a : popfq ; ret 0xefc1
0x0000000000002727 : popfq ; retf
0x000000000010153f : popfq ; retf 0x2e
0x00000000001ad2a2 : popfq ; retf 0xde4f
0x00000000001884a0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001c2a21 : popfq ; stc ; jmp qword ptr [rax]
0x00000000001dc59d : psadbw mm7, mm7 ; retf 0
0x0000000000174142 : psllq mm1, qword ptr [r15] ; jg 0x17415d ; ret
0x0000000000176c62 : psllq mm1, qword ptr [r15] ; jg 0x176c7d ; ret
0x0000000000174143 : psllq mm1, qword ptr [rdi] ; jg 0x17415c ; ret
0x0000000000176c63 : psllq mm1, qword ptr [rdi] ; jg 0x176c7c ; ret
0x00000000000b69d6 : psllq mm1, qword ptr [rdi] ; jg 0xb69ea ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b69d5 : psllq mm1, qword ptr [rdi] ; jg 0xb69eb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b6a37 : psllq mm1, qword ptr [rdi] ; jg 0xb6a4c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b76a6 : psllq mm1, qword ptr [rdi] ; jg 0xb76ba ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b76a5 : psllq mm1, qword ptr [rdi] ; jg 0xb76bb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b7707 : psllq mm1, qword ptr [rdi] ; jg 0xb771c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b9c86 : psllq mm1, qword ptr [rdi] ; jg 0xb9c9a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b9c85 : psllq mm1, qword ptr [rdi] ; jg 0xb9c9b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000b9ce7 : psllq mm1, qword ptr [rdi] ; jg 0xb9cfc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000ba756 : psllq mm1, qword ptr [rdi] ; jg 0xba76a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba755 : psllq mm1, qword ptr [rdi] ; jg 0xba76b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000ba7b7 : psllq mm1, qword ptr [rdi] ; jg 0xba7cc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000d5a1c : psubb mm1, qword ptr [rax - 0x77] ; ret
0x000000000011464c : push -0x1076b7ff ; call 0x21107
0x00000000000a7a8a : push -0x16000001 ; retf 0xfffa
0x00000000000d4d3b : push -0x16000006 ; retf
0x000000000005df34 : push -0x16000014 ; ret
0x00000000000ff7fd : push -0x17ffffff ; retf 0xffe0
0x00000000001be729 : push -0x18 ; jmp qword ptr [rax]
0x00000000001ab2c4 : push -0x30 ; retf 0xe72e
0x00000000001c3625 : push -0x3bfc0000 ; std ; jmp rax
0x00000000001d01b0 : push -0x3ffff36 ; in eax, 0xee ; call qword ptr [rax]
0x00000000001aa94e : push -0x51 ; xlatb ; out 0xb3, al ; retf 0xe80
0x00000000001acaf5 : push -0x57d3205 ; call 0xffffffffab2895f5
0x00000000001aab01 : push -0x5e ; cld ; shr al, cl ; add al, 0x3d ; retf
0x0000000000002cb5 : push -0x7329150 ; ret
0x00000000000c0f9c : push -0x762876b4 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000029bc4 : push -0x76bf0000 ; ret 0x5be9
0x00000000000e63f4 : push -0x76fffd6d ; ret 0xc748
0x000000000006bf0e : push -0x7c000006 ; ret 0x8908
0x00000000001936a4 : push -0x9ffffff ; ret 0x7501
0x00000000001d7835 : push -0xc ; jmp rax
0x00000000001d3b79 : push -0xe ; jmp rax
0x00000000000d08c7 : push -0xfb872b8 ; ret
0x00000000001bd691 : push -5 ; call qword ptr [rax + 0x10fffb69]
0x00000000001bd68d : push -5 ; call qword ptr [rax]
0x00000000001bd511 : push -5 ; call rdx
0x00000000001bd651 : push -5 ; jmp qword ptr [rax + 0x20fffb69]
0x00000000001bd64d : push -5 ; jmp qword ptr [rax]
0x00000000001dff59 : push -9 ; call rax
0x00000000000e5a1f : push 0 ; add byte ptr [rax], al ; syscall
0x00000000001bdfad : push 0 ; add byte ptr [rsi + rax - 0x19], al ; call rax
0x000000000015945a : push 0 ; push 0x3c ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000001ac2f5 : push 0x1b6e41b5 ; std ; retf
0x00000000001d62b0 : push 0x1c00012b ; add esi, esp ; jmp qword ptr [rcx]
0x0000000000164427 : push 0x28 ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001596b5 : push 0x29 ; add byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + rax + 0x5b], 1 ; ret
0x0000000000163af6 : push 0x31000001 ; shr al, 0x6f ; ret 0xfffa
0x0000000000097063 : push 0x35 ; add byte ptr [rax], al ; ret
0x00000000000e61ad : push 0x39489123 ; ret 0x840f
0x000000000015945c : push 0x3c ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000199a48 : push 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000000000008652d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000002c9bc : push 0x4cffffff ; mov edi, esi ; call rdx
0x00000000001bf2b4 : push 0x540000d4 ; retf 0xffec
0x000000000014cbf2 : push 0x5c415d5b ; pop r13 ; ret
0x000000000014ef96 : push 0x5c415d5b ; ret
0x00000000001da03d : push 0x60b00001 ; cmc ; jmp qword ptr [rsi]
0x00000000001bd6a1 : push 0x6790fffb ; sti ; call qword ptr [rax]
0x00000000001bd661 : push 0x67a0fffb ; sti ; jmp qword ptr [rax]
0x00000000001bd51d : push 0x6852fffb ; sti ; call rdx
0x00000000001acf82 : push 0x6e ; ja 0x1acf0d ; ret 0x48f
0x000000000008d706 : push 0x74c98548 ; sub dword ptr [rax + 0x39], ecx ; retf
0x0000000000003607 : push 0x7514dab8 ; movsxd rdi, dword ptr [rsi + 0x30] ; retf 0x8792
0x000000000008ea8a : push 0x75c08548 ; ret
0x00000000001ac862 : push 0xfd4cbe ; retf 0xf64
0x0000000000031833 : push 0xfffffff ; retf 0xc089
0x00000000001da21d : push 1 ; add byte ptr [rax + 0x62], ah ; cmc ; jmp qword ptr [rbx]
0x00000000001da17d : push 1 ; add byte ptr [rax + 0x62], al ; cmc ; jmp qword ptr [rbx]
0x00000000001da1f5 : push 1 ; add byte ptr [rax + 0x62], bl ; cmc ; jmp qword ptr [rbx]
0x00000000001da245 : push 1 ; add byte ptr [rax + 0x62], ch ; cmc ; jmp qword ptr [rbx]
0x00000000001da1a5 : push 1 ; add byte ptr [rax + 0x62], cl ; cmc ; jmp qword ptr [rbx]
0x00000000001da1cd : push 1 ; add byte ptr [rax + 0x62], dl ; cmc ; jmp qword ptr [rbx]
0x0000000000068cb2 : push 1 ; add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x00000000001c095d : push 1 ; add byte ptr [rsi + rbp*4 - 0xc], dh ; jmp qword ptr [rax]
0x0000000000155e6e : push 2 ; add rdi, 0x68 ; jmp rcx
0x00000000000b7432 : push 5 ; add byte ptr [rax], al ; ret
0x00000000001bcfdf : push qword ptr [rax + 0x11] ; sti ; jmp qword ptr [rax]
0x00000000001bcf5f : push qword ptr [rax + 0x12] ; sti ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x00000000001bcfc3 : push qword ptr [rax + 0x13] ; sti ; inc dword ptr [rax + 0x15] ; sti ; jmp qword ptr [rax]
0x00000000001bd22f : push qword ptr [rax + 0x33] ; sti ; inc eax ; xor al, 0xfb ; call qword ptr [rax]
0x00000000001c91b7 : push qword ptr [rax + 0x4000001] ; ret 0x1a0
0x00000000001c33a3 : push qword ptr [rax + 0x4000115] ; ret
0x00000000001bd263 : push qword ptr [rax + 0x40fffb71] ; jno 0x1bd26e ; call rax
0x00000000001bd973 : push qword ptr [rax + 0x40fffb95] ; xchg eax, ebp ; sti ; call rax
0x00000000001bd75b : push qword ptr [rax + 0x40fffb98] ; cwde ; sti ; call rax
0x00000000001bd47b : push qword ptr [rax + 0x50fffb6e] ; sti ; call qword ptr [rax]
0x00000000001c1bab : push qword ptr [rax + 0x540001c5] ; sub edi, esi ; call rsp
0x00000000001bd063 : push qword ptr [rax + 7] ; sti ; inc eax ; or bl, bh ; call qword ptr [rax]
0x00000000001bf08b : push qword ptr [rax + rcx*8 - 0x6a0c0000] ; in al, dx ; call rax
0x00000000001bdc67 : push qword ptr [rax - 0x1e] ; cld ; inc eax ; jrcxz 0x1bdc73 ; call qword ptr [rax]
0x00000000001ae767 : push qword ptr [rax - 0x20] ; in al, dx ; inc dword ptr [rax - 0x1e] ; in al, dx ; jmp rax
0x00000000001af2b3 : push qword ptr [rax - 0x2f] ; sti ; jmp rax
0x00000000001b32ef : push qword ptr [rax - 0x37000603] ; std ; stc ; jmp rax
0x00000000001bf72b : push qword ptr [rax - 0x3bffff0a] ; ret 0xffed
0x00000000001af3f3 : push qword ptr [rax - 0x3f000f8b] ; jne 0x1af3f3 ; call rax
0x00000000001af2d7 : push qword ptr [rax - 0x3f00101e] ; in al, 0xef ; call rax
0x00000000001b1993 : push qword ptr [rax - 0x50] ; cmc ; call qword ptr [rdi]
0x00000000001b1c93 : push qword ptr [rax - 0x53] ; cmc ; call qword ptr [rdi]
0x00000000001a94a7 : push qword ptr [rax - 0x5c001782] ; jle 0x1a949f ; call rdi
0x00000000001bcf63 : push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x00000000001bcf7f : push qword ptr [rax] ; adc bh, bl ; push rax ; adc edi, ebx ; call rax
0x00000000001afe93 : push qword ptr [rax] ; jns 0x1afe8c ; jmp rax
0x00000000001afe93 : push qword ptr [rax] ; jns 0x1afe8d ; jmp rax
0x00000000001afe92 : push qword ptr [rax] ; jns 0x1afe8e ; jmp rax
0x00000000000b607f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001bf6b3 : push qword ptr [rax] ; out dx, al ; add byte ptr [rax], al ; hlt ; xchg ch, ch ; call rax
0x00000000001af2f7 : push qword ptr [rax] ; out dx, eax ; call rax
0x00000000001c1ae3 : push qword ptr [rax] ; ret
0x00000000001bf0f3 : push qword ptr [rax] ; retf
0x00000000001bcc27 : push qword ptr [rax] ; retf 0xfffc
0x00000000001bcf2f : push qword ptr [rax] ; sbb bh, bl ; call qword ptr [rax]
0x00000000001bcc57 : push qword ptr [rax] ; std ; jmp qword ptr [rax]
0x00000000001bd10b : push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00000000001bd00f : push qword ptr [rax] ; sti ; inc eax ; add ebx, edi ; call qword ptr [rax]
0x00000000001bcb6b : push qword ptr [rax] ; xchg ah, bh ; inc dword ptr [rax] ; xchg esp, edi ; call rax
0x00000000001bcbb3 : push qword ptr [rax] ; xchg eax, edi ; cld ; jmp qword ptr [rax]
0x0000000000195028 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000011d288 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011d260 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011de90 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000011dec0 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000199a46 : push qword ptr [rbp + 0x6a] ; add rsp, 0x30 ; pop rbx ; ret
0x000000000018aca9 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x0000000000084268 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000008ea2d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000008428e : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000005347e : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000013c882 : push qword ptr [rbp - 0x15] ; pop rbx ; ret
0x0000000000145c0b : push qword ptr [rbp - 0x16] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000052c56 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x000000000008f080 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003f18c : push qword ptr [rbx + 1] ; ret
0x000000000008483a : push qword ptr [rbx + 2] ; mov eax, dword ptr [rdx] ; ret
0x0000000000052056 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x00000000001bf7b3 : push qword ptr [rbx + rdi*8 - 0x1d5c0000] ; in eax, dx ; call rax
0x0000000000159a32 : push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x00000000001bccb3 : push qword ptr [rcx + 0x47] ; std ; call qword ptr [rcx]
0x00000000001bd8cf : push qword ptr [rcx + rbx*4 - 0x66bb0005] ; sti ; call rsp
0x000000000010668e : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000114334 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000019b0ac : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret 0x5a74
0x000000000019b14b : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x000000000008a76f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000087cd8 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000029373 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c826b : push qword ptr [rcx] ; shl byte ptr [rsi - 0x70], 1 ; retf 0xc083
0x00000000000213b5 : push qword ptr [rcx] ; shr al, 0x13 ; retf 5
0x0000000000113929 : push qword ptr [rcx] ; shr al, 0xf ; ret
0x000000000006f405 : push qword ptr [rcx] ; shr cl, 0x89 ; retf
0x00000000000e4dfb : push qword ptr [rdi + 0x22] ; hlt ; mov edi, edx ; mov eax, r8d ; syscall
0x00000000000e48f9 : push qword ptr [rdi + 0x34] ; ret
0x00000000001108d9 : push qword ptr [rdi + 0x3c] ; ret
0x00000000000e49a9 : push qword ptr [rdi + 0x44] ; ret
0x000000000003f20e : push qword ptr [rdi + 0x47] ; ret
0x0000000000115dd3 : push qword ptr [rdi + 0x4a] ; ret
0x00000000000e45f6 : push qword ptr [rdi + 0x4f] ; ret
0x00000000000448d9 : push qword ptr [rdi + 0x54] ; ret
0x0000000000121ef0 : push qword ptr [rdi + 0x55] ; ret
0x0000000000110086 : push qword ptr [rdi + 0x57] ; ret
0x00000000000e468c : push qword ptr [rdi + 0x59] ; ret
0x00000000000e47af : push qword ptr [rdi + 0x5e] ; ret
0x000000000010e63c : push qword ptr [rdi + 0x61] ; ret
0x0000000000116ffc : push qword ptr [rdi + 0x69] ; ret
0x0000000000122a22 : push qword ptr [rdi + 0x6b] ; ret
0x00000000001235ac : push qword ptr [rdi + 0x71] ; ret
0x00000000001219a2 : push qword ptr [rdi + 0x73] ; ret
0x0000000000121d8c : push qword ptr [rdi + 0x79] ; ret
0x000000000011edb3 : push qword ptr [rdi + 0xa] ; ret
0x000000000003f152 : push qword ptr [rdi + 0xb] ; ret
0x000000000003f1c1 : push qword ptr [rdi + 0xc] ; ret
0x000000000010f77a : push qword ptr [rdi + 3] ; ret
0x000000000010fb59 : push qword ptr [rdi + 4] ; ret
0x000000000010f7c8 : push qword ptr [rdi + 5] ; ret
0x000000000007bd6f : push qword ptr [rdi + 6] ; ret
0x000000000010f8d6 : push qword ptr [rdi + 7] ; ret
0x0000000000115fa5 : push qword ptr [rdi + 8] ; ret
0x000000000007bd3c : push qword ptr [rdi + 9] ; ret
0x00000000000e0184 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x00000000001c23eb : push qword ptr [rdi + rsi*8 + 1] ; add byte ptr [rdi + rax*4 - 8], ah ; jmp rsp
0x0000000000130ee3 : push qword ptr [rdi - 0x32] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001b05db : push qword ptr [rdi] ; ret
0x00000000001bd30f : push qword ptr [rdx + 0x42fffb73] ; jae 0x1bd31a ; call rdx
0x00000000001bf39b : push qword ptr [rdx + rbx*8 - 0x7ac0000] ; in al, dx ; call rsp
0x00000000001bd3d7 : push qword ptr [rdx + rsi*2 + 0x7244fffb] ; sti ; call rsp
0x00000000001bda2f : push qword ptr [rdx - 0x74] ; sti ; jmp rdx
0x00000000001ae317 : push qword ptr [rip + 0x40ffebef] ; loop 0x1ae312 ; call rdi
0x00000000001bd2ab : push qword ptr [rsi + 0x46fffb70] ; jo 0x1bd2b6 ; call rsi
0x00000000001bd7a3 : push qword ptr [rsi + 0x46fffb97] ; xchg eax, edi ; sti ; call rsi
0x00000000001b0727 : push qword ptr [rsi + 0x65] ; call rax
0x00000000001b10bf : push qword ptr [rsi + 0xa] ; hlt ; jmp qword ptr [rax]
0x00000000001245d9 : push qword ptr [rsi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000001c36a3 : push qword ptr [rsi + rax*8] ; add dword ptr [rax], eax ; hlt ; retf
0x00000000001bd3bf : push qword ptr [rsi + rbp*2 - 5] ; jmp rsp
0x0000000000109ff7 : push qword ptr [rsi + rbx*8 + 0x39] ; ret
0x0000000000051b25 : push qword ptr [rsp + 0x38] ; xor eax, eax ; call 0x7ddd8
0x00000000001c0d13 : push qword ptr [rsp + rdi*2 + 0x4fb40001] ; cmc ; jmp rsp
0x00000000001b0725 : push qword ptr gs:[rsi + 0x65] ; call rax
0x0000000000155f06 : push r12 ; mov eax, 1 ; ret
0x0000000000159205 : push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x0000000000159203 : push r14 ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000008de7c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000117935 : push r8 ; sbb byte ptr [rax + 0x65], bh ; syscall
0x00000000001aa9ac : push r8 ; xor byte ptr [rcx], ah ; retf
0x000000000014df15 : push rax ; adc al, 0x8b ; push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x000000000014dd95 : push rax ; adc al, 0xf ; retf 0xd789
0x00000000001bcfe7 : push rax ; adc al, 0xfb ; call rax
0x000000000014df0c : push rax ; adc byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x000000000008335a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000008fb51 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000014dd8a : push rax ; adc byte ptr [rdi], cl ; retf 0xd189
0x000000000014c8e9 : push rax ; adc dh, dh ; ret 0x7401
0x0000000000093c05 : push rax ; adc dh, dh ; ret 0xf0f
0x00000000001bcf83 : push rax ; adc edi, ebx ; call rax
0x0000000000074bdd : push rax ; add al, 0x83 ; clc ; pop rbp ; cmove r8, rdx ; jmp 0x74c04
0x000000000002922f : push rax ; add al, 0xe9 ; cmp eax, 0x89fffff3 ; retf 0xe283
0x00000000001449f4 : push rax ; add al, 0xe9 ; retf
0x00000000001c31cd : push rax ; add al, byte ptr [rax] ; add al, 0x95 ; cli ; call qword ptr [rax]
0x00000000000b0c7d : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001c36fb : push rax ; add al, byte ptr [rax] ; xor al, 0xd0 ; std ; jmp qword ptr [rax]
0x000000000008de7d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000ec7d8 : push rax ; add cl, byte ptr [rdi] ; xchg byte ptr [rbp - 0x16000002], dh ; retf
0x000000000008a24c : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000001d87a9 : push rax ; add dword ptr [rax], eax ; adc al, 0xa7 ; hlt ; jmp qword ptr [rcx]
0x00000000001d8795 : push rax ; add dword ptr [rax], eax ; clc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; hlt ; jmp qword ptr [rcx]
0x00000000001c061d : push rax ; add dword ptr [rax], eax ; ret
0x00000000001d8398 : push rax ; add qword ptr [rax], r8 ; je 0x1d8346 ; hlt ; jmp qword ptr [rcx]
0x00000000001bd1c0 : push rax ; and bl, bh ; call qword ptr [rax - 0x1f0004dc]
0x0000000000084809 : push rax ; and byte ptr [rax - 0x75], cl ; or byte ptr [rax + 0x39], cl ; retf 0x776
0x0000000000163761 : push rax ; and byte ptr [rax - 0x77], cl ; ret 0x3d83
0x00000000001d26f0 : push rax ; and cl, dh ; call qword ptr [rdx]
0x0000000000022c08 : push rax ; call rbx
0x00000000001d0d10 : push rax ; cld ; jmp qword ptr [rbx]
0x00000000001c0d29 : push rax ; cmc ; jmp qword ptr [rax]
0x00000000001bd083 : push rax ; cmp al, 0xfb ; call rax
0x0000000000059d80 : push rax ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000802fc : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x00000000001bd188 : push rax ; cmp eax, 0x3f30fffb ; sti ; jmp qword ptr [rax]
0x00000000001bd95c : push rax ; cwde ; sti ; jmp rax
0x00000000001bcc24 : push rax ; enter -4, 0x30 ; retf 0xfffc
0x00000000001de1b0 : push rax ; fdecstp ; call qword ptr [rdi]
0x00000000001c2223 : push rax ; in al, dx ; add dword ptr [rax], eax ; test byte ptr [rbx], ch ; clc ; jmp qword ptr [rax]
0x00000000001af427 : push rax ; jbe 0x1af41f ; call qword ptr [rax]
0x00000000001af3c3 : push rax ; je 0x1af3bf ; inc dword ptr [rax] ; jne 0x1af3c3 ; call qword ptr [rax]
0x00000000001bd24c : push rax ; je 0x1bd24d ; jmp rax
0x00000000001db698 : push rax ; jg 0x1db6a3 ; add byte ptr [rbx + rbp*4 - 0xb], al ; call qword ptr [rbx]
0x00000000001bcb40 : push rax ; jge 0x1bcb42 ; jmp qword ptr [rax]
0x00000000001b07f4 : push rax ; jmp qword ptr [rdx]
0x00000000001b082b : push rax ; jmp rsp
0x00000000001af403 : push rax ; jne 0x1af3fb ; call qword ptr [rax]
0x00000000001bd464 : push rax ; jno 0x1bd465 ; jmp rax
0x00000000001afe74 : push rax ; jnp 0x1afe6b ; jmp rax
0x00000000001afe74 : push rax ; jnp 0x1afe6c ; jmp rax
0x0000000000086c59 : push rax ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000001af390 : push rax ; lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax - 0x2f000352]
0x00000000001aaa1a : push rax ; lodsb al, byte ptr [rsi] ; xchg eax, edx ; pop rbx ; retf
0x00000000001af3a0 : push rax ; mov ch, 0xfc ; call qword ptr [rax - 0x2f000349]
0x0000000000024e71 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000001c1c2b : push rax ; mov dword ptr [rcx], 0xf7328400 ; call qword ptr [rax]
0x00000000001bcb83 : push rax ; mov edi, esp ; jmp rax
0x00000000001dc598 : push rax ; mov es, word ptr [rcx] ; add ah, ah ; psadbw mm7, mm7 ; retf 0
0x00000000001af3b0 : push rax ; mov esi, 0xc090fffc ; cld ; call rax
0x000000000015677f : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000d1aa2 : push rax ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000105ec8 : push rax ; mov rcx, qword ptr [r14] ; call r12
0x000000000012e7eb : push rax ; mov rsi, rdx ; call rax
0x000000000003f8ae : push rax ; movups xmmword ptr [rdi + 0x60], xmm0 ; movups xmmword ptr [rdi + 0x70], xmm0 ; ret
0x000000000014dd7f : push rax ; or al, 0xf ; retf 0xd189
0x00000000000f3d2e : push rax ; or al, byte ptr [rcx - 0x77] ; retf 0xeac0
0x0000000000148ff5 : push rax ; or byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000907a2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000000000091b6a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000011dbad : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x00000000000fbf05 : push rax ; or byte ptr [rcx + 0x63], cl ; adc al, 0x92 ; add rdx, r10 ; jmp rdx
0x000000000014dd6f : push rax ; or byte ptr [rdi], cl ; retf 0xd189
0x0000000000095342 : push rax ; or dh, dh ; ret 0xf02
0x0000000000184b5c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001bc3de : push rax ; pop r9 ; clc ; ret 0x6e1f
0x00000000001c3603 : push rax ; pop rbp ; add byte ptr [rax], al ; ret
0x00000000001546e6 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000052240 : push rax ; pop rbx ; ret
0x00000000001c31cb : push rax ; push rax ; add al, byte ptr [rax] ; add al, 0x95 ; cli ; call qword ptr [rax]
0x0000000000024e73 : push rax ; push rsp ; ret
0x000000000003dfed : push rax ; ret
0x0000000000064641 : push rax ; ret 0xf41
0x00000000001ad2c0 : push rax ; retf
0x000000000010158c : push rax ; retf 0x2e
0x000000000005822c : push rax ; retf 0xd
0x00000000001bcf2c : push rax ; sbb bl, bh ; push qword ptr [rax] ; sbb bh, bl ; call qword ptr [rax]
0x0000000000092f2c : push rax ; sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x0000000000117936 : push rax ; sbb byte ptr [rax + 0x65], bh ; syscall
0x000000000014742f : push rax ; sbb byte ptr [rax - 0x77], cl ; ret
0x000000000008fb46 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000000843a9 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000014dda0 : push rax ; sbb byte ptr [rdi], cl ; retf 0x5389
0x000000000012ace1 : push rax ; sbb dh, dh ; ret 0x7508
0x00000000001bcfb0 : push rax ; sbb ebx, edi ; jmp qword ptr [rax]
0x00000000001af20b : push rax ; scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rax]
0x0000000000130065 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001bd480 : push rax ; sti ; call qword ptr [rax]
0x00000000001bd719 : push rax ; sti ; jmp qword ptr [rax + 0x20fffb51]
0x00000000001bd0dc : push rax ; sti ; jmp rax
0x00000000001bd108 : push rax ; sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00000000001ceac0 : push rax ; sub ch, ch ; call rsp
0x00000000001d52a0 : push rax ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001bd744 : push rax ; wait ; sti ; jmp rax
0x000000000011379d : push rax ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x000000000011375f : push rax ; xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x00000000001aa9ad : push rax ; xor byte ptr [rcx], ah ; retf
0x00000000001af50f : push rax ; xor eax, 0xf08200ff ; jmp qword ptr [rax]
0x0000000000115785 : push rax ; xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000014f078 : push rbp ; adc byte ptr [rcx], bh ; ret
0x000000000010e834 : push rbp ; add al, 0x8d ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000010f68d : push rbp ; add al, byte ptr [rax] ; mov eax, 0x84 ; syscall
0x000000000015a42b : push rbp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011c597 : push rbp ; add ebp, dword ptr [rip + 0x5d5b5900] ; pop r12 ; ret
0x0000000000145f50 : push rbp ; and byte ptr [rax - 0x75], cl ; push rdi ; or dh, dh ; ret 0x7401
0x000000000002cd87 : push rbp ; call qword ptr [rsi]
0x000000000006639d : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000000823e3 : push rbp ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000001ccd : push rbp ; je 0x1cfb ; ret
0x0000000000003bb2 : push rbp ; jg 0x3c21 ; xchg eax, ebp ; retf 0x10bf
0x0000000000003bb1 : push rbp ; jg 0x3c22 ; xchg eax, ebp ; retf 0x10bf
0x0000000000159206 : push rbp ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x00000000000a2a6f : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x00000000000a5c41 : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x2e66
0x00000000000a5de9 : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0x9066
0x00000000000a52dd : push rbp ; mov byte ptr [rax + 0x29], cl ; ret 0xf66
0x0000000000160aef : push rbp ; mov byte ptr [rax + 1], cl ; retf 0x8b48
0x00000000001895e8 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000012f77c : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000012fb63 : push rbp ; or byte ptr [rax - 0x77], 0xda ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x00000000000f7292 : push rbp ; or byte ptr [rax - 0x77], cl ; ret 0xed31
0x000000000012f2d0 : push rbp ; or byte ptr [rcx + rcx*4 - 0x1e], 0xf ; adc dword ptr [rbp - 0x78], eax ; call rax
0x00000000000efc35 : push rbp ; or byte ptr [rcx - 0x75], cl ; je 0xefc67 ; or byte ptr [rcx], ch ; ret
0x00000000001058c0 : push rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000e009d : push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000000a3f3f : push rbp ; ret
0x00000000000a4f93 : push rbp ; ret 0x5488
0x00000000000a42d2 : push rbp ; ret 0x8349
0x00000000000a3f36 : push rbp ; ret 0x8841
0x00000000000a6da8 : push rbp ; ret 0x8842
0x00000000000a3f09 : push rbp ; ret 0x8944
0x00000000000a76eb : push rbp ; ret 0x8d48
0x00000000000a4f5c : push rbp ; ret 0xb60f
0x00000000000a6d75 : push rbp ; ret 0xfbc1
0x0000000000002729 : push rbp ; retf
0x0000000000002656 : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x25f2 ; loop 0x263e ; ret 0x943d
0x00000000001bd6e9 : push rbp ; sti ; jmp qword ptr [rax]
0x000000000012ca46 : push rbp ; sub byte ptr [rax - 0x77], cl ; ret
0x00000000000c9483 : push rbp ; test al, 0xf ; xchg dword ptr [rsi + 0x1000004], esi ; retf 0x8d49
0x000000000012f231 : push rbp ; test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x0000000000130fe0 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000000852b6 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000009b3da : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x3348
0x0000000000145dbe : push rbx ; adc byte ptr [rcx - 0x3a7cb718], cl ; add dword ptr [rcx], edi ; ret 0xb37f
0x000000000014dd08 : push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x000000000010e9c6 : push rbx ; add al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x00000000000e689a : push rbx ; add byte ptr [r13 - 0x36], sil ; jmp 0xe6850
0x0000000000106177 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000134822 : push rbx ; and byte ptr [rcx], ch ; retf 0x37e9
0x0000000000134a72 : push rbx ; and byte ptr [rcx], ch ; retf 0x38e9
0x0000000000088c12 : push rbx ; and byte ptr [rcx], ch ; retf 0x40e9
0x000000000014df07 : push rbx ; and byte ptr [rdi], cl ; retf 0x5089
0x0000000000103b45 : push rbx ; and cl, ch ; ret
0x00000000000a501c : push rbx ; cmovge edi, dword ptr [rcx] ; retf 0x870f
0x000000000008a948 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000000209b : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000009c029 : push rbx ; fmul dword ptr [eax + 0x33] ; push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5b74
0x0000000000192f35 : push rbx ; jb 0x192f45 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000000842a2 : push rbx ; je 0x84306 ; pop rbp ; pop r12 ; ret
0x000000000008432e : push rbx ; je 0x84392 ; pop rbp ; pop r12 ; ret
0x00000000000e6848 : push rbx ; jne 0xe686f ; xor eax, eax ; ret
0x00000000000e6847 : push rbx ; jne 0xe6870 ; xor eax, eax ; ret
0x00000000000d08ac : push rbx ; lea rax, [rdi - 0x10] ; ret
0x00000000000e009e : push rbx ; mov rbx, rsi ; sub rsp, 8 ; syscall
0x00000000000b7a92 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000008a944 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000135515 : push rbx ; or byte ptr [rax + 0x33], cl ; add ecx, dword ptr [rax + 9] ; ret 0x850f
0x0000000000087f22 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000003e3c : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000014ef95 : push rbx ; push 0x5c415d5b ; ret
0x000000000003dcfc : push rbx ; ret
0x00000000000e1bc8 : push rbx ; ret 0x30
0x00000000000a7c2d : push rbx ; ret 0xffff
0x0000000000048658 : push rbx ; rol byte ptr [rax - 0x69f0f606], 1 ; ret 0x8348
0x000000000006b1fd : push rbx ; sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000014defa : push rbx ; sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x00000000001bd721 : push rbx ; sti ; jmp qword ptr [rax + 0x20fffb54]
0x00000000000f0329 : push rbx ; sub al, 0x89 ; ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x0000000000145c94 : push rbx ; sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x00000000000f3ff5 : push rbx ; sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000014df10 : push rbx ; sub byte ptr [rdi], cl ; retf 0x5089
0x0000000000002d64 : push rbx ; xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x00000000001ac3dc : push rbx ; xchg eax, edx ; jae 0x1ac3bb ; push rsi ; pop rdx ; je 0x1ac3b0 ; ret 0xacfc
0x000000000014df18 : push rbx ; xor byte ptr [rdi], cl ; retf 0x5089
0x0000000000111fd9 : push rbx ; xor dh, dh ; ret 0xf01
0x0000000000096242 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x00000000000924fb : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000092887 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000001093f8 : push rcx ; add cl, byte ptr [rcx + 0x440f48c7] ; retf 0x40
0x00000000001651eb : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000011f10b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a81e5 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; pop rbx ; mov qword ptr [rdi], rdx ; ret
0x00000000001ab665 : push rcx ; call qword ptr [rsi]
0x00000000000a588a : push rcx ; cmovge edi, dword ptr [rcx] ; ret 0x870f
0x00000000000a6e29 : push rcx ; cmovge edi, dword ptr [rcx] ; retf 0x870f
0x000000000019272d : push rcx ; jl 0x19277e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000192894 : push rcx ; jl 0x1928e5 ; adc dword ptr [rcx + 7], edi ; ret
0x00000000001a9493 : push rcx ; jle 0x1a9483 ; jmp rsp
0x00000000001c06e1 : push rcx ; jmp rax
0x0000000000001b2c : push rcx ; jns 0x1b39 ; ret
0x000000000012fd06 : push rcx ; jo 0x12fd1e ; adc dword ptr [rbp - 0x78], eax ; call rax
0x000000000009dd08 : push rcx ; js 0x9dd05 ; ret 0
0x000000000017f166 : push rcx ; or byte ptr [rax - 0x73], cl ; adc byte ptr [r8 - 0x77], cl ; retf 0x8348
0x0000000000145c93 : push rcx ; push rbx ; sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x00000000000f4e0b : push rcx ; ret
0x000000000015449b : push rcx ; retf
0x0000000000090f0d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000001bccac : push rcx ; std ; jmp rcx
0x00000000000d533b : push rcx ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000001bd6dd : push rcx ; sti ; jmp qword ptr [rax + 0x20fffb52]
0x00000000001bd71d : push rcx ; sti ; jmp qword ptr [rax]
0x00000000000c7989 : push rcx ; str word ptr [rax - 0x77] ; ret 0xc148
0x0000000000059866 : push rcx ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000000bab22 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b8ef2 : push rdi ; adc al, 0x48 ; lea eax, [rdi + 0x15] ; ret
0x000000000003334e : push rdi ; adc al, 0xf ; retf 0xfa83
0x000000000011d648 : push rdi ; adc byte ptr [rax - 0x7d], cl ; retf 0x4901
0x00000000000bac80 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000d2e52 : push rdi ; adc byte ptr [rcx], ch ; ret 0x428d
0x000000000003333e : push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000000ba958 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000ba96a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000b7efa : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000b8d3a : push rdi ; add al, 0x48 ; lea eax, [rdi + 6] ; ret
0x00000000001742a9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000000ba92a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000112895 : push rdi ; add dword ptr [rax + 0x39], ecx ; ret 0xd72
0x00000000001c06dd : push rdi ; add dword ptr [rax], eax ; push rsp ; push rcx ; jmp rax
0x00000000000b7fac : push rdi ; add eax, 0xc478d48 ; ret
0x00000000000b8dfc : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000ba988 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000059509 : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000016e0a8 : push rdi ; clc ; ret
0x000000000016e220 : push rdi ; cld ; ret
0x000000000016ed47 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000173b89 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000007f975 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x00000000000f3605 : push rdi ; cmp byte ptr [rcx - 0x73], cl ; or byte ptr [r8 + 0x39], r9b ; retf 0x1274
0x00000000000e4da8 : push rdi ; cmp eax, 0xfffff001 ; jae 0xe4db9 ; ret
0x0000000000195f1a : push rdi ; dec dword ptr [rax + 0x21] ; ret 0x7be9
0x00000000001959bc : push rdi ; dec dword ptr [rax + 0x21] ; ret 0x8948
0x000000000009c02e : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x5b74
0x0000000000173b09 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000001cc659 : push rdi ; in al, dx ; call qword ptr [rcx]
0x000000000017395a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000012fc30 : push rdi ; jo 0x12fc80 ; mov edi, esp ; movups xmmword ptr [rbp - 0x78], xmm0 ; call rax
0x000000000008dda4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x00000000001739ea : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000001401fb : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000003332e : push rdi ; or al, 0xf ; retf 0xd289
0x00000000000ba9cc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000baa0a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000ba9aa : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000d0135 : push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x00000000000549da : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000052bba : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000052bc1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000008a250 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000033323 : push rdi ; or byte ptr [rdi], cl ; retf 0x8941
0x0000000000145f54 : push rdi ; or dh, dh ; ret 0x7401
0x00000000000921a6 : push rdi ; or dh, dh ; ret 0xf02
0x00000000000b8190 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000b8ff0 : push rdi ; or eax, 0x1d478d48 ; ret
0x00000000000e4335 : push rdi ; ret
0x00000000000f19eb : push rdi ; ret 0
0x000000000019141e : push rdi ; ret 0xff3
0x0000000000153b65 : push rdi ; retf
0x0000000000190fc3 : push rdi ; retf 0xcab2
0x0000000000090830 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000005950d : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000015dc53 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x000000000012a927 : push rdi ; sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000033362 : push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000016ef47 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000014d5f9 : push rdi ; std ; dec dword ptr [rax + 0x39] ; ret
0x000000000016e76a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x00000000001bd6ed : push rdi ; sti ; jmp qword ptr [rax + 0x20fffb58]
0x00000000001bd72d : push rdi ; sti ; jmp qword ptr [rax]
0x000000000016eb47 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000015db64 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000015dbb2 : push rdi ; sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x000000000015dbe2 : push rdi ; sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x000000000011e25c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bac60 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000b145b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000abc08 : push rdi ; xor eax, eax ; ret
0x0000000000144e72 : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x6af0dc07], al ; ret 0xf980
0x00000000001595ea : push rdx ; imul ebp, dword ptr [rcx], 0 ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001c0161 : push rdx ; int1 ; call qword ptr [rax]
0x000000000009ef6a : push rdx ; js 0x9ef67 ; ret 0
0x000000000009efba : push rdx ; js 0x9efb7 ; ret 0
0x000000000009f00a : push rdx ; js 0x9f007 ; ret 0
0x000000000009f05a : push rdx ; js 0x9f057 ; ret 0
0x000000000009d076 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x00000000001bd338 : push rdx ; outsd dx, dword ptr [rsi] ; sti ; jmp rdx
0x00000000001bd510 : push rdx ; push -5 ; call rdx
0x000000000003098a : push rdx ; ret 0x3b
0x00000000000a7ea8 : push rdx ; ret 0xffff
0x00000000001015a1 : push rdx ; retf 0x2e
0x00000000000de3ea : push rdx ; retf 0x30
0x0000000000091342 : push rdx ; sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000024e6d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000001bd528 : push rdx ; sti ; call rdx
0x00000000001bd6e1 : push rdx ; sti ; jmp qword ptr [rax]
0x0000000000001b11 : push rdx ; test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000001bd830 : push rdx ; xchg eax, esi ; sti ; jmp rdx
0x0000000000147eb9 : push rsi ; adc byte ptr [rbp + 9], cl ; retf 0x850f
0x0000000000190064 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000192d79 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x192dd0 ; adc dword ptr [rsi + 3], edx ; ret
0x00000000001c8e35 : push rsi ; add byte ptr [rax], al ; sbb byte ptr [rdx - 0x15], ah ; call qword ptr [rax]
0x0000000000174541 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000001d8d81 : push rsi ; add dword ptr [rax], eax ; pop rsp ; ret 0xfff4
0x00000000001d8da9 : push rsi ; add dword ptr [rax], eax ; push rsp ; ret
0x00000000001180fb : push rsi ; add dword ptr [rbp - 0x2f], esi ; ret
0x00000000001745b1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6965 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000001744d1 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000000b6903 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000000e5ccc : push rsi ; add rsp, 0x38 ; ret
0x0000000000190079 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000016e1d2 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000016e941 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e575 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e755 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e935 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000016e395 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000001acf80 : push rsi ; cli ; push 0x6e ; ja 0x1acf0f ; ret 0x48f
0x0000000000194b66 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000002c98e : push rsi ; cmp byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000fee59 : push rsi ; cmp dh, dh ; ret 0x7408
0x0000000000194b56 : push rsi ; hlt ; sub eax, edx ; ret
0x00000000001bef19 : push rsi ; in al, dx ; call rsp
0x0000000000194b26 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000001bd294 : push rsi ; jae 0x1bd295 ; jmp rsi
0x00000000000fee98 : push rsi ; ljmp [rcx] ; ret 0x6348
0x000000000015b340 : push rsi ; mov eax, 0x89480005 ; ret 0xff31
0x0000000000064523 : push rsi ; or al, 0xf6 ; ret 0xf01
0x000000000006476c : push rsi ; or al, 0xf6 ; ret 0xf40
0x00000000000442d2 : push rsi ; or byte ptr [rax + 0x29], cl ; retf 0xc148
0x0000000000043f3e : push rsi ; or byte ptr [rcx - 0x3e], bh ; xor eax, eax ; ret
0x00000000000d0132 : push rsi ; or byte ptr [rcx], bh ; push rdi ; or byte ptr [rbp - 0x35], dh ; ret
0x00000000001ac3e0 : push rsi ; pop rdx ; je 0x1ac3ac ; ret 0xacfc
0x0000000000159204 : push rsi ; push r13 ; lea r9, [rsp + 0x3a] ; call qword ptr [rax]
0x000000000003e2af : push rsi ; ret
0x00000000000f6e64 : push rsi ; ret 0xf20
0x0000000000164746 : push rsi ; ret 0xfffa
0x00000000000674e0 : push rsi ; retf 0x14
0x00000000000bf9ae : push rsi ; retf 0xf
0x0000000000038ae6 : push rsi ; retf 0xffff
0x00000000000d9545 : push rsi ; rol byte ptr [rax - 0x78f0f606], 1 ; retf
0x0000000000065bab : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000001bce3d : push rsi ; std ; call qword ptr [rdi]
0x00000000001bccf7 : push rsi ; std ; call qword ptr [rsi + 0x17fffd48]
0x00000000001bce39 : push rsi ; std ; jmp qword ptr [rcx + 0x17fffd56]
0x00000000001bce19 : push rsi ; std ; jmp qword ptr [rcx + 0x26fffd56]
0x00000000001bce1d : push rsi ; std ; jmp qword ptr [rsi]
0x00000000001bcebd : push rsi ; std ; lcall [rax] ; adc edi, ebx ; jmp rax
0x00000000001bd729 : push rsi ; sti ; jmp qword ptr [rax + 0x20fffb57]
0x000000000002c6ba : push rsi ; sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000107f2e : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000194b36 : push rsi ; sub eax, edx ; ret
0x00000000001aa9a8 : push rsi ; xchg eax, ebp ; jge 0x1aa98d ; push r8 ; xor byte ptr [rcx], ah ; retf
0x0000000000114a47 : push rsi ; xor ax, ax ; ret
0x000000000019008e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001c33cb : push rsp ; adc al, byte ptr [rcx] ; add ah, al ; retf 0xfffc
0x0000000000115dc4 : push rsp ; add byte ptr [rax], al ; mov eax, 0x10 ; syscall
0x0000000000115ca1 : push rsp ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000fea5e : push rsp ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000fed24 : push rsp ; add dword ptr [rbp - 0x7cb7febd], ecx ; ret
0x000000000014102a : push rsp ; add esi, edi ; mov eax, r8d ; ret
0x00000000001d849c : push rsp ; add qword ptr [r8], r8 ; loopne 0x1d844b ; hlt ; jmp qword ptr [rcx]
0x00000000001672da : push rsp ; and al, 0x10 ; call rdx
0x00000000000a8504 : push rsp ; and al, 0x16 ; mov byte ptr [rdi + 6], dl ; ret
0x00000000000a8482 : push rsp ; and al, 0x18 ; add rax, rdi ; mov qword ptr [rdi], rdx ; ret
0x000000000014d1c8 : push rsp ; and al, 0x18 ; lea r9, [rsp + 0x40] ; call qword ptr [rax]
0x000000000012a155 : push rsp ; and al, 0x18 ; mov edi, 0x2000004 ; call rcx
0x0000000000094274 : push rsp ; and al, 0x18 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000014c6fa : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012a044 : push rsp ; and al, 0x18 ; mov rsi, r13 ; xor r15d, r15d ; call rax
0x00000000000f480d : push rsp ; and al, 0x20 ; call 0x212c5
0x00000000001533e2 : push rsp ; and al, 0x20 ; call rdx
0x0000000000115a77 : push rsp ; and al, 0x30 ; mov eax, 0x10 ; syscall
0x000000000012f778 : push rsp ; and al, 0x60 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000a84e3 : push rsp ; and al, 0xc ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a86b6 : push rsp ; and al, 0xe ; mov byte ptr [rdi + 6], dl ; ret
0x000000000003e63d : push rsp ; and al, 0xe0 ; movdqa xmm0, xmmword ptr [rsp - 0x28] ; ret
0x00000000000a8695 : push rsp ; and al, 0xec ; mov word ptr [rdi + 4], dx ; ret
0x00000000000a84cb : push rsp ; and al, 0xf4 ; mov byte ptr [rdi + 4], dl ; ret
0x0000000000054ba0 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x00000000000a84ad : push rsp ; and al, 0xfa ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000054b5a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000001d5b9c : push rsp ; and al, 1 ; add al, al ; out 0xf3, eax ; jmp rax
0x000000000009d702 : push rsp ; and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000009d66d : push rsp ; and al, 8 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004685d : push rsp ; and al, 8 ; call 0x53345
0x0000000000141502 : push rsp ; and al, 8 ; jne 0x141542 ; add rsp, 0x38 ; ret
0x0000000000121877 : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000094030 : push rsp ; and al, 8 ; mov rdi, r15 ; call qword ptr [rax]
0x00000000001c22a8 : push rsp ; clc ; call qword ptr [rax]
0x00000000001bf3a0 : push rsp ; clc ; in al, dx ; call rsp
0x00000000001bf3d3 : push rsp ; fild dword ptr [rax] ; add ah, ah ; add ch, ch ; jmp qword ptr [rax]
0x00000000001bfd58 : push rsp ; fsub st(7), st(0) ; call rax
0x00000000001bec18 : push rsp ; fucomip st(3) ; call qword ptr [rax]
0x00000000001ca09c : push rsp ; imul eax, dword ptr [rax], 0xebabd000 ; call qword ptr [rsi]
0x00000000001bedb8 : push rsp ; in al, dx ; jmp qword ptr [rax]
0x00000000000e669f : push rsp ; je 0xe66d8 ; mov eax, 0x7f ; ret
0x00000000000ac13b : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000001bec50 : push rsp ; loope 0x1bec41 ; call rsp
0x0000000000155f07 : push rsp ; mov eax, 1 ; ret
0x00000000000a3f88 : push rsp ; movups xmm0, xmmword ptr [rcx + 0xf] ; xchg eax, ebx ; ret 0x3949
0x00000000001bdad0 : push rsp ; nop ; sti ; call rsp
0x00000000001892e9 : push rsp ; or eax, 0x894d0000 ; retf
0x00000000001c3050 : push rsp ; pop rbp ; cli ; call qword ptr [rax]
0x00000000001be728 : push rsp ; push -0x18 ; jmp qword ptr [rax]
0x00000000000e6846 : push rsp ; push rbx ; jne 0xe6871 ; xor eax, eax ; ret
0x00000000000e6845 : push rsp ; push rbx ; jne 0xe6872 ; xor eax, eax ; ret
0x00000000001c06e0 : push rsp ; push rcx ; jmp rax
0x00000000000c7988 : push rsp ; push rcx ; str word ptr [rax - 0x77] ; ret 0xc148
0x0000000000024e74 : push rsp ; ret
0x0000000000032852 : push rsp ; ret 0x4820
0x0000000000124ed4 : push rsp ; ret 0x8940
0x00000000001c2b48 : push rsp ; ret 0xfff9
0x0000000000034ea8 : push rsp ; ret 0xfffe
0x00000000001c1acb : push rsp ; ret 1
0x000000000011e298 : push rsp ; retf
0x00000000001bf0d4 : push rsp ; retf 0
0x0000000000052a40 : push rsp ; retf 0x48f8
0x0000000000125649 : push rsp ; retf 0x8b40
0x00000000001c786c : push rsp ; retf 0xffe8
0x00000000001bf2b8 : push rsp ; retf 0xffec
0x00000000001e099c : push rsp ; rol byte ptr [rcx], cl ; add byte ptr [rax - 0x65], ah ; idiv edi ; retf
0x00000000001deffc : push rsp ; sbb al, 0xf7 ; call qword ptr [rsi]
0x00000000001d10bc : push rsp ; sbb dh, al ; jmp qword ptr [rcx]
0x0000000000033277 : push rsp ; sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000001d529c : push rsp ; sbb eax, dword ptr [rcx] ; add byte ptr [rax - 0x58], dl ; jmp qword ptr [rcx]
0x00000000000e6af4 : push rsp ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000001bd6e5 : push rsp ; sti ; jmp qword ptr [rax + 0x20fffb55]
0x00000000001bd725 : push rsp ; sti ; jmp qword ptr [rax]
0x00000000001d629c : push rsp ; sub eax, dword ptr [rcx] ; add byte ptr [rax], dl ; add esi, esp ; call qword ptr [rsi]
0x00000000001c1bb0 : push rsp ; sub edi, esi ; call rsp
0x00000000001c0c10 : push rsp ; sub esi, ebp ; call qword ptr [rax]
0x00000000000a4033 : push rsp ; syscall
0x00000000001bd8f8 : push rsp ; xchg eax, ebp ; sti ; jmp rsp
0x00000000001c2410 : push rsp ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000001c3683 : push rsp ; xor eax, dword ptr [rcx] ; add ah, ah ; retf 0xfffd
0x0000000000186a80 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000002c6df : pushfq ; adc eax, dword ptr [rax] ; mov rdi, r14 ; call rbx
0x00000000000550e0 : pushfq ; adc rax, 0xc8b4800 ; ret 0x8b49
0x000000000011de37 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x11de48 ; call r12
0x00000000001d82e4 : pushfq ; add qword ptr [r8], rax ; js 0x1d8291 ; hlt ; jmp qword ptr [rcx]
0x00000000001c370c : pushfq ; add r8b, byte ptr [rax] ; sar ebp, 1 ; call rsp
0x00000000000c19da : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x000000000002651a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000000c70ba : pushfq ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret 0x3145
0x00000000001d4ec9 : pushfq ; call qword ptr [rax]
0x00000000001d4e8d : pushfq ; call qword ptr [rbx]
0x0000000000131b6d : pushfq ; clc ; dec dword ptr [rax + 0xf] ; ret 0xc3f3
0x00000000001db44d : pushfq ; cmc ; call qword ptr [rcx]
0x00000000001db461 : pushfq ; cmc ; jmp rax
0x00000000001d2c14 : pushfq ; cmp al, 0xf1 ; jmp qword ptr [rdi]
0x00000000001d71a4 : pushfq ; hlt ; jmp qword ptr [rcx]
0x00000000001da194 : pushfq ; idiv eax ; jmp qword ptr [rbx]
0x00000000001c0974 : pushfq ; imul eax, dword ptr [rcx], 0 ; hlt ; mov dl, 0xf4 ; jmp qword ptr [rax]
0x00000000001da2e4 : pushfq ; imul eax, dword ptr [rcx], 0 ; movsxd rsi, ebp ; jmp qword ptr [rbx]
0x00000000001c0b2c : pushfq ; je 0x1c0b37 ; add ah, dl ; sbb al, 0xf5 ; call rax
0x00000000001d1ae4 : pushfq ; jrcxz 0x1d1aee ; add byte ptr [rax], bh ; in eax, 0xf0 ; jmp qword ptr [rdi]
0x00000000001cc1e4 : pushfq ; mov al, byte ptr [rax] ; add al, bh ; in al, dx ; call qword ptr [rsi]
0x00000000001cf2e4 : pushfq ; mov ebx, 0xa1080000 ; cli ; call qword ptr [rax]
0x0000000000187780 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185734 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000000d46cc : pushfq ; ret 0x3949
0x0000000000114880 : pushfq ; ret 0xffff
0x00000000000467a0 : pushfq ; retf
0x00000000001e01e4 : pushfq ; retf 1
0x00000000001bec4c : pushfq ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; push rsp ; loope 0x1bec45 ; call rsp
0x00000000001c64e4 : pushfq ; sub eax, 0xfd80000 ; cli ; call qword ptr [rdi]
0x00000000001d3c14 : pushfq ; test dl, dh ; call qword ptr [rdi]
0x00000000001d4ba4 : pushfq ; xchg ebx, esi ; call rdx
0x000000000015e11f : pxor mm0, mm0 ; movups xmmword ptr [rsp + 0x28], xmm0 ; call rdx
0x000000000015e11e : pxor xmm0, xmm0 ; movups xmmword ptr [rsp + 0x28], xmm0 ; call rdx
0x00000000001bf2c4 : rcl ah, 0 ; add ah, ah ; retf 0xffec
0x00000000000af9fd : rcl byte ptr [rax + rax], 1 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000002d63 : rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x00000000001c32fc : rcl byte ptr [rbx], 1 ; add dword ptr [rax], eax ; and al, 0x3f ; sti ; jmp rsp
0x00000000001237ac : rcl byte ptr [rcx + rax], 1 ; add byte ptr [rcx - 0x77], cl ; retf 0xdcb8
0x00000000001af36c : rcl byte ptr [rcx], 0xf0 ; call qword ptr [rax]
0x00000000001d4f18 : rcl byte ptr [rdi], 1 ; add dword ptr [rax], eax ; adc al, 0x44 ; stc ; call qword ptr [rax]
0x00000000001accf1 : rcl byte ptr [rdi], cl ; retf
0x00000000001c27dc : rcl byte ptr [rdx + rax], 0 ; xor al, 0x3f ; stc ; call qword ptr [rax]
0x0000000000001ecb : rcl byte ptr [rip + 0x42585c0c], 1 ; xchg eax, edi ; retf 0x20f4
0x00000000001cd5d0 : rcl cl, 0xec ; call rsi
0x00000000001c1e24 : rcl dl, 1 ; add byte ptr [rbx - 9], ah ; call rsp
0x000000000011b4ab : rcl dword ptr [rdi - 0x76b7ffff], 1 ; ret 0x59e8
0x000000000005ed58 : rcl dword ptr [rip + 0x6f0f6600], 1 ; ret 0x290f
0x000000000005ed81 : rcl dword ptr [rip + 0x6f0f6600], 1 ; ret 0x3e8
0x00000000001ac81a : rcl dword ptr [rsi + 0x27], cl ; retf 0xc0fe
0x00000000001ac3df : rcl dword ptr [rsi + 0x5a], cl ; je 0x1ac3ad ; ret 0xacfc
0x00000000001ac819 : rcl qword ptr [r14 + 0x27], cl ; retf 0xc0fe
0x00000000001ac3db : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x1ac3b1 ; ret 0xacfc
0x00000000001bdc60 : rcr bh, 1 ; cld ; jmp qword ptr [rax]
0x000000000003dc51 : rcr bl, 0x3f ; fld xword ptr [rsp + 8] ; fsubrp st(1) ; ret
0x0000000000002d67 : rcr byte ptr [r10], 1 ; retf 0x2217
0x00000000001bd958 : rcr byte ptr [rax - 0x67af0005], 0xfb ; jmp rax
0x000000000017a05d : rcr byte ptr [rax], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001c5008 : rcr byte ptr [rax], 0 ; add byte ptr [rsp + rbx*8 - 0x1a], al ; jmp rdx
0x000000000009a0e3 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x00000000000352c0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000000e144c : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000813b1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000051f37 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000052bc7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000023e62 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000043835 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000d1196 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r14 ; ret
0x00000000000431df : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e150c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000063f9b : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000004fcb8 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000080f67 : rcr byte ptr [rbx + 0x5d], cl ; pop r12 ; jmp rax
0x00000000001dfc50 : rcr byte ptr [rbx - 9], 1 ; call qword ptr [rdi]
0x00000000000af30d : rcr byte ptr [rbx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001af74c : rcr byte ptr [rcx - 0x662f0010], 0xf0 ; jmp rax
0x00000000001ac7fd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001c299c : rcr byte ptr [rdi], 1 ; add al, byte ptr [rax] ; adc al, 0x81 ; stc ; jmp rsp
0x00000000001c12a4 : rcr byte ptr [rdx + 0x5f40001], 0xf6 ; call qword ptr [rax]
0x0000000000002d68 : rcr byte ptr [rdx], 1 ; retf 0x2217
0x00000000001d1608 : rcr dh, 0 ; add ah, dl ; xchg eax, esi ; call qword ptr [rax]
0x0000000000117e4c : rcr dword ptr [rbx + 0x31], cl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000052bf9 : rcr dword ptr [rcx], 0xc0 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000001acb51 : rcr dword ptr [rcx], cl ; retf 0xbb9a
0x0000000000122c33 : rcr esp, 0x2c ; add byte ptr [rcx - 0x77], al ; retf 0x8b
0x00000000000bb4e4 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000000bb4d6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000165da4 : rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000000000bb8ba : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000014106f : rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000096523 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000003f85a : rep stosq qword ptr [rdi], rax ; ret
0x00000000000008aa : ret
0x0000000000006388 : ret 0
0x0000000000009a98 : ret 0x10
0x00000000000007bf : ret 0x102
0x0000000000069492 : ret 0x11
0x0000000000052b9c : ret 0x114d
0x000000000002bec4 : ret 0x1176
0x00000000001376ca : ret 0x11d
0x00000000001989d1 : ret 0x11e9
0x000000000011956b : ret 0x1274
0x00000000000e8769 : ret 0x12eb
0x000000000007bb64 : ret 0x13
0x0000000000067c49 : ret 0x14
0x00000000000f7866 : ret 0x141
0x00000000000daab2 : ret 0x144
0x0000000000199671 : ret 0x145
0x00000000000fa20e : ret 0x1472
0x0000000000053e66 : ret 0x1474
0x00000000000ac179 : ret 0x147c
0x0000000000024c62 : ret 0x148
0x0000000000033bac : ret 0x149
0x000000000006b201 : ret 0x14c
0x000000000009f54d : ret 0x14d
0x0000000000066874 : ret 0x14d6
0x0000000000074be5 : ret 0x14eb
0x000000000000f4e9 : ret 0x15
0x00000000000be2f7 : ret 0x1572
0x00000000001047e9 : ret 0x1589
0x0000000000051cb3 : ret 0x161f
0x000000000011f6a6 : ret 0x1675
0x00000000000490bb : ret 0x16ad
0x000000000003c75a : ret 0x16cd
0x00000000000db948 : ret 0x16e
0x00000000000e6cde : ret 0x16e9
0x000000000002d8b1 : ret 0x16f4
0x0000000000059b5f : ret 0x17
0x0000000000048f2a : ret 0x1722
0x00000000000ef8b8 : ret 0x1776
0x000000000003e06a : ret 0x17dd
0x000000000003408d : ret 0x17fc
0x000000000002eed7 : ret 0x18
0x0000000000115bfd : ret 0x180
0x0000000000192a29 : ret 0x180f
0x00000000000abc75 : ret 0x1876
0x000000000007b906 : ret 0x187d
0x00000000001ca7d1 : ret 0x18b
0x000000000000db60 : ret 0x19
0x00000000000d4037 : ret 0x190
0x00000000000cf6a9 : ret 0x1948
0x0000000000089aca : ret 0x1976
0x00000000001c91bd : ret 0x1a0
0x00000000001c8c2d : ret 0x1a5
0x000000000002bebb : ret 0x1a72
0x000000000014517f : ret 0x1a74
0x00000000000ed44d : ret 0x1a8b
0x00000000001acd5a : ret 0x1ad4
0x00000000001073fc : ret 0x1ae9
0x0000000000037162 : ret 0x1b
0x00000000001ab4ed : ret 0x1b49
0x000000000009d0f3 : ret 0x1b8
0x0000000000156df1 : ret 0x1b9
0x0000000000001c01 : ret 0x1bb7
0x00000000000d4c57 : ret 0x1be
0x00000000000035a7 : ret 0x1bf9
0x0000000000157a8a : ret 0x1c
0x00000000000f1493 : ret 0x1c73
0x0000000000144e83 : ret 0x1c75
0x00000000001164c1 : ret 0x1c77
0x000000000011b7ee : ret 0x1ce8
0x0000000000045379 : ret 0x1ce9
0x00000000000ff5ee : ret 0x1ceb
0x0000000000070b6e : ret 0x1d
0x00000000001a6910 : ret 0x1d4
0x00000000001a70a8 : ret 0x1d5
0x000000000000222d : ret 0x1dd4
0x000000000014394f : ret 0x1e74
0x00000000000cba55 : ret 0x1e9
0x0000000000009390 : ret 0x1f
0x00000000000251cc : ret 0x1f0f
0x00000000000d74ae : ret 0x1f74
0x0000000000096246 : ret 0x1f77
0x00000000000d16f6 : ret 0x1fba
0x00000000000d8a5e : ret 0x1fbd
0x000000000002e2dd : ret 0x1fe9
0x00000000000300f7 : ret 0x200
0x0000000000110dec : ret 0x2044
0x000000000019600a : ret 0x2045
0x00000000000b945d : ret 0x2074
0x00000000000db6b5 : ret 0x20be
0x000000000004fd6a : ret 0x20e8
0x000000000006ecbc : ret 0x21
0x0000000000111655 : ret 0x2141
0x000000000003de58 : ret 0x2148
0x000000000008b3bd : ret 0x214c
0x0000000000053464 : ret 0x2173
0x000000000008a94c : ret 0x2175
0x00000000000b93eb : ret 0x2275
0x00000000000b6448 : ret 0x2288
0x0000000000119564 : ret 0x233c
0x0000000000191582 : ret 0x2373
0x00000000000a814a : ret 0x2374
0x0000000000040122 : ret 0x237f
0x00000000001a5918 : ret 0x24
0x0000000000002854 : ret 0x244f
0x00000000001106ba : ret 0x245
0x0000000000103f91 : ret 0x2477
0x000000000008d67c : ret 0x2501
0x0000000000062d44 : ret 0x2504
0x000000000009b0fb : ret 0x2575
0x00000000000d3dfe : ret 0x257e
0x000000000013cb60 : ret 0x2674
0x00000000000b1906 : ret 0x2774
0x000000000015e3f4 : ret 0x28
0x00000000000b2155 : ret 0x280f
0x00000000001672e2 : ret 0x283a
0x000000000009c03d : ret 0x2874
0x00000000000abc65 : ret 0x2876
0x0000000000164c92 : ret 0x2878
0x00000000000c7e87 : ret 0x28b
0x00000000000d87fe : ret 0x28f5
0x0000000000153dec : ret 0x29
0x00000000000a5423 : ret 0x2901
0x000000000003ea2a : ret 0x290f
0x000000000004e95b : ret 0x2941
0x000000000012bef3 : ret 0x2944
0x000000000002d380 : ret 0x2948
0x0000000000061de2 : ret 0x2949
0x000000000002487a : ret 0x294c
0x00000000000d05c4 : ret 0x2975
0x000000000010f624 : ret 0x2977
0x0000000000144b38 : ret 0x29e9
0x0000000000001b19 : ret 0x2a63
0x0000000000163c2f : ret 0x2a74
0x000000000011858d : ret 0x2aeb
0x000000000002458a : ret 0x2b48
0x000000000012c9a9 : ret 0x2b49
0x000000000009a823 : ret 0x2b74
0x0000000000096562 : ret 0x2b75
0x00000000000bb9e2 : ret 0x2b77
0x000000000015014d : ret 0x2b8
0x0000000000135831 : ret 0x2bb0
0x000000000012dd22 : ret 0x2bd6
0x00000000001311aa : ret 0x2be0
0x0000000000130da2 : ret 0x2be4
0x000000000012c82a : ret 0x2beb
0x0000000000198c15 : ret 0x2bf
0x000000000011ec7c : ret 0x2c
0x0000000000130422 : ret 0x2c04
0x0000000000130122 : ret 0x2c07
0x0000000000139e4d : ret 0x2c6
0x000000000013e201 : ret 0x2c74
0x0000000000096dde : ret 0x2c75
0x000000000011ec8a : ret 0x2cc2
0x000000000012e0cc : ret 0x2ce9
0x000000000011ec42 : ret 0x2cf7
0x000000000010ebed : ret 0x2d
0x0000000000119f59 : ret 0x2d43
0x00000000000a8258 : ret 0x2d74
0x000000000006045d : ret 0x2de8
0x0000000000118719 : ret 0x2deb
0x0000000000006cf0 : ret 0x2e
0x000000000007d465 : ret 0x2e66
0x000000000011950c : ret 0x2f3c
0x00000000000473f7 : ret 0x2f75
0x00000000000e059f : ret 0x30
0x0000000000043f50 : ret 0x3039
0x0000000000001b8c : ret 0x306a
0x00000000000a1f7d : ret 0x3075
0x00000000001599d5 : ret 0x307f
0x00000000000e369a : ret 0x30a8
0x0000000000063905 : ret 0x30be
0x000000000014498a : ret 0x30e9
0x00000000000ce6ab : ret 0x31
0x0000000000050932 : ret 0x3145
0x000000000012344e : ret 0x31c3
0x0000000000059937 : ret 0x31e9
0x00000000000bdbc9 : ret 0x32
0x00000000000ccc31 : ret 0x323c
0x0000000000054e28 : ret 0x32e8
0x00000000001a5e08 : ret 0x33
0x000000000009b3de : ret 0x3348
0x000000000009b877 : ret 0x3349
0x000000000013c027 : ret 0x3374
0x000000000010f8c2 : ret 0x3375
0x00000000000ef89c : ret 0x3376
0x00000000000797f7 : ret 0x33e8
0x000000000009ebe4 : ret 0x34
0x00000000000ac159 : ret 0x347c
0x000000000006f9ff : ret 0x348
0x0000000000026d24 : ret 0x349
0x00000000000efeea : ret 0x34f
0x000000000009e022 : ret 0x34f9
0x000000000008c1da : ret 0x35
0x000000000009dfda : ret 0x3528
0x0000000000097a1a : ret 0x3538
0x00000000000970b2 : ret 0x353c
0x000000000010f860 : ret 0x3575
0x0000000000134670 : ret 0x3576
0x000000000008b29a : ret 0x35c4
0x000000000008f7da : ret 0x35e0
0x0000000000091831 : ret 0x35f0
0x000000000007ebdf : ret 0x36
0x000000000008f231 : ret 0x3616
0x000000000007ed1a : ret 0x368e
0x0000000000081b31 : ret 0x36ed
0x0000000000199a16 : ret 0x3775
0x000000000018a646 : ret 0x3776
0x0000000000040274 : ret 0x3777
0x000000000003ea53 : ret 0x37e8
0x000000000005b4fe : ret 0x38
0x00000000001ac63a : ret 0x3827
0x00000000000a1768 : ret 0x3844
0x000000000007fbce : ret 0x3873
0x00000000000abc55 : ret 0x3876
0x000000000008e2cb : ret 0x389
0x00000000001aacc6 : ret 0x38ae
0x000000000007f6f6 : ret 0x38b
0x00000000000515e5 : ret 0x39
0x0000000000076521 : ret 0x3901
0x000000000013ff6d : ret 0x3904
0x00000000000f439a : ret 0x3910
0x000000000006a26d : ret 0x3941
0x00000000000f2c76 : ret 0x3944
0x0000000000040ba9 : ret 0x3948
0x000000000002ee9d : ret 0x3949
0x000000000003fb90 : ret 0x394c
0x000000000003d549 : ret 0x394d
0x00000000000c94dd : ret 0x39e9
0x0000000000044404 : ret 0x3a
0x00000000000bae92 : ret 0x3a01
0x000000000019156b : ret 0x3a73
0x00000000001662e3 : ret 0x3a83
0x0000000000134a81 : ret 0x3ae9
0x000000000003098b : ret 0x3b
0x000000000013103c : ret 0x3b01
0x00000000000f5e9f : ret 0x3b42
0x00000000000f6ee7 : ret 0x3b43
0x00000000000766d2 : ret 0x3b44
0x0000000000076422 : ret 0x3b45
0x00000000000bb671 : ret 0x3b48
0x000000000004369b : ret 0x3b72
0x00000000001108ef : ret 0x3b8
0x0000000000031e72 : ret 0x3bad
0x000000000012b8f4 : ret 0x3bf
0x000000000008bba9 : ret 0x3c75
0x00000000000210c2 : ret 0x3c9f
0x0000000000023be7 : ret 0x3d83
0x0000000000051376 : ret 0x3dbe
0x000000000005ed87 : ret 0x3e8
0x0000000000006eb8 : ret 0x3f
0x000000000007f3ca : ret 0x3f75
0x000000000000fe88 : ret 0x40
0x00000000000469a2 : ret 0x4001
0x000000000002e6eb : ret 0x4002
0x00000000000f18d1 : ret 0x402
0x00000000000009f5 : ret 0x4021
0x000000000003c72d : ret 0x4074
0x00000000000bd7f1 : ret 0x408d
0x0000000000094192 : ret 0x40e9
0x000000000002eaf1 : ret 0x4101
0x00000000000bffa2 : ret 0x4104
0x00000000000cb03f : ret 0x4105
0x00000000000d3b61 : ret 0x4107
0x000000000005c8ce : ret 0x4108
0x000000000005c7c9 : ret 0x4110
0x00000000000a8197 : ret 0x4153
0x00000000000274d7 : ret 0x415f
0x00000000000575ab : ret 0x4166
0x0000000000024f3e : ret 0x41c3
0x000000000013c81b : ret 0x41e9
0x00000000000c9422 : ret 0x4201
0x000000000014e1b5 : ret 0x4203
0x00000000000aa05a : ret 0x4266
0x00000000000faccd : ret 0x427e
0x00000000000f34e6 : ret 0x428b
0x00000000000d2e55 : ret 0x428d
0x0000000000088c21 : ret 0x42e9
0x00000000000833e3 : ret 0x4389
0x0000000000035291 : ret 0x4401
0x0000000000044004 : ret 0x4404
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x000000000005de3b : ret 0x4420
0x000000000012a94e : ret 0x4428
0x000000000005053f : ret 0x4440
0x0000000000091abb : ret 0x4466
0x0000000000095513 : ret 0x4473
0x000000000015d5b0 : ret 0x4489
0x00000000000d183e : ret 0x448b
0x00000000000dac5d : ret 0x448d
0x0000000000051114 : ret 0x44c6
0x0000000000021818 : ret 0x4501
0x000000000004aedc : ret 0x4502
0x000000000013f8f1 : ret 0x4566
0x000000000015d055 : ret 0x4589
0x0000000000022302 : ret 0x45e9
0x00000000000d05a7 : ret 0x4675
0x00000000000080e8 : ret 0x47
0x00000000000cab58 : ret 0x4703
0x00000000000f1453 : ret 0x473
0x00000000000a8324 : ret 0x474
0x00000000001ab7c4 : ret 0x474c
0x00000000000222f2 : ret 0x47e9
0x0000000000008130 : ret 0x48
0x00000000000fafc0 : ret 0x4800
0x0000000000022c28 : ret 0x4801
0x0000000000103322 : ret 0x4802
0x0000000000065395 : ret 0x4803
0x0000000000026e97 : ret 0x4804
0x00000000000cb207 : ret 0x4805
0x0000000000125be2 : ret 0x4806
0x0000000000125b62 : ret 0x4807
0x00000000000526d2 : ret 0x4808
0x00000000001259e2 : ret 0x4809
0x000000000003227a : ret 0x480a
0x0000000000125862 : ret 0x480b
0x00000000000d138e : ret 0x480e
0x00000000000ef069 : ret 0x480f
0x0000000000054826 : ret 0x4810
0x0000000000021341 : ret 0x4811
0x0000000000158954 : ret 0x4812
0x00000000001239f5 : ret 0x4814
0x00000000000593a9 : ret 0x481e
0x0000000000032853 : ret 0x4820
0x0000000000104151 : ret 0x4828
0x0000000000143081 : ret 0x482e
0x000000000002272e : ret 0x4830
0x0000000000078ad1 : ret 0x4840
0x00000000000219fd : ret 0x4864
0x000000000012c0ae : ret 0x4890
0x00000000001549e6 : ret 0x48bf
0x00000000000b1658 : ret 0x48c3
0x000000000004425e : ret 0x48d
0x00000000001acf86 : ret 0x48f
0x00000000000250f9 : ret 0x4901
0x000000000002997b : ret 0x4902
0x0000000000043f25 : ret 0x4904
0x0000000000090a72 : ret 0x4908
0x00000000000d5b1a : ret 0x4909
0x00000000000db082 : ret 0x490f
0x000000000004125a : ret 0x4910
0x0000000000166242 : ret 0x4918
0x00000000000f1466 : ret 0x4940
0x0000000000003a27 : ret 0x49ec
0x000000000011722f : ret 0x4ab8
0x0000000000171bba : ret 0x4b4
0x00000000001172df : ret 0x4bb8
0x00000000000f1fef : ret 0x4be8
0x000000000002eb39 : ret 0x4c01
0x0000000000140f16 : ret 0x4c02
0x000000000007645c : ret 0x4c04
0x0000000000095eda : ret 0x4c07
0x00000000000e5014 : ret 0x4c08
0x00000000000cb67b : ret 0x4c10
0x00000000000f8304 : ret 0x4c30
0x0000000000058c66 : ret 0x4c40
0x00000000000df077 : ret 0x4c48
0x00000000000d7533 : ret 0x4c80
0x0000000000160378 : ret 0x4c89
0x0000000000151e0b : ret 0x4c8b
0x0000000000094b66 : ret 0x4d01
0x0000000000123be9 : ret 0x4d02
0x00000000000caf47 : ret 0x4d03
0x0000000000041938 : ret 0x4d10
0x0000000000106436 : ret 0x4d1c
0x00000000001ac9e7 : ret 0x4e27
0x000000000014d7e6 : ret 0x4e8
0x00000000000ef880 : ret 0x4f76
0x000000000006db3a : ret 0x4fe
0x00000000001e3345 : ret 0x502
0x00000000001e355d : ret 0x504
0x00000000000232af : ret 0x5089
0x0000000000195ce9 : ret 0x50e9
0x0000000000191554 : ret 0x5173
0x0000000000112954 : ret 0x5174
0x000000000015ed73 : ret 0x5275
0x0000000000003282 : ret 0x52c0
0x000000000014ecbb : ret 0x53ff
0x0000000000104c1f : ret 0x5408
0x0000000000050ff1 : ret 0x540a
0x000000000012a068 : ret 0x5422
0x00000000000d1abe : ret 0x5438
0x00000000000ac139 : ret 0x547c
0x00000000000a4f94 : ret 0x5488
0x000000000003dca1 : ret 0x5489
0x000000000005678e : ret 0x54e9
0x00000000001aac4c : ret 0x5508
0x0000000000149279 : ret 0x5522
0x00000000000024c6 : ret 0x5576
0x00000000000844be : ret 0x5590
0x0000000000144ae4 : ret 0x55e9
0x00000000000b93b7 : ret 0x5675
0x00000000001331da : ret 0x576
0x0000000000132ea2 : ret 0x577
0x000000000018a626 : ret 0x5776
0x00000000001acf18 : ret 0x5803
0x00000000000299e1 : ret 0x5841
0x0000000000042633 : ret 0x589
0x00000000001aa920 : ret 0x591c
0x0000000000165b14 : ret 0x5973
0x00000000000cbc0a : ret 0x599
0x000000000011b4b1 : ret 0x59e8
0x000000000015d0c4 : ret 0x5a0
0x0000000000003369 : ret 0x5a51
0x000000000019b0b5 : ret 0x5a74
0x00000000000f8d22 : ret 0x5a8d
0x00000000001ab687 : ret 0x5ae4
0x000000000009eafe : ret 0x5ae9
0x000000000009c032 : ret 0x5b74
0x000000000007b394 : ret 0x5ba
0x0000000000003073 : ret 0x5bdb
0x0000000000029bc9 : ret 0x5be9
0x000000000012ca3e : ret 0x5bf
0x00000000000e7c99 : ret 0x5c3c
0x0000000000003131 : ret 0x5cbe
0x000000000004578e : ret 0x5d5b
0x000000000013c75f : ret 0x5d78
0x0000000000023af6 : ret 0x5f74
0x00000000000004b9 : ret 0x6080
0x00000000000027a1 : ret 0x617e
0x000000000016587b : ret 0x6273
0x00000000001ad3b2 : ret 0x62c1
0x00000000000521e6 : ret 0x6348
0x00000000000a8601 : ret 0x6349
0x00000000000a5a8d : ret 0x634d
0x00000000000d058a : ret 0x6375
0x000000000018a384 : ret 0x637f
0x000000000009dee1 : ret 0x63be
0x000000000002cc43 : ret 0x6411
0x00000000000ac129 : ret 0x647c
0x0000000000044af5 : ret 0x65e8
0x0000000000040e31 : ret 0x6601
0x0000000000118928 : ret 0x6602
0x00000000000ac1d9 : ret 0x6610
0x00000000000abbe1 : ret 0x6620
0x00000000000028ab : ret 0x6642
0x000000000014efd4 : ret 0x6690
0x000000000003fb28 : ret 0x66c3
0x000000000012ff9f : ret 0x66e9
0x00000000001128a6 : ret 0x674
0x00000000000e457f : ret 0x676
0x000000000018a616 : ret 0x6776
0x00000000000e19ca : ret 0x67a
0x00000000001aa93f : ret 0x67b2
0x000000000008e8b5 : ret 0x6874
0x00000000000e6d8a : ret 0x6ae9
0x00000000000ef864 : ret 0x6b76
0x0000000000003e42 : ret 0x6bba
0x000000000009b788 : ret 0x6be2
0x0000000000061c1f : ret 0x6be8
0x000000000012b260 : ret 0x6bf
0x000000000014e882 : ret 0x6c2
0x0000000000145cf1 : ret 0x6c7e
0x00000000001438c8 : ret 0x6d7e
0x00000000001074b8 : ret 0x6de9
0x00000000001bbe33 : ret 0x6e1f
0x000000000014b46a : ret 0x6e2
0x00000000000dabf2 : ret 0x6eb8
0x00000000001ad541 : ret 0x6f9
0x000000000003e806 : ret 0x7374
0x000000000008ea31 : ret 0x7401
0x000000000009a0c2 : ret 0x7402
0x000000000011ba51 : ret 0x7404
0x0000000000197aa7 : ret 0x7407
0x0000000000084292 : ret 0x7408
0x000000000007ebd7 : ret 0x7420
0x000000000005fcb4 : ret 0x7450
0x00000000000fbf80 : ret 0x7480
0x000000000004676e : ret 0x7501
0x000000000009cefa : ret 0x7502
0x00000000000b1c51 : ret 0x7504
0x00000000000961ed : ret 0x7508
0x000000000019367b : ret 0x7510
0x00000000000801e2 : ret 0x7520
0x00000000000f5088 : ret 0x7540
0x0000000000115cb0 : ret 0x7577
0x00000000000eed8b : ret 0x7580
0x0000000000190442 : ret 0x7677
0x00000000000d3956 : ret 0x76b
0x0000000000165540 : ret 0x76eb
0x00000000000bd9ba : ret 0x772
0x00000000000f04ff : ret 0x774
0x0000000000052f12 : ret 0x777
0x00000000000d3e1c : ret 0x77e
0x000000000010e023 : ret 0x77e8
0x0000000000054816 : ret 0x77f
0x00000000000f8765 : ret 0x7880
0x0000000000002fbc : ret 0x793b
0x00000000001015c1 : ret 0x79e8
0x00000000000fb259 : ret 0x7a80
0x000000000010380d : ret 0x7b83
0x0000000000195f1f : ret 0x7be9
0x000000000003e455 : ret 0x7c7
0x0000000000050749 : ret 0x7c80
0x00000000000abb81 : ret 0x7e20
0x000000000018a57c : ret 0x7e40
0x00000000000a8c0c : ret 0x7f10
0x000000000006a444 : ret 0x7f3c
0x00000000001970f4 : ret 0x7fff
0x00000000000002e0 : ret 0x80
0x00000000000a9de9 : ret 0x8000
0x000000000009ffd2 : ret 0x8001
0x00000000000d5d62 : ret 0x8010
0x0000000000145176 : ret 0x8040
0x000000000014a6c6 : ret 0x8041
0x00000000000b700d : ret 0x8072
0x000000000013ab0a : ret 0x8080
0x00000000000039dc : ret 0x80fc
0x000000000013ec9e : ret 0x8103
0x000000000013a752 : ret 0x8148
0x000000000010f0af : ret 0x8189
0x000000000009c1a9 : ret 0x81e8
0x000000000005abe7 : ret 0x81e9
0x00000000000419c5 : ret 0x820f
0x0000000000029203 : ret 0x8301
0x00000000001519ae : ret 0x8302
0x00000000000a4ecc : ret 0x8303
0x00000000000a717b : ret 0x8304
0x00000000000a3e47 : ret 0x8305
0x00000000000a36fe : ret 0x8306
0x00000000000e5261 : ret 0x8308
0x0000000000044a6c : ret 0x830f
0x00000000000ac051 : ret 0x8340
0x0000000000059276 : ret 0x8341
0x000000000002279b : ret 0x8348
0x000000000006174b : ret 0x8349
0x0000000000118529 : ret 0x840
0x00000000000e8091 : ret 0x8401
0x000000000002dbb6 : ret 0x840f
0x0000000000027f50 : ret 0x841
0x0000000000143659 : ret 0x8440
0x00000000000a139a : ret 0x8445
0x00000000000c8e69 : ret 0x845
0x00000000000a276c : ret 0x848b
0x00000000000f8ec9 : ret 0x84c6
0x000000000007d109 : ret 0x8502
0x00000000000bc0e1 : ret 0x8504
0x000000000002e4bf : ret 0x850f
0x000000000002c5a3 : ret 0x8511
0x000000000018ab01 : ret 0x8520
0x000000000005b86b : ret 0x8545
0x00000000000350f9 : ret 0x8548
0x000000000003fb58 : ret 0x854d
0x0000000000035101 : ret 0x8575
0x00000000001051d2 : ret 0x8589
0x00000000000dd2fb : ret 0x858b
0x000000000002eb68 : ret 0x860f
0x00000000000a1f17 : ret 0x86eb
0x000000000003eff5 : ret 0x870f
0x00000000001aa25e : ret 0x871e
0x00000000000565b6 : ret 0x875
0x00000000000abc85 : ret 0x876
0x00000000000a2c14 : ret 0x87eb
0x000000000002ac87 : ret 0x8801
0x000000000014e1a6 : ret 0x8802
0x000000000002624d : ret 0x8804
0x000000000008717d : ret 0x880f
0x00000000000a675a : ret 0x8840
0x0000000000040e82 : ret 0x8841
0x00000000000a6da9 : ret 0x8842
0x000000000000262c : ret 0x88ad
0x000000000002de6f : ret 0x8901
0x00000000000fb03c : ret 0x8905
0x00000000000a3e75 : ret 0x8906
0x000000000006bf13 : ret 0x8908
0x000000000004ffd8 : ret 0x8910
0x0000000000050656 : ret 0x8940
0x0000000000059268 : ret 0x8941
0x00000000000c9cc9 : ret 0x8942
0x000000000007972c : ret 0x8944
0x00000000000bebe5 : ret 0x8945
0x0000000000024527 : ret 0x8948
0x000000000003dbcb : ret 0x8949
0x0000000000024237 : ret 0x894c
0x0000000000087649 : ret 0x894d
0x00000000000539cb : ret 0x894e
0x0000000000044870 : ret 0x8966
0x00000000000025cb : ret 0x8a4c
0x00000000000a5de4 : ret 0x8aeb
0x0000000000024b79 : ret 0x8b01
0x00000000000440bf : ret 0x8b04
0x00000000000301de : ret 0x8b05
0x000000000007d60b : ret 0x8b08
0x00000000001aca8e : ret 0x8b36
0x000000000002ee8e : ret 0x8b41
0x00000000000bd34a : ret 0x8b44
0x00000000000f3865 : ret 0x8b46
0x00000000000cab25 : ret 0x8b47
0x000000000002bd5b : ret 0x8b48
0x000000000004616f : ret 0x8b49
0x000000000005394e : ret 0x8b4a
0x00000000000242a9 : ret 0x8b4c
0x00000000001135cc : ret 0x8b4d
0x000000000007f618 : ret 0x8b64
0x000000000015964e : ret 0x8be
0x00000000000878fd : ret 0x8beb
0x000000000006051d : ret 0x8c0f
0x00000000000038da : ret 0x8cba
0x00000000000a22d7 : ret 0x8ceb
0x00000000000a475b : ret 0x8d01
0x0000000000058cc1 : ret 0x8d04
0x000000000012990e : ret 0x8d0f
0x00000000000db97e : ret 0x8d41
0x000000000009448c : ret 0x8d44
0x00000000000de540 : ret 0x8d45
0x0000000000024178 : ret 0x8d48
0x000000000004429d : ret 0x8d49
0x0000000000052cb7 : ret 0x8d4a
0x000000000004851d : ret 0x8d4c
0x00000000000a5843 : ret 0x8d4d
0x00000000000c90bc : ret 0x8d4e
0x00000000000d377c : ret 0x8d4f
0x000000000003e090 : ret 0x8d74
0x0000000000059284 : ret 0x8d89
0x0000000000084bad : ret 0x8de8
0x00000000000a4e3c : ret 0x8deb
0x0000000000026d1b : ret 0x8e0f
0x0000000000059524 : ret 0x8f0f
0x00000000000818db : ret 0x8feb
0x00000000000a5ded : ret 0x9066
0x00000000000300bd : ret 0x90c3
0x000000000002edca : ret 0x90e8
0x000000000009e579 : ret 0x90e9
0x000000000011a979 : ret 0x91e8
0x00000000000a5f59 : ret 0x91e9
0x0000000000139f2c : ret 0x920f
0x00000000000525d0 : ret 0x930f
0x000000000009b30c : ret 0x93be
0x00000000001055dd : ret 0x940f
0x0000000000055472 : ret 0x941
0x000000000000265f : ret 0x943d
0x000000000003e017 : ret 0x948
0x0000000000197c77 : ret 0x949
0x000000000003e69c : ret 0x94c
0x000000000019773a : ret 0x94d
0x000000000007b88a : ret 0x94e9
0x00000000000c1ae7 : ret 0x950f
0x00000000000cc4e0 : ret 0x9572
0x00000000001ab8b3 : ret 0x9576
0x0000000000163168 : ret 0x9588
0x000000000005c067 : ret 0x958b
0x000000000011fb07 : ret 0x95e
0x000000000003fbb0 : ret 0x960f
0x0000000000111ddf : ret 0x970f
0x00000000000038bc : ret 0x975
0x000000000009a04c : ret 0x976
0x00000000000a6a96 : ret 0x97eb
0x00000000000570e2 : ret 0x9848
0x00000000000b9405 : ret 0x9874
0x000000000006e335 : ret 0x9875
0x000000000011ba7f : ret 0x9976
0x00000000000a5449 : ret 0x99e9
0x00000000000a6c20 : ret 0x99eb
0x0000000000095bca : ret 0x9aa
0x00000000000e8abb : ret 0x9aeb
0x0000000000087e99 : ret 0x9beb
0x00000000000c3d75 : ret 0x9d0f
0x00000000000b6ff0 : ret 0x9d72
0x000000000008800e : ret 0x9deb
0x0000000000103b54 : ret 0x9e9
0x00000000000794c3 : ret 0xa
0x000000000011c1a2 : ret 0xa02
0x00000000000f10ad : ret 0xa075
0x00000000000e6c54 : ret 0xa0e9
0x000000000004262a : ret 0xa43
0x00000000001282e9 : ret 0xa475
0x000000000005ac9f : ret 0xa4e9
0x00000000001ab5a3 : ret 0xa514
0x0000000000137168 : ret 0xa575
0x0000000000135926 : ret 0xa775
0x0000000000151716 : ret 0xa8b
0x000000000010ca63 : ret 0xa8c
0x000000000013bc7e : ret 0xab8
0x000000000011ef1d : ret 0xabe
0x000000000010551a : ret 0xabf
0x00000000001aba27 : ret 0xac65
0x00000000001ac3e4 : ret 0xacfc
0x0000000000070b64 : ret 0xad83
0x000000000003eadd : ret 0xade8
0x000000000013b430 : ret 0xae8
0x000000000009a783 : ret 0xaee9
0x000000000009af5a : ret 0xaeeb
0x0000000000145ea3 : ret 0xaf7c
0x00000000000876ab : ret 0xafeb
0x000000000006827a : ret 0xb
0x00000000001c5ff7 : ret 0xb00e
0x00000000000861ed : ret 0xb074
0x00000000001263cd : ret 0xb075
0x0000000000044faa : ret 0xb0e8
0x000000000009288b : ret 0xb277
0x000000000014dfa8 : ret 0xb2e8
0x000000000012e064 : ret 0xb2e9
0x000000000002a7ab : ret 0xb2eb
0x0000000000148ecc : ret 0xb374
0x00000000000e105a : ret 0xb375
0x0000000000145dc7 : ret 0xb37f
0x00000000000e6c40 : ret 0xb4e9
0x00000000000592a4 : ret 0xb589
0x0000000000031d39 : ret 0xb60f
0x00000000000d7457 : ret 0xb67d
0x00000000000d2e4f : ret 0xb70f
0x000000000003e263 : ret 0xb8
0x0000000000195ce0 : ret 0xb841
0x000000000003de91 : ret 0xb848
0x00000000000f69d5 : ret 0xb875
0x0000000000140a8e : ret 0xb8c3
0x0000000000050b92 : ret 0xb940
0x0000000000198a85 : ret 0xb941
0x00000000001ab8ee : ret 0xb9b9
0x00000000000f9ed6 : ret 0xb9e9
0x000000000007d1e4 : ret 0xba41
0x000000000000327d : ret 0xba88
0x000000000002a8e2 : ret 0xbaeb
0x00000000000718a1 : ret 0xbb08
0x00000000000024ec : ret 0xbd07
0x0000000000059294 : ret 0xbd89
0x0000000000070441 : ret 0xbe08
0x00000000001ab644 : ret 0xbe57
0x000000000006f3c9 : ret 0xbf08
0x000000000005031d : ret 0xc
0x00000000000a9ca9 : ret 0xc000
0x000000000004c743 : ret 0xc001
0x0000000000140697 : ret 0xc019
0x0000000000032774 : ret 0xc031
0x00000000001d8d10 : ret 0xc044
0x000000000002cc8e : ret 0xc083
0x000000000011c030 : ret 0xc084
0x00000000000aba40 : ret 0xc085
0x00000000000f2c28 : ret 0xc141
0x00000000000219a5 : ret 0xc148
0x00000000000c9127 : ret 0xc149
0x000000000014bd8f : ret 0xc166
0x00000000000929b1 : ret 0xc183
0x0000000000033ce0 : ret 0xc189
0x0000000000002ec6 : ret 0xc1bb
0x00000000000bffb1 : ret 0xc220
0x0000000000111112 : ret 0xc221
0x0000000000044264 : ret 0xc229
0x0000000000043ec0 : ret 0xc269
0x00000000000daa20 : ret 0xc26b
0x0000000000096ebb : ret 0xc275
0x000000000006c809 : ret 0xc283
0x000000000003f647 : ret 0xc289
0x0000000000191424 : ret 0xc2b2
0x00000000000d8e7b : ret 0xc329
0x00000000000718ba : ret 0xc33
0x0000000000043998 : ret 0xc35b
0x00000000000ee44a : ret 0xc373
0x000000000002c07d : ret 0xc389
0x0000000000096ebd : ret 0xc3f3
0x0000000000112910 : ret 0xc3f6
0x00000000001a9422 : ret 0xc4c3
0x00000000000d9f32 : ret 0xc4eb
0x00000000001ab1f8 : ret 0xc4ff
0x000000000018a5e1 : ret 0xc540
0x000000000002c146 : ret 0xc589
0x0000000000021643 : ret 0xc5eb
0x0000000000129822 : ret 0xc601
0x0000000000151e04 : ret 0xc639
0x000000000005ecbc : ret 0xc689
0x00000000000531aa : ret 0xc748
0x0000000000046239 : ret 0xc749
0x00000000000d05e1 : ret 0xc75
0x00000000000658b7 : ret 0xc789
0x000000000005d5c6 : ret 0xc839
0x00000000000833d4 : ret 0xc883
0x000000000003db74 : ret 0xc889
0x000000000013e227 : ret 0xc8e9
0x00000000000f317c : ret 0xc974
0x00000000000a7914 : ret 0xc983
0x000000000005c137 : ret 0xc985
0x000000000011a341 : ret 0xc9e8
0x000000000007d6f3 : ret 0xc9eb
0x00000000000b63a1 : ret 0xc9ff
0x0000000000110c29 : ret 0xca21
0x000000000012f912 : ret 0xca29
0x00000000000fc722 : ret 0xca39
0x0000000000195d6f : ret 0xcae9
0x000000000006c7fd : ret 0xcb73
0x00000000000a0c71 : ret 0xcb8
0x00000000001aac8a : ret 0xcca7
0x00000000001acd6d : ret 0xcd11
0x00000000000b6fc0 : ret 0xcd72
0x000000000010f686 : ret 0xcd77
0x00000000000fad0f : ret 0xce75
0x00000000000344e2 : ret 0xce80
0x000000000018ab0d : ret 0xce89
0x000000000010d0a9 : ret 0xce9
0x00000000001614d5 : ret 0xcf89
0x0000000000004e09 : ret 0xd
0x00000000000ea9ec : ret 0xd008
0x00000000000ea815 : ret 0xd009
0x00000000000987e5 : ret 0xd020
0x0000000000041e76 : ret 0xd021
0x00000000000e5f72 : ret 0xd029
0x0000000000050fff : ret 0xd084
0x000000000003e233 : ret 0xd089
0x0000000000106e3c : ret 0xd101
0x000000000003fbb3 : ret 0xd108
0x000000000005fb3b : ret 0xd120
0x0000000000057902 : ret 0xd129
0x00000000000f58bd : ret 0xd139
0x00000000000f2c2f : ret 0xd141
0x000000000009d34a : ret 0xd148
0x0000000000131c56 : ret 0xd174
0x00000000000ee028 : ret 0xd189
0x000000000003d210 : ret 0xd231
0x0000000000021bcd : ret 0xd284
0x000000000002bc3a : ret 0xd285
0x0000000000104c6c : ret 0xd289
0x00000000000a81a4 : ret 0xd308
0x00000000001069c3 : ret 0xd320
0x00000000000ce433 : ret 0xd348
0x00000000000fbc3f : ret 0xd349
0x00000000000d213d : ret 0xd389
0x0000000000101315 : ret 0xd509
0x00000000000401e0 : ret 0xd521
0x000000000000089a : ret 0xd5a4
0x000000000006c13b : ret 0xd629
0x00000000000f5e23 : ret 0xd639
0x0000000000144c0c : ret 0xd6e9
0x0000000000112899 : ret 0xd72
0x000000000006c96a : ret 0xd729
0x00000000000f78e3 : ret 0xd739
0x00000000000e654a : ret 0xd74
0x00000000001330be : ret 0xd75
0x00000000000455a6 : ret 0xd774
0x00000000000d8d29 : ret 0xd889
0x00000000001ac805 : ret 0xd8f
0x00000000001308ec : ret 0xd975
0x00000000001404ae : ret 0xda21
0x0000000000064bb8 : ret 0xda29
0x00000000001309c3 : ret 0xda75
0x000000000015372b : ret 0xda78
0x000000000003db70 : ret 0xdaf7
0x00000000000a2062 : ret 0xdb72
0x000000000002842a : ret 0xdb76
0x00000000000ef2d5 : ret 0xdb77
0x00000000000ccfe0 : ret 0xdc00
0x00000000001ac8e6 : ret 0xdcd9
0x00000000000d60cd : ret 0xdd7
0x00000000000e5270 : ret 0xdd75
0x00000000001ab862 : ret 0xde5d
0x0000000000044d4d : ret 0xde8
0x00000000001aa5f1 : ret 0xde9e
0x000000000011f666 : ret 0xdeb
0x000000000015636e : ret 0xdf75
0x00000000000a2036 : ret 0xdf77
0x000000000013e9ea : ret 0xdf89
0x00000000001448c2 : ret 0xdfe9
0x000000000009e05b : ret 0xe
0x00000000000a9b69 : ret 0xe000
0x0000000000193639 : ret 0xe074
0x0000000000153535 : ret 0xe078
0x00000000001c86e8 : ret 0xe0a
0x0000000000087218 : ret 0xe181
0x00000000000fc024 : ret 0xe183
0x000000000011af29 : ret 0xe1e8
0x000000000011c313 : ret 0xe275
0x000000000003cfd0 : ret 0xe281
0x0000000000028f38 : ret 0xe283
0x00000000000a8537 : ret 0xe2ff
0x000000000011bf1a : ret 0xe375
0x00000000000028e3 : ret 0xe3d
0x00000000000a0a78 : ret 0xe575
0x0000000000061140 : ret 0xe57f
0x0000000000061bfb : ret 0xe583
0x00000000000bba42 : ret 0xe680
0x00000000000556f7 : ret 0xe683
0x000000000014de7a : ret 0xe7
0x00000000001aca06 : ret 0xe71f
0x000000000013e3bb : ret 0xe74
0x00000000000436d6 : ret 0xe775
0x0000000000061773 : ret 0xe7e9
0x0000000000080582 : ret 0xe8
0x000000000013aae2 : ret 0xe801
0x000000000010090d : ret 0xe808
0x00000000000f28f4 : ret 0xe875
0x000000000007cf01 : ret 0xe883
0x00000000000faa50 : ret 0xe8c0
0x000000000011fef3 : ret 0xe8c1
0x00000000000321dd : ret 0xe901
0x000000000003225b : ret 0xe902
0x00000000001188a8 : ret 0xe904
0x00000000000b6436 : ret 0xe908
0x00000000001868e6 : ret 0xe910
0x0000000000059a3d : ret 0xe920
0x0000000000197cfd : ret 0xe940
0x00000000001aad67 : ret 0xe970
0x00000000000d1b93 : ret 0xe9c1
0x000000000014ee78 : ret 0xea39
0x00000000000e7843 : ret 0xea72
0x00000000000bb9da : ret 0xea81
0x000000000003ee6d : ret 0xeab8
0x00000000000d78e0 : ret 0xeac0
0x0000000000027c43 : ret 0xeac1
0x0000000000107c39 : ret 0xead1
0x00000000000e80f4 : ret 0xeb01
0x00000000000f20e0 : ret 0xeb02
0x000000000007d623 : ret 0xeb04
0x0000000000184926 : ret 0xeb10
0x00000000001361b1 : ret 0xeb11
0x00000000000c3dfc : ret 0xeb72
0x0000000000128fba : ret 0xeb73
0x0000000000168e02 : ret 0xeb84
0x00000000000318e8 : ret 0xebe8
0x00000000001624fa : ret 0xebed
0x00000000001ad518 : ret 0xec2
0x0000000000047411 : ret 0xec74
0x00000000000c66e1 : ret 0xec75
0x0000000000154a1a : ret 0xecc7
0x000000000010b529 : ret 0xece9
0x000000000014ee9a : ret 0xed22
0x00000000000f7296 : ret 0xed31
0x0000000000043740 : ret 0xed75
0x00000000000a3db8 : ret 0xed77
0x000000000013de02 : ret 0xee34
0x00000000000ca20f : ret 0xee72
0x00000000000a5c27 : ret 0xee75
0x0000000000096b92 : ret 0xeee9
0x00000000001ad1ba : ret 0xef32
0x0000000000052566 : ret 0xef75
0x000000000002beea : ret 0xefb
0x00000000000d1b7b : ret 0xefc1
0x00000000000f695b : ret 0xefe8
0x000000000016b73e : ret 0xf
0x00000000000a9a29 : ret 0xf000
0x00000000000de833 : ret 0xf001
0x0000000000121fc9 : ret 0xf009
0x00000000001dd23f : ret 0xf00e
0x00000000000349c5 : ret 0xf01
0x00000000000921a9 : ret 0xf02
0x000000000002e6da : ret 0xf04
0x0000000000083ded : ret 0xf075
0x0000000000086473 : ret 0xf08
0x000000000009d5f4 : ret 0xf083
0x0000000000054bc3 : ret 0xf089
0x0000000000117ffa : ret 0xf092
0x0000000000092499 : ret 0xf0f
0x000000000004237e : ret 0xf10
0x000000000010bf02 : ret 0xf153
0x0000000000155b7c : ret 0xf175
0x00000000001675bc : ret 0xf177
0x00000000000ac22c : ret 0xf188
0x000000000011b719 : ret 0xf1e8
0x000000000015df0a : ret 0xf1fe
0x000000000006210b : ret 0xf20
0x00000000000dabb4 : ret 0xf229
0x00000000000f6ef3 : ret 0xf239
0x0000000000094773 : ret 0xf275
0x00000000001b0204 : ret 0xf2a9
0x00000000000f4702 : ret 0xf2cb
0x00000000001b0628 : ret 0xf2d2
0x0000000000100cc7 : ret 0xf301
0x000000000012aa96 : ret 0xf375
0x000000000009062b : ret 0xf3e9
0x000000000005f076 : ret 0xf3f
0x000000000006268b : ret 0xf40
0x0000000000021888 : ret 0xf41
0x0000000000198081 : ret 0xf45
0x00000000000dc02a : ret 0xf451
0x00000000000da89a : ret 0xf468
0x00000000001b1148 : ret 0xf470
0x000000000009e179 : ret 0xf475
0x0000000000025ad6 : ret 0xf48
0x00000000000213a8 : ret 0xf49
0x0000000000062671 : ret 0xf50
0x000000000009e3c5 : ret 0xf5e8
0x000000000006cfc3 : ret 0xf601
0x000000000009d8b4 : ret 0xf631
0x00000000000f630d : ret 0xf641
0x00000000000488a6 : ret 0xf66
0x00000000000c770a : ret 0xf68c
0x00000000000c490a : ret 0xf6ba
0x00000000000a8964 : ret 0xf6e8
0x000000000003f63d : ret 0xf701
0x0000000000051b3e : ret 0xf741
0x0000000000034d22 : ret 0xf748
0x0000000000052efc : ret 0xf749
0x000000000012f238 : ret 0xf7e
0x0000000000084c43 : ret 0xf7e8
0x00000000000c118a : ret 0xf8
0x00000000000f1f91 : ret 0xf80
0x000000000002759b : ret 0xf800
0x00000000000da1b6 : ret 0xf801
0x0000000000003733 : ret 0xf84d
0x00000000001aa4d0 : ret 0xf869
0x000000000008ff13 : ret 0xf8b
0x000000000005f071 : ret 0xf8c1
0x000000000018e026 : ret 0xf8c5
0x00000000000bbd84 : ret 0xf8e9
0x00000000000c163a : ret 0xf932
0x0000000000118dad : ret 0xf980
0x00000000000d3f92 : ret 0xf983
0x00000000001204aa : ret 0xf9b3
0x0000000000143270 : ret 0xfa81
0x00000000000d39f0 : ret 0xfa83
0x00000000000dac43 : ret 0xfac1
0x0000000000023c2f : ret 0xfae9
0x0000000000161b7a : ret 0xfaed
0x00000000001bd534 : ret 0xfb65
0x00000000001bd334 : ret 0xfb6f
0x00000000001bda3c : ret 0xfb8a
0x00000000001bd82c : ret 0xfb96
0x00000000000a6d76 : ret 0xfbc1
0x00000000000f9b94 : ret 0xfbe9
0x00000000000a97a9 : ret 0xfc00
0x0000000000119b75 : ret 0xfc07
0x000000000009d99a : ret 0xfc3
0x000000000005aefa : ret 0xfc63
0x00000000001bcc68 : ret 0xfd40
0x00000000001bcc6c : ret 0xfd41
0x00000000001544fa : ret 0xfdc1
0x00000000000d5ad2 : ret 0xfde9
0x00000000000a9669 : ret 0xfe00
0x000000000004910a : ret 0xfe72
0x0000000000039802 : ret 0xfe7a
0x0000000000039702 : ret 0xfe7b
0x00000000000d1f23 : ret 0xfe9
0x0000000000036102 : ret 0xfeb1
0x0000000000036002 : ret 0xfeb2
0x000000000003db80 : ret 0xfeb8
0x0000000000032e3a : ret 0xfee2
0x000000000009c12c : ret 0xfee8
0x00000000000a9529 : ret 0xff00
0x00000000000f6d4b : ret 0xff04
0x000000000004ed95 : ret 0xff2
0x00000000000c8b90 : ret 0xff25
0x000000000018ad79 : ret 0xff2d
0x00000000000a9f8a : ret 0xff3
0x000000000006773f : ret 0xff31
0x00000000000b93b4 : ret 0xff48
0x000000000004ee5a : ret 0xff6a
0x0000000000154f5a : ret 0xff6c
0x00000000000a93e9 : ret 0xff80
0x00000000001438b3 : ret 0xff81
0x0000000000061e89 : ret 0xff83
0x00000000000283bc : ret 0xff85
0x000000000009812a : ret 0xff87
0x000000000003a57a : ret 0xffaf
0x000000000003a27a : ret 0xffb2
0x0000000000085887 : ret 0xffb8
0x000000000004c309 : ret 0xffbf
0x00000000000a92a9 : ret 0xffc0
0x000000000009579a : ret 0xffd4
0x0000000000075f5e : ret 0xffd7
0x000000000002378f : ret 0xffdb
0x000000000009adeb : ret 0xffdf
0x00000000000a9169 : ret 0xffe0
0x0000000000022d3a : ret 0xffe4
0x0000000000097e9a : ret 0xffe5
0x00000000001c7789 : ret 0xffe8
0x00000000000cb54d : ret 0xffe9
0x00000000000cb322 : ret 0xffea
0x00000000001cd381 : ret 0xffec
0x0000000000145027 : ret 0xffed
0x00000000000e90ea : ret 0xffee
0x00000000000342f4 : ret 0xffef
0x000000000009a81a : ret 0xfff
0x00000000000a9029 : ret 0xfff0
0x0000000000057cdb : ret 0xfff1
0x00000000000f5031 : ret 0xfff2
0x00000000000a7f3c : ret 0xfff4
0x00000000001c1a01 : ret 0xfff6
0x00000000000c0dc5 : ret 0xfff7
0x0000000000075c0a : ret 0xfff8
0x000000000010a14e : ret 0xfff9
0x0000000000050a76 : ret 0xfffa
0x0000000000053fda : ret 0xfffb
0x0000000000024bda : ret 0xfffc
0x0000000000028fba : ret 0xfffd
0x0000000000029702 : ret 0xfffe
0x00000000000300b5 : ret 0xffff
0x000000000002411a : ret 1
0x0000000000000fcc : ret 2
0x0000000000050612 : ret 3
0x00000000000393d8 : ret 4
0x000000000002a05a : ret 5
0x000000000017d27a : ret 6
0x0000000000001854 : ret 7
0x00000000000019ec : ret 8
0x00000000000fcd9a : ret 9
0x0000000000000766 : retf
0x00000000000047f8 : retf 0
0x0000000000011580 : retf 0x10
0x000000000014dcf5 : retf 0x1089
0x0000000000003bb6 : retf 0x10bf
0x00000000000264b2 : retf 0x10e7
0x0000000000095b33 : retf 0x10e9
0x000000000009722b : retf 0x11
0x0000000000052acd : retf 0x114d
0x000000000014ecb7 : retf 0x1189
0x00000000001394d2 : retf 0x11d
0x0000000000099c8a : retf 0x11ea
0x00000000000f360d : retf 0x1274
0x0000000000002924 : retf 0x12c5
0x000000000002a1ef : retf 0x12e9
0x000000000007ca28 : retf 0x131f
0x00000000000b93fa : retf 0x1373
0x000000000007cb6b : retf 0x1374
0x00000000000067b9 : retf 0x14
0x000000000015365b : retf 0x141
0x00000000000efcac : retf 0x144
0x00000000000219e2 : retf 0x1459
0x00000000000a0173 : retf 0x148
0x00000000000ef9c6 : retf 0x1489
0x00000000000a24c0 : retf 0x14c
0x0000000000004281 : retf 0x15
0x000000000005c512 : retf 0x1513
0x0000000000057fd2 : retf 0x15fb
0x0000000000131018 : retf 0x15ff
0x000000000003cde4 : retf 0x16
0x00000000000e675f : retf 0x1674
0x0000000000142f3f : retf 0x1675
0x000000000014f2b1 : retf 0x1689
0x000000000015ccbf : retf 0x168b
0x000000000004901a : retf 0x16e9
0x0000000000002e0a : retf 0x172
0x000000000003e912 : retf 0x17d5
0x000000000006c31a : retf 0x18
0x000000000000291a : retf 0x182c
0x000000000019c333 : retf 0x189
0x00000000000246b9 : retf 0x18f1
0x00000000000548ed : retf 0x194d
0x00000000001223f2 : retf 0x19b8
0x00000000001c90a5 : retf 0x1a1
0x00000000000ed47a : retf 0x1a8b
0x00000000000045e1 : retf 0x1b
0x0000000000115672 : retf 0x1b0
0x000000000001d7e0 : retf 0x1b45
0x000000000001dbb8 : retf 0x1b47
0x000000000001e308 : retf 0x1b4b
0x00000000000e7325 : retf 0x1b8
0x0000000000142af0 : retf 0x1bb
0x0000000000094649 : retf 0x1bd
0x0000000000043351 : retf 0x1be
0x00000000000bc083 : retf 0x1c74
0x00000000001a6948 : retf 0x1d4
0x00000000001a70e8 : retf 0x1d5
0x0000000000148882 : retf 0x1db
0x00000000000a814f : retf 0x1e74
0x0000000000072bcb : retf 0x1e75
0x00000000001225d2 : retf 0x1eb8
0x000000000014ba92 : retf 0x1f
0x00000000000abeeb : retf 0x1f0f
0x0000000000067da2 : retf 0x1f1
0x000000000015c60e : retf 0x1f75
0x0000000000198ee2 : retf 0x1f77
0x00000000001da33e : retf 0x2000
0x0000000000001ed2 : retf 0x20f4
0x00000000000099d8 : retf 0x21
0x000000000008bfd1 : retf 0x2148
0x00000000000f51ad : retf 0x2149
0x0000000000002d6a : retf 0x2217
0x0000000000092833 : retf 0x2274
0x00000000000022c0 : retf 0x2281
0x0000000000074ea3 : retf 0x23
0x00000000000023a1 : retf 0x23c4
0x000000000006fdf9 : retf 0x24
0x00000000000a682d : retf 0x2475
0x00000000000a2b35 : retf 0x2775
0x0000000000132e62 : retf 0x2777
0x000000000016cc89 : retf 0x280f
0x00000000000a21f5 : retf 0x2875
0x0000000000115202 : retf 0x28b8
0x000000000014e0a2 : retf 0x29
0x0000000000083f50 : retf 0x2941
0x00000000000c138c : retf 0x2944
0x0000000000102d67 : retf 0x2945
0x0000000000038f7f : retf 0x2948
0x000000000009ffbd : retf 0x2949
0x000000000008562e : retf 0x294c
0x000000000015961a : retf 0x2972
0x00000000001098e7 : retf 0x2974
0x000000000019651a : retf 0x2977
0x000000000014be72 : retf 0x2a40
0x000000000009529a : retf 0x2a74
0x0000000000045723 : retf 0x2a7e
0x00000000001ab6dc : retf 0x2a91
0x0000000000146f29 : retf 0x2a99
0x00000000000cb523 : retf 0x2ae9
0x000000000012e30c : retf 0x2b
0x00000000000a18dd : retf 0x2b49
0x000000000013871a : retf 0x2b6e
0x000000000011e3f1 : retf 0x2c
0x000000000002becf : retf 0x2c73
0x000000000002bea9 : retf 0x2c76
0x00000000001aab5a : retf 0x2c90
0x000000000011b452 : retf 0x2d2e
0x00000000001179f2 : retf 0x2d66
0x00000000000b93e0 : retf 0x2d73
0x0000000000122092 : retf 0x2db8
0x00000000001187e1 : retf 0x2deb
0x000000000000b328 : retf 0x2e
0x0000000000043215 : retf 0x2e66
0x0000000000121b02 : retf 0x2eb8
0x0000000000132f32 : retf 0x2f77
0x0000000000122662 : retf 0x2fb8
0x00000000000de3eb : retf 0x30
0x000000000005dbc2 : retf 0x302
0x0000000000121f65 : retf 0x3074
0x00000000000e37a2 : retf 0x30a7
0x00000000001445bf : retf 0x30e9
0x00000000000cdf14 : retf 0x31
0x00000000001168ce : retf 0x3145
0x000000000015070d : retf 0x3148
0x0000000000150231 : retf 0x3149
0x0000000000150a7a : retf 0x314c
0x00000000001505ed : retf 0x314d
0x00000000001ac945 : retf 0x3159
0x00000000000d5672 : retf 0x3185
0x00000000000d539a : retf 0x3188
0x00000000000d4352 : retf 0x3198
0x00000000000f9d07 : retf 0x31ff
0x00000000001ac9ad : retf 0x32dd
0x00000000001a5e48 : retf 0x33
0x00000000001ab263 : retf 0x33e6
0x000000000004a25f : retf 0x343d
0x000000000006c412 : retf 0x348
0x000000000009ca02 : retf 0x34e5
0x000000000009de1a : retf 0x34fb
0x000000000008b2f7 : retf 0x35
0x000000000009c5da : retf 0x3513
0x000000000009ac29 : retf 0x355c
0x0000000000094c22 : retf 0x3561
0x0000000000122ef2 : retf 0x35b8
0x000000000009292a : retf 0x35df
0x000000000008f6b2 : retf 0x35e1
0x00000000001ab791 : retf 0x3617
0x00000000001226c2 : retf 0x36b8
0x0000000000080d29 : retf 0x36fb
0x000000000007959a : retf 0x3718
0x0000000000173582 : retf 0x377
0x00000000001226f2 : retf 0x37b8
0x0000000000134825 : retf 0x37e9
0x000000000011c1c8 : retf 0x37eb
0x0000000000063eb2 : retf 0x38
0x000000000000221b : retf 0x3844
0x0000000000002e2e : retf 0x385b
0x0000000000134a75 : retf 0x38e9
0x000000000009fb82 : retf 0x3941
0x00000000000682f8 : retf 0x3948
0x0000000000080323 : retf 0x3949
0x0000000000029209 : retf 0x394c
0x0000000000083cb9 : retf 0x394d
0x0000000000052c24 : retf 0x3973
0x000000000000efd0 : retf 0x3a
0x0000000000140663 : retf 0x3a72
0x000000000002e438 : retf 0x3b
0x00000000001415eb : retf 0x3b9a
0x000000000003010a : retf 0x3bc4
0x0000000000032029 : retf 0x3be8
0x00000000000239d6 : retf 0x3c
0x00000000000212ca : retf 0x3c9c
0x00000000000212b2 : retf 0x3c9e
0x00000000000210b2 : retf 0x3c9f
0x0000000000096f0d : retf 0x3d83
0x00000000001acda6 : retf 0x3d8a
0x00000000000e4762 : retf 0x3db8
0x00000000001aa63b : retf 0x3ec
0x000000000004cfec : retf 0x3f3d
0x00000000001093ff : retf 0x40
0x0000000000088c15 : retf 0x40e9
0x0000000000048826 : retf 0x4166
0x0000000000027eee : retf 0x4180
0x00000000000a0b69 : retf 0x41e8
0x0000000000000321 : retf 0x4244
0x00000000000aa03c : retf 0x4266
0x0000000000027c53 : retf 0x4280
0x00000000000f5907 : retf 0x428b
0x000000000015beb0 : retf 0x430f
0x0000000000130a88 : retf 0x4374
0x0000000000009df8 : retf 0x44
0x00000000000bafc7 : retf 0x4466
0x00000000000e2584 : retf 0x44f6
0x0000000000104bf6 : retf 0x44ff
0x00000000000a3ea4 : retf 0x4580
0x0000000000060f16 : retf 0x45e9
0x0000000000003f18 : retf 0x46
0x0000000000028654 : retf 0x4689
0x00000000001155ae : retf 0x46b8
0x0000000000095afd : retf 0x46e9
0x00000000000b93c6 : retf 0x4773
0x00000000000e81e2 : retf 0x47e
0x0000000000090aa5 : retf 0x4801
0x000000000008e921 : retf 0x4802
0x000000000003cd1c : retf 0x4805
0x000000000003cd87 : retf 0x4806
0x0000000000084297 : retf 0x4808
0x000000000003cc38 : retf 0x4809
0x000000000003ce78 : retf 0x480a
0x000000000003ce3c : retf 0x480d
0x0000000000085543 : retf 0x4810
0x0000000000085641 : retf 0x4820
0x000000000012c7e2 : retf 0x4864
0x00000000000f7adf : retf 0x488d
0x00000000000a7a1e : retf 0x48c0
0x000000000002c512 : retf 0x48e8
0x0000000000052a41 : retf 0x48f8
0x000000000009672e : retf 0x4901
0x00000000000daaaf : retf 0x490f
0x00000000000f5f5e : retf 0x498b
0x0000000000001c37 : retf 0x49f2
0x0000000000083cbc : retf 0x4a74
0x0000000000021fe3 : retf 0x4a8d
0x0000000000002eae : retf 0x4a9a
0x000000000009526c : retf 0x4b74
0x0000000000111472 : retf 0x4b8
0x000000000008e8d3 : retf 0x4c01
0x000000000009a9e2 : retf 0x4c89
0x0000000000129c7e : retf 0x4ce8
0x0000000000052a98 : retf 0x4de8
0x0000000000052aaa : retf 0x4df0
0x0000000000052abc : retf 0x4df8
0x000000000005046b : retf 0x4fe9
0x00000000000037b4 : retf 0x5038
0x00000000000ee03a : retf 0x5088
0x00000000000fb3d7 : retf 0x5089
0x00000000000d2ea7 : retf 0x5180
0x000000000014dda3 : retf 0x5389
0x0000000000062156 : retf 0x53c
0x000000000004ee8d : retf 0x5489
0x00000000000fb855 : retf 0x548d
0x0000000000002720 : retf 0x54da
0x000000000003f826 : retf 0x54e8
0x0000000000003078 : retf 0x54f7
0x000000000002ae02 : retf 0x55
0x000000000018a392 : retf 0x557f
0x00000000000a3f13 : retf 0x5588
0x0000000000001e98 : retf 0x559a
0x0000000000164622 : retf 0x568
0x00000000000f77cd : retf 0x56e9
0x00000000000080b8 : retf 0x57
0x0000000000127578 : retf 0x5741
0x00000000000e8b90 : retf 0x575
0x00000000001340d2 : retf 0x577
0x00000000000ed6f1 : retf 0x57e9
0x000000000009daad : retf 0x5d5b
0x00000000000e6770 : retf 0x5d74
0x000000000016724b : retf 0x5fe8
0x000000000004f7fa : retf 0x60e8
0x00000000000b93ac : retf 0x6173
0x0000000000001f4c : retf 0x6321
0x00000000000d4954 : retf 0x6348
0x00000000000a24bd : retf 0x634d
0x000000000002c992 : retf 0x6411
0x0000000000159116 : retf 0x64e8
0x0000000000056e03 : retf 0x6577
0x000000000016cd73 : retf 0x6601
0x000000000016cec3 : retf 0x6602
0x000000000016d013 : retf 0x6603
0x000000000016d163 : retf 0x6604
0x000000000016d2b3 : retf 0x6605
0x000000000016d403 : retf 0x6606
0x000000000016d553 : retf 0x6607
0x000000000016d6a3 : retf 0x6608
0x000000000016d7f3 : retf 0x6609
0x000000000016d943 : retf 0x660a
0x000000000016da93 : retf 0x660b
0x000000000016dbe3 : retf 0x660c
0x000000000016dd33 : retf 0x660d
0x000000000016de83 : retf 0x660e
0x000000000016dfd3 : retf 0x660f
0x00000000000a687d : retf 0x6675
0x000000000004aee0 : retf 0x6677
0x00000000001735a1 : retf 0x676
0x000000000011c14e : retf 0x67a
0x00000000001accc5 : retf 0x67ca
0x000000000010f921 : retf 0x6b8
0x00000000000036f3 : retf 0x6b85
0x0000000000129b5f : retf 0x6be8
0x00000000001451f2 : retf 0x6cf
0x0000000000003c1c : retf 0x6e33
0x00000000001aacc2 : retf 0x6ee8
0x0000000000147785 : retf 0x6f7
0x00000000000561bc : retf 0x703d
0x000000000000394f : retf 0x707d
0x0000000000001cc0 : retf 0x7085
0x0000000000142f13 : retf 0x71e9
0x00000000001acb86 : retf 0x7272
0x0000000000002568 : retf 0x736c
0x000000000009d6e5 : retf 0x75e8
0x00000000001ac35f : retf 0x76a5
0x0000000000085b43 : retf 0x775
0x0000000000084811 : retf 0x776
0x00000000000a2255 : retf 0x7875
0x000000000013af46 : retf 0x78d
0x00000000000a5dd1 : retf 0x79e9
0x00000000001ab1e2 : retf 0x79f5
0x00000000000c07a3 : retf 0x7a74
0x00000000000f5ce0 : retf 0x7a83
0x0000000000139c1b : retf 0x7ce
0x00000000000a2b8d : retf 0x7d75
0x00000000001395e2 : retf 0x7f80
0x00000000000007c7 : retf 0x8003
0x0000000000110c2b : retf 0x8041
0x000000000003f64b : retf 0x8102
0x00000000000f33b7 : retf 0x8141
0x000000000017358a : retf 0x8148
0x00000000000d5fb9 : retf 0x8166
0x00000000000023e7 : retf 0x81c0
0x000000000002e762 : retf 0x820f
0x000000000004ae62 : retf 0x83
0x00000000000851f0 : retf 0x830f
0x000000000008b790 : retf 0x8310
0x000000000008d18d : retf 0x8320
0x00000000000217f7 : retf 0x8341
0x0000000000029ee1 : retf 0x8348
0x0000000000028c00 : retf 0x8349
0x00000000000737e9 : retf 0x8380
0x000000000014bda6 : retf 0x83b
0x00000000000217fa : retf 0x83ff
0x000000000003fb9a : retf 0x840f
0x000000000007248d : retf 0x8440
0x000000000012a25a : retf 0x8445
0x00000000001abad0 : retf 0x8481
0x000000000012d102 : retf 0x84e
0x00000000000292f4 : retf 0x850f
0x00000000000a425e : retf 0x8545
0x0000000000051be2 : retf 0x8548
0x00000000000aba09 : retf 0x860f
0x0000000000089132 : retf 0x866
0x0000000000062904 : retf 0x870f
0x0000000000132ee2 : retf 0x877
0x000000000000360f : retf 0x8792
0x00000000000a6a83 : retf 0x87e9
0x00000000000f6043 : retf 0x880f
0x00000000000f3e19 : retf 0x8810
0x00000000000f3d60 : retf 0x8840
0x00000000000f75b7 : retf 0x8841
0x0000000000027c3d : retf 0x8880
0x00000000000e980b : retf 0x8901
0x000000000009a9e8 : retf 0x8902
0x0000000000166b70 : retf 0x8908
0x0000000000086580 : retf 0x8920
0x000000000011ba71 : retf 0x8940
0x0000000000028c70 : retf 0x8941
0x00000000000ef622 : retf 0x8942
0x000000000005baa9 : retf 0x8944
0x0000000000032188 : retf 0x8948
0x000000000007d1cb : retf 0x8949
0x000000000002c947 : retf 0x894c
0x00000000000f4f11 : retf 0x894d
0x0000000000029d4a : retf 0x8966
0x0000000000027c9e : retf 0x8980
0x00000000000fdefd : retf 0x89e9
0x000000000010f0c1 : retf 0x89ff
0x00000000000024c0 : retf 0x8a3f
0x0000000000003ebb : retf 0x8aca
0x00000000000e4799 : retf 0x8b
0x000000000012564a : retf 0x8b40
0x00000000000efd2d : retf 0x8b41
0x00000000000cab4a : retf 0x8b47
0x0000000000024e48 : retf 0x8b48
0x0000000000034acc : retf 0x8b49
0x00000000000f05a4 : retf 0x8b4c
0x000000000007bd62 : retf 0x8b8
0x00000000000d9fc7 : retf 0x8d41
0x00000000000caf1d : retf 0x8d44
0x000000000003ed48 : retf 0x8d48
0x0000000000044094 : retf 0x8d49
0x0000000000102fc3 : retf 0x8d4a
0x0000000000084542 : retf 0x8d4c
0x000000000003fb85 : retf 0x8d4d
0x000000000012f914 : retf 0x8d8b
0x00000000000485bf : retf 0x8de9
0x00000000000a3ed4 : retf 0x8e0f
0x000000000007d45d : retf 0x9066
0x00000000000a4e29 : retf 0x91e9
0x00000000000f29c8 : retf 0x91eb
0x00000000000d4965 : retf 0x920f
0x0000000000001d55 : retf 0x9226
0x000000000002e7e0 : retf 0x9273
0x000000000009c1d1 : retf 0x92eb
0x00000000000528d0 : retf 0x930f
0x0000000000001be8 : retf 0x9396
0x00000000001ac42e : retf 0x93a2
0x000000000003e86e : retf 0x948
0x00000000000fb09c : retf 0x949
0x00000000000b93b1 : retf 0x94c
0x000000000009f7b2 : retf 0x954
0x0000000000001e80 : retf 0x9582
0x0000000000141b8f : retf 0x9589
0x000000000009d3c5 : retf 0x95e8
0x0000000000047103 : retf 0x973d
0x00000000000fd284 : retf 0x98e9
0x00000000001ac7cb : retf 0x99e0
0x0000000000111c52 : retf 0x9b8
0x000000000011ba67 : retf 0x9b9
0x00000000001acb3a : retf 0x9d7d
0x0000000000122482 : retf 0x9db8
0x00000000001049fb : retf 0xa
0x00000000001d4385 : retf 0xa02
0x00000000001ad445 : retf 0xa020
0x00000000001defc4 : retf 0xa09
0x00000000000a68e8 : retf 0xa173
0x00000000001aa9a5 : retf 0xa1eb
0x00000000001aca2b : retf 0xa2fe
0x000000000000349d : retf 0xa3f6
0x00000000001223c2 : retf 0xa5b8
0x00000000000948f1 : retf 0xa74
0x0000000000087ff2 : retf 0xa86
0x000000000012e10d : retf 0xa880
0x00000000000e689f : retf 0xa9eb
0x00000000000f61a6 : retf 0xaa74
0x0000000000095899 : retf 0xaae9
0x00000000001acafc : retf 0xab0d
0x0000000000105f11 : retf 0xabf
0x000000000004268d : retf 0xade9
0x00000000001ad04e : retf 0xae32
0x00000000000039c8 : retf 0xaec4
0x00000000000815c2 : retf 0xaf0
0x00000000001222a2 : retf 0xafb8
0x00000000000ca669 : retf 0xb
0x00000000001224b2 : retf 0xb2b8
0x00000000000f57ba : retf 0xb2e9
0x00000000001224e2 : retf 0xb3b8
0x00000000001ab849 : retf 0xb51a
0x0000000000162aa2 : retf 0xb5b8
0x000000000002a4fc : retf 0xb60f
0x0000000000162af2 : retf 0xb6b8
0x0000000000150a84 : retf 0xb70f
0x0000000000130bc3 : retf 0xb7e8
0x0000000000069cb3 : retf 0xb8
0x0000000000199922 : retf 0xb801
0x000000000019655e : retf 0xb841
0x0000000000028a64 : retf 0xb941
0x000000000019858f : retf 0xb948
0x00000000000027de : retf 0xba99
0x000000000007d312 : retf 0xbb41
0x0000000000111d12 : retf 0xbb8
0x00000000001acb53 : retf 0xbb9a
0x00000000000505a6 : retf 0xbc41
0x000000000011fa22 : retf 0xbcb8
0x0000000000130acb : retf 0xbd75
0x000000000011f9c2 : retf 0xbdb8
0x000000000004fa56 : retf 0xbe0f
0x0000000000001f85 : retf 0xbe35
0x000000000015c6a9 : retf 0xbe75
0x000000000011f8a2 : retf 0xbeb8
0x0000000000003b9a : retf 0xbf15
0x0000000000197885 : retf 0xbf41
0x00000000001acb9d : retf 0xbf4b
0x00000000001247a6 : retf 0xbf72
0x000000000011f8d2 : retf 0xbfb8
0x00000000000e8a8a : retf 0xc
0x000000000006a349 : retf 0xc001
0x000000000002abb8 : retf 0xc031
0x00000000000c8271 : retf 0xc083
0x0000000000051b03 : retf 0xc084
0x0000000000031838 : retf 0xc089
0x000000000011f932 : retf 0xc0b8
0x00000000001ac81d : retf 0xc0fe
0x00000000000c6ec4 : retf 0xc129
0x000000000003e575 : retf 0xc148
0x0000000000058610 : retf 0xc149
0x00000000000a3ee2 : retf 0xc180
0x000000000011f812 : retf 0xc1b8
0x00000000000d39ee : retf 0xc229
0x0000000000068dd8 : retf 0xc239
0x000000000006c7fb : retf 0xc277
0x00000000000c8277 : retf 0xc283
0x0000000000115bfb : retf 0xc2f7
0x000000000002d00d : retf 0xc6
0x00000000000ef207 : retf 0xc60f
0x0000000000141baf : retf 0xc683
0x00000000000582b9 : retf 0xc689
0x0000000000060e91 : retf 0xc7
0x00000000001063cb : retf 0xc741
0x000000000009e4b4 : retf 0xc748
0x0000000000197850 : retf 0xc749
0x0000000000107341 : retf 0xc80f
0x00000000000519ff : retf 0xc821
0x000000000003f62d : retf 0xc889
0x00000000000fcb50 : retf 0xc89
0x00000000000f2ac1 : retf 0xc8b
0x000000000014be5f : retf 0xc8d
0x00000000001136d8 : retf 0xc985
0x000000000003fbeb : retf 0xc989
0x000000000011c7b1 : retf 0xc9d9
0x0000000000021796 : retf 0xca21
0x0000000000190fc4 : retf 0xcab2
0x00000000000ed6c1 : retf 0xcae9
0x00000000000a1772 : retf 0xcb75
0x00000000000dc3d2 : retf 0xcbeb
0x00000000001a942a : retf 0xcccb
0x00000000000e7aa5 : retf 0xcd9
0x0000000000039eb7 : retf 0xd
0x00000000001d1a4a : retf 0xd00e
0x0000000000002d66 : retf 0xd04f
0x000000000003fbf7 : retf 0xd141
0x000000000014dd5c : retf 0xd189
0x00000000001ab606 : retf 0xd1cb
0x000000000012bee5 : retf 0xd1f7
0x00000000000e3162 : retf 0xd21
0x00000000000bbb4f : retf 0xd231
0x0000000000133406 : retf 0xd274
0x00000000000e13ab : retf 0xd28
0x000000000008c6b5 : retf 0xd284
0x0000000000025524 : retf 0xd285
0x0000000000033331 : retf 0xd289
0x000000000005547f : retf 0xd348
0x00000000001acd17 : retf 0xd39
0x00000000000c6b98 : retf 0xd689
0x00000000000460f2 : retf 0xd7
0x000000000014dd98 : retf 0xd789
0x000000000002ef9b : retf 0xd88
0x000000000011bc12 : retf 0xd8b8
0x00000000000ca3f2 : retf 0xd8f7
0x0000000000193556 : retf 0xd975
0x0000000000140270 : retf 0xda21
0x00000000000efb97 : retf 0xda29
0x00000000000a82d3 : retf 0xda75
0x0000000000100a91 : retf 0xdaf7
0x00000000000a22d2 : retf 0xdb72
0x0000000000046f45 : retf 0xdb84
0x00000000000a2c0f : retf 0xdc72
0x000000000013f70f : retf 0xdc75
0x00000000001237b2 : retf 0xdcb8
0x0000000000114d42 : retf 0xddb8
0x00000000001299cd : retf 0xdde8
0x00000000001ad2a3 : retf 0xde4f
0x0000000000086b21 : retf 0xdeb
0x00000000001ab8d3 : retf 0xdf7f
0x0000000000036506 : retf 0xe
0x00000000000f447d : retf 0xe075
0x000000000013fdd8 : retf 0xe083
0x00000000001c5584 : retf 0xe0a
0x00000000001ab37e : retf 0xe152
0x0000000000028d47 : retf 0xe175
0x0000000000055456 : retf 0xe183
0x0000000000150861 : retf 0xe281
0x0000000000028770 : retf 0xe283
0x00000000000a8389 : retf 0xe475
0x00000000001ab95c : retf 0xe496
0x00000000000d2a1a : retf 0xe4a
0x00000000000d74cd : retf 0xe575
0x0000000000059777 : retf 0xe677
0x00000000000cd2fd : retf 0xe6a
0x00000000001ab2c6 : retf 0xe72e
0x00000000001aa953 : retf 0xe80
0x000000000010ec29 : retf 0xe803
0x00000000001a94a0 : retf 0xe87e
0x0000000000061105 : retf 0xe87f
0x000000000002c672 : retf 0xe8e8
0x000000000003cdb9 : retf 0xe903
0x00000000000545ac : retf 0xe972
0x000000000014c004 : retf 0xe975
0x00000000000fc724 : retf 0xe977
0x0000000000122242 : retf 0xe9b8
0x0000000000003644 : retf 0xe9ee
0x000000000005ca82 : retf 0xe9ff
0x0000000000053efb : retf 0xea72
0x00000000000869e3 : retf 0xea77
0x0000000000111a93 : retf 0xea81
0x00000000001ac90c : retf 0xea91
0x00000000000ecc5f : retf 0xeac0
0x0000000000051a0e : retf 0xeac1
0x00000000000a8b81 : retf 0xead3
0x000000000011cbb2 : retf 0xeadb
0x000000000003cd72 : retf 0xeb04
0x000000000003cdd1 : retf 0xeb07
0x000000000003cc98 : retf 0xeb08
0x000000000003ce9f : retf 0xeb0b
0x000000000003ce72 : retf 0xeb0c
0x00000000000c14e7 : retf 0xeb72
0x00000000000f0332 : retf 0xeb7f
0x00000000001aaa2d : retf 0xeb83
0x0000000000167a62 : retf 0xeb97
0x00000000001ad221 : retf 0xebbf
0x00000000000c8561 : retf 0xec75
0x0000000000159712 : retf 0xec7a
0x000000000014c732 : retf 0xed4a
0x000000000015db5c : retf 0xed75
0x000000000011cba9 : retf 0xed83
0x0000000000144cfa : retf 0xedc5
0x00000000000e259f : retf 0xee75
0x000000000003d870 : retf 0xeeb
0x00000000000eb05e : retf 0xef75
0x0000000000125f32 : retf 0xefb1
0x000000000012be40 : retf 0xefc1
0x00000000000bf9af : retf 0xf
0x0000000000171fac : retf 0xf01
0x000000000017212c : retf 0xf02
0x00000000001722ac : retf 0xf03
0x000000000012dba2 : retf 0xf031
0x000000000017242c : retf 0xf04
0x00000000001725ac : retf 0xf05
0x000000000017272c : retf 0xf06
0x000000000011b1fa : retf 0xf060
0x00000000001728ac : retf 0xf07
0x00000000000ed2e3 : retf 0xf075
0x0000000000105305 : retf 0xf08
0x0000000000107152 : retf 0xf089
0x0000000000172bac : retf 0xf09
0x0000000000172d2c : retf 0xf0a
0x0000000000172eac : retf 0xf0b
0x000000000017302c : retf 0xf0c
0x00000000001731ac : retf 0xf0d
0x000000000017332c : retf 0xf0e
0x00000000001734ac : retf 0xf0f
0x0000000000155af2 : retf 0xf0f5
0x000000000010b262 : retf 0xf15f
0x0000000000151b97 : retf 0xf175
0x000000000018b00d : retf 0xf1c5
0x00000000001045fa : retf 0xf1cc
0x000000000008ef89 : retf 0xf1e8
0x00000000000428b2 : retf 0xf23
0x000000000010ad02 : retf 0xf256
0x00000000001324c2 : retf 0xf28e
0x00000000000f6cf2 : retf 0xf2a5
0x00000000001b05fc : retf 0xf2d4
0x000000000009ffda : retf 0xf375
0x00000000000e7532 : retf 0xf39b
0x00000000000e7562 : retf 0xf39c
0x00000000000ef4fb : retf 0xf40
0x000000000011b0c2 : retf 0xf402
0x000000000007ce18 : retf 0xf41
0x00000000000e00e2 : retf 0xf411
0x00000000000d2e73 : retf 0xf42
0x00000000001660c7 : retf 0xf44
0x00000000000461d6 : retf 0xf48
0x00000000000b1971 : retf 0xf4c
0x00000000000ef6c3 : retf 0xf4d
0x00000000000e4162 : retf 0xf60f
0x00000000000a0176 : retf 0xf631
0x00000000001ac868 : retf 0xf64
0x0000000000197d97 : retf 0xf641
0x000000000011e2c2 : retf 0xf646
0x000000000005761b : retf 0xf66
0x00000000000c7802 : retf 0xf68b
0x00000000000f4f33 : retf 0xf748
0x00000000000a4e4d : retf 0xf780
0x000000000009b322 : retf 0xf85e
0x00000000000d9fde : retf 0xf883
0x00000000000a88a2 : retf 0xf884
0x00000000000d8aab : retf 0xf8c1
0x0000000000094e80 : retf 0xf989
0x000000000018b0df : retf 0xf9c5
0x000000000007e2fa : retf 0xfa2f
0x0000000000143588 : retf 0xfa81
0x0000000000033351 : retf 0xfa83
0x000000000005f00a : retf 0xfac1
0x00000000001bd420 : retf 0xfb71
0x00000000001bdb2c : retf 0xfb8c
0x00000000001bdb24 : retf 0xfb8d
0x00000000001bdb1c : retf 0xfb8e
0x00000000001bdb14 : retf 0xfb8f
0x00000000001bdb0c : retf 0xfb90
0x00000000001bd918 : retf 0xfb98
0x00000000000c0852 : retf 0xfbb
0x00000000000ccd82 : retf 0xfc1d
0x00000000001676f2 : retf 0xfc8f
0x000000000004f8f2 : retf 0xfd19
0x00000000001012a8 : retf 0xfd4f
0x000000000018e3e6 : retf 0xfdc5
0x0000000000095b46 : retf 0xfde9
0x000000000003dd64 : retf 0xfe0d
0x000000000003d952 : retf 0xfe36
0x0000000000102822 : retf 0xfe41
0x00000000001495c2 : retf 0xfe70
0x000000000003a0fa : retf 0xfe71
0x0000000000039cfa : retf 0xfe75
0x000000000015199a : retf 0xfe83
0x0000000000050c17 : retf 0xfeb
0x000000000018ae17 : retf 0xfec5
0x000000000009f7a4 : retf 0xfee9
0x0000000000173dd1 : retf 0xff2
0x0000000000173dcc : retf 0xff3
0x000000000003ee14 : retf 0xff31
0x000000000002c662 : retf 0xff4b
0x00000000000f6e82 : retf 0xff72
0x0000000000071502 : retf 0xff9c
0x00000000000707e2 : retf 0xffb0
0x0000000000084835 : retf 0xffb8
0x00000000000795fc : retf 0xffbb
0x00000000000245fa : retf 0xffcc
0x0000000000150cd2 : retf 0xffcd
0x00000000000d957a : retf 0xffd4
0x00000000000762e2 : retf 0xffd7
0x00000000000c6ff2 : retf 0xffdc
0x00000000000ff802 : retf 0xffe0
0x000000000005d832 : retf 0xffe4
0x000000000003ad99 : retf 0xffe7
0x00000000000675c8 : retf 0xffe8
0x0000000000085882 : retf 0xffea
0x000000000012d96f : retf 0xffec
0x0000000000144853 : retf 0xffed
0x00000000000d25a2 : retf 0xffef
0x000000000006d003 : retf 0xfff0
0x000000000017fb92 : retf 0xfff1
0x00000000000f47d1 : retf 0xfff2
0x000000000019698f : retf 0xfff3
0x00000000000d48b6 : retf 0xfff4
0x00000000000601ba : retf 0xfff5
0x0000000000027d37 : retf 0xfff6
0x00000000001e1821 : retf 0xfff7
0x0000000000059be5 : retf 0xfff8
0x00000000000847c8 : retf 0xfff9
0x00000000000289ae : retf 0xfffa
0x0000000000050b14 : retf 0xfffb
0x000000000002786f : retf 0xfffc
0x0000000000029135 : retf 0xfffd
0x00000000000346b4 : retf 0xfffe
0x0000000000024578 : retf 0xffff
0x00000000000062b0 : retf 1
0x0000000000097452 : retf 2
0x0000000000001190 : retf 3
0x0000000000100501 : retf 4
0x000000000000d650 : retf 5
0x00000000000392ca : retf 6
0x00000000001a88f4 : retf 7
0x0000000000011430 : retf 8
0x0000000000009579 : retf 9
0x00000000001c1c1c : rol bh, 1 ; add ah, dl ; xor edi, esi ; call rsp
0x00000000000baf55 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000000bbb43 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000011933c : rol bl, 0x66 ; nop ; mov eax, 1 ; ret
0x00000000000abbde : rol bl, 0x83 ; ret 0x6620
0x0000000000103ffd : rol bl, 0x90 ; mov eax, 0xffffffff ; ret
0x00000000000d0beb : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000846ac : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000004faac : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000bb6bd : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000043967 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000a9f62 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000018a64b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000000b1902 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000001a82e0 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000766ce : rol byte ptr [rax + rcx*2], 1 ; ret 0x3b44
0x0000000000048659 : rol byte ptr [rax - 0x69f0f606], 1 ; ret 0x8348
0x00000000000d9546 : rol byte ptr [rax - 0x78f0f606], 1 ; retf
0x00000000001af4c8 : rol byte ptr [rax - 0x7f2f0010], 0xf0 ; jmp rax
0x00000000000bd52d : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x000000000019034d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001bef65 : rol byte ptr [rax], 0 ; je 0x1befd5 ; in al, dx ; jmp qword ptr [rax]
0x00000000001cf7c1 : rol byte ptr [rax], 0 ; or al, 0xf3 ; sti ; call rsp
0x000000000015a1cf : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x000000000013235b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007c03a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001bf205 : rol byte ptr [rax], 1 ; add byte ptr [rbp + rdi*4 - 0x14], al ; jmp rsp
0x0000000000130810 : rol byte ptr [rax], 1 ; sub al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000143557 : rol byte ptr [rbp + 0x31], cl ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000abe22 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x00000000000daa40 : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x00000000000bd9cd : rol byte ptr [rbp - 0x3f6bf02e], 0xf3 ; ret
0x00000000000d8f8b : rol byte ptr [rbp - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x8d48
0x000000000018aa72 : rol byte ptr [rbx + 0x14860c0], 0xf8 ; ret
0x00000000001c2f7c : rol byte ptr [rbx + 2], 1 ; add ah, dl ; cli ; jmp rsp
0x00000000001bd05c : rol byte ptr [rbx + rdi*8], 1 ; jmp qword ptr [rax]
0x0000000000052bfb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000000efedf : rol byte ptr [rbx - 0x3f7cfd20], 8 ; ret
0x00000000001395d7 : rol byte ptr [rbx - 0x47ca817], 1 ; or dword ptr [rdi], ecx ; retf
0x000000000012517c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x0000000000084868 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000000306d1 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000e972a : rol byte ptr [rbx - 0x6bf0fe02], 0xc0 ; ret
0x00000000001080ed : rol byte ptr [rbx - 0x76b7f708], 1 ; ret 0x830f
0x00000000000edc9c : rol byte ptr [rbx - 0x76bafd20], cl ; ret
0x00000000000274d1 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x00000000001af57c : rol byte ptr [rbx - 0x7c2f0010], 0xf0 ; jmp rax
0x00000000000c8fba : rol byte ptr [rbx - 0x7cb6fa40], cl ; ret
0x00000000000c9269 : rol byte ptr [rbx - 0x7cb7fa40], cl ; ret
0x00000000001c0e5c : rol byte ptr [rbx - 0x7d5bffff], 0xf5 ; call rsp
0x00000000000d0e52 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000014dcd6 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x0000000000102e64 : rol byte ptr [rcx + 0x39], 1 ; retf
0x0000000000131048 : rol byte ptr [rcx + 0x5c], 0x5d ; ret
0x00000000000bb9d1 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000000620df : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000000bb6be : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x00000000000a82c5 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x00000000000a12d7 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret
0x00000000000a837b : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x3941
0x00000000000d4974 : rol byte ptr [rcx + 0xf], cl ; retf
0x0000000000197d89 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xd349
0x000000000019807d : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0xf45
0x000000000007641e : rol byte ptr [rcx + rcx*2], 1 ; ret 0x3b45
0x00000000000440f9 : rol byte ptr [rcx + rcx*4 + 0x16], 0x5d ; ret
0x00000000000bcf9e : rol byte ptr [rcx + rcx*4 + 0x41], 4 ; jne 0xbcf70 ; ret
0x000000000014103a : rol byte ptr [rcx + rcx*4 - 0x40], cl ; mov byte ptr [rdi + rdx], 0 ; ret
0x0000000000141151 : rol byte ptr [rcx - 0x77], cl ; retf
0x00000000000ea80e : rol byte ptr [rcx - 0x7d], 0xfc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd009
0x00000000000d8a57 : rol byte ptr [rcx - 0x7d], cl ; clc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbd
0x0000000000044001 : rol byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x000000000004aed9 : rol byte ptr [rcx - 0x7d], cl ; ret 0x4502
0x00000000000a4ec9 : rol byte ptr [rcx - 0x7d], cl ; ret 0x8303
0x00000000000441f3 : rol byte ptr [rcx - 0x7d], cl ; ret 0xe902
0x00000000001446c5 : rol byte ptr [rcx - 0x80], 1 ; jmp qword ptr [rax]
0x0000000000198088 : rol byte ptr [rcx - 0xa], cl ; ret 0x7407
0x00000000000d0e32 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000ff939 : rol byte ptr [rcx], 0 ; add byte ptr [rcx], al ; ret
0x00000000000a8302 : rol byte ptr [rcx], 0x38 ; adc al, 7 ; je 0xa8308 ; ret
0x0000000000060012 : rol byte ptr [rcx], 0x39 ; retf
0x00000000000f032f : rol byte ptr [rcx], 0x39 ; retf 0xeb7f
0x0000000000052562 : rol byte ptr [rcx], 0x48 ; cmp edx, eax ; jne 0x52561 ; xor eax, eax ; ret
0x0000000000022c06 : rol byte ptr [rcx], 0x50 ; call rbx
0x00000000000514f2 : rol byte ptr [rcx], 0x5b ; ret
0x00000000001245dd : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000051502 : rol byte ptr [rcx], 0x80 ; js 0x51511 ; add byte ptr [rbp - 0xa], dh ; pop rbx ; ret
0x000000000002d7da : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x00000000000bbd67 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x0000000000103845 : rol byte ptr [rcx], 0x89 ; add edi, dword ptr [rcx] ; retf 0x840f
0x00000000000801dd : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x00000000000efea4 : rol byte ptr [rcx], 0xc0 ; ret
0x0000000000050912 : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000011c7c7 : rol byte ptr [rcx], 0xd9 ; ret 0x3941
0x00000000000bbd80 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000001bd014 : rol byte ptr [rcx], 0xfb ; call qword ptr [rax]
0x00000000001dd576 : rol byte ptr [rcx], 2 ; retf
0x00000000001c1e3d : rol byte ptr [rcx], cl ; add ah, al ; movsxd rsi, edi ; call qword ptr [rax]
0x00000000001e099d : rol byte ptr [rcx], cl ; add byte ptr [rax - 0x65], ah ; idiv edi ; retf
0x00000000001c1e25 : rol byte ptr [rcx], cl ; add byte ptr [rbx - 9], ah ; call rsp
0x000000000010f50c : rol byte ptr [rcx], cl ; ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x00000000001c040c : rol byte ptr [rdi + 1], 1 ; add byte ptr [rdx - 0xe], dl ; jmp qword ptr [rax]
0x000000000012554d : rol byte ptr [rdi + rcx], 0xb7 ; ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x00000000000d0e92 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000d3e19 : rol byte ptr [rdi], 0x39 ; ret 0x77e
0x00000000000d0e42 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000001bf8dc : rol byte ptr [rdx], 1 ; add byte ptr [rsp + rdi*8], dh ; in eax, dx ; call rsp
0x0000000000068b4a : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x00000000000d5f2d : rol byte ptr [rip + 0x16d], 0xf3 ; ret
0x0000000000131962 : rol byte ptr [rip + 0x450f4800], 1 ; ret 0x66c3
0x000000000012541d : rol byte ptr [rip + 0x48c0b70f], 0x8b ; push rsp ; ret 0x8940
0x00000000000d0e82 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000017b25d : rol byte ptr [rsi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018b1c5 : rol ch, 1 ; jns 0x18b1a4 ; retf 0xead3
0x000000000018b315 : rol ch, 1 ; jns 0x18b2f4 ; retf 0xead3
0x000000000018b465 : rol ch, 1 ; jns 0x18b444 ; retf 0xead3
0x000000000018b5b5 : rol ch, 1 ; jns 0x18b594 ; retf 0xead3
0x000000000018b705 : rol ch, 1 ; jns 0x18b6e4 ; retf 0xead3
0x000000000018b855 : rol ch, 1 ; jns 0x18b834 ; retf 0xead3
0x000000000018b9a5 : rol ch, 1 ; jns 0x18b984 ; retf 0xead3
0x000000000018baf5 : rol ch, 1 ; jns 0x18bad4 ; retf 0xead3
0x000000000018bc45 : rol ch, 1 ; jns 0x18bc24 ; retf 0xead3
0x000000000018bd95 : rol ch, 1 ; jns 0x18bd74 ; retf 0xead3
0x000000000018bee5 : rol ch, 1 ; jns 0x18bec4 ; retf 0xead3
0x000000000018c035 : rol ch, 1 ; jns 0x18c014 ; retf 0xead3
0x000000000018c185 : rol ch, 1 ; jns 0x18c164 ; retf 0xead3
0x000000000018c2d5 : rol ch, 1 ; jns 0x18c2b4 ; retf 0xead3
0x000000000018c425 : rol ch, 1 ; jns 0x18c404 ; retf 0xead3
0x000000000018c895 : rol ch, 1 ; jns 0x18c874 ; retf 0xead3
0x000000000018ca15 : rol ch, 1 ; jns 0x18c9f4 ; retf 0xead3
0x000000000018cb95 : rol ch, 1 ; jns 0x18cb74 ; retf 0xead3
0x000000000018cd15 : rol ch, 1 ; jns 0x18ccf4 ; retf 0xead3
0x000000000018ce95 : rol ch, 1 ; jns 0x18ce74 ; retf 0xead3
0x000000000018d015 : rol ch, 1 ; jns 0x18cff4 ; retf 0xead3
0x000000000018d195 : rol ch, 1 ; jns 0x18d174 ; retf 0xead3
0x000000000018d315 : rol ch, 1 ; jns 0x18d2f4 ; retf 0xead3
0x000000000018d495 : rol ch, 1 ; jns 0x18d474 ; retf 0xead3
0x000000000018d615 : rol ch, 1 ; jns 0x18d5f4 ; retf 0xead3
0x000000000018d795 : rol ch, 1 ; jns 0x18d774 ; retf 0xead3
0x000000000018d915 : rol ch, 1 ; jns 0x18d8f4 ; retf 0xead3
0x000000000018da95 : rol ch, 1 ; jns 0x18da74 ; retf 0xead3
0x000000000018dc15 : rol ch, 1 ; jns 0x18dbf4 ; retf 0xead3
0x000000000018dd95 : rol ch, 1 ; jns 0x18dd74 ; retf 0xead3
0x000000000018a6cf : rol ch, 1 ; std ; xlatb ; ret
0x000000000018e446 : rol ch, cl ; std ; xlatb ; ret
0x000000000018e6ef : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000001a9420 : rol cl, 0xc2 ; ret
0x00000000000d3da3 : rol cl, cl ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000139927 : rol dh, 2 ; add byte ptr [rbp + 0x41], bl ; pop rsp ; pop r13 ; ret
0x00000000000d0ddc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000e6d93 : rol dword ptr [rax + 0x30], 1 ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000018effc : rol dword ptr [rax + 0x48000000], 0x39 ; retf 0xe175
0x00000000000bb978 : rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000d47b1 : rol dword ptr [rax + 0xee80031], cl ; retf
0x0000000000043f21 : rol dword ptr [rax + rcx*2], 0x83 ; ret 0x4904
0x0000000000140e82 : rol dword ptr [rax - 0x69f0fe07], cl ; ret 0x8341
0x0000000000176070 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000001cf93d : rol dword ptr [rax], 0 ; xor ch, 0xfb ; call qword ptr [rdx]
0x00000000001bf23d : rol dword ptr [rax], 1 ; add ah, ah ; ret
0x00000000001bf22d : rol dword ptr [rax], 1 ; add byte ptr [rcx + rax*8 - 0x14], dl ; call rsp
0x000000000007c790 : rol dword ptr [rax], 1 ; ret
0x00000000000abc04 : rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000ac0a7 : rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000ac0d6 : rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x000000000018a6c3 : rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000018e193 : rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000000a82d0 : rol dword ptr [rbp - 0x7c], 0xca ; jne 0xa82b7 ; ret
0x00000000001bcca8 : rol dword ptr [rbp - 3], 0xff ; push rcx ; std ; jmp rcx
0x0000000000150847 : rol dword ptr [rcx + 0x333333e1], 1 ; xor ecx, dword ptr [rax + 0x31] ; retf 0xc148
0x0000000000150a9b : rol dword ptr [rcx + 0xf0f0fe1], 1 ; cmovs esi, dword ptr [rcx] ; retf 0xc148
0x0000000000196006 : rol dword ptr [rcx + 0xf], 0x93 ; ret 0x2045
0x0000000000197a35 : rol dword ptr [rcx + 0xf], 1 ; xchg eax, edx ; ret
0x00000000000f2502 : rol dword ptr [rcx + rcx*2], 0x39 ; retf 0x840f
0x000000000007648d : rol dword ptr [rcx + rcx*2], 0x83 ; ret 0x4904
0x0000000000076736 : rol dword ptr [rcx + rcx*2], 0x83 ; ret 0x4c04
0x000000000005d30b : rol dword ptr [rcx - 0x47], cl ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x00000000000edc99 : rol dword ptr [rcx - 0x77], 1 ; rol byte ptr [rbx - 0x76bafd20], cl ; ret
0x000000000002ac7f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000009e066 : rol dword ptr [rcx], cl ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000803f9 : rol dword ptr [rcx], cl ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000b89e9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x00000000001da33a : rol dword ptr [rdx + 0xe], 8 ; retf 0x2000
0x0000000000028d3a : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000131b57 : rol dword ptr [rip + 0x450f4800], cl ; ret 0x90c3
0x000000000003f935 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000018e3de : rol ebp, 1 ; fnsave dword ptr [rcx + rbx*8 - 0x3b] ; std ; xlatb ; retf 0xfdc5
0x000000000018ad75 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x000000000009a7dc : rol ebx, 0x66 ; nop ; lea rax, [rdx - 0x10] ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000009a7db : rol r11d, 0x66 ; nop ; lea rax, [rdx - 0x10] ; ret
0x000000000003f934 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000134d42 : ror ax, 8 ; ret
0x0000000000086f35 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x00000000001674b4 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x000000000003f936 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000001993f8 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000000abc52 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xabc99 ; add rax, rdi ; ret
0x00000000000d0422 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0xd0469 ; add rax, rdi ; ret
0x00000000000b17b7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000d0afc : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x00000000000b1c3e : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x0000000000085a3e : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000000eb7cf : ror byte ptr [rax + 0x29], cl ; ret 0x8948
0x00000000001164cf : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x116507 ; ret
0x00000000001300e8 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000010f50e : ror byte ptr [rax + 0x39], 1 ; div dword ptr [rdi - 0x14] ; ret
0x0000000000095443 : ror byte ptr [rax + 0x39], 1 ; ret
0x000000000010f85d : ror byte ptr [rax + 0x39], 1 ; ret 0x3575
0x000000000004ddd9 : ror byte ptr [rax + 0x39], cl ; fmul dword ptr [rdi] ; xchg eax, edx ; ret 0x2948
0x000000000007fbd3 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x0000000000130008 : ror byte ptr [rax + 0x48], 0x39 ; sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x00000000000ec143 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000d29ff : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8348
0x00000000001310d2 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8948
0x00000000001487d4 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x000000000005ac9b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xa4e9
0x00000000000d3e85 : ror byte ptr [rax + 0xf], 0x4f ; ret 0x8b48
0x000000000002ee99 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000002ee8a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x00000000000abcfc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x00000000000ac218 : ror byte ptr [rax + 1], 0xf8 ; add rax, rsi ; ret
0x00000000000abc22 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000018a693 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000034e73 : ror byte ptr [rax + 1], 1 ; ret
0x00000000000f2131 : ror byte ptr [rax + 1], 1 ; ret 0x8948
0x0000000000083cb6 : ror byte ptr [rax + 1], 1 ; retf 0x394d
0x00000000001411c3 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000c0699 : ror byte ptr [rax + 1], cl ; ret 0x894c
0x00000000000b17b4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000001404f2 : ror byte ptr [rax + 1], cl ; sal esi, cl ; ret
0x00000000000f7cd8 : ror byte ptr [rax + 9], 0x14 ; ret
0x000000000004393a : ror byte ptr [rax + 9], 0xd0 ; ret
0x00000000001a46e8 : ror byte ptr [rax + rax], 0 ; ret
0x000000000009dd30 : ror byte ptr [rax + rax], cl ; cmovne rax, rdx ; ret
0x00000000000ac365 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000300b2 : ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000005376c : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000061e82 : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000196a31 : ror byte ptr [rax - 0x3f], 0xe6 ; add ecx, dword ptr [rax + 9] ; retf
0x00000000000e6880 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x00000000000abc12 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x00000000000abc42 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x00000000000ac112 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x00000000000abc32 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000009a816 : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000167120 : ror byte ptr [rax - 0x73], 5 ; push rcx ; retf
0x000000000008bf4f : ror byte ptr [rax - 0x73], 5 ; ret
0x000000000010153b : ror byte ptr [rax - 0x75], 0x2d ; popfq ; retf 0x2e
0x00000000000debd8 : ror byte ptr [rax - 0x75], 0x4c ; ret
0x0000000000124ed1 : ror byte ptr [rax - 0x75], 0x54 ; ret 0x8940
0x0000000000156b1a : ror byte ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov rdi, rbp ; call rbx
0x00000000000dd8af : ror byte ptr [rax - 0x75], 0x74 ; ret
0x000000000009d60f : ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000014e5e9 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x14e58b ; xor eax, eax ; pop rbx ; ret
0x0000000000153ad8 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; jmp rcx
0x00000000000a1914 : ror byte ptr [rax - 0x77], 0xd8 ; pop rbx ; cmovne rax, rdx ; ret
0x0000000000130fe2 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x00000000001100aa : ror byte ptr [rax - 0x77], 0xee ; mov edi, ebx ; xor eax, eax ; syscall
0x0000000000032e35 : ror byte ptr [rax - 0x77], 1 ; fucomip st(0) ; ret 0xfee2
0x0000000000085c80 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000019940d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000002e6a4 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x000000000008b648 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000d59f5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x00000000000219a2 : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000003cfcd : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000d8847 : ror byte ptr [rax - 0x77], 1 ; retf 0xc148
0x0000000000071420 : ror byte ptr [rax - 0x77], 1 ; test dword ptr [rax - 0x16000007], edx ; ret
0x0000000000153049 : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x0000000000096c85 : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000e97dc : ror byte ptr [rax - 0x77], cl ; retf
0x000000000014075d : ror byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x000000000008cea1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x8ceb7 ; ret
0x000000000003fb52 : ror byte ptr [rax - 0x7b], 1 ; test byte ptr [rdi], 0x94 ; ret 0x854d
0x000000000011ce5a : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdi + rax - 0xd], dh ; ret
0x0000000000089372 : ror byte ptr [rax - 0x7d], 0x7f ; sbb byte ptr [rax], al ; setne al ; ret
0x000000000019b0ae : ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret 0x5a74
0x000000000019b14d : ror byte ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret 0x840f
0x000000000009f824 : ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000052590 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000103f58 : ror byte ptr [rax - 0x7d], 0xc4 ; or bl, al ; nop ; ret
0x00000000000446fe : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000004f464 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000111c13 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000008a771 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000101ae6 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ac172 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000018aaa2 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x147c
0x00000000000ac152 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x00000000000ac132 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000432c0 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000fb9a9 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4901
0x000000000011d4d4 : ror byte ptr [rax - 0x7d], 1 ; retf 0x4901
0x0000000000087cda : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000005546a : ror byte ptr [rax - 0x7d], cl ; jge 0x55477 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x00000000000cd4ca : ror byte ptr [rax - 0x7d], cl ; jge 0xcd4d7 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x941
0x0000000000086b1a : ror byte ptr [rax - 0x7d], cl ; loop 0x86b22 ; add rdx, rcx ; jmp 0x86b38
0x00000000000d9ef8 : ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000029375 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000197ffc : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000198018 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000b6fe6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000000ce271 : ror byte ptr [rax - 0x7d], cl ; ret 0x6601
0x00000000000c08ba : ror byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x0000000000197cfa : ror byte ptr [rax - 0x7d], cl ; ret 0xe940
0x00000000001675b8 : ror byte ptr [rax], 0x48 ; cmp edx, eax ; ja 0x1675b9 ; xor eax, eax ; ret
0x0000000000159a2d : ror byte ptr [rax], 0x83 ; js 0x159a33 ; push qword ptr [rbx + rsi*2 - 0x7d] ; ret 0x3901
0x00000000000e50ae : ror byte ptr [rax], 0x83 ; ret 0x4908
0x00000000001bd068 : ror byte ptr [rax], 0xfb ; call qword ptr [rax]
0x00000000000bb384 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x000000000009fb63 : ror byte ptr [rbp + 0x29], 1 ; retf
0x000000000007ce12 : ror byte ptr [rbp + 0x39441604], cl ; retf 0xf41
0x000000000007d332 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x0000000000197d94 : ror byte ptr [rbp + 9], cl ; retf 0xf641
0x00000000000bdcdc : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x000000000014343c : ror byte ptr [rbp - 0x77], cl ; ret
0x000000000012c826 : ror byte ptr [rbx + 0x25], 1 ; ret 0x2beb
0x000000000018f191 : ror byte ptr [rbx + 0x75163b17], 0xe4 ; ret
0x00000000001c04d4 : ror byte ptr [rbx + 1], 0 ; xchg eax, esp ; jne 0x1c04d3 ; call rsp
0x00000000001c04d4 : ror byte ptr [rbx + 1], 0 ; xchg eax, esp ; jne 0x1c04d4 ; call rsp
0x0000000000132dff : ror byte ptr [rbx - 0x367ab7ed], 0x74 ; adc al, 0xf6 ; ret 0x7420
0x00000000000fdcd7 : ror byte ptr [rbx - 0x74bbfbad], 1 ; xor eax, dword ptr [rcx] ; ret 0x3944
0x000000000015ccb6 : ror byte ptr [rcx + 0x1b803], 0 ; add bl, ch ; retf 0x168b
0x00000000000cf6a6 : ror byte ptr [rcx + 0x29], cl ; ret 0x1948
0x0000000000054c94 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000010f8bf : ror byte ptr [rcx + 0x39], 1 ; ret 0x3375
0x00000000000fd512 : ror byte ptr [rcx + 0x4428244c], 0x29 ; ret 0x8d48
0x0000000000103f26 : ror byte ptr [rcx + 0x460f49c8], cl ; int1 ; syscall
0x00000000000bd62a : ror byte ptr [rcx + 0x48740847], 0x48 ; mov eax, ecx ; ret
0x0000000000196d15 : ror byte ptr [rcx + 9], 1 ; ret
0x0000000000197a3c : ror byte ptr [rcx + 9], cl ; ret
0x0000000000198085 : ror byte ptr [rcx + 9], cl ; rol byte ptr [rcx - 0xa], cl ; ret 0x7407
0x0000000000129a47 : ror byte ptr [rcx + rcx*4 + 0x4c], 0x24 ; or byte ptr [rax + 0x29], cl ; retf
0x0000000000149cc8 : ror byte ptr [rcx + rcx*4 - 0xf], 0x4c ; mov edi, ebp ; call r12
0x0000000000086f36 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000003dbb4 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000009f272 : ror byte ptr [rcx - 0x39], cl ; ret
0x0000000000041986 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x00000000001401f9 : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x0000000000063b68 : ror byte ptr [rcx - 0x77], cl ; ret
0x0000000000131409 : ror byte ptr [rcx - 0x7d], 0xc7 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009f2b2 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000b6bcf : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000023c27 : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xfae9
0x00000000000ec386 : ror byte ptr [rcx - 0x7d], cl ; ret
0x00000000000a6cb1 : ror byte ptr [rcx - 0x7d], cl ; ret 0x8303
0x00000000000a7178 : ror byte ptr [rcx - 0x7d], cl ; ret 0x8304
0x00000000000a3e44 : ror byte ptr [rcx - 0x7d], cl ; ret 0x8305
0x00000000000a41e2 : ror byte ptr [rcx - 0x7d], cl ; ret 0x8306
0x00000000000bd530 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000d0490 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x000000000012169c : ror byte ptr [rcx], 0xd0 ; ret
0x000000000003ef22 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000017a95d : ror byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015e121 : ror byte ptr [rdi], 0x11 ; and al, 0x28 ; call rdx
0x00000000000f6d3c : ror byte ptr [rdi], 0x1f ; add byte ptr [rbx + rcx*4 + 0xc], al ; ret 0x8545
0x000000000011f800 : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x000000000010f0ac : ror byte ptr [rdi], 0x44 ; ret 0x8189
0x000000000011c02d : ror byte ptr [rdi], 0x45 ; ret 0xc084
0x00000000000d3b17 : ror byte ptr [rdi], 0x48 ; ret 0x8341
0x0000000000043995 : ror byte ptr [rdi], 0x48 ; ret 0xc35b
0x00000000001163d7 : ror byte ptr [rdi], 0x49 ; ret 0xfc3
0x000000000002d377 : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000011eafc : ror byte ptr [rdi], 0x84 ; jge 0x11eb08 ; add byte ptr [rax], al ; call rax
0x000000000007ed3d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000008740c : ror byte ptr [rdi], 0x84 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000e4bc9 : ror byte ptr [rdi], 0x84 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call rax
0x0000000000062683 : ror byte ptr [rdi], 0x84 ; mov edx, 0xf6000017 ; ret 0xf40
0x0000000000132a49 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000004c886 : ror byte ptr [rdi], 0x84 ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; ret
0x000000000008815c : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007dcd1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001651e8 : ror byte ptr [rdi], 0x84 ; push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000090ff6 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000140d3e : ror byte ptr [rdi], 0x84 ; ret 0
0x000000000006948f : ror byte ptr [rdi], 0x84 ; ret 0x11
0x00000000000c6a30 : ror byte ptr [rdi], 0x84 ; ret 0xb
0x0000000000024bd7 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x000000000004aaab : ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x0000000000031950 : ror byte ptr [rdi], 0x84 ; retf
0x00000000001098c2 : ror byte ptr [rdi], 0x84 ; retf 0
0x000000000003ad96 : ror byte ptr [rdi], 0x84 ; retf 0xffe7
0x0000000000059be2 : ror byte ptr [rdi], 0x84 ; retf 0xfff8
0x000000000002786c : ror byte ptr [rdi], 0x84 ; retf 0xfffc
0x00000000000e721f : ror byte ptr [rdi], 0x84 ; retf 2
0x000000000013be1e : ror byte ptr [rdi], 0x84 ; retf 4
0x00000000000593a0 : ror byte ptr [rdi], 0x84 ; sbb eax, dword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000000d9db4 : ror byte ptr [rdi], 0x84 ; xchg eax, ebp ; retf 0xffff
0x000000000017bb2a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000009476a : ror byte ptr [rdi], 0x85 ; inc dword ptr [rax + rax] ; add byte ptr [rax + 0x39], cl ; ret 0xf275
0x00000000000b5671 : ror byte ptr [rdi], 0x85 ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000d4d38 : ror byte ptr [rdi], 0x85 ; push -0x16000006 ; retf
0x00000000000517c1 : ror byte ptr [rdi], 0x85 ; ret
0x00000000000b1fb7 : ror byte ptr [rdi], 0x85 ; ret 0x13
0x00000000000a16bf : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x00000000000736b7 : ror byte ptr [rdi], 0x85 ; ret 1
0x0000000000021b36 : ror byte ptr [rdi], 0x85 ; retf
0x00000000001839df : ror byte ptr [rdi], 0x85 ; retf 0xfff5
0x00000000001837ff : ror byte ptr [rdi], 0x85 ; retf 0xfff6
0x000000000018a50d : ror byte ptr [rdi], 0x85 ; retf 1
0x000000000005ed3c : ror byte ptr [rdi], 0x85 ; retf 6
0x00000000000f797b : ror byte ptr [rdi], 0x88 ; retf 1
0x0000000000155d2a : ror byte ptr [rdi], 0x88 ; xlatb ; add byte ptr [rax], al ; add al, ch ; retf 0x38
0x000000000010820e : ror byte ptr [rdi], 0x89 ; ret
0x0000000000062428 : ror byte ptr [rdi], 0x8f ; ret
0x0000000000063219 : ror byte ptr [rdi], 0x8f ; ret 7
0x00000000000e5f6f : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000009d5f1 : ror byte ptr [rdi], 0x92 ; ret 0xf083
0x00000000000d3cc8 : ror byte ptr [rdi], 0x94 ; ret
0x00000000001047e6 : ror byte ptr [rdi], 0x94 ; ret 0x1589
0x0000000000111652 : ror byte ptr [rdi], 0x94 ; ret 0x2141
0x0000000000157e66 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000d1abb : ror byte ptr [rdi], 0x94 ; ret 0x5438
0x000000000006a441 : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x000000000018a14e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000008140b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000006d5b7 : ror byte ptr [rdi], 0x95 ; ret
0x0000000000111a63 : ror byte ptr [rdi], 0x95 ; ret 0x2141
0x000000000004fcad : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000019831e : ror byte ptr [rdi], 0xb6 ; fisttp dword ptr [rcx + 1] ; fmul dword ptr [rax + 0x11] ; ret 0xf48
0x00000000000e687d : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x000000000009a813 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x000000000007bd1b : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x0000000000103fdf : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000111dfa : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000bb605 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x00000000001bfb44 : ror byte ptr [rdi], 1 ; add dword ptr [rax], eax ; mov ah, 0xa5 ; out dx, al ; jmp rsp
0x000000000003cfe2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x3cfcc ; ret
0x00000000000fc8f1 : ror byte ptr [rdi], 1 ; test dl, ch ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0xc148
0x00000000000556ae : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x000000000009cdc7 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x841
0x00000000000fc021 : ror byte ptr [rdi], cl ; lahf ; ret 0xe183
0x00000000000ac1bd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000001047e1 : ror byte ptr [rdi], cl ; mov esi, 0xfc085c0 ; xchg eax, esp ; ret 0x1589
0x000000000005f06e : ror byte ptr [rdi], cl ; ret 0xf8c1
0x0000000000197d16 : ror byte ptr [rdi], cl ; test dword ptr [rbx], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x00000000000dc5aa : ror byte ptr [rdi], cl ; test edi, ebx ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000119561 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x233c
0x00000000000c89a4 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000009d5fa : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd084
0x00000000001d8208 : ror byte ptr [rdx + 1], 0 ; lahf ; hlt ; jmp qword ptr [rcx]
0x00000000001c310c : ror byte ptr [rdx + rax], 0xc4 ; jg 0x1c3114 ; call rsp
0x00000000001bfa84 : ror byte ptr [rdx], 1 ; add dword ptr [rax], eax ; je 0x1bfabe ; out dx, al ; jmp qword ptr [rax]
0x00000000001d4508 : ror byte ptr [rip - 0x74bffff], 0xf2 ; jmp qword ptr [rcx]
0x00000000001bf0e4 : ror dl, 1 ; add byte ptr [rax], al ; adc al, 0xa3 ; in al, dx ; call qword ptr [rbx + rcx*8]
0x000000000009ed9c : ror dl, 1 ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000000d3808 : ror dword ptr [r13 + 0xf49100c], 1 ; scasd eax, dword ptr [rdi] ; retf 0x8948
0x0000000000173587 : ror dword ptr [rax + 0x29], 1 ; retf 0x8148
0x000000000015c6a6 : ror dword ptr [rax + 0x39], 1 ; retf 0xbe75
0x00000000000e5ac1 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000f054e : ror dword ptr [rax + 0xf], 1 ; retf 0x3948
0x00000000000f29c5 : ror dword ptr [rax + 1], 0xca ; jmp 0xf295f
0x000000000018a271 : ror dword ptr [rax + 1], 0xf8 ; ret
0x000000000018a3ae : ror dword ptr [rax + 1], 0xf8 ; sub rax, r8 ; ret
0x000000000018a158 : ror dword ptr [rax + 1], 0xf8 ; sub rax, rsi ; ret
0x0000000000133010 : ror dword ptr [rax + 9], cl ; retf 0x8949
0x0000000000055475 : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000b1684 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0x8948
0x00000000000b17a9 : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf48
0x00000000000b196a : ror dword ptr [rax - 0x3f], 0xe1 ; and byte ptr [rax + 9], cl ; retf 0xf4c
0x0000000000198edb : ror dword ptr [rax - 0x3f], 0xe9 ; add ecx, dword ptr [rax + 0x39] ; retf 0x1f77
0x0000000000150a7d : ror dword ptr [rax - 0x3f], 0xea ; adc byte ptr [rax + 0x31], cl ; retf 0xb70f
0x00000000001997d4 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x00000000001451ee : ror dword ptr [rax - 0x73], 5 ; retf 0x6cf
0x000000000007d8e6 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x00000000000f34fc : ror dword ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x00000000000a80a5 : ror dword ptr [rax - 0x77], 0xa ; ret
0x0000000000196eb4 : ror dword ptr [rax - 0x77], 1 ; ret
0x0000000000067ee8 : ror dword ptr [rax - 0x77], 1 ; ret 0x2948
0x0000000000198649 : ror dword ptr [rax - 0x77], 1 ; ret 0x8949
0x000000000009af57 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000061770 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000130a85 : ror dword ptr [rax - 0x77], 1 ; retf 0x4374
0x000000000002c908 : ror dword ptr [rax - 0x77], 1 ; retf 0x8348
0x000000000008331d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x83317 ; ret
0x000000000008db5d : ror dword ptr [rax - 0x7b], 0xd2 ; jne 0x8db57 ; ret
0x00000000001963a2 : ror dword ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000052717 : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000f032c : ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x0000000000061269 : ror dword ptr [rax - 0x7d], 0xe8 ; add al, 0xe9 ; retf 0xfffb
0x00000000000fb7ba : ror dword ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000d9505 : ror dword ptr [rax - 0x7d], 1 ; ret 0xf601
0x00000000000e50ab : ror dword ptr [rax - 0x7d], 1 ; ror byte ptr [rax], 0x83 ; ret 0x4908
0x00000000000593c6 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000197705 : ror dword ptr [rbp + 0x39], cl ; retf 0x930f
0x00000000000d3809 : ror dword ptr [rbp + 0xf49100c], 1 ; scasd eax, dword ptr [rdi] ; retf 0x8948
0x000000000005443d : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x0000000000069cbf : ror dword ptr [rbp - 0x77], 1 ; retf
0x000000000014dd5e : ror dword ptr [rbx - 0x76b7fbb0], 1 ; or ecx, dword ptr [rdi] ; retf 0xd285
0x00000000000f4d8e : ror dword ptr [rcx + 0x21], 1 ; retf 0x894c
0x0000000000197baa : ror dword ptr [rcx + 0x39], 1 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret 0x5422
0x000000000014f905 : ror dword ptr [rcx + 0x4c0c244c], 0x89 ; ret 0x894c
0x000000000014dc2d : ror dword ptr [rcx + 0x63], 0x14 ; mov byte ptr [rcx + rax - 0x3e], cl ; jmp rdx
0x00000000000a845c : ror dword ptr [rcx + 0x63], 0xc ; mov dword ptr [rcx + rax - 0x37], ecx ; jmp rcx
0x000000000015185a : ror dword ptr [rcx + 0x700f66d2], 1 ; ret 0x4800
0x00000000000f4ce6 : ror dword ptr [rcx + 9], 1 ; retf
0x0000000000197b24 : ror dword ptr [rcx + 9], cl ; ret 0xc148
0x00000000000ff5ea : ror dword ptr [rcx - 0x73], 0x14 ; ret 0x1ceb
0x00000000000a3f85 : ror dword ptr [rcx - 0x73], 1 ; push rsp ; movups xmm0, xmmword ptr [rcx + 0xf] ; xchg eax, ebx ; ret 0x3949
0x000000000006112b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000193637 : ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000f8117 : ror dword ptr [rdi - 0x49f0fff5], 1 ; ret 0x8948
0x00000000000bd099 : ror dword ptr [rdi], 0x4f ; ret 0x66c3
0x0000000000052487 : ror dword ptr [rdi], 0x84 ; ret 0
0x00000000000cafa5 : ror dword ptr [rdi], 0x84 ; retf 0xfff8
0x0000000000190bb8 : ror dword ptr [rdi], 0x85 ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001912c4 : ror dword ptr [rdi], 0x85 ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191096 : ror dword ptr [rdi], 0x85 ; add eax, 0xc0310000 ; ret
0x00000000001921c0 : ror dword ptr [rdi], 0x85 ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000191016 : ror dword ptr [rdi], 0x85 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000191354 : ror dword ptr [rdi], 0x85 ; je 0x191364 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000190e4b : ror dword ptr [rdi], 0x85 ; jno 0x190e60 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000190f13 : ror dword ptr [rdi], 0x85 ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000eb2d0 : ror dword ptr [rdi], 0x85 ; ret
0x000000000005d82f : ror dword ptr [rdi], 0x85 ; retf 0xffe4
0x00000000001062cb : ror dword ptr [rdi], 0x85 ; retf 0xfffe
0x0000000000190b90 : ror dword ptr [rdi], 0x85 ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000140ec7 : ror dword ptr [rdi], 0x87 ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x00000000000c1431 : ror dword ptr [rdi], 0x8e ; clc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret 0x9848
0x00000000000c5867 : ror dword ptr [rdi], 0x8f ; retf
0x00000000000ac045 : ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000a639e : ror dword ptr [rdi], 1 ; xchg eax, ebx ; ret 0xd108
0x0000000000111ddc : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x00000000000a819b : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000004aeab : ror dword ptr [rdi], cl ; popfq ; ret 0x841
0x0000000000134d43 : ror eax, 8 ; ret
0x000000000008331c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x83318 ; ret
0x000000000008db5c : ror qword ptr [r8 - 0x7b], 0xd2 ; jne 0x8db58 ; ret
0x00000000001cd5cd : sahf ; add byte ptr [rax], al ; rcl cl, 0xec ; call rsi
0x000000000007e694 : sahf ; add byte ptr ss:[rax + 0x29], cl ; retf 0x8948
0x00000000001e421c : sahf ; add dword ptr [rax], eax ; add byte ptr [rcx + 3], dh ; add byte ptr [rax], al ; retf 5
0x00000000001db4c9 : sahf ; cmc ; call qword ptr [rdi]
0x00000000001d8181 : sahf ; hlt ; jmp qword ptr [rcx]
0x000000000000265a : sahf ; jl 0x25ee ; loop 0x263a ; ret 0x943d
0x0000000000002659 : sahf ; jl 0x25ef ; loop 0x263b ; ret 0x943d
0x000000000018bbce : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001af1d1 : sahf ; out dx, eax ; jmp rax
0x0000000000097062 : sahf ; push 0x35 ; add byte ptr [rax], al ; ret
0x0000000000102d92 : sahf ; ret
0x00000000000d8a5d : sahf ; ret 0x1fbd
0x00000000001aacc5 : sahf ; ret 0x38ae
0x0000000000053d31 : sahf ; ret 0x3948
0x000000000016315e : sahf ; ret 0x8349
0x000000000004198c : sahf ; ret 0x894c
0x00000000000d1b92 : sahf ; ret 0xe9c1
0x0000000000145026 : sahf ; ret 0xffed
0x000000000013a944 : sahf ; ret 7
0x00000000000f4726 : sahf ; retf
0x00000000000024c3 : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000bd094 : sal bh, 0xd8 ; cmp ecx, r8d ; cmovg eax, edx ; ret
0x000000000018f17e : sal bh, 0xd8 ; or eax, 1 ; vzeroupper ; ret
0x000000000007bd1e : sal bh, 0xd8 ; pop rbx ; ret
0x000000000007bceb : sal bh, 0xd8 ; ret
0x00000000000a9de7 : sal bh, 1 ; ret 0x8000
0x00000000000a9ca7 : sal bh, 1 ; ret 0xc000
0x00000000000a9b67 : sal bh, 1 ; ret 0xe000
0x00000000000a9a27 : sal bh, 1 ; ret 0xf000
0x00000000000a98e7 : sal bh, 1 ; ret 0xf800
0x00000000000a97a7 : sal bh, 1 ; ret 0xfc00
0x00000000000a9667 : sal bh, 1 ; ret 0xfe00
0x00000000000a9527 : sal bh, 1 ; ret 0xff00
0x00000000000a93e7 : sal bh, 1 ; ret 0xff80
0x00000000000a92a7 : sal bh, 1 ; ret 0xffc0
0x00000000000a9167 : sal bh, 1 ; ret 0xffe0
0x00000000000a9027 : sal bh, 1 ; ret 0xfff0
0x00000000000a8ee7 : sal bh, 1 ; ret 0xfff8
0x00000000000a8da7 : sal bh, 1 ; ret 0xfffc
0x00000000000a8c67 : sal bh, 1 ; ret 0xfffe
0x000000000014106e : sal bl, 0x48 ; stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x00000000000a83cc : sal bl, 0xc3 ; nop ; ret
0x000000000004fab1 : sal bl, 0xc3 ; nop dword ptr [rax] ; ret
0x00000000000d0bdf : sal bl, 1 ; ret
0x00000000001d5a95 : sal bl, cl ; jmp rsi
0x00000000001bd228 : sal byte ptr [rax], 1 ; sti ; jmp qword ptr [rax]
0x00000000001c2c2c : sal byte ptr [rax], 2 ; add byte ptr [rax], ah ; stc ; call qword ptr [rax]
0x00000000001166aa : sal byte ptr [rbp + 0x13], 0xb8 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000011660a : sal byte ptr [rbp + 0x13], 0xb8 ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011014a : sal byte ptr [rbp + 0x13], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000001108ca : sal byte ptr [rbp + 0x13], 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e48ea : sal byte ptr [rbp + 0x13], 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e499a : sal byte ptr [rbp + 0x13], 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011bb1a : sal byte ptr [rbp + 0x13], 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001228aa : sal byte ptr [rbp + 0x13], 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001227da : sal byte ptr [rbp + 0x13], 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000121e4a : sal byte ptr [rbp + 0x13], 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000016743e : sal byte ptr [rbp + 0x13], 1 ; add rsp, 0x38 ; ret
0x0000000000157fee : sal byte ptr [rbp + 0x13], 1 ; sub rsp, -0x80 ; pop rbx ; ret
0x0000000000121ee1 : sal byte ptr [rbp + 0x14], cl ; mov eax, 0x95 ; syscall
0x0000000000121c1d : sal byte ptr [rbp + 0x18], 0xb8 ; adc al, 1 ; add byte ptr [rax], al ; syscall
0x000000000010e6dd : sal byte ptr [rbp + 0x18], 0xb8 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000010e62d : sal byte ptr [rbp + 0x18], 0xb8 ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000121d7d : sal byte ptr [rbp + 0x18], 0xb8 ; adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001231ed : sal byte ptr [rbp + 0x18], 0xb8 ; and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000122d9d : sal byte ptr [rbp + 0x18], 0xb8 ; sub al, 0 ; add byte ptr [rax], al ; syscall
0x000000000012329d : sal byte ptr [rbp + 0x18], 0xb8 ; sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000012334d : sal byte ptr [rbp + 0x18], 0xb8 ; xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000158731 : sal byte ptr [rbp + 0x1b], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e5d4b : sal byte ptr [rbp + 0x2a], 0xb8 ; ja 0xe5d59 ; add byte ptr [rax], al ; syscall
0x0000000000116b7b : sal byte ptr [rbp + 0x2a], 0xb8 ; jb 0x116b89 ; add byte ptr [rax], al ; syscall
0x00000000000e0e5b : sal byte ptr [rbp + 0x2a], 0xb8 ; je 0xe0e69 ; add byte ptr [rax], al ; syscall
0x00000000000e5cab : sal byte ptr [rbp + 0x2a], 0xb8 ; jne 0xe5cb9 ; add byte ptr [rax], al ; syscall
0x0000000000116adb : sal byte ptr [rbp + 0x2a], 0xb8 ; jno 0x116ae9 ; add byte ptr [rax], al ; syscall
0x00000000000e5a1b : sal byte ptr [rbp + 0x2a], 0xb8 ; push 0 ; add byte ptr [rax], al ; syscall
0x000000000018e902 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x0000000000130f61 : sal byte ptr [rbp + 0x2c], 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x00000000001672ce : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x000000000010fea9 : sal byte ptr [rbp + 0x65], 0xb8 ; add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000352bb : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000019c699 : sal byte ptr [rbp + 0xc], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000015e371 : sal byte ptr [rbp + 0xc], cl ; mov eax, 1 ; ret
0x000000000007b5e0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000145bcb : sal byte ptr [rbp + 2], 0xf3 ; ret
0x00000000001480c9 : sal byte ptr [rbp + 4], 0xf3 ; ret
0x000000000014298a : sal byte ptr [rbp + 5], 1 ; add rsp, 0x18 ; ret
0x00000000000d14a7 : sal byte ptr [rbp + 5], 1 ; add rsp, 0x28 ; ret
0x0000000000117806 : sal byte ptr [rbp + 5], 1 ; add rsp, 0x58 ; ret
0x0000000000153d77 : sal byte ptr [rbp + 6], 0xf3 ; ret
0x000000000015e294 : sal byte ptr [rbp + 6], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001306a1 : sal byte ptr [rbp + 8], 1 ; nop ; mov eax, 0xca ; syscall
0x000000000008cea4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000014c4d8 : sal byte ptr [rbp + rax + 0x48], 0x89 ; out dx, eax ; call rax
0x000000000014e151 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000118a19 : sal byte ptr [rbp + rdx + 0x48], 0x39 ; ret
0x00000000000a8192 : sal byte ptr [rbp + rsi*2 + 0x44], 0x38 ; ret 0x4153
0x00000000001306b1 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000008ea8d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000001af3f8 : sal byte ptr [rbp - 0x10], 0xff ; sal byte ptr [rbp - 0x10], 1 ; jmp rax
0x00000000001af3fc : sal byte ptr [rbp - 0x10], 1 ; jmp rax
0x00000000000a8235 : sal byte ptr [rbp - 0x10], cl ; ret
0x00000000000bb0c0 : sal byte ptr [rbp - 0x13], cl ; lea rax, [rcx - 1] ; ret
0x0000000000083320 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000000a815a : sal byte ptr [rbp - 0x15], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000aa10b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000003cfe7 : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000108ca0 : sal byte ptr [rbp - 0x28], 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000117c69 : sal byte ptr [rbp - 0x2c], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000117e4a : sal byte ptr [rbp - 0x2d], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014075b : sal byte ptr [rbp - 0x2e], 1 ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000018a6cd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x00000000000bd262 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000018a6c5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x00000000000673e7 : sal byte ptr [rbp - 0x4a], 0x4c ; mov edi, ebp ; call 0x836d8
0x000000000018e19d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x000000000018e195 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000009d07a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000be71b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000008ff2c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000014ce80 : sal byte ptr [rbx + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000015976a : sal byte ptr [rbx + 0x48], 1 ; sub eax, -0x80 ; pop rbx ; ret
0x0000000000118d42 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000001596ba : sal byte ptr [rbx + rax + 0x5b], 1 ; ret
0x000000000010d249 : sal byte ptr [rbx + rbp*2 + 0x48], 0x89 ; ret
0x000000000014db22 : sal byte ptr [rbx + rcx + 0x31], 0xc0 ; ret
0x000000000012f234 : sal byte ptr [rbx + rcx + 0x39], cl ; ret 0xf7e
0x0000000000119381 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000001bd248 : sal byte ptr [rbx + rdi*8 - 1], 0x50 ; je 0x1bd251 ; jmp rax
0x00000000000a82c0 : sal byte ptr [rbx + rdx + 0x41], 0x39 ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebp ; ret 0x3941
0x000000000014e19e : sal byte ptr [rbx + rdx + 0xf], cl ; mov dh, 0x40 ; or dh, dh ; ret 0x8802
0x00000000001d06c0 : sal byte ptr [rbx - 0x11], 1 ; call qword ptr [rax]
0x00000000001c1834 : sal byte ptr [rcx + 0x7ae40001], 0xf6 ; call rsp
0x00000000001333cc : sal byte ptr [rcx + rbx + 0x4c], 0x89 ; retf 0x8949
0x000000000018a26c : sal byte ptr [rcx + rbx*8 + 0x48], cl ; movsxd rax, ecx ; add rax, rdi ; ret
0x0000000000147a19 : sal byte ptr [rcx + rcx + 0x48], 0x39 ; ret 0x850f
0x00000000000b16fc : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x00000000001bd460 : sal byte ptr [rcx - 5], 0xff ; push rax ; jno 0x1bd469 ; jmp rax
0x0000000000022c02 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x00000000001300e6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000113925 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; push qword ptr [rcx] ; shr al, 0xf ; ret
0x0000000000113873 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0xc3 ; ret
0x00000000001156d9 : sal byte ptr [rcx], cl ; idiv byte ptr [rax + 0x118] ; syscall
0x000000000010f614 : sal byte ptr [rcx], cl ; test byte ptr [rax - 0x77], 0xdf ; call rax
0x00000000000bd346 : sal byte ptr [rdi + rbp + 0x39], 1 ; ret 0x8b44
0x000000000014dcee : sal byte ptr [rdi + rdi + 0x48], 0x8b ; adc ecx, dword ptr [rdi] ; retf 0x1089
0x00000000001af228 : sal byte ptr [rdi - 0x470f0005], 1 ; sti ; call qword ptr [rax]
0x00000000000b18cb : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000159718 : sal byte ptr [rdx + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001c0a8c : sal byte ptr [rdx + 1], 0 ; adc al, 0x17 ; cmc ; call rsp
0x000000000010ba1c : sal byte ptr [rdx + rcx + 0x48], 0x83 ; ret
0x00000000000b1c43 : sal byte ptr [rdx + rdi - 0xa], cl ; ret 0x7501
0x00000000000b6443 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x00000000000ac1bb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000013000c : sal byte ptr [rdx - 0xf], 1 ; xor eax, eax ; ret
0x000000000015ffa7 : sal byte ptr [rsi + rax + 0x31], 0xc0 ; ret
0x0000000000153b3a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x153b58 ; call rax
0x000000000015a75a : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x15a778 ; call rax
0x000000000015aec3 : sal byte ptr [rsi + rax + 0x48], 0x8d ; jge 0x15aee1 ; call rax
0x0000000000155eae : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x155f24 ; call rax
0x000000000015693e : sal byte ptr [rsi + rax + 0x48], 0x8d ; jnp 0x1569a4 ; call rax
0x00000000001307a7 : sal byte ptr [rsi + rax + 0x48], cl ; mov edi, dword ptr [rdi + 8] ; jmp qword ptr [rax]
0x00000000001290d7 : sal byte ptr [rsi + rax*4 - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000159660 : sal byte ptr [rsi + rbp*4 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001290b1 : sal byte ptr [rsi + rcx + 0x48], 0x89 ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000001af424 : sal byte ptr [rsi - 0x10], 1 ; push rax ; jbe 0x1af422 ; call qword ptr [rax]
0x000000000009da51 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000145f65 : sal byte ptr [rsp + rcx - 0x75], 0x48 ; cmp byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000011f650 : sal byte ptr [rsp + rdi*2 + 0x48], 0x39 ; ret
0x00000000001238f1 : sal byte ptr [rsp + rdx + 0x48], 0x89 ; ret
0x00000000001c321c : sal cl, 0 ; add ah, al ; cwde ; cli ; jmp rsp
0x000000000012e7f2 : sal dh, 0x43 ; sbb al, 0x20 ; je 0x12e808 ; pop rbx ; ret
0x00000000001b1134 : sal dword ptr [rax - 0xc], 1 ; call rcx
0x000000000015dc64 : sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x00000000000bd242 : sal dword ptr [rbx + rdx + 0x48], 0x83 ; ret 0x8b04
0x000000000014106c : sal dword ptr [rcx], 0xc0 ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x00000000000a5ddf : sal dword ptr [rdx - 0x24], 0x48 ; mov edx, eax ; jmp 0xa5d76
0x00000000000a1f12 : sal dword ptr [rdx - 0x25], 0x48 ; mov edx, eax ; jmp 0xa1ea5
0x00000000000a24f2 : sal dword ptr [rdx - 0x25], 0x48 ; mov edx, eax ; jmp 0xa248b
0x0000000000152048 : sal dword ptr [rsi + 0x48], 0x63 ; ret 0x8b41
0x000000000019ae17 : sal dword ptr [rsi + rsi*2 + 0x48], 0x89 ; ret 0xc148
0x00000000000f9c39 : sal dword ptr [rsp + 0x4c], 0x89 ; retf
0x00000000000a8339 : sal dword ptr [rsp + rsi*8 + 0x39], 1 ; int1 ; je 0xa8338 ; ret
0x00000000001af979 : sal eax, 0xff ; mov ecx, 0x6fff0c1 ; ret 0xfff0
0x00000000001dbced : sal ebp, 1 ; jmp rsp
0x00000000000bb563 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000001180fe : sal ebx, 1 ; ret
0x00000000001404f5 : sal esi, cl ; ret
0x00000000001c240c : sar al, 1 ; add byte ptr [rsi + rdx*4 - 8], dl ; call qword ptr [rax]
0x0000000000054b30 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000086ace : sar bh, 1 ; dec dword ptr [rax + 0x29] ; ret
0x00000000001af2b1 : sar bl, 1 ; push qword ptr [rax - 0x2f] ; sti ; jmp rax
0x00000000001cf339 : sar bl, cl ; call qword ptr [rax]
0x00000000001415bf : sar byte ptr [rax + 0x14], cl ; mov rax, rdx ; movsxd rdx, esi ; ret
0x0000000000123842 : sar byte ptr [rax + 0x1d], cl ; syscall
0x00000000000e467f : sar byte ptr [rax + 0x3d], cl ; syscall
0x0000000000163372 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000916c7 : sar byte ptr [rax + 6], 0xf3 ; ret
0x00000000000877bc : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000121883 : sar byte ptr [rbx + rdx + 0x74], 1 ; ret
0x00000000001af0e8 : sar byte ptr [rbx - 0x437f0012], 0xee ; call qword ptr [rax]
0x000000000018a0fe : sar byte ptr [rcx], 0xc8 ; jle 0x18a140 ; movsxd rax, ecx ; ret
0x000000000003fb20 : sar byte ptr [rdx + 1], cl ; cmove eax, edx ; ret
0x0000000000044604 : sar byte ptr [rdx], 0 ; add rsp, 8 ; ret
0x000000000002cc86 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x0000000000002c35 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x000000000009be17 : sar byte ptr [rsi + 0x26], 0x85 ; fisttp dword ptr [rdi] ; xchg eax, esp ; ret
0x00000000000f0492 : sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xf04ad
0x00000000001bef14 : sar byte ptr [rsi + 0x56440000], 0xec ; call rsp
0x0000000000130b48 : sar byte ptr [rsi + 0x80], cl ; mov eax, r9d ; syscall
0x00000000001ab65f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001c2ec4 : sar byte ptr [rsi], 1 ; add al, byte ptr [rax] ; in al, 0x21 ; cli ; jmp qword ptr [rax]
0x00000000001bd008 : sar ch, 1 ; cli ; jmp qword ptr [rax]
0x00000000001c3701 : sar ch, 1 ; jmp qword ptr [rax]
0x000000000011115c : sar dh, 0xf0 ; dec dword ptr [rax - 0x77] ; ret
0x000000000009a022 : sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000011294e : sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x5174
0x00000000001bf824 : sar dh, 1 ; add byte ptr [rax], al ; je 0x1bf823 ; in eax, dx ; jmp rsp
0x000000000007768a : sar dl, 0xff ; dec dword ptr [rax + 1] ; ret
0x00000000001924f3 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x1924fe ; ret
0x00000000000eb2cc : sar dword ptr [rdi - 0x16], 0x39 ; ror dword ptr [rdi], 0x85 ; ret
0x000000000018ecd9 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x000000000003db88 : sar eax, 0x10 ; ret
0x000000000003e249 : sar eax, 0x1f ; not eax ; and eax, edx ; ret
0x0000000000162a74 : sar eax, 0x1f ; ret
0x000000000003db38 : sar eax, 0x1f ; sub ecx, edx ; not eax ; and eax, ecx ; ret
0x000000000003e58a : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000003de6d : sar eax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000003c39 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x000000000008458c : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000087336 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000084d89 : sar eax, 2 ; ret
0x0000000000134bfd : sar eax, 6 ; ret
0x00000000001c3711 : sar ebp, 1 ; call rsp
0x00000000001af2b5 : sar ebx, 1 ; jmp rax
0x00000000001ab3c3 : sar ecx, 1 ; jnp 0x1ab384 ; ret
0x00000000000438e4 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000438f7 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000084692 : sar edx, 2 ; sub eax, edx ; ret
0x0000000000142749 : sar edx, 4 ; add edx, 1 ; syscall
0x00000000000ac367 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000193143 : sar esi, 1 ; jg 0x193173 ; vzeroupper ; ret
0x00000000001932dc : sar esi, 1 ; jg 0x19330c ; vzeroupper ; ret
0x0000000000033d84 : sar esi, cl ; dec dword ptr [rcx - 0x77] ; ret 0x149
0x00000000001bcc39 : sar esp, 1 ; jmp rax
0x000000000008458b : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x000000000003e589 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x000000000003de6c : sar rax, 0x3f ; not eax ; and eax, edx ; ret
0x0000000000084d88 : sar rax, 2 ; ret
0x0000000000134bfc : sar rax, 6 ; ret
0x0000000000084691 : sar rdx, 2 ; sub eax, edx ; ret
0x0000000000142748 : sar rdx, 4 ; add edx, 1 ; syscall
0x00000000000ac366 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000005ed25 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x0000000000002735 : sbb ah, cl ; mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x00000000001e5cf4 : sbb al, 0 ; add byte ptr [rax], al ; retf 4
0x000000000010f488 : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001883fa : sbb al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000188353 : sbb al, 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x000000000005bdd5 : sbb al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001d24f4 : sbb al, 0x13 ; int1 ; call rsp
0x000000000012e7f5 : sbb al, 0x20 ; je 0x12e805 ; pop rbx ; ret
0x000000000012e7f4 : sbb al, 0x20 ; je 0x12e806 ; pop rbx ; ret
0x00000000001d5964 : sbb al, 0x22 ; add dword ptr [rax], eax ; cmp ah, al ; jmp qword ptr [rcx]
0x00000000000622ed : sbb al, 0x29 ; ret 0xe683
0x00000000001d2b14 : sbb al, 0x31 ; int1 ; jmp qword ptr [rcx]
0x00000000001d7164 : sbb al, 0x3a ; add dword ptr [rax], eax ; hlt ; jmp qword ptr [rcx]
0x0000000000001f48 : sbb al, 0x3a ; jrcxz 0x1fc9 ; retf 0x6321
0x00000000001587f1 : sbb al, 0x41 ; call qword ptr [rdx]
0x0000000000003070 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00000000001da144 : sbb al, 0x62 ; cmc ; jmp qword ptr [rbx]
0x00000000001d9e64 : sbb al, 0x67 ; add dword ptr [rax], eax ; sub byte ptr [rbx - 0xb], al ; jmp rdi
0x00000000001da064 : sbb al, 0x69 ; add dword ptr [rax], eax ; call 0x241d95d4
0x00000000000f1e6d : sbb al, 0x74 ; sub byte ptr [rax - 0x80], al ; call qword ptr [rsi]
0x0000000000062426 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret
0x0000000000063217 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x00000000001ac6c2 : sbb al, 0x8c ; retf
0x00000000001db314 : sbb al, 0x99 ; cmc ; call qword ptr [rdi]
0x00000000001d8414 : sbb al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x0000000000003baf : sbb al, 0xb ; push rbp ; jg 0x3c24 ; xchg eax, ebp ; retf 0x10bf
0x00000000000edc43 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000155f44 : sbb al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000001db994 : sbb al, 0xbc ; cmc ; jmp qword ptr [rdx]
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x00000000001d5954 : sbb al, 0xc4 ; jmp qword ptr [rcx]
0x0000000000002def : sbb al, 0xec ; clc ; ret
0x000000000014f678 : sbb al, 0xed ; inc dword ptr [rbx - 0x76b79c03] ; ret
0x00000000001c0681 : sbb al, 0xf3 ; call rsp
0x00000000001c0b31 : sbb al, 0xf5 ; call rax
0x00000000001d9c8d : sbb al, 0xf5 ; call rdx
0x00000000001deffd : sbb al, 0xf7 ; call qword ptr [rsi]
0x00000000001bcf35 : sbb al, 0xfb ; call qword ptr [rax]
0x00000000001bcfd9 : sbb al, 0xfb ; jmp rax
0x00000000001d5375 : sbb al, 1 ; add al, bh ; stosb byte ptr [rdi], al ; jmp qword ptr [rsi]
0x00000000001c3585 : sbb al, 1 ; add byte ptr [rax + rbx*2 - 3], ah ; jmp rax
0x00000000000bede6 : sbb al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000068c00 : sbb al, 2 ; add byte ptr [rax], al ; add rax, rdi ; jmp rax
0x00000000001d62b4 : sbb al, 3 ; hlt ; jmp qword ptr [rcx]
0x0000000000041fe2 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000001ce304 : sbb al, 8 ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001e65f0 : sbb al, 9 ; add byte ptr [rax], al ; retf
0x00000000001cee58 : sbb al, bl ; cld ; call qword ptr [rax]
0x000000000005f806 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000006eb0 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3f
0x000000000011bb1e : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001885da : sbb al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000363e3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000140f0f : sbb al, byte ptr [rbp - 0x78] ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4c02
0x0000000000145415 : sbb al, byte ptr [rdi] ; add al, ch ; ret
0x000000000014547d : sbb al, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000001885d9 : sbb al, byte ptr fs:[rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000f47ce : sbb al, ch ; in al, dx ; retf 0xfff2
0x0000000000104723 : sbb al, ch ; lahf ; retf
0x000000000003d783 : sbb al, ch ; out 0x25, eax ; or eax, 0x89c08500 ; ret
0x000000000003a578 : sbb al, ch ; ret 0xffaf
0x0000000000038947 : sbb al, ch ; retf
0x00000000001e1e60 : sbb bh, ah ; add dword ptr [rax], eax ; or al, 0x8f ; sti ; jmp qword ptr [rdx]
0x00000000001e2655 : sbb bh, al ; jmp qword ptr [rcx]
0x00000000001bcf31 : sbb bh, bl ; call qword ptr [rax]
0x00000000001bcf51 : sbb bh, bl ; jmp rax
0x00000000000edbc7 : sbb bh, byte ptr [rax + 2] ; ret
0x00000000001bcf4d : sbb bl, bh ; inc dword ptr [rax] ; sbb bh, bl ; jmp rax
0x00000000001bcf2d : sbb bl, bh ; push qword ptr [rax] ; sbb bh, bl ; call qword ptr [rax]
0x00000000001ab452 : sbb bl, byte ptr [rip + 0x30565c9] ; in eax, dx ; retf
0x00000000001aa145 : sbb bl, byte ptr [rsi] ; ret
0x000000000012bdaa : sbb byte ptr [r11 + r9*4 + 0x46], r8b ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000015dfbf : sbb byte ptr [r14 + 0xd], r14b ; add dword ptr [rdi + 0x28], esi ; ret
0x000000000003d20c : sbb byte ptr [r15], r9b ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000001663af : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000015dbc1 : sbb byte ptr [r8 + 1], r15b ; ret
0x0000000000129903 : sbb byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000000e1402 : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000002f0f3 : sbb byte ptr [r8], al ; ret
0x00000000000baba4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000babc6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bac04 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000defa1 : sbb byte ptr [r9], dil ; or al, 0x7c ; ret 0x850f
0x000000000010ff3c : sbb byte ptr [rax + 0x101], bh ; syscall
0x0000000000121d7f : sbb byte ptr [rax + 0x113], bh ; syscall
0x0000000000121c1f : sbb byte ptr [rax + 0x114], bh ; syscall
0x000000000011579f : sbb byte ptr [rax + 0x115], bh ; syscall
0x0000000000121ccf : sbb byte ptr [rax + 0x116], bh ; syscall
0x000000000010e62f : sbb byte ptr [rax + 0x11], bh ; syscall
0x000000000011584f : sbb byte ptr [rax + 0x11d], bh ; syscall
0x00000000001231ef : sbb byte ptr [rax + 0x120], bh ; syscall
0x000000000010e6df : sbb byte ptr [rax + 0x12], bh ; syscall
0x000000000012329f : sbb byte ptr [rax + 0x12b], bh ; syscall
0x000000000012334f : sbb byte ptr [rax + 0x133], bh ; syscall
0x0000000000116fef : sbb byte ptr [rax + 0x17], bh ; syscall
0x0000000000122d9f : sbb byte ptr [rax + 0x2c], bh ; syscall
0x0000000000122acf : sbb byte ptr [rax + 0x2d], bh ; syscall
0x0000000000090831 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000005950e : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000012bdaf : sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x0000000000092f2d : sbb byte ptr [rax + 0x39], cl ; retf 0x850f
0x000000000012bdae : sbb byte ptr [rax + 0x39], r9b ; retf 0x840f
0x00000000001234ef : sbb byte ptr [rax + 0x45], bh ; syscall
0x000000000012359f : sbb byte ptr [rax + 0x46], bh ; syscall
0x00000000001663b0 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000117937 : sbb byte ptr [rax + 0x65], bh ; syscall
0x0000000000121b6f : sbb byte ptr [rax + 0xe8], bh ; syscall
0x000000000009d33c : sbb byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000015dbc2 : sbb byte ptr [rax + 1], bh ; ret
0x00000000000a8484 : sbb byte ptr [rax + 1], cl ; clc ; mov qword ptr [rdi], rdx ; ret
0x000000000006b1fe : sbb byte ptr [rax + 1], cl ; ret 0x14c
0x000000000012e710 : sbb byte ptr [rax + 1], cl ; ret 0x8948
0x000000000012e70f : sbb byte ptr [rax + 1], r9b ; ret 0x8948
0x00000000001ce360 : sbb byte ptr [rax + rax - 0x12f79400], ch ; call qword ptr [rax]
0x0000000000065bac : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000014defb : sbb byte ptr [rax - 0x73], cl ; and byte ptr [rdi], cl ; retf 0x5089
0x000000000008482f : sbb byte ptr [rax - 0x75], cl ; adc byte ptr [rax + 0x39], cl ; retf 0xffb8
0x00000000001672d7 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x0000000000150adb : sbb byte ptr [rax - 0x76b704a9], cl ; retf 0xc148
0x00000000000e6d84 : sbb byte ptr [rax - 0x76b7fffd], cl ; ret 0x6ae9
0x00000000000941b0 : sbb byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x00000000001331ef : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000129904 : sbb byte ptr [rax - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x0000000000080c4a : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000014c29b : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x00000000000be040 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000008dda1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009187b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000012a928 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000119f73 : sbb byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000014e6b2 : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000475f9 : sbb byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000085dee : sbb byte ptr [rax - 0x77], cl ; retf
0x0000000000090ff3 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000d9574 : sbb byte ptr [rax - 0x7bf0f706], al ; retf 0xffd4
0x000000000011f675 : sbb byte ptr [rax - 0x7d], cl ; call 0xffffffffc34b3e85
0x00000000000e1403 : sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000091343 : sbb byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x21] ; ret 0x8948
0x000000000007111b : sbb byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000071146 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000009a90 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x00000000001e18e8 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; loope 0x1e18f9 ; add byte ptr [rax], dh ; retf
0x0000000000103e51 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001c4ff5 : sbb byte ptr [rax], al ; add byte ptr [rax], bh ; fsubr st(6), st(0) ; call qword ptr [rsi]
0x000000000017a05e : sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000039a2a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x00000000001c5009 : sbb byte ptr [rax], al ; add byte ptr [rsp + rbx*8 - 0x1a], al ; jmp rdx
0x000000000002f0f4 : sbb byte ptr [rax], al ; ret
0x0000000000089376 : sbb byte ptr [rax], al ; setne al ; ret
0x00000000000024c4 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000baba5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000babc7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000bac05 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000007b4a8 : sbb byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000071145 : sbb byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001d8c60 : sbb byte ptr [rbp + 1], dl ; add ah, cl ; mov bh, 0xf4 ; jmp rax
0x000000000014d1ca : sbb byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x40 ; call qword ptr [rax]
0x000000000014ead8 : sbb byte ptr [rbp + rcx*4 + 0x64], cl ; and al, 0x10 ; call qword ptr [rax]
0x0000000000145bc9 : sbb byte ptr [rbp - 0xcfd8a40], al ; ret
0x00000000000bd895 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000010fa25 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000097278 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x00000000000889e8 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000058e39 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000044697 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000012bdab : sbb byte ptr [rbx + rcx*4 + 0x46], al ; sbb byte ptr [rax + 0x39], cl ; retf 0x840f
0x000000000008fb47 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000015078b : sbb byte ptr [rbx - 0x76bbf716], al ; retf
0x00000000001bcec0 : sbb byte ptr [rbx], dl ; sti ; jmp rax
0x00000000001995ce : sbb byte ptr [rcx + 0x21], cl ; ret
0x00000000001505ea : sbb byte ptr [rcx + 0x31], cl ; retf 0x314d
0x00000000000843aa : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000002c4b2 : sbb byte ptr [rcx + 1], cl ; fadd qword ptr [rax - 0x7bf0ffc2] ; retf
0x0000000000090f0e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000001dab60 : sbb byte ptr [rcx + rax], dh ; cmp al, 0x83 ; cmc ; call qword ptr [rbx]
0x000000000012a046 : sbb byte ptr [rcx + rcx*4 - 0x12], cl ; xor r15d, r15d ; call rax
0x0000000000086c5e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000089af7 : sbb byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be2b8 : sbb byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbp ; call rbx
0x00000000000d3759 : sbb byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000000e086e : sbb byte ptr [rcx - 0x77], al ; pop rsp ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000028738 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000012bf42 : sbb byte ptr [rcx - 0x77], al ; retf 0x8341
0x0000000000047a3b : sbb byte ptr [rcx - 0x77], cl ; ret
0x000000000006efb6 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000155f1b : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rdi + 8], eax ; ret
0x000000000003eeb0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000115689 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001d5045 : sbb byte ptr [rcx], al ; add byte ptr [rax], bh ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rdx]
0x00000000000defa2 : sbb byte ptr [rcx], bh ; or al, 0x7c ; ret 0x850f
0x00000000000ecf9b : sbb byte ptr [rcx], bh ; ret 0x850f
0x000000000004fa8c : sbb byte ptr [rcx], cl ; retf 0xbe0f
0x00000000000f71d8 : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000096c83 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000012e73b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000012a157 : sbb byte ptr [rdi + 0x2000004], bh ; call rcx
0x000000000017999d : sbb byte ptr [rdi], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001cf3b0 : sbb byte ptr [rdi], 0xee ; jmp rdx
0x000000000007bce8 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000014dda1 : sbb byte ptr [rdi], cl ; retf 0x5389
0x0000000000033363 : sbb byte ptr [rdi], cl ; retf 0xd289
0x000000000003d20d : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000f92c2 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8548
0x00000000000f8e13 : sbb byte ptr [rdi], cl ; xchg eax, esp ; ret 0x854d
0x00000000001c8e38 : sbb byte ptr [rdx - 0x15], ah ; call qword ptr [rax]
0x000000000000209f : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000001cd960 : sbb byte ptr [rdx - 0x32240000], ah ; cld ; call qword ptr [rdx]
0x00000000001dff58 : sbb byte ptr [rdx - 9], ch ; call rax
0x000000000015dfc0 : sbb byte ptr [rsi + 0xd], dh ; add dword ptr [rdi + 0x28], esi ; ret
0x00000000001245f2 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000001245f1 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000131ba1 : sbb byte ptr [rsi], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000131ba0 : sbb byte ptr [rsi], r8b ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000000ecf98 : sbb cl, al ; clc ; sbb byte ptr [rcx], bh ; ret 0x850f
0x000000000009543d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x00000000000d11ea : sbb cl, byte ptr [rax + 1] ; retf 0x8948
0x000000000005553f : sbb cl, byte ptr [rax - 0x39] ; ret 0xffff
0x000000000014dd05 : sbb cl, byte ptr [rax - 0x75] ; push rbx ; adc byte ptr [rdi], cl ; retf 0x5089
0x00000000000d59a5 : sbb cl, byte ptr [rax - 0x77] ; retf 0x8348
0x000000000010fa8c : sbb cl, byte ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000108c35 : sbb cl, byte ptr [rax - 0x7d] ; ret
0x000000000002bebd : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x00000000000b742f : sbb cl, byte ptr [rdi] ; test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000001852cd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018743d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184ebd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000001849c9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001851d9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018bf6a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000018b78a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000018bb7a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b39a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187f9d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018777d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000184c4d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000186f5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x0000000000184f8d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x00000000001852a9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b539 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185379 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187abd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018729d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000186a7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000187c5d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000018512d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018491d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000184d1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x000000000018ba2a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b24a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018c35a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001851fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001849ed : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x0000000000186dbd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184a8f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184ded : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x0000000000186ef3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187bf3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187713 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b92b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018c25b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018505d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000187f33 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187233 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000186d53 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187a53 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000018ba7b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018b29b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184ab3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001bdc5c : sbb dh, 0xfc ; call rax
0x00000000001d10bd : sbb dh, al ; jmp qword ptr [rcx]
0x00000000001c0af1 : sbb dh, ch ; call qword ptr [rax]
0x00000000001c1329 : sbb dh, dh ; call rsp
0x000000000012ace2 : sbb dh, dh ; ret 0x7508
0x00000000000035d6 : sbb dl, 0xcd ; retf
0x00000000001d0160 : sbb dl, cl ; add byte ptr [rax], al ; in al, dx ; in eax, 0xee ; call qword ptr [rax]
0x00000000001c0271 : sbb dl, dh ; jmp qword ptr [rax]
0x00000000001886f8 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000edc03 : sbb dword ptr [rax + 1], edi ; ret
0x000000000004c47b : sbb dword ptr [rax - 0x39], ecx ; ret 0xffff
0x000000000009a7c6 : sbb dword ptr [rax - 0x73], ecx ; clc ; ret
0x00000000001627b4 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x00000000000662b9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000188681 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001886f9 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000000e608 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001223f4 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000af55e : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000021c95 : sbb dword ptr [rax], eax ; ret
0x00000000000228b9 : sbb dword ptr [rax], eax ; xor edi, edi ; mov rdx, r14 ; call 0x9eb69
0x00000000000213b2 : sbb dword ptr [rax], eax ; xor edi, edi ; xor eax, eax ; call 0x7ddd8
0x0000000000144220 : sbb dword ptr [rbp + 0xf], eax ; mov dh, 0x78 ; or byte ptr [rcx - 0x80], al ; jmp qword ptr [rax]
0x000000000017480b : sbb dword ptr [rbx + 0x27], ebp ; add byte ptr [rax + 0x39], cl ; retf 0x830f
0x00000000000bbffe : sbb dword ptr [rbx + 0xc7402f8], eax ; xor eax, eax ; ret
0x000000000010113a : sbb dword ptr [rbx - 0x1f3efe20], eax ; add al, 0x89 ; ret 0xb60f
0x000000000006851d : sbb dword ptr [rbx - 0x51f43], eax ; call qword ptr [rax]
0x000000000005cad1 : sbb dword ptr [rbx - 0x52f43], eax ; call qword ptr [rax]
0x00000000001ac9fd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000c8e1f : sbb dword ptr [rcx + rdi + 0x45], ecx ; test al, 0x76 ; retf 0x8d4c
0x0000000000143166 : sbb dword ptr [rcx - 0x7d], eax ; ret 0x4101
0x00000000001d50d5 : sbb dword ptr [rcx], eax ; add al, bl ; movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rcx]
0x0000000000121997 : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000001d5121 : sbb dword ptr [rcx], eax ; add byte ptr [rbp - 0xd], ch ; jmp qword ptr [rcx]
0x00000000000d12f5 : sbb dword ptr [rdi + 0x18], edi ; mov rax, rbx ; pop rbx ; ret
0x00000000001454a9 : sbb dword ptr [rdi], eax ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x00000000000b8b5e : sbb dword ptr [rdi], ecx ; test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x00000000000be363 : sbb dword ptr [rdx + 0x39480032], esp ; ret
0x0000000000001ccb : sbb dword ptr [rdx + 0x55], esp ; je 0x1cfd ; ret
0x0000000000061bc1 : sbb dword ptr [rsi + 0xf], esp ; outsd dx, dword ptr [rsi] ; retf
0x00000000000e669e : sbb dword ptr [rsp + rsi*2 + 0x2e], edx ; mov eax, 0x7f ; ret
0x0000000000182f3c : sbb eax, -1 ; ret
0x000000000019a730 : sbb eax, 0x25314b ; jne 0x19a720 ; pop rbx ; ret
0x0000000000158859 : sbb eax, 0x28c48348 ; pop rbx ; pop rbp ; ret
0x00000000001240a1 : sbb eax, 0x2c72ba ; pop rbx ; ret
0x00000000001ab453 : sbb eax, 0x30565c9 ; in eax, dx ; retf
0x000000000011c5ce : sbb eax, 0x415d002d ; pop rsp ; ret
0x0000000000114f6b : sbb eax, 0x48000001 ; mov edx, esi ; xor esi, esi ; syscall
0x00000000000b74b9 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x00000000000b8c1d : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x000000000009d037 : sbb eax, 0x5c415d5b ; ret
0x000000000012182d : sbb eax, 0x78c48348 ; ret
0x00000000000292af : sbb eax, 0x89000071 ; retf 0xe283
0x00000000000dc748 : sbb eax, 0x89480000 ; ret 0xc031
0x0000000000179bde : sbb eax, 0x894d0000 ; retf
0x0000000000160b0f : sbb eax, 0x8b000002 ; or byte ptr [r9], dil ; ret 0x5675
0x0000000000002ec1 : sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x000000000011bf09 : sbb eax, 0x9f0f30ff ; ret 0x8545
0x00000000001d54d5 : sbb eax, 0xaee80001 ; call rdi
0x00000000000818d7 : sbb eax, 0xc2890000 ; jmp 0x81871
0x0000000000002d5e : sbb eax, 0xe9a3d0b9 ; rcl byte ptr [rbx - 0x7a], 1 ; retf 0xd04f
0x0000000000033278 : sbb eax, 0xfc80f00 ; retf 0xc089
0x00000000000593a3 : sbb eax, dword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000000dc5ae : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000593a4 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000001884a1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000188519 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000011bbe1 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000af30e : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000003715a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000003657c : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe07], al ; retf 0x1b
0x00000000000e467c : sbb eax, dword ptr [rbp + 0x31] ; sar byte ptr [rax + 0x3d], cl ; syscall
0x0000000000195584 : sbb eax, dword ptr [rbx - 0x7bf0ff07] ; retf 0
0x00000000001d52d9 : sbb eax, dword ptr [rcx] ; add ah, dl ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001d52ed : sbb eax, dword ptr [rcx] ; add al, dh ; test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001d5289 : sbb eax, dword ptr [rcx] ; add byte ptr [rax + rbp*4], dh ; jmp qword ptr [rcx]
0x00000000001d529d : sbb eax, dword ptr [rcx] ; add byte ptr [rax - 0x58], dl ; jmp qword ptr [rcx]
0x00000000001225a1 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001c3475 : sbb eax, dword ptr [rcx] ; add byte ptr [rcx + rdx - 3], dh ; jmp rax
0x00000000001bfd55 : sbb eax, dword ptr [rcx] ; add byte ptr [rsp + rbx*8 - 0x11], dl ; call rax
0x00000000000efede : sbb eax, eax ; and eax, 2 ; add eax, 8 ; ret
0x0000000000052bfa : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000018acf7 : sbb eax, eax ; or eax, 1 ; ret
0x0000000000140698 : sbb eax, eax ; ret
0x0000000000195045 : sbb eax, eax ; sbb eax, -1 ; ret
0x00000000001be491 : sbb ebp, eax ; call qword ptr [rax]
0x00000000001be479 : sbb ebp, eax ; call rsp
0x00000000001ac568 : sbb ebp, ebx ; retf
0x00000000001c0ae1 : sbb ebp, esi ; jmp rax
0x00000000001bcfb1 : sbb ebx, edi ; jmp qword ptr [rax]
0x00000000001bcfd1 : sbb ebx, edi ; jmp rax
0x000000000005551a : sbb ecx, dword ptr [rax - 0x39] ; ret
0x00000000001506c0 : sbb ecx, dword ptr [rax - 0x77] ; retf
0x000000000014ce85 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a0149 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x0000000000024e6e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x00000000000332bd : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000003947 : sbb ecx, dword ptr [rdi - 0x7229c81] ; mov gs, word ptr [rbx] ; retf 0x707d
0x00000000000a6da5 : sbb ecx, dword ptr [rdi] ; mov dh, 0x55 ; ret 0x8842
0x00000000000fee56 : sbb ecx, dword ptr [rdi] ; mov dh, 0x56 ; cmp dh, dh ; ret 0x7408
0x00000000000bd497 : sbb ecx, dword ptr [rip - 0xc3d8c00] ; ret
0x00000000000d3676 : sbb ecx, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0x894d
0x00000000000609a9 : sbb edi, dword ptr [rbx + 0x38] ; add byte ptr [rax + 0x29], cl ; retf 0x8b48
0x00000000001ac2f9 : sbb edi, ebp ; retf
0x00000000001bcfb5 : sbb edi, ebx ; jmp qword ptr [rax]
0x00000000001bcf55 : sbb edi, ebx ; jmp rax
0x000000000018a1e1 : sbb edx, dword ptr [rdi + 2] ; add byte ptr [rax - 0x77], cl ; dec byte ptr [rax + 0x63] ; ret 0x8348
0x00000000000bd211 : sbb esi, dword ptr [rcx + rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000014343a : sbb esi, dword ptr [rcx] ; ror byte ptr [rbp - 0x77], cl ; ret
0x0000000000002657 : sbb esi, dword ptr [rdx] ; sahf ; jl 0x25f1 ; loop 0x263d ; ret 0x943d
0x00000000001d10f5 : sbb esi, eax ; jmp rsi
0x00000000001c1351 : sbb esi, esi ; call rax
0x00000000001c1371 : sbb esi, esi ; jmp qword ptr [rax]
0x00000000001c1359 : sbb esi, esi ; jmp rsp
0x00000000001c0af0 : sbb r14b, bpl ; call qword ptr [rax]
0x00000000001e2654 : sbb r15b, al ; jmp qword ptr [rcx]
0x0000000000182f3b : sbb rax, -1 ; ret
0x000000000018cebf : scasb al, byte ptr [rdi] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018cbbf : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018dabf : scasb al, byte ptr [rdi] ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000186422 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018ddbf : scasb al, byte ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018bfbe : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x00000000001d54d9 : scasb al, byte ptr [rdi] ; call rdi
0x00000000001af395 : scasb al, byte ptr [rdi] ; cld ; call rax
0x000000000012d6ce : scasb al, byte ptr [rdi] ; enter -1, 9 ; ret
0x00000000001c0961 : scasb al, byte ptr [rdi] ; hlt ; jmp qword ptr [rax]
0x0000000000159662 : scasb al, byte ptr [rdi] ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000018d4bf : scasb al, byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001ac9a9 : scasb al, byte ptr [rdi] ; or dh, byte ptr [rbp + 0x23] ; retf 0x32dd
0x000000000018d1bf : scasb al, byte ptr [rdi] ; or eax, 0x894d0000 ; retf
0x0000000000154dae : scasb al, byte ptr [rdi] ; ret
0x0000000000001d54 : scasb al, byte ptr [rdi] ; retf 0x9226
0x0000000000133bde : scasb al, byte ptr [rdi] ; retf 0xffff
0x00000000001af209 : scasb al, byte ptr [rdi] ; sti ; push rax ; scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rax]
0x0000000000119b6e : scasb al, byte ptr [rdi] ; sub eax, 0xf70c7400 ; ret 0xfc07
0x000000000000306e : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000018c0bd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000009d3c0 : scasd eax, dword ptr [rdi] ; add byte ptr [r8 - 0x77], r9b ; retf 0x95e8
0x000000000009687f : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000001bcbf1 : scasd eax, dword ptr [rdi] ; cld ; jmp rax
0x00000000001c1099 : scasd eax, dword ptr [rdi] ; cmc ; jmp rax
0x000000000008ce8e : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000009ecdd : scasd eax, dword ptr [rdi] ; pop rdx ; or eax, 0x450f4800 ; ret 0xc3f3
0x0000000000042399 : scasd eax, dword ptr [rdi] ; ret
0x00000000000409ce : scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000085ed6 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000090f09 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000001956e3 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x000000000003d20f : scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000bbd83 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000000d380f : scasd eax, dword ptr [rdi] ; retf 0x8948
0x00000000001af20d : scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rax]
0x0000000000002c83 : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6f085 ; ret
0x00000000001ab6d4 : scasd eax, dword ptr [rdi] ; xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x0000000000002624 : scasd eax, dword ptr [rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x00000000001aa94f : scasd eax, dword ptr [rdi] ; xlatb ; out 0xb3, al ; retf 0xe80
0x0000000000124525 : seta al ; movzx eax, al ; neg eax ; ret
0x0000000000111df8 : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x000000000010ea15 : seta al ; pop rbx ; ret
0x00000000001300ec : setae al ; ret
0x00000000000dedd8 : setbe al ; movzx eax, al ; pop rbx ; ret
0x0000000000125180 : setbe al ; ret
0x00000000000d5f2b : sete al ; add eax, 0x16d ; ret
0x0000000000101ae4 : sete al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000014b108 : sete al ; add rsp, 8 ; ret
0x000000000015c633 : sete al ; movzx eax, al ; ret
0x00000000000306d5 : sete al ; ret
0x000000000003ebea : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000000efea2 : setne al ; add eax, eax ; ret
0x000000000007bd19 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000103fdd : setne al ; movzx eax, al ; neg eax ; ret
0x000000000011cef2 : setne al ; movzx eax, al ; pop rbx ; ret
0x000000000003f978 : setne al ; movzx eax, al ; ret
0x000000000008486c : setne al ; neg eax ; ret
0x0000000000089378 : setne al ; ret
0x00000000000a8425 : setne bh ; test r9b, dil ; jne 0xa8411 ; ret
0x00000000000a82ce : setne cl ; test r10b, r9b ; jne 0xa82b9 ; ret
0x00000000001bfb45 : sgdt [rax] ; mov ah, 0xa5 ; out dx, al ; jmp rsp
0x00000000001af2dc : shl ah, 0xef ; call rax
0x000000000000ba38 : shl al, 1 ; or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 1
0x00000000001d5ba0 : shl bh, 0xf3 ; jmp rax
0x00000000001c641d : shl bh, 1 ; jmp rsi
0x00000000001c64fd : shl bh, cl ; call qword ptr [rcx]
0x00000000001bdc6c : shl bl, 0xfc ; call qword ptr [rax]
0x0000000000001ba0 : shl byte ptr [rax + 0x38f8d191], 1 ; pop rdx ; ret
0x000000000018aa74 : shl byte ptr [rax + 0x48], 1 ; clc ; ret
0x000000000018a66b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000018a62b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x00000000001b0724 : shl byte ptr [rbp - 0xd], 1 ; push qword ptr [rsi + 0x65] ; call rax
0x0000000000002d60 : shl byte ptr [rbx - 0x79ac2f17], 1 ; retf 0xd04f
0x000000000017975d : shl byte ptr [rcx], 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001c08cc : shl byte ptr [rdi + 1], 0 ; in al, 0x60 ; hlt ; call rsp
0x00000000001e2f20 : shl byte ptr [rdi], 1 ; sti ; call rax
0x00000000001c2a1c : shl byte ptr [rdx], 1 ; add al, byte ptr [rax] ; popfq ; stc ; jmp qword ptr [rax]
0x000000000005eb2c : shl byte ptr [rip + 0x2948fffc], 1 ; ret
0x000000000011bd7a : shl byte ptr [rip + 0x5d5b002d], cl ; pop r12 ; ret
0x00000000000bafdf : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x000000000003df37 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x00000000000a8a5b : shl byte ptr [rsi + 0xf], 0x74 ; shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x0000000000193633 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000b10f5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000019154b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000191562 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000000b1496 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b14a7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000000ac008 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000191441 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000011c14a : shl byte ptr [rsi + 0xf], cl ; retf 0x67a
0x00000000000c826d : shl byte ptr [rsi - 0x70], 1 ; retf 0xc083
0x0000000000141027 : shl byte ptr [rsi - 0x77], cl ; push rsp ; add esi, edi ; mov eax, r8d ; ret
0x00000000001970f1 : shl byte ptr [rsi - 0x7f], cl ; ret 0x7fff
0x00000000001bf5d4 : shl ch, 1 ; add byte ptr [rax], al ; hlt ; sub ebp, ebp ; jmp rsp
0x00000000001af2e0 : shl dh, 1 ; out dx, eax ; jmp rax
0x00000000001a5910 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000001ab25d : shl dword ptr [rax - 0x6a5aa279], 1 ; retf 0x33e6
0x0000000000158a6f : shl dword ptr [rcx], 1 ; retf 0xe281
0x0000000000094e7e : shl dword ptr [rcx], 1 ; retf 0xf989
0x00000000000bddab : shl dword ptr [rdi + 0x39480032], 1 ; ret
0x00000000001ab548 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000010e623 : shl dword ptr [rdx], 1 ; add byte ptr cs:[rcx - 0x77], cl ; retf 0x8b
0x00000000000bafc2 : shl dword ptr [rsi + 0x44], 0xf ; out dx, eax ; retf 0x4466
0x00000000000a8a5f : shl dword ptr [rsi + 0xf], 0x74 ; retf 0xf66
0x00000000000bc1db : shl dword ptr [rsi + 0xf], 0x76 ; retf 0xf66
0x00000000000d0659 : shl dword ptr [rsi + 0xf], 0xd7 ; retf 0xf66
0x00000000000b1492 : shl dword ptr [rsi + 0xf], 0xd7 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000bae3b : shl dword ptr [rsi + 0xf], 0xda ; ret
0x00000000001914c6 : shl dword ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000019157d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000191566 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000019154f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000019000b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001914e1 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000aba3c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000ac228 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x00000000001913a1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000014be56 : shl dword ptr [rsi - 0x3f], 0xf9 ; xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x00000000000fccd7 : shl dword ptr [rsi - 0x7f], 1 ; loope 0xfcce2 ; add esi, esi ; ret 0xf04
0x000000000004faa8 : shl eax, 0x1e ; or eax, edx ; ret
0x00000000001216db : shl eax, 0x20 ; and rax, rdi ; or rax, rsi ; ret
0x000000000003f8f3 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000005332c : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000532b7 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000053286 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000001c6589 : shl edi, cl ; call qword ptr [rcx]
0x0000000000043936 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000001413dc : shl esi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x000000000005332b : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000532b6 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000053285 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003f8f2 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000043935 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000001413db : shl rsi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x000000000009efdd : shld dword ptr [rip + 0x450f4800], ecx, 0xc2 ; ret
0x00000000000213b7 : shr al, 0x13 ; retf 5
0x0000000000163c90 : shr al, 0x2a ; retf 0xfffa
0x000000000003d326 : shr al, 0x44 ; sub cl, byte ptr [rip - 0x763f7b00] ; ret
0x0000000000164457 : shr al, 0x63 ; ret 0xfffa
0x0000000000163afb : shr al, 0x6f ; ret 0xfffa
0x000000000011efc1 : shr al, 0x99 ; and dh, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000051b2a : shr al, 0xa0 ; ret 2
0x0000000000131f8c : shr al, 0xbe ; retf
0x0000000000113877 : shr al, 0xc3 ; ret
0x0000000000123487 : shr al, 0xd3 ; ret 0xfffe
0x0000000000132a41 : shr al, 0xe9 ; ret
0x000000000011392b : shr al, 0xf ; ret
0x000000000015e7e4 : shr al, 0xf6 ; cmp eax, 0x89480000 ; ret
0x0000000000159a07 : shr al, 1 ; ret
0x00000000001aab04 : shr al, cl ; add al, 0x3d ; retf
0x000000000004ee58 : shr al, cl ; ret 0xff6a
0x000000000012d6cc : shr al, cl ; scasb al, byte ptr [rdi] ; enter -1, 9 ; ret
0x0000000000130066 : shr ax, 0xe ; and eax, 1 ; ret
0x000000000000b5a0 : shr byte ptr [rcx + rdx], 1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x00000000000aa10f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000000cbd4f : shr byte ptr [rcx], 1 ; ret
0x000000000012be3e : shr byte ptr [rcx], 1 ; retf 0xefc1
0x00000000001bd1d4 : shr byte ptr [rcx], 1 ; sti ; jmp qword ptr [rax]
0x000000000002bc68 : shr byte ptr [rcx], cl ; ret
0x00000000000d3db4 : shr byte ptr [rcx], cl ; ret 0x428d
0x00000000000ac36b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000111dfd : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000001da208 : shr byte ptr [rdx + 1], 0 ; mov ah, 0xf7 ; clc ; jmp qword ptr [rbx]
0x00000000001ac907 : shr byte ptr [rdx], 0x43 ; add cl, bl ; retf 0xea91
0x00000000001af208 : shr byte ptr [rsi - 0x500f0005], 1 ; sti ; call qword ptr [rax]
0x000000000006f407 : shr cl, 0x89 ; retf
0x0000000000072db4 : shr cl, 1 ; ret
0x0000000000063cac : shr cl, cl ; pop rax ; jrcxz 0x63cb8 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000019698d : shr cl, cl ; retf 0xfff3
0x00000000001cfcb1 : shr dh, cl ; jmp rdx
0x0000000000134799 : shr dword ptr [rbx], 0x4b ; adc byte ptr [rax + 1], cl ; retf 0x3948
0x000000000005791b : shr dword ptr [rcx], cl ; retf
0x0000000000134dd8 : shr eax, 0x18 ; ret
0x000000000003db9b : shr eax, 0x1f ; ret
0x000000000019240c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x19241f ; xor eax, eax ; ret
0x00000000001956e6 : shr eax, 0x38 ; ret
0x000000000003dea0 : shr eax, 0x3f ; ret
0x00000000000c6fc0 : shr eax, 0x6a ; ret 0xfff8
0x0000000000121698 : shr eax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000bba5a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000130067 : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000d09eb : shr eax, 2 ; ret
0x000000000018fb13 : shr eax, 2 ; vzeroupper ; ret
0x00000000000430f7 : shr eax, 3 ; lea r12, [rbx + rax*8 + 8] ; nop ; call qword ptr [rbx]
0x00000000001413ae : shr eax, 4 ; and eax, 0x7f ; ret
0x000000000008a1f2 : shr eax, 4 ; and eax, 1 ; ret
0x000000000008a202 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000bbaa5 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000016748f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000124f1b : shr eax, cl ; and eax, 1 ; ret
0x0000000000121ffd : shr eax, cl ; and eax, 3 ; ret
0x00000000001bf769 : shr ebp, cl ; jmp rax
0x00000000000a8202 : shr ebx, 0xde ; nop dword ptr [rax] ; ret
0x0000000000165da1 : shr ecx, 3 ; rep movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000000000096520 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000003f857 : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x000000000005343c : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000533c1 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000053390 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000014b8ba : shr edx, 3 ; add rax, rcx ; jmp rax
0x00000000001bf239 : shr esp, 0xff ; cld ; rol dword ptr [rax], 1 ; add ah, ah ; ret
0x00000000001cd5d1 : shr esp, 1 ; call rsi
0x000000000005343b : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000533c0 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000005338f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000001956e5 : shr rax, 0x38 ; ret
0x000000000003de9f : shr rax, 0x3f ; ret
0x0000000000121697 : shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x00000000000d09ea : shr rax, 2 ; ret
0x000000000018fb12 : shr rax, 2 ; vzeroupper ; ret
0x00000000001413ad : shr rax, 4 ; and eax, 0x7f ; ret
0x000000000014b8b9 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000a515f : sldt word ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a40fa : sldt word ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000001a4ae9 : sldt word ptr [rax] ; ret
0x0000000000049e0b : stc ; adc byte ptr [rbx - 0x7af067fc], cl ; retf 1
0x00000000000047f1 : stc ; add al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x0000000000027f28 : stc ; add al, 0x74 ; and eax, 0x833fe283 ; retf 0x4180
0x00000000000fcf13 : stc ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf 0x8d48
0x00000000000bd4dd : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rsp + rcx - 0xd], dh ; ret
0x00000000001863d7 : stc ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001055d9 : stc ; add cl, byte ptr [rax - 0x77] ; ret 0x940f
0x0000000000141baa : stc ; add cl, byte ptr [rdi + rcx + 0x44] ; retf 0xc683
0x0000000000043e9f : stc ; add dword ptr [rbp - 0x77], ecx ; retf
0x0000000000140e84 : stc ; add dword ptr [rdi], ecx ; xchg eax, esi ; ret 0x8341
0x00000000000ea9dd : stc ; and al, 0xf ; xchg eax, esp ; ret 0xd009
0x0000000000144e77 : stc ; and ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf980
0x00000000001c265a : stc ; call qword ptr [rax]
0x00000000001ccf22 : stc ; call qword ptr [rcx]
0x00000000001d5f71 : stc ; call qword ptr [rdx]
0x00000000001b2216 : stc ; call rax
0x00000000001c273a : stc ; call rsp
0x0000000000003e23 : stc ; clc ; sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000001bdca5 : stc ; cld ; jmp rax
0x000000000014a6c2 : stc ; cmp cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x8041
0x000000000011e0dc : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001c29c2 : stc ; dec dword ptr [rax + 0x44000220] ; xchg cl, bh ; call rsp
0x000000000002ef97 : stc ; dec dword ptr [rdi] ; retf 0xd88
0x00000000001b32c2 : stc ; dec eax ; cld ; stc ; jmp rax
0x00000000001b32f2 : stc ; dec eax ; std ; stc ; jmp rax
0x0000000000121f61 : stc ; inc dword ptr [rcx - 0x77] ; retf 0x3074
0x00000000001c27da : stc ; inc eax ; adc al, 2 ; add byte ptr [rdi + rdi], dh ; stc ; call qword ptr [rax]
0x00000000001c2c2a : stc ; inc eax ; xor byte ptr [rdx], al ; add byte ptr [rax], ah ; stc ; call qword ptr [rax]
0x0000000000003787 : stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x000000000018b072 : stc ; je 0x18b03e ; lea r10, [r10 + r9] ; jmp r10
0x000000000018c702 : stc ; je 0x18c6ce ; lea r10, [r10 + r9] ; jmp r10
0x00000000001b2212 : stc ; jmp qword ptr [rax - 0x2f000669]
0x00000000001b2226 : stc ; jmp qword ptr [rax]
0x00000000001b32c6 : stc ; jmp rax
0x00000000001c29a2 : stc ; jmp rsp
0x00000000000a842a : stc ; jne 0xa840c ; ret
0x00000000001ab3c4 : stc ; jnp 0x1ab383 ; ret
0x00000000001c26da : stc ; ljmp [rbp + rcx + 0xef40002] ; stc ; jmp rax
0x000000000016ef48 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000a1f0e : stc ; nop ; cmp r9b, r8b ; jb 0xa1ef9 ; mov rdx, rax ; jmp 0xa1ea9
0x00000000000c0705 : stc ; or cl, byte ptr [rax - 0x7d] ; xlatb ; add byte ptr [rax + 0x29], cl ; ret 0xf66
0x000000000016bd07 : stc ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000049383 : stc ; or dword ptr [rsi], edx ; add byte ptr [rax + 0x63], cl ; ret 0xc749
0x00000000000e0733 : stc ; pop rbx ; or byte ptr [rax], al ; call r14
0x00000000001b32ee : stc ; push qword ptr [rax - 0x37000603] ; std ; stc ; jmp rax
0x000000000005347d : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x00000000000e6af3 : stc ; push rsp ; std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000000988fb : stc ; ret
0x0000000000124f1a : stc ; shr eax, cl ; and eax, 1 ; ret
0x00000000001c2d21 : stc ; stc ; call rax
0x00000000001929f4 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000014be59 : stc ; xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x000000000018ad77 : stc ; xlatb ; ret 0xff2d
0x0000000000130e1c : std ; add al, byte ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov edi, edx ; syscall
0x00000000001bf7f5 : std ; add byte ptr [rax], al ; in eax, dx ; in eax, dx ; jmp rsp
0x00000000000e6656 : std ; add byte ptr [rax], al ; jne 0xe66a8 ; ret
0x00000000001c2485 : std ; add dword ptr [rax], eax ; push rsp ; ret
0x0000000000050fed : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x540a
0x00000000001335c7 : std ; add eax, 0x440f4800 ; ret 0x90c3
0x00000000001bcd6e : std ; call qword ptr [rax + 0x20fffd46]
0x00000000001bcc72 : std ; call qword ptr [rax]
0x00000000001bccb6 : std ; call qword ptr [rcx]
0x00000000001bccfe : std ; call qword ptr [rdi]
0x00000000001bccce : std ; call qword ptr [rsi + 0x16fffd42]
0x00000000001bccd6 : std ; call qword ptr [rsi + 0x16fffd43]
0x00000000001bccde : std ; call qword ptr [rsi + 0x16fffd44]
0x00000000001bccfa : std ; call qword ptr [rsi + 0x17fffd48]
0x00000000001bccd2 : std ; call qword ptr [rsi]
0x00000000001bdcfe : std ; call rax
0x00000000001c3712 : std ; call rsp
0x00000000001bd009 : std ; cli ; jmp qword ptr [rax]
0x000000000014d5fa : std ; dec dword ptr [rax + 0x39] ; ret
0x000000000004fbd1 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000000e6af5 : std ; dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000001571d7 : std ; dec dword ptr [rax - 0x77] ; ret 0x9beb
0x000000000008890e : std ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001c368a : std ; dec eax ; pop rax ; add dword ptr [rax], eax ; retf
0x00000000001c3472 : std ; dec esp ; sbb eax, dword ptr [rcx] ; add byte ptr [rcx + rdx - 3], dh ; jmp rax
0x00000000000039c1 : std ; fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x000000000003dd0d : std ; fstp st(1) ; ret
0x000000000004fbcf : std ; hlt ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000001bcc52 : std ; inc dword ptr [rax + 0x40] ; std ; push qword ptr [rax] ; std ; jmp qword ptr [rax]
0x00000000001bcd6a : std ; inc dword ptr [rax] ; std ; call qword ptr [rax + 0x20fffd46]
0x000000000018a8b0 : std ; je 0x18a919 ; and ch, al ; std ; xlatb ; ret
0x000000000018a99e : std ; je 0x18aa07 ; and ch, al ; std ; xlatb ; ret
0x00000000001c3692 : std ; jmp qword ptr [rax + rbp*2 - 0x344bffff]
0x00000000001bcc5a : std ; jmp qword ptr [rax]
0x00000000001bce3a : std ; jmp qword ptr [rcx + 0x17fffd56]
0x00000000001bce1a : std ; jmp qword ptr [rcx + 0x26fffd56]
0x00000000001c45fe : std ; jmp qword ptr [rdi]
0x00000000001c3d2a : std ; jmp qword ptr [rdx]
0x00000000001bce1e : std ; jmp qword ptr [rsi]
0x00000000001bcd52 : std ; jmp rax
0x00000000001bcc82 : std ; jmp rcx
0x00000000001c35c2 : std ; jmp rsp
0x00000000001bcebe : std ; lcall [rax] ; adc edi, ebx ; jmp rax
0x00000000001c370a : std ; lcall [rsi + rcx*2 - 0x2ebbfffe] ; std ; call rsp
0x00000000001c361a : std ; ljmp [rax + rbp*2] ; add ah, dl ; ret
0x000000000016e76b : std ; mov word ptr [rdi - 2], cx ; ret
0x000000000014f67c : std ; movsxd rcx, dword ptr [rax - 0x77] ; ret
0x00000000001bcc56 : std ; push qword ptr [rax] ; std ; jmp qword ptr [rax]
0x00000000001bccb2 : std ; push qword ptr [rcx + 0x47] ; std ; call qword ptr [rcx]
0x00000000001c36a2 : std ; push qword ptr [rsi + rax*8] ; add dword ptr [rax], eax ; hlt ; retf
0x00000000001c36fa : std ; push rax ; add al, byte ptr [rax] ; xor al, 0xd0 ; std ; jmp qword ptr [rax]
0x00000000001c3602 : std ; push rax ; pop rbp ; add byte ptr [rax], al ; ret
0x00000000001bccf6 : std ; push rsi ; std ; call qword ptr [rsi + 0x17fffd48]
0x00000000001c3682 : std ; push rsp ; xor eax, dword ptr [rcx] ; add ah, ah ; retf 0xfffd
0x00000000000bb4e3 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000001ac2fa : std ; retf
0x00000000000847c7 : std ; retf 0xfff9
0x000000000011e0db : std ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000001b32c1 : std ; stc ; dec eax ; cld ; stc ; jmp rax
0x00000000001b32f1 : std ; stc ; dec eax ; std ; stc ; jmp rax
0x00000000001b32f5 : std ; stc ; jmp rax
0x0000000000145172 : std ; sub al, 0xf ; xchg eax, ebp ; ret 0x8040
0x000000000018a6d1 : std ; xlatb ; ret
0x000000000018a6c9 : std ; xlatb ; ret 0xc085
0x000000000018abb3 : std ; xlatb ; ret 0xe883
0x000000000018e511 : std ; xlatb ; retf 0xc985
0x000000000018e3e4 : std ; xlatb ; retf 0xfdc5
0x000000000018e444 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000c3d46 : sti ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8941
0x00000000001bf7b5 : sti ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; loop 0x1bf7ae ; call rax
0x0000000000085fb3 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000000a4e9c : sti ; add dword ptr [rax + 0x19], ecx ; fisttp dword ptr [rax - 0x7d] ; ret
0x00000000000a4e92 : sti ; add dword ptr [rbp + 0x19], eax ; fild dword ptr [rcx - 0x7d] ; ret
0x00000000000a6cc1 : sti ; add dword ptr [rbp + 0x19], ecx ; fisttp dword ptr [rcx - 0x7d] ; ret
0x00000000000a6cad : sti ; add dword ptr [rbp + 0x19], ecx ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8303
0x00000000001bd6aa : sti ; call qword ptr [rax + 0x10fffb66]
0x00000000001bd6a2 : sti ; call qword ptr [rax + 0x10fffb67]
0x00000000001bd69a : sti ; call qword ptr [rax + 0x10fffb68]
0x00000000001bd692 : sti ; call qword ptr [rax + 0x10fffb69]
0x00000000001bd68a : sti ; call qword ptr [rax + 0x10fffb6a]
0x00000000001bd09a : sti ; call qword ptr [rax + 0x20fffb48]
0x00000000001bd472 : sti ; call qword ptr [rax + 0x20fffb6f]
0x00000000001bd25a : sti ; call qword ptr [rax + 0x20fffb72]
0x00000000001bdb7a : sti ; call qword ptr [rax + 0x20fffb8a]
0x00000000001bd96a : sti ; call qword ptr [rax + 0x20fffb96]
0x00000000001bd752 : sti ; call qword ptr [rax + 0x20fffb99]
0x00000000001bd216 : sti ; call qword ptr [rax - 0x1f0004d5]
0x00000000001bd1c2 : sti ; call qword ptr [rax - 0x1f0004dc]
0x00000000001bd036 : sti ; call qword ptr [rax - 0x1f0004f3]
0x00000000001af20e : sti ; call qword ptr [rax]
0x00000000001cf97e : sti ; call qword ptr [rbx]
0x00000000001bd306 : sti ; call qword ptr [rdx + 0x22fffb74]
0x00000000001bd326 : sti ; call qword ptr [rdx]
0x00000000001bd2a2 : sti ; call qword ptr [rsi + 0x26fffb71]
0x00000000001bd79a : sti ; call qword ptr [rsi + 0x26fffb98]
0x00000000001bd282 : sti ; call qword ptr [rsi]
0x00000000001af206 : sti ; call rax
0x00000000001bd316 : sti ; call rdx
0x00000000001bd2b2 : sti ; call rsi
0x00000000001bd3de : sti ; call rsp
0x000000000009dcc1 : sti ; cmp al, byte ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000015ece1 : sti ; cmp byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000001c332a : sti ; dec dword ptr [rax + 0x14] ; add dword ptr [rax], eax ; xor al, 0x95 ; sti ; call rsp
0x00000000000d533c : sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000001bd7fa : sti ; dec dword ptr [rdx*4 - 0x6b4d0005] ; sti ; jmp qword ptr [rdx]
0x00000000001bd3ba : sti ; dec esi ; outsb dx, byte ptr [rsi] ; sti ; push qword ptr [rsi + rbp*2 - 5] ; jmp rsp
0x00000000001bf3a9 : sti ; in al, dx ; jmp qword ptr [rax]
0x00000000001bceda : sti ; inc dword ptr [rax + 0x10fffb20] ; adc edi, ebx ; call rax
0x00000000001bcfc6 : sti ; inc dword ptr [rax + 0x15] ; sti ; jmp qword ptr [rax]
0x00000000001bcf46 : sti ; inc dword ptr [rax + 0x16] ; sti ; jmp qword ptr [rax]
0x00000000001bcf16 : sti ; inc dword ptr [rax + 0x1e] ; sti ; inc dword ptr [rax + 0x20] ; sti ; call rax
0x00000000001bcf1a : sti ; inc dword ptr [rax + 0x20] ; sti ; call rax
0x00000000001bd212 : sti ; inc dword ptr [rax + 0x2a] ; sti ; call qword ptr [rax - 0x1f0004d5]
0x00000000001bd13e : sti ; inc dword ptr [rax + 0x3a] ; sti ; inc dword ptr [rax] ; cmp al, 0xfb ; jmp rax
0x00000000001bd122 : sti ; inc dword ptr [rax + 0x3c] ; sti ; jmp qword ptr [rax]
0x00000000001bd11e : sti ; inc dword ptr [rax + 0x40fffb3a] ; cmp al, 0xfb ; jmp qword ptr [rax]
0x00000000001bd0ee : sti ; inc dword ptr [rax + 0x42] ; sti ; jmp qword ptr [rax]
0x00000000001bd266 : sti ; inc dword ptr [rax + 0x71] ; sti ; call rax
0x00000000001bd032 : sti ; inc dword ptr [rax + 0xc] ; sti ; call qword ptr [rax - 0x1f0004f3]
0x00000000001bd222 : sti ; inc dword ptr [rax - 0x2f0004d1] ; xor bl, bh ; jmp qword ptr [rax]
0x00000000001bd1ce : sti ; inc dword ptr [rax - 0x2f0004d8] ; sub ebx, edi ; jmp qword ptr [rax]
0x00000000001bd056 : sti ; inc dword ptr [rax - 0x2f0004fd] ; add al, 0xfb ; jmp qword ptr [rax]
0x00000000001bd75e : sti ; inc dword ptr [rax - 0x68] ; sti ; call rax
0x00000000001bd976 : sti ; inc dword ptr [rax - 0x6b] ; sti ; call rax
0x00000000001bced6 : sti ; inc dword ptr [rax - 0x7f0004e2] ; and bl, bh ; call qword ptr [rax]
0x00000000001bd142 : sti ; inc dword ptr [rax] ; cmp al, 0xfb ; jmp rax
0x00000000001bd1a6 : sti ; inc dword ptr [rax] ; cmp eax, 0x3ee0fffb ; sti ; call rax
0x00000000001bd256 : sti ; inc dword ptr [rax] ; jae 0x1bd25f ; call qword ptr [rax + 0x20fffb72]
0x00000000001bd46e : sti ; inc dword ptr [rax] ; jo 0x1bd477 ; call qword ptr [rax + 0x20fffb6f]
0x00000000001af2ae : sti ; inc dword ptr [rax] ; sar bl, 1 ; push qword ptr [rax - 0x2f] ; sti ; jmp rax
0x00000000001bcf4e : sti ; inc dword ptr [rax] ; sbb bh, bl ; jmp rax
0x00000000001bd67e : sti ; inc dword ptr [rax] ; sti ; jmp qword ptr [rax + 0x20fffb6b]
0x00000000001bd6be : sti ; inc dword ptr [rax] ; sti ; jmp qword ptr [rax]
0x00000000001bd12a : sti ; inc dword ptr [rax] ; sti ; jmp rax
0x00000000001bd966 : sti ; inc dword ptr [rax] ; xchg eax, edi ; sti ; call qword ptr [rax + 0x20fffb96]
0x00000000001bd8d2 : sti ; inc dword ptr [rcx + rbx*4 - 5] ; call rsp
0x00000000001bd312 : sti ; inc dword ptr [rdx + 0x73] ; sti ; call rdx
0x00000000001bd3da : sti ; inc dword ptr [rdx + rsi*2 - 5] ; call rsp
0x00000000001bd80a : sti ; inc dword ptr [rdx - 0x66] ; sti ; call rdx
0x00000000001bd302 : sti ; inc dword ptr [rdx] ; jne 0x1bd30b ; call qword ptr [rdx + 0x22fffb74]
0x00000000001bd2ae : sti ; inc dword ptr [rsi + 0x70] ; sti ; call rsi
0x00000000001bd7a6 : sti ; inc dword ptr [rsi - 0x69] ; sti ; call rsi
0x00000000001bd796 : sti ; inc dword ptr [rsi] ; cdq ; sti ; call qword ptr [rsi + 0x26fffb98]
0x00000000001bd29e : sti ; inc dword ptr [rsi] ; jb 0x1bd2a7 ; call qword ptr [rsi + 0x26fffb71]
0x00000000001bd012 : sti ; inc eax ; add ebx, edi ; call qword ptr [rax]
0x00000000001bd066 : sti ; inc eax ; or bl, bh ; call qword ptr [rax]
0x00000000001bd232 : sti ; inc eax ; xor al, 0xfb ; call qword ptr [rax]
0x00000000001b16f8 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001bdbb2 : sti ; jmp qword ptr [rax + 0x10fffb8b]
0x00000000001bd9ae : sti ; jmp qword ptr [rax + 0x10fffb8c]
0x00000000001af286 : sti ; jmp qword ptr [rax + 0x10fffbc1]
0x00000000001bd702 : sti ; jmp qword ptr [rax + 0x20fffb48]
0x00000000001bd6c6 : sti ; jmp qword ptr [rax + 0x20fffb49]
0x00000000001bd70a : sti ; jmp qword ptr [rax + 0x20fffb4b]
0x00000000001bd6ce : sti ; jmp qword ptr [rax + 0x20fffb4c]
0x00000000001bd712 : sti ; jmp qword ptr [rax + 0x20fffb4e]
0x00000000001bd6d6 : sti ; jmp qword ptr [rax + 0x20fffb4f]
0x00000000001bd71a : sti ; jmp qword ptr [rax + 0x20fffb51]
0x00000000001bd6de : sti ; jmp qword ptr [rax + 0x20fffb52]
0x00000000001bd722 : sti ; jmp qword ptr [rax + 0x20fffb54]
0x00000000001bd6e6 : sti ; jmp qword ptr [rax + 0x20fffb55]
0x00000000001bd72a : sti ; jmp qword ptr [rax + 0x20fffb57]
0x00000000001bd6ee : sti ; jmp qword ptr [rax + 0x20fffb58]
0x00000000001bd732 : sti ; jmp qword ptr [rax + 0x20fffb5a]
0x00000000001bd6f6 : sti ; jmp qword ptr [rax + 0x20fffb5b]
0x00000000001bd66a : sti ; jmp qword ptr [rax + 0x20fffb66]
0x00000000001bd662 : sti ; jmp qword ptr [rax + 0x20fffb67]
0x00000000001bd65a : sti ; jmp qword ptr [rax + 0x20fffb68]
0x00000000001bd652 : sti ; jmp qword ptr [rax + 0x20fffb69]
0x00000000001bd64a : sti ; jmp qword ptr [rax + 0x20fffb6a]
0x00000000001bd682 : sti ; jmp qword ptr [rax + 0x20fffb6b]
0x00000000001bd9a6 : sti ; jmp qword ptr [rax + 0x20fffb8d]
0x00000000001bd99e : sti ; jmp qword ptr [rax + 0x20fffb8e]
0x00000000001bd996 : sti ; jmp qword ptr [rax + 0x20fffb8f]
0x00000000001bd98e : sti ; jmp qword ptr [rax + 0x20fffb90]
0x00000000001af2a6 : sti ; jmp qword ptr [rax]
0x00000000001d0db2 : sti ; jmp qword ptr [rbx]
0x00000000001bd30a : sti ; jmp qword ptr [rdx]
0x00000000001bd27e : sti ; jmp qword ptr [rsi + 0x16fffb6e]
0x00000000001bd2a6 : sti ; jmp qword ptr [rsi]
0x00000000001af2b6 : sti ; jmp rax
0x00000000001bd33a : sti ; jmp rdx
0x00000000001bd296 : sti ; jmp rsi
0x00000000001bd3c2 : sti ; jmp rsp
0x00000000001bdb3a : sti ; lcall [rdx + 0x2afffb8a] ; mov bh, bl ; call rax
0x00000000001bd07e : sti ; ljmp [rax] ; cmp edi, ebx ; push rax ; cmp al, 0xfb ; call rax
0x00000000001bdb3e : sti ; ljmp [rdx] ; mov bh, bl ; call rax
0x00000000001bdaba : sti ; ljmp [rsi + 0x3efffb8a] ; mov bh, bl ; jmp rsp
0x00000000001bd4fa : sti ; ljmp [rsp + 0x643cfffb] ; sti ; jmp rdx
0x000000000016eb48 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000000847c2 : sti ; mov rdi, rdx ; call 0x212ce
0x00000000001395dc : sti ; or dword ptr [rdi], ecx ; retf
0x00000000001bcfde : sti ; push qword ptr [rax + 0x11] ; sti ; jmp qword ptr [rax]
0x00000000001bcf5e : sti ; push qword ptr [rax + 0x12] ; sti ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x00000000001bcfc2 : sti ; push qword ptr [rax + 0x13] ; sti ; inc dword ptr [rax + 0x15] ; sti ; jmp qword ptr [rax]
0x00000000001bd22e : sti ; push qword ptr [rax + 0x33] ; sti ; inc eax ; xor al, 0xfb ; call qword ptr [rax]
0x00000000001bd262 : sti ; push qword ptr [rax + 0x40fffb71] ; jno 0x1bd26f ; call rax
0x00000000001bd972 : sti ; push qword ptr [rax + 0x40fffb95] ; xchg eax, ebp ; sti ; call rax
0x00000000001bd75a : sti ; push qword ptr [rax + 0x40fffb98] ; cwde ; sti ; call rax
0x00000000001bd47a : sti ; push qword ptr [rax + 0x50fffb6e] ; sti ; call qword ptr [rax]
0x00000000001bd062 : sti ; push qword ptr [rax + 7] ; sti ; inc eax ; or bl, bh ; call qword ptr [rax]
0x00000000001af2b2 : sti ; push qword ptr [rax - 0x2f] ; sti ; jmp rax
0x00000000001bcf62 : sti ; push qword ptr [rax] ; adc al, 0xfb ; call qword ptr [rax]
0x00000000001bcf7e : sti ; push qword ptr [rax] ; adc bh, bl ; push rax ; adc edi, ebx ; call rax
0x00000000001bcf2e : sti ; push qword ptr [rax] ; sbb bh, bl ; call qword ptr [rax]
0x00000000001bd10a : sti ; push qword ptr [rax] ; sti ; call qword ptr [rax]
0x00000000001bd8ce : sti ; push qword ptr [rcx + rbx*4 - 0x66bb0005] ; sti ; call rsp
0x00000000001bd30e : sti ; push qword ptr [rdx + 0x42fffb73] ; jae 0x1bd31b ; call rdx
0x00000000001bd3d6 : sti ; push qword ptr [rdx + rsi*2 + 0x7244fffb] ; sti ; call rsp
0x00000000001bda2e : sti ; push qword ptr [rdx - 0x74] ; sti ; jmp rdx
0x00000000001bd2aa : sti ; push qword ptr [rsi + 0x46fffb70] ; jo 0x1bd2b7 ; call rsi
0x00000000001bd7a2 : sti ; push qword ptr [rsi + 0x46fffb97] ; xchg eax, edi ; sti ; call rsi
0x00000000001bd3be : sti ; push qword ptr [rsi + rbp*2 - 5] ; jmp rsp
0x00000000001bcfe6 : sti ; push rax ; adc al, 0xfb ; call rax
0x00000000001bcf82 : sti ; push rax ; adc edi, ebx ; call rax
0x00000000001bd082 : sti ; push rax ; cmp al, 0xfb ; call rax
0x00000000001af20a : sti ; push rax ; scasd eax, dword ptr [rdi] ; sti ; call qword ptr [rax]
0x00000000001ab54a : sti ; ret
0x000000000004c308 : sti ; ret 0xffbf
0x0000000000034d51 : sti ; ret 0xfffe
0x0000000000063761 : sti ; retf 1
0x0000000000131961 : sti ; rol byte ptr [rip + 0x450f4800], 1 ; ret 0x66c3
0x000000000011b80d : sti ; sub al, 0 ; ret
0x000000000002e987 : sti ; test rax, rax ; je 0x2e995 ; call rax
0x000000000009de01 : sti ; xor al, 0 ; add rsp, 8 ; ret
0x000000000009de1b : sti ; xor al, 0 ; ret
0x00000000000794be : stosb byte ptr [rdi], al ; adc eax, dword ptr [rax] ; call 0x125785
0x000000000000236c : stosb byte ptr [rdi], al ; add al, 0xaa ; ret
0x0000000000140eca : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x77], dl ; retf
0x00000000001bec4d : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; push rsp ; loope 0x1bec44 ; call rsp
0x00000000001de1ad : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; push rax ; fdecstp ; call qword ptr [rdi]
0x00000000001aba24 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000001bf709 : stosb byte ptr [rdi], al ; in eax, dx ; call qword ptr [rax]
0x00000000001afea8 : stosb byte ptr [rdi], al ; je 0x1afe9f ; jmp rax
0x00000000001afea8 : stosb byte ptr [rdi], al ; je 0x1afea0 ; jmp rax
0x00000000001d5379 : stosb byte ptr [rdi], al ; jmp qword ptr [rsi]
0x000000000009c1cb : stosb byte ptr [rdi], al ; jp 0x9c1e5 ; add byte ptr [rax - 0x77], cl ; retf 0x92eb
0x00000000000bb8bb : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000000236f : stosb byte ptr [rdi], al ; ret
0x0000000000114652 : stosb byte ptr [rdi], al ; retf 0xfff0
0x000000000019be0a : stosb byte ptr [rdi], al ; retf 1
0x0000000000003786 : stosb byte ptr [rdi], al ; stc ; insb byte ptr [rdi], dx ; mov ebx, 0x952a6c41 ; ret
0x00000000000e9789 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ac0c1 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x79f0ef06], al ; ret 0
0x00000000001ce301 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; sbb al, 8 ; in eax, dx ; jmp qword ptr [rcx]
0x00000000001db69d : stosd dword ptr [rdi], eax ; cmc ; call qword ptr [rbx]
0x000000000013d3f1 : stosd dword ptr [rdi], eax ; cmc ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000000000e2f11 : stosd dword ptr [rdi], eax ; jrcxz 0xe2f0d ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x000000000002f1b1 : stosd dword ptr [rdi], eax ; mov bh, 0x3b ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000640ee : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000141071 : stosd dword ptr [rdi], eax ; mov eax, r8d ; ret
0x0000000000096525 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000001b0828 : stosd dword ptr [rdi], eax ; push rax ; jmp rsp
0x000000000003f85c : stosd dword ptr [rdi], eax ; ret
0x00000000001aca2a : stosd dword ptr [rdi], eax ; retf 0xa2fe
0x00000000000f4811 : stosd dword ptr [rdi], eax ; retf 0xfff2
0x0000000000141070 : stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x0000000000096524 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000003f85b : stosq qword ptr [rdi], rax ; ret
0x000000000009ed11 : str word ptr [r8 + 0xf] ; ret 0xfc3
0x00000000000bba05 : str word ptr [rax + 0x63] ; add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000009ed88 : str word ptr [rax + 0xf] ; ret 0x90c3
0x000000000009d7f3 : str word ptr [rax + 0xf] ; ret 0xc3f3
0x000000000009ed12 : str word ptr [rax + 0xf] ; ret 0xfc3
0x00000000000bda8d : str word ptr [rax - 0x77] ; ret
0x00000000000c798a : str word ptr [rax - 0x77] ; ret 0xc148
0x00000000001acf11 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001bed99 : sub ah, ch ; jmp qword ptr [rax]
0x000000000012416b : sub al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000124195 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000122c47 : sub al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000130812 : sub al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000124288 : sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x000000000011cf65 : sub al, 0 ; mov dword ptr fs:[rax], 0x16 ; ret
0x0000000000124de5 : sub al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000001244ed : sub al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000001240a4 : sub al, 0 ; pop rbx ; ret
0x000000000011b80e : sub al, 0 ; ret
0x00000000001d5374 : sub al, 0x1c ; add dword ptr [rax], eax ; clc ; stosb byte ptr [rdi], al ; jmp qword ptr [rsi]
0x00000000001d2a14 : sub al, 0x2f ; int1 ; jmp qword ptr [rcx]
0x00000000000fd6fc : sub al, 0x39 ; ret
0x00000000000bcd72 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000a7c88 : sub al, 0x3c ; mov edi, 1 ; jmp 0xa3f7c
0x0000000000102e83 : sub al, 0x41 ; pop rbp ; pop r14 ; pop r15 ; ret
0x000000000009edd0 : sub al, 0x46 ; str word ptr [rax + 0xf] ; ret 0xfc3
0x000000000016341f : sub al, 0x48 ; add esp, 0x18 ; ret
0x00000000001d8474 : sub al, 0x4d ; add dword ptr [rax], eax ; test al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x0000000000003e25 : sub al, 0x58 ; mov esi, 0xcf8cb236 ; retf
0x00000000001da2d4 : sub al, 0x63 ; cmc ; jmp qword ptr [rbx]
0x000000000018f022 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000000bcd75 : sub al, 0x75 ; pop rax ; ret
0x00000000001db374 : sub al, 0x7c ; add dword ptr [rax], eax ; cwde ; cdq ; cmc ; call qword ptr [rcx]
0x00000000001d7c44 : sub al, 0x7c ; hlt ; jmp qword ptr [rcx]
0x0000000000131761 : sub al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010380b : sub al, 0x89 ; ret 0x7b83
0x00000000000f066b : sub al, 0x89 ; ret 0x8348
0x0000000000103b52 : sub al, 0x89 ; ret 0x9e9
0x00000000000f032a : sub al, 0x89 ; ror dword ptr [rax - 0x7d], 0xc0 ; add dword ptr [rcx], edi ; retf 0xeb7f
0x000000000009ef68 : sub al, 0x8b ; push rdx ; js 0x9ef69 ; ret 0
0x000000000009efb8 : sub al, 0x8b ; push rdx ; js 0x9efb9 ; ret 0
0x000000000009f008 : sub al, 0x8b ; push rdx ; js 0x9f009 ; ret 0
0x000000000009f058 : sub al, 0x8b ; push rdx ; js 0x9f059 ; ret 0
0x0000000000190b93 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000130f63 : sub al, 0xb8 ; out 0, al ; add byte ptr [rax], al ; syscall
0x00000000001d0174 : sub al, 0xca ; add byte ptr [rax], al ; call 0x131cf069
0x00000000001be551 : sub al, 0xe8 ; jmp rsp
0x0000000000141e38 : sub al, 0xe9 ; ret 0xfffc
0x00000000001bfa81 : sub al, 0xee ; call rax
0x000000000012cf81 : sub al, 0xf ; test dword ptr [rdi], ebp ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000145173 : sub al, 0xf ; xchg eax, ebp ; ret 0x8040
0x000000000012e07a : sub al, 0xf0 ; dec dword ptr [rax - 0x77] ; ret
0x00000000001c0331 : sub al, 0xf2 ; jmp rsp
0x00000000001c1be1 : sub al, 0xf7 ; call rsp
0x00000000000bf136 : sub al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000122631 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001d3b74 : sub al, 4 ; add dword ptr [rax], eax ; call 0xffffffffe11d2ded
0x00000000001d3b74 : sub al, 4 ; add dword ptr [rax], eax ; call 0xffffffffe11d2dee
0x00000000001e5638 : sub al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000009f132 : sub al, bl ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x0000000000011218 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x000000000003d25a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000001228ae : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001c621d : sub al, byte ptr [rax] ; add byte ptr [rax], dh ; retf 0xffe7
0x000000000013d3f3 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000145c95 : sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x0000000000145784 : sub al, byte ptr [rax] ; test eax, eax ; je 0x145797 ; ret
0x000000000014c7e4 : sub al, byte ptr [rax] ; test eax, eax ; je 0x14c7f7 ; ret
0x00000000001480c5 : sub al, byte ptr [rax] ; test rax, rax ; jne 0x1480d8 ; ret
0x00000000001d61f5 : sub al, byte ptr [rcx] ; add byte ptr [rax], cl ; add dh, ah ; jmp qword ptr [rcx]
0x00000000001e44cc : sub al, byte ptr [rdx] ; add byte ptr [rax], al ; ret 8
0x000000000011487e : sub al, ch ; pushfq ; ret 0xffff
0x000000000004d8b7 : sub al, ch ; ret
0x00000000000da898 : sub al, ch ; ret 0xf468
0x000000000018af15 : sub al, ch ; std ; xlatb ; ret
0x0000000000154d68 : sub al, ch ; xchg eax, edx ; ret
0x0000000000117ae2 : sub ax, 0x4800 ; add esp, 8 ; ret
0x00000000001be089 : sub bh, ah ; call qword ptr [rax]
0x00000000001bd215 : sub bh, bl ; call qword ptr [rax - 0x1f0004d5]
0x0000000000115687 : sub bh, byte ptr [rax + 0x118] ; syscall
0x00000000000e598d : sub bh, byte ptr [rax + 0x69] ; syscall
0x00000000000e5a1d : sub bh, byte ptr [rax + 0x6a] ; syscall
0x0000000000116add : sub bh, byte ptr [rax + 0x71] ; syscall
0x0000000000116b7d : sub bh, byte ptr [rax + 0x72] ; syscall
0x00000000000e0e5d : sub bh, byte ptr [rax + 0x74] ; syscall
0x00000000000e5cad : sub bh, byte ptr [rax + 0x75] ; syscall
0x00000000000e5d4d : sub bh, byte ptr [rax + 0x77] ; syscall
0x000000000008890d : sub bh, ch ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001bd1d1 : sub bl, bh ; call rax
0x000000000005ef8b : sub bl, cl ; in eax, 0xdf ; loopne 0x5ef20 ; ret
0x000000000013cf6d : sub byte ptr [r11], r13b ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x00000000000bcd66 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000064cdf : sub byte ptr [r8 + 0x468b4102], r9b ; add al, 0x39 ; ret
0x000000000015df21 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015dc61 : sub byte ptr [r9], r15b ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x0000000000064ce0 : sub byte ptr [rax + 0x468b4102], cl ; add al, 0x39 ; ret
0x000000000015db65 : sub byte ptr [rax + 1], bh ; ret
0x0000000000053e63 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x00000000001ca3c8 : sub byte ptr [rax + rax], 0x44 ; ret
0x000000000015df22 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001c6f58 : sub byte ptr [rax - 0x18], dl ; call qword ptr [rdx]
0x000000000002c6bb : sub byte ptr [rax - 0x3f], cl ; retf
0x0000000000166487 : sub byte ptr [rax - 0x75], cl ; add eax, 0x28a019 ; call qword ptr [rax]
0x00000000000f3ff6 : sub byte ptr [rax - 0x75], cl ; cmp eax, dword ptr [rcx] ; ret 0xc083
0x000000000014c72d : sub byte ptr [rax - 0x77], cl ; fsubp st(0) ; retf 0xed4a
0x000000000009a2c4 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x00000000000be1ea : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000012ca47 : sub byte ptr [rax - 0x77], cl ; ret
0x000000000009f54a : sub byte ptr [rax - 0x77], cl ; ret 0x14d
0x000000000011ab4b : sub byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000109e7d : sub byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001121c7 : sub byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000007e1e4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000a0cf3 : sub byte ptr [rax - 0x77], cl ; retf 0x5d5b
0x000000000012b418 : sub byte ptr [rax - 0x77], cl ; retf 0x894c
0x0000000000087805 : sub byte ptr [rax - 0x78], al ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x0000000000087804 : sub byte ptr [rax - 0x78], r8b ; cmp byte ptr [rcx + rcx*4 - 0x30], al ; ret
0x0000000000033dfb : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000006c2cb : sub byte ptr [rax - 0x7d], cl ; ret 0x4101
0x00000000000a1e2f : sub byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000440bc : sub byte ptr [rax - 0x7d], cl ; ret 0x8b04
0x000000000003cd19 : sub byte ptr [rax - 0x7d], cl ; retf 0x4805
0x000000000003cd84 : sub byte ptr [rax - 0x7d], cl ; retf 0x4806
0x000000000003ce39 : sub byte ptr [rax - 0x7d], cl ; retf 0x480d
0x000000000003cdb6 : sub byte ptr [rax - 0x7d], cl ; retf 0xe903
0x000000000003cd6f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb04
0x000000000003cdce : sub byte ptr [rax - 0x7d], cl ; retf 0xeb07
0x000000000003ce6f : sub byte ptr [rax - 0x7d], cl ; retf 0xeb0c
0x00000000000f1e6f : sub byte ptr [rax - 0x80], al ; call qword ptr [rsi]
0x00000000001bd1d0 : sub byte ptr [rax], 0xfb ; call rax
0x00000000000a4e64 : sub byte ptr [rax], al ; add bh, dh ; ret
0x00000000000e1d99 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x25], cl ; ret
0x00000000000547fd : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x54845 ; leave ; ret
0x0000000000115204 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000016347a : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000162fdb : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000162dba : sub byte ptr [rax], al ; mov eax, 0xca ; ret
0x0000000000164741 : sub byte ptr [rax], al ; mov edi, ebx ; call 0x1109a6
0x00000000001635ce : sub byte ptr [rax], al ; ret
0x00000000001635a8 : sub byte ptr [rax], al ; test eax, eax ; jne 0x1635c1 ; xor eax, eax ; pop rbx ; ret
0x0000000000167613 : sub byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bcd6a : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000bcd69 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000feba8 : sub byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000021a40 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000006b212 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000004ecb7 : sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bbe8d : sub byte ptr [rbx + rcx*4 + 0x35], cl ; ret
0x00000000000f6957 : sub byte ptr [rbx + rcx*4 + 0x3c], cl ; ret 0xefe8
0x00000000001662f3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000001662f2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000015dbb3 : sub byte ptr [rbx - 0x3f7cb7ea], cl ; add al, 0xf ; retf 0x5089
0x000000000015dbe3 : sub byte ptr [rbx - 0x3f7cb7f0], cl ; add al, 0xf ; retf 0x1689
0x00000000001d9e68 : sub byte ptr [rbx - 0xb], al ; jmp rdi
0x00000000001e40c4 : sub byte ptr [rbx], al ; add byte ptr [rax], al ; retf 6
0x00000000001bd080 : sub byte ptr [rbx], bh ; sti ; push rax ; cmp al, 0xfb ; call rax
0x00000000000bcd67 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x000000000013cf6e : sub byte ptr [rbx], ch ; add byte ptr [rax - 0x3f], cl ; retf 0x6411
0x0000000000096fe8 : sub byte ptr [rcx + 0x35], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000fb099 : sub byte ptr [rcx + 0x63], cl ; retf 0x949
0x00000000001da0c8 : sub byte ptr [rcx + 1], 0 ; je 0x1da136 ; cmc ; jmp qword ptr [rbx]
0x000000000015dff6 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003332b : sub byte ptr [rcx - 0x75], al ; push rdi ; or al, 0xf ; retf 0xd289
0x000000000003335f : sub byte ptr [rcx - 0x75], al ; push rdi ; sbb byte ptr [rdi], cl ; retf 0xd289
0x0000000000116804 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000124a26 : sub byte ptr [rcx], bh ; ret
0x000000000015dc62 : sub byte ptr [rcx], bh ; sal dword ptr [rbx + 9], 1 ; xor eax, eax ; ret
0x000000000012de23 : sub byte ptr [rcx], ch ; ret 0x8941
0x0000000000123dfc : sub byte ptr [rcx], cl ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000142a6d : sub byte ptr [rcx], cl ; ret 0xb60f
0x000000000012de22 : sub byte ptr [rcx], r13b ; ret 0x8941
0x000000000014ebbc : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001bd224 : sub byte ptr [rdi], 0xfb ; call rax
0x000000000014df11 : sub byte ptr [rdi], cl ; retf 0x5089
0x00000000000a1c39 : sub byte ptr [rdi], cl ; test byte ptr [rax], dh ; add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000008890c : sub byte ptr [rdx], 0xfd ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001dcc08 : sub byte ptr [rsi - 0xa], al ; jmp qword ptr [rbx]
0x000000000013c9b4 : sub byte ptr [rsi], ch ; sub eax, dword ptr [rax] ; call rax
0x0000000000002cc0 : sub byte ptr [rsi], cl ; and byte ptr [rsi - 0x32], dh ; clc ; ret
0x00000000001ae70c : sub ch, byte ptr [rcx - 0x14] ; jmp qword ptr [rdi - 0x1900138b]
0x00000000001ceac1 : sub ch, ch ; call rsp
0x000000000003e022 : sub cl, al ; ret
0x000000000009ffd7 : sub cl, byte ptr [rax + 0x39] ; retf 0xf375
0x00000000000c6ccc : sub cl, byte ptr [rax + 0x63] ; retf
0x000000000011f663 : sub cl, byte ptr [rax - 0x77] ; ret 0xdeb
0x00000000000432bd : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000000a4d67 : sub cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000003d329 : sub cl, byte ptr [rip - 0x763f7b00] ; ret
0x00000000000ce170 : sub cl, ch ; retf 0xfffd
0x000000000009f78b : sub cl, ch ; retf 0xfffe
0x00000000001c40a5 : sub dh, ah ; call rcx
0x0000000000059867 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000011e25d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001c1bc9 : sub dh, bh ; jmp qword ptr [rax]
0x000000000009ec2d : sub dh, bh ; ret 0
0x00000000001bd214 : sub dil, bl ; call qword ptr [rax - 0x1f0004d5]
0x00000000001598c2 : sub dl, byte ptr [rsi] ; sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000010ffce : sub dword ptr [rax + 0x101], edi ; syscall
0x00000000001ab8cd : sub dword ptr [rax + 0x1e], eax ; cli ; test bh, dl ; retf 0xdf7f
0x000000000008d70b : sub dword ptr [rax + 0x39], ecx ; retf
0x00000000000a4e70 : sub dword ptr [rax], eax ; add bh, dh ; ret
0x0000000000122ec1 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000001596b6 : sub dword ptr [rax], eax ; cmp rax, rdx ; je 0x1596c8 ; pop rbx ; ret
0x00000000001595ec : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x00000000001596c5 : sub dword ptr [rax], eax ; pop rbx ; ret
0x000000000015ffa4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x15ffb8 ; xor eax, eax ; ret
0x00000000001ac562 : sub dword ptr [rbx + 0x5c347ebb], edx ; sbb ebp, ebx ; retf
0x000000000017ee23 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x000000000016cd97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16cdad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016cee7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16cefd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d037 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16d04d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d187 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16d19d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d2d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16d2ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d427 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16d43d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d577 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16d58d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d6c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16d6dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d817 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16d82d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016d967 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16d97d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dab7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16dacd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dc07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16dc1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dd57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16dd6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dea7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16debd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016dff7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16e00d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016f767 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16f77d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016f8b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16f8cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016fa07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16fa1d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016fb57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16fb6d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016fca7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16fcbd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016fdf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16fe0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016ff47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x16ff5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000170097 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1700ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001701e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1701fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000170337 : sub dword ptr [rdi + 0x10], ebx ; jb 0x17034d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000170487 : sub dword ptr [rdi + 0x10], ebx ; jb 0x17049d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001705d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1705ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000170727 : sub dword ptr [rdi + 0x10], ebx ; jb 0x17073d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000170877 : sub dword ptr [rdi + 0x10], ebx ; jb 0x17088d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001709c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1709dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000013ec88 : sub dword ptr [rdi + rcx - 0x49], eax ; ret 0x3949
0x000000000016ccf3 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000016ccef : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000016cd9d : sub dword ptr [rdi], esp ; jmp r9
0x00000000001921e9 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001857a7 : sub dword ptr [rip - 0x76b30000], ecx ; retf
0x0000000000191376 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x0000000000185661 : sub dword ptr [rsi + 0xe], 0 ; add byte ptr [rcx + 0x29], cl ; retf
0x00000000001ace1a : sub dword ptr [rsi], 0x76 ; retf
0x00000000000522de : sub dword ptr [rsi], ecx ; add byte ptr [rcx - 0x77], cl ; fimul dword ptr [rax - 0x7d] ; ret
0x00000000001643bf : sub dword ptr [rsp + 0x10], eax ; call 0x1106c6
0x0000000000121810 : sub dword ptr [rsp + 0x20], eax ; syscall
0x000000000010ed22 : sub dword ptr [rsp + 0xa0], eax ; syscall
0x000000000003ee4d : sub dword ptr [rsp + 0xf0], eax ; syscall
0x000000000015976e : sub eax, -0x80 ; pop rbx ; ret
0x000000000018aca7 : sub eax, -1 ; jne 0x18acb8 ; vzeroupper ; ret
0x000000000018f167 : sub eax, -1 ; jne 0x18f178 ; vzeroupper ; ret
0x000000000009a852 : sub eax, 0x10 ; ret
0x0000000000163896 : sub eax, 0x10c48348 ; pop rbx ; ret
0x0000000000118096 : sub eax, 0x200 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012c138 : sub eax, 0x39c3950f ; ret
0x000000000011bd7c : sub eax, 0x415d5b00 ; pop rsp ; ret
0x00000000001179f4 : sub eax, 0x5894800 ; retf
0x000000000011c5cf : sub eax, 0x5c415d00 ; ret
0x000000000011c599 : sub eax, 0x5d5b5900 ; pop r12 ; ret
0x000000000003e289 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x0000000000065e84 : sub eax, 0x83000000 ; ret
0x00000000000623a5 : sub eax, 0x83000000 ; ret 0x8b01
0x0000000000070df9 : sub eax, 0x83000019 ; ret 0xbe08
0x000000000007a837 : sub eax, 0x83003706 ; retf
0x000000000011a01c : sub eax, 0x850f0100 ; ret
0x000000000011b18d : sub eax, 0x850f0100 ; ret 0
0x000000000011aabc : sub eax, 0x850f0100 ; retf 3
0x000000000018a93f : sub eax, 0xc5000001 ; std ; xlatb ; ret
0x00000000001c2bbd : sub eax, 0xcc240002 ; stc ; call rax
0x000000000009f7ad : sub eax, 0xe8b1eb00 ; retf 0x954
0x00000000001aa566 : sub eax, 0xea4ca798 ; retf
0x00000000000ee647 : sub eax, 0xebffffff ; ret 0x1f0f
0x0000000000002915 : sub eax, 0xeeef33a1 ; retf 0x182c
0x00000000000e2fd7 : sub eax, 0xf0658d48 ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000bd432 : sub eax, 0xf480001 ; ret 0x66c3
0x00000000001319de : sub eax, 0xf480004 ; ret 0xc3f3
0x0000000000119b70 : sub eax, 0xf70c7400 ; ret 0xfc07
0x0000000000196f3a : sub eax, 0xfc08548 ; xchg eax, ebp ; ret
0x00000000001c64e5 : sub eax, 0xfd80000 ; cli ; call qword ptr [rdi]
0x00000000000514d7 : sub eax, 1 ; cmp rbx, rax ; jne 0x514d9 ; pop rbx ; ret
0x00000000000a14b2 : sub eax, 1 ; jne 0xa14af ; pop rbx ; pop rbp ; ret
0x000000000002cb54 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000052bff : sub eax, 1 ; ret
0x00000000000bc096 : sub eax, dword ptr [r8 + r9*4] ; je 0xbc07f ; ret
0x00000000001988f1 : sub eax, dword ptr [rax + rax] ; add byte ptr [rcx + 1], cl ; fmul dword ptr [rax + 0x11] ; ret 0x8148
0x00000000000bc097 : sub eax, dword ptr [rax + rcx*4] ; je 0xbc07e ; ret
0x00000000001c62e1 : sub eax, dword ptr [rax] ; add ah, ch ; retf
0x00000000001c62cd : sub eax, dword ptr [rax] ; add al, ah ; retf
0x00000000001359ea : sub eax, dword ptr [rax] ; add byte ptr [rax + rax], al ; add al, ch ; retf
0x00000000001227de : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000013ccc0 : sub eax, dword ptr [rax] ; call r12
0x000000000013c9b6 : sub eax, dword ptr [rax] ; call rax
0x00000000001309bf : sub eax, dword ptr [rax] ; cmp rdx, rax ; jne 0x1309a8 ; ret
0x00000000001310dc : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000030def : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000059806 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000001001d1 : sub eax, dword ptr [rcx - 1] ; dec dword ptr [rax - 0x77] ; ret
0x00000000001232a1 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001d629d : sub eax, dword ptr [rcx] ; add byte ptr [rax], dl ; add esi, esp ; call qword ptr [rsi]
0x00000000001d62b1 : sub eax, dword ptr [rcx] ; add byte ptr [rbx + rax], bl ; hlt ; jmp qword ptr [rcx]
0x000000000009041e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000089465 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000089355 : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000084d85 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000089456 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000089346 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000bc04a : sub eax, dword ptr [rdx + rcx*4] ; je 0xbc036 ; ret
0x00000000001c2b4d : sub eax, dword ptr [rdx] ; add ah, al ; ret 0xfff9
0x000000000008fb23 : sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000013c9b5 : sub eax, dword ptr cs:[rax] ; call rax
0x000000000018a0fd : sub eax, eax ; cmp eax, ecx ; jle 0x18a141 ; movsxd rax, ecx ; ret
0x000000000018a3b3 : sub eax, eax ; ret
0x000000000012bef5 : sub eax, ecx ; cmp sil, cl ; cmovne eax, edx ; ret
0x000000000012be83 : sub eax, ecx ; cmp sil, dl ; cmovne eax, ecx ; ret
0x000000000018acf3 : sub eax, ecx ; je 0x18ad09 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000008f0d9 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x0000000000054af0 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000a9e4c : sub eax, ecx ; ret
0x000000000009e7b1 : sub eax, edi ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000000b17b9 : sub eax, edi ; ret
0x00000000000d0afe : sub eax, edi ; shr rax, 2 ; ret
0x000000000012bebe : sub eax, edx ; cmp dil, cl ; cmovne eax, esi ; ret
0x0000000000054c93 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x00000000000438e9 : sub eax, edx ; ret
0x000000000003db86 : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000003e26f : sub eax, edx ; shr eax, 0x1f ; ret
0x000000000003de9d : sub eax, edx ; shr rax, 0x3f ; ret
0x000000000018fb10 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000018acbc : sub eax, edx ; vzeroupper ; ret
0x0000000000141669 : sub eax, esi ; add eax, edi ; cmovs eax, edx ; ret
0x000000000018a15d : sub eax, esi ; ret
0x000000000012bef4 : sub eax, r9d ; cmp sil, cl ; cmovne eax, edx ; ret
0x000000000012be82 : sub eax, r9d ; cmp sil, dl ; cmovne eax, ecx ; ret
0x00000000001ab7be : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000008b8a0 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001bf5d1 : sub ebp, ebp ; call rax
0x00000000001bf5d9 : sub ebp, ebp ; jmp rsp
0x00000000000600bf : sub ebp, ecx ; retf
0x0000000000121d73 : sub ebx, 0x8949002c ; retf 0x8b
0x0000000000081e96 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001410d2 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000001aa255 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000000306f : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000cbc1c : sub ebx, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001bd1d5 : sub ebx, edi ; jmp qword ptr [rax]
0x000000000003f854 : sub ecx, -0x80 ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; ret
0x00000000000bd5d7 : sub ecx, 4 ; mov rax, rcx ; ret
0x00000000000a6b56 : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000b7171 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000018e904 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x000000000009f14e : sub ecx, dword ptr [rip + 0x450f4800] ; ret 0xc3f3
0x00000000000e0691 : sub ecx, dword ptr [rsp + rsi*8] ; dec dword ptr [rax - 0x77] ; ret 0x8948
0x00000000000f29c4 : sub ecx, eax ; add rdx, rcx ; jmp 0xf2960
0x00000000000c6fbf : sub ecx, eax ; call 0x53234
0x000000000003db3b : sub ecx, edx ; not eax ; and eax, ecx ; ret
0x00000000000d060c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000015cb9a : sub edi, dword ptr [rax + 1] ; jmp 0x15cb74
0x00000000000bced1 : sub edi, dword ptr [rip + 0xf480001] ; ret 0x66c3
0x00000000001c2229 : sub edi, eax ; jmp qword ptr [rax]
0x00000000001bd219 : sub edi, ebx ; jmp rax
0x00000000001c1bb1 : sub edi, esi ; call rsp
0x0000000000003076 : sub edi, esi ; retf 0x54f7
0x000000000008fb50 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000008fb45 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000131a31 : sub edx, eax ; add eax, 0x450f4800 ; ret 0x66c3
0x00000000000abc54 : sub edx, eax ; jbe 0xabc97 ; add rax, rdi ; ret
0x00000000000abc64 : sub edx, eax ; jbe 0xabc99 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000abc74 : sub edx, eax ; jbe 0xabc99 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000abc84 : sub edx, eax ; jbe 0xabc99 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000d0424 : sub edx, eax ; jbe 0xd0467 ; add rax, rdi ; ret
0x00000000000d0434 : sub edx, eax ; jbe 0xd0469 ; lea rax, [rdi + rax + 0x10] ; ret
0x00000000000d0444 : sub edx, eax ; jbe 0xd0469 ; lea rax, [rdi + rax + 0x20] ; ret
0x00000000000d0454 : sub edx, eax ; jbe 0xd0469 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000037b0 : sub edx, eax ; loope 0x37da ; retf 0x5038
0x00000000001163d4 : sub edx, eax ; test eax, eax ; cmovns eax, edx ; ret
0x0000000000050c13 : sub edx, edi ; add rdx, rcx ; jmp 0x50c2d
0x0000000000050f14 : sub edx, edi ; add rdx, rcx ; jmp 0x50f2d
0x00000000001c0329 : sub edx, esi ; lcall [rax + 0x400013f] ; sub al, 0xf2 ; jmp rsp
0x000000000008ae4f : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000000a1302 : sub esi, 1 ; jne 0xa1300 ; xor eax, eax ; pop rbx ; ret
0x00000000000a13c2 : sub esi, 1 ; jne 0xa13c0 ; xor eax, eax ; ret
0x0000000000140e62 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x0000000000067c41 : sub esi, dword ptr [rsi] ; adc eax, 0x358d4800 ; out dx, al ; ret 0x14
0x0000000000044993 : sub esi, eax ; mov eax, r10d ; syscall
0x00000000001c0c11 : sub esi, ebp ; call qword ptr [rax]
0x00000000001164d4 : sub esi, ebx ; ret
0x0000000000051735 : sub esi, edi ; call 0x9d9f4
0x000000000010fa23 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000157ff2 : sub esp, -0x80 ; pop rbx ; ret
0x0000000000154471 : sub esp, 0x80 ; call 0x130698
0x00000000000d43fa : sub esp, 0x80 ; call 0x1306c8
0x00000000000e00a3 : sub esp, 8 ; syscall
0x000000000008f0d8 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000000fdbf6 : sub r8b, r13b ; ret
0x000000000003d328 : sub r9b, byte ptr [rip - 0x763f7b00] ; ret
0x000000000015976d : sub rax, -0x80 ; pop rbx ; ret
0x000000000009a851 : sub rax, 0x10 ; ret
0x00000000000a14b1 : sub rax, 1 ; jne 0xa14b0 ; pop rbx ; pop rbp ; ret
0x00000000000bb213 : sub rax, 1 ; ret
0x000000000009041d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000089464 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000089354 : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000084d84 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000089455 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000089345 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x000000000018a3b2 : sub rax, r8 ; ret
0x00000000000b17b8 : sub rax, rdi ; ret
0x00000000000d0afd : sub rax, rdi ; shr rax, 2 ; ret
0x00000000000438fd : sub rax, rdx ; ret
0x000000000003de9c : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000018e5df : sub rax, rdx ; vzeroupper ; ret
0x000000000018a15c : sub rax, rsi ; ret
0x00000000000bd5d6 : sub rcx, 4 ; mov rax, rcx ; ret
0x00000000000f29c3 : sub rcx, rax ; add rdx, rcx ; jmp 0xf2961
0x00000000000d060b : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000050c12 : sub rdx, r15 ; add rdx, rcx ; jmp 0x50c2e
0x0000000000050f13 : sub rdx, r15 ; add rdx, rcx ; jmp 0x50f2e
0x0000000000050f12 : sub rdx, r15 ; add rdx, rcx ; jmp 0x50f2f
0x00000000000abc53 : sub rdx, rax ; jbe 0xabc98 ; add rax, rdi ; ret
0x00000000000d0423 : sub rdx, rax ; jbe 0xd0468 ; add rax, rdi ; ret
0x00000000000a1301 : sub rsi, 1 ; jne 0xa1301 ; xor eax, eax ; pop rbx ; ret
0x00000000000a13c1 : sub rsi, 1 ; jne 0xa13c1 ; xor eax, eax ; ret
0x0000000000044992 : sub rsi, r8 ; mov eax, r10d ; syscall
0x0000000000051734 : sub rsi, rdi ; call 0x9d9f5
0x000000000010fa22 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000157ff1 : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000154470 : sub rsp, 0x80 ; call 0x130699
0x00000000000d43f9 : sub rsp, 0x80 ; call 0x1306c9
0x00000000000e00a2 : sub rsp, 8 ; syscall
0x00000000001c40a4 : sub sil, r12b ; call rcx
0x000000000003df98 : subps xmm0, xmm1 ; ret
0x000000000003df97 : subsd xmm0, xmm1 ; ret
0x000000000003e304 : subss xmm0, xmm1 ; ret
0x00000000000013c0 : syscall
0x000000000012c77b : test ah, ah ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000000000046ebc : test ah, ah ; or byte ptr [rax], al ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000010d9b7 : test ah, al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdx]
0x0000000000058c6d : test ah, bh ; dec dword ptr [rax + 0x29] ; ret
0x00000000000c6c16 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x0000000000188d48 : test ah, dh ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000015e8df : test ah, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000189c48 : test ah, dh ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000188b68 : test ah, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000189a68 : test ah, dl ; add eax, 0x894d0000 ; retf
0x000000000011060d : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000000000d195e : test al, 0 ; add byte ptr [rax], al ; call rbx
0x0000000000153062 : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000d1996 : test al, 0 ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000040208 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000001598ef : test al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002f150 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000001176b1 : test al, 0 ; add byte ptr [rax], al ; syscall
0x00000000001cdff5 : test al, 0 ; add byte ptr [rax], bh ; clc ; in al, dx ; call qword ptr [rax]
0x00000000000d32ff : test al, 0x31 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000003e3a : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001c2dac : test al, 0x38 ; add al, byte ptr [rax] ; test bh, bh ; stc ; call rax
0x000000000011d77e : test al, 0x45 ; mov esp, esi ; call r15
0x00000000001c0954 : test al, 0x6a ; add dword ptr [rax], eax ; add al, 0xad ; hlt ; jmp rsp
0x00000000000c8e23 : test al, 0x76 ; retf 0x8d4c
0x00000000000a7a0e : test al, 0x88 ; push rbp ; ret 0xb60f
0x00000000001aab17 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000001d8478 : test al, 0xa2 ; hlt ; jmp qword ptr [rcx]
0x00000000001aa4fe : test al, 0xa7 ; mov bx, 0xf32d ; retf
0x00000000000794bd : test al, 0xaa ; adc eax, dword ptr [rax] ; call 0x125786
0x00000000001db7b8 : test al, 0xb2 ; cmc ; call rdi
0x00000000001b0cd4 : test al, 0xb6 ; jmp rsp
0x00000000001bee6c : test al, 0xbb ; add byte ptr [rax], al ; xchg eax, esp ; in al, dx ; jmp rax
0x0000000000057fcb : test al, 0xbe ; adc eax, 0x3d8d4800 ; retf 0x15fb
0x00000000000039bf : test al, 0xc6 ; std ; fld xword ptr [rsi + 0x7a697efd] ; retf 0xaec4
0x00000000001bf10c : test al, 0xcb ; add byte ptr [rax], al ; cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; jmp rsp
0x00000000001b05f0 : test al, 0xcd ; push qword ptr [rdi] ; ret
0x00000000001d10f0 : test al, 0xd9 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb esi, eax ; jmp rsi
0x00000000001c9ff1 : test al, 0xeb ; jmp rsp
0x00000000001d24f0 : test al, 0xed ; add byte ptr [rax], al ; sbb al, 0x13 ; int1 ; call rsp
0x00000000001af1f1 : test al, 0xef ; jmp rax
0x00000000000c9484 : test al, 0xf ; xchg dword ptr [rsi + 0x1000004], esi ; retf 0x8d49
0x00000000000d08a9 : test al, 0xf0 ; jne 0xd0908 ; lea rax, [rdi - 0x10] ; ret
0x00000000000d08a8 : test al, 0xf0 ; jne 0xd0909 ; lea rax, [rdi - 0x10] ; ret
0x00000000001d0ca8 : test al, 0xf2 ; out dx, eax ; call qword ptr [rax]
0x00000000001d528d : test al, 0xf3 ; jmp qword ptr [rcx]
0x00000000001e4948 : test al, 8 ; add byte ptr [rax], al ; ret
0x00000000000a3f11 : test al, 9 ; retf 0x5588
0x000000000003cc91 : test al, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; retf 0xeb08
0x00000000000b00ec : test al, ah ; or eax, 0x894d0000 ; retf
0x000000000017975c : test al, al ; and dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aa10a : test al, al ; jne 0xaa0f8 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000000bbdf0 : test al, al ; jne 0xbbd29 ; jmp 0xbbdce
0x000000000017a05c : test al, al ; sbb byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000af30c : test al, al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000004a86a : test al, bh ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; retf 0xfffe
0x00000000001dc27c : test al, bh ; cmc ; call rsp
0x00000000001af58d : test al, dh ; call qword ptr [rax]
0x00000000000af9fc : test al, dl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000046767 : test al, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7501
0x0000000000050c84 : test bh, ah ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000001c2db0 : test bh, bh ; stc ; call rax
0x0000000000196891 : test bh, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; retf
0x000000000008048c : test bh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000001ad424 : test bh, ch ; cmp cl, byte ptr [rsi] ; and byte ptr [rbx + 0x3d], bh ; retf
0x00000000000a02dc : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000001ab8d1 : test bh, dl ; retf 0xdf7f
0x0000000000090ff8 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000019b8fd : test bl, al ; add eax, 0x89490000 ; ret 0x8349
0x0000000000089b38 : test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000a43cb : test bl, ch ; cmp dword ptr [rax], eax ; add byte ptr [rbp + 0xf], al ; mov dh, 0x64 ; syscall
0x000000000004c888 : test bl, dh ; or dword ptr [rax], eax ; add byte ptr [rax], bh ; ret
0x00000000000c80a0 : test byte ptr [rax + 0x14c0000], ah ; ret 0x28b
0x000000000000075e : test byte ptr [rax + 0x2000008a], cl ; add byte ptr [rdx], dl ; retf
0x0000000000030696 : test byte ptr [rax + 0x200], bh ; ret
0x0000000000152f65 : test byte ptr [rax + 0x63], 4 ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000000e621a : test byte ptr [rax + 0x63], 4 ; mov dl, 0x48 ; add eax, edx ; jmp rax
0x000000000007b9c7 : test byte ptr [rax + 9], cl ; ret
0x000000000007ed3f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000131760 : test byte ptr [rax + rax*4], ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ff7fb : test byte ptr [rax + rbp*2], ah ; add dword ptr [rax], eax ; add al, ch ; retf 0xffe0
0x00000000001887b8 : test byte ptr [rax + rbx - 0x76b30000], al ; retf
0x00000000000c3ebf : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; retf 0x8948
0x000000000019bc75 : test byte ptr [rax + rcx*4], ah ; or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x00000000000f9cff : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; retf 0x31ff
0x00000000000c6770 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000014491f : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000001d0ecc : test byte ptr [rax + rsi*8], al ; jmp rcx
0x000000000008b2e3 : test byte ptr [rax - 0x18000000], dl ; ret
0x00000000001be6e0 : test byte ptr [rax - 0x18], ch ; jmp qword ptr [rax]
0x00000000000a7a86 : test byte ptr [rax - 0x75], 0x95 ; push -0x16000001 ; retf 0xfffa
0x000000000010019c : test byte ptr [rax - 0x7600000e], bl ; ret 0xe283
0x00000000000a0b1a : test byte ptr [rax - 0x77], 0xd0 ; cmovne rax, rdi ; ret
0x000000000010f616 : test byte ptr [rax - 0x77], 0xdf ; call rax
0x000000000010f673 : test byte ptr [rax - 0x77], 0xdf ; mov eax, 0x135 ; syscall
0x00000000000d43af : test byte ptr [rax - 0x77], 0xea ; mov rdi, r12 ; call 0xd0ea9
0x000000000015de81 : test byte ptr [rax - 0x77], 0xef ; call r12
0x000000000007ec71 : test byte ptr [rax - 0x77], 0xf0 ; ret
0x00000000001160f6 : test byte ptr [rax], 0xfd ; dec dword ptr [rax - 0x77] ; ret
0x000000000011a20a : test byte ptr [rax], ah ; add byte ptr [rax], al ; add al, ch ; retf
0x00000000000d259b : test byte ptr [rax], ah ; add byte ptr [rax], al ; add al, ch ; retf 0xffef
0x00000000000fa175 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000001dae : test byte ptr [rax], ah ; mov al, 0x72 ; retf
0x000000000017a71c : test byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000019a7aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000019380a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi] ; ret
0x000000000017efba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000b689a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x00000000000b786a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000017efea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000000b788a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi - 1], edx ; ret
0x00000000000b789a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x0000000000127f8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000017f02a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x00000000000b78da : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000008fe1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000017efca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x00000000000b787a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000008d17a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x0000000000154529 : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000000000860ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002190a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000114f8a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000008fdba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000d061a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000010f691 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000001be58d : test byte ptr [rax], al ; add byte ptr [rdi + rcx*2 - 0x18], al ; jmp rsp
0x00000000000a103b : test byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x2b48
0x000000000017b01c : test byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000179e1c : test byte ptr [rax], al ; sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000148fe3 : test byte ptr [rax], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000caf16 : test byte ptr [rax], bh ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0x8d44
0x00000000001c4fcc : test byte ptr [rax], bl ; add byte ptr [rax], al ; fsubr st(6), st(0) ; call qword ptr [rax]
0x00000000000afe9c : test byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a1c3b : test byte ptr [rax], dh ; add al, 0 ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000007b9c2 : test byte ptr [rax], dl ; or byte ptr [rcx], spl ; test byte ptr [rax + 9], cl ; ret
0x000000000012f232 : test byte ptr [rbp + 0x390b74d2], al ; ret 0xf7e
0x000000000003d869 : test byte ptr [rbp + 0x48000000], ah ; add edx, ecx ; jmp 0x3d888
0x0000000000023382 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x00000000001892e8 : test byte ptr [rbp + rcx], dl ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000c0677 : test byte ptr [rbp + rdi*8 + 0x3949ffff], dl ; ret 0x870f
0x00000000001be648 : test byte ptr [rbp - 0x18], bl ; jmp rsp
0x000000000014ddce : test byte ptr [rbp - 0x74ffffff], dl ; adc byte ptr [rdi], cl ; retf 0x5389
0x000000000011eafe : test byte ptr [rbp], bh ; add byte ptr [rax], al ; call rax
0x000000000012e7f3 : test byte ptr [rbx + 0x1c], 0x20 ; je 0x12e807 ; pop rbx ; ret
0x00000000001894c8 : test byte ptr [rbx + rcx], dh ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001053e0 : test byte ptr [rbx - 0x76fffffc], dl ; ret 0x8948
0x00000000000d87ea : test byte ptr [rbx - 0x7cfffffc], cl ; cli ; add al, 0x75 ; ret 0x8948
0x000000000013ec98 : test byte ptr [rbx - 0x7d000000], dh ; ret 0x8103
0x00000000000a6c73 : test byte ptr [rbx - 0x8fffff3], dl ; ret
0x000000000015ee10 : test byte ptr [rbx], bh ; add al, 0 ; add byte ptr [rcx - 0x39], cl ; ret 0xffff
0x00000000001c2228 : test byte ptr [rbx], ch ; clc ; jmp qword ptr [rax]
0x00000000000f45b0 : test byte ptr [rbx], cl ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000000000055a48 : test byte ptr [rbx], cl ; or al, byte ptr [rax] ; add byte ptr [rax], bh ; ret
0x000000000010be51 : test byte ptr [rbx], dl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000a016f : test byte ptr [rcx + 0xf], 0x45 ; retf 0x148
0x00000000000a1564 : test byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000a1764 : test byte ptr [rcx + 0xf], 0x95 ; ret 0x3844
0x00000000001896a8 : test byte ptr [rcx + rcx - 0x76b30000], dl ; retf
0x00000000000cb03a : test byte ptr [rcx + rcx*4 - 0x31], 0x83 ; ret 0x4105
0x00000000001d14cc : test byte ptr [rcx - 0x10], cl ; jmp qword ptr [rcx]
0x0000000000184ab6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001e2da5 : test byte ptr [rcx], 0 ; js 0x1e2def ; clc ; call rbx
0x00000000001c2ec0 : test byte ptr [rcx], ah ; cli ; call rax
0x00000000001dbbe1 : test byte ptr [rcx], al ; add ah, ch ; retf 0xfff5
0x00000000001dbc3d : test byte ptr [rcx], al ; add byte ptr [rax - 0x34], al ; cmc ; jmp rsp
0x00000000000faf46 : test byte ptr [rcx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8d49
0x000000000016c2c6 : test byte ptr [rcx], bh ; add al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000185896 : test byte ptr [rcx], bh ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016b5d6 : test byte ptr [rcx], ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001857a6 : test byte ptr [rcx], ch ; or eax, 0x894d0000 ; retf
0x000000000016b2f6 : test byte ptr [rcx], cl ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000014e69c : test byte ptr [rcx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000002a7a4 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x2a767
0x0000000000189888 : test byte ptr [rdi + rax - 0x76b30000], dh ; retf
0x00000000001af1bc : test byte ptr [rdi + rbp*8 - 0x10665f01], dl ; jmp rax
0x000000000011f0c4 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x00000000001bccf8 : test byte ptr [rdi - 3], 0xff ; xchg eax, esi ; std ; call qword ptr [rdi]
0x000000000007fab9 : test byte ptr [rdi], 0x84 ; popfq ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; retf
0x000000000009e7b6 : test byte ptr [rdi], 0x84 ; ret
0x00000000000a1292 : test byte ptr [rdi], 0x84 ; ret 0
0x00000000000ce449 : test byte ptr [rdi], 0x88 ; ret
0x000000000005a650 : test byte ptr [rdi], 0x88 ; retf
0x00000000000ee644 : test byte ptr [rdi], 0x8f ; sub eax, 0xebffffff ; ret 0x1f0f
0x0000000000197a09 : test byte ptr [rdi], 0x92 ; ret
0x0000000000107c3e : test byte ptr [rdi], 0x94 ; ret
0x000000000003fb55 : test byte ptr [rdi], 0x94 ; ret 0x854d
0x000000000011110f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000110c26 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x000000000006c138 : test byte ptr [rdi], 0x9f ; ret 0xd629
0x00000000000893a2 : test byte ptr [rdi], 4 ; sete al ; ret
0x00000000000893b2 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000b7218 : test byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000000000005a136 : test byte ptr [rdi], al ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000076455 : test byte ptr [rdi], bh ; adc al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c04
0x00000000000a0664 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000005013c : test byte ptr [rdi], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000006d67c : test byte ptr [rdi], ch ; loop 0x6d686 ; dec dword ptr [rax - 0x39] ; ret
0x00000000000a067c : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000030624 : test byte ptr [rdx + 0x200], al ; ret
0x000000000002aba9 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x2ab6c
0x00000000000f17e0 : test byte ptr [rdx + 0x63], 4 ; mov cl, 0x48 ; add eax, ecx ; jmp rax
0x00000000001da1cc : test byte ptr [rdx + 1], ch ; add byte ptr [rax + 0x62], dl ; cmc ; jmp qword ptr [rbx]
0x00000000001d81cc : test byte ptr [rdx + 1], cl ; add al, dh ; sahf ; hlt ; jmp qword ptr [rcx]
0x00000000001885d8 : test byte ptr [rdx + rbx], ah ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001d0aa4 : test byte ptr [rdx - 0x3f680000], al ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000062685 : test byte ptr [rdx - 0x9ffffe9], bh ; ret 0xf40
0x00000000000a02c4 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000009927e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000009b781 : test byte ptr [rdx], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0x6be2
0x00000000001bfa7c : test byte ptr [rdx], cl ; add dword ptr [rax], eax ; xchg eax, esp ; sub al, 0xee ; call rax
0x000000000009760e : test byte ptr [rdx], dh ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000009978e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000014e126 : test byte ptr [rip - 0x74fffffe], ah ; adc byte ptr [rdi], cl ; retf 0xd789
0x0000000000160b0e : test byte ptr [rip - 0x74fffffe], bl ; or byte ptr [r9], dil ; ret 0x5675
0x0000000000065f74 : test byte ptr [rip - 0x7c000003], dl ; ret
0x00000000000b185d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000000e1bc1 : test byte ptr [rsi + rdi*8 + 0x3d80ffff], ch ; push rbx ; ret 0x30
0x0000000000086404 : test byte ptr [rsi + rdi*8 - 0x76b30001], dh ; retf 0x8948
0x0000000000188988 : test byte ptr [rsi + rdx - 0x76b30000], dh ; retf
0x00000000001cd5cc : test byte ptr [rsi - 0x2e400000], bl ; in al, dx ; call rsi
0x00000000000275a1 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000001c0408 : test byte ptr [rsi - 0xe], bl ; call rax
0x000000000014cbb7 : test byte ptr [rsi], 0 ; lea r9, [rsp + 0x2c] ; call qword ptr [rax]
0x0000000000144675 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rsi]
0x00000000000a4e6e : test byte ptr [rsi], al ; sub dword ptr [rax], eax ; add bh, dh ; ret
0x00000000000b169d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000018cd3e : test byte ptr [rsi], ch ; adc al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018ca3e : test byte ptr [rsi], ch ; adc eax, 0x894d0000 ; retf
0x00000000000f73bd : test byte ptr [rsi], ch ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x000000000018dc3e : test byte ptr [rsi], ch ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018d33e : test byte ptr [rsi], ch ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000018d63e : test byte ptr [rsi], ch ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ffb01 : test byte ptr [rsp + rbx*2], ah ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000001883f8 : test byte ptr [rsp + rbx], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ff956 : test byte ptr [rsp], ah ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret
0x00000000000673c4 : test ch, al ; call 0xffffffffc38a73d0
0x000000000016035e : test ch, bl ; add byte ptr [rax], al ; add byte ptr [rbp + 0x63], cl ; retf
0x00000000000f742e : test ch, dh ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0x8b48
0x000000000018825b : test cl, ah ; sbb eax, 0x894d0000 ; retf
0x00000000001863d6 : test cl, bh ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a8429 : test cl, bh ; jne 0xa840d ; ret
0x000000000016bd06 : test cl, bh ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001c2d20 : test cl, bh ; stc ; call rax
0x00000000001861f6 : test cl, bl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000a317a : test cl, bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x000000000016ba26 : test cl, bl ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aa466 : test cl, ch ; adc al, 0 ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aa766 : test cl, ch ; adc dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ab666 : test cl, ch ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001862e6 : test cl, ch ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000ab366 : test cl, ch ; add eax, 0x894d0000 ; retf
0x00000000000ab066 : test cl, ch ; or byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000000aad66 : test cl, ch ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x000000000016c436 : test cl, cl ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x0000000000186106 : test cl, cl ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001c33c8 : test cl, cl ; cld ; push rsp ; adc al, byte ptr [rcx] ; add ah, al ; retf 0xfffc
0x000000000014387b : test cl, cl ; jne 0x143866 ; ret
0x00000000000a8278 : test cl, cl ; jne 0xa826d ; ret
0x00000000000a83c7 : test cl, cl ; jne 0xa83bf ; xor eax, eax ; ret
0x00000000000bae9f : test cl, cl ; jne 0xbae94 ; ret
0x00000000000baf4f : test cl, cl ; jne 0xbaf44 ; ret
0x00000000000bb20f : test cl, cl ; jne 0xbb208 ; sub rax, 1 ; ret
0x00000000001c2b88 : test cl, cl ; stc ; jmp rax
0x0000000000051917 : test dh, al ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000013e4bd : test dh, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x00000000000a8090 : test dh, dh ; jne 0xa8087 ; mov qword ptr [rdx], rcx ; ret
0x0000000000193694 : test dl, 0x40 ; jne 0x193659 ; lea rax, [rdi + 7] ; ret
0x00000000001936c2 : test dl, 4 ; jne 0x193659 ; lea rax, [rdi + 3] ; ret
0x000000000013ec41 : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rsi - 0x7d], ah ; call qword ptr [rax]
0x0000000000198eae : test dl, ah ; add eax, dword ptr [rax] ; add byte ptr [rcx], dh ; dec dword ptr [rax + 9] ; ret
0x00000000000c6bf8 : test dl, bh ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf
0x00000000000fc8f3 : test dl, ch ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; retf 0xc148
0x00000000000a82d2 : test dl, cl ; jne 0xa82b5 ; ret
0x00000000001d3c15 : test dl, dh ; call qword ptr [rdi]
0x000000000003cfe6 : test dl, dl ; jne 0x3cfc8 ; ret
0x00000000000a8234 : test dl, dl ; jne 0xa822d ; ret
0x00000000000bb0bf : test dl, dl ; jne 0xbb0b8 ; lea rax, [rcx - 1] ; ret
0x000000000011060c : test dword ptr [rax + 0x48000000], ebp ; add esp, 0x78 ; ret
0x00000000000cef13 : test dword ptr [rax + 0xf], 0x3949c79e ; ret 0x9d0f
0x00000000000b754b : test dword ptr [rax + 4], edx ; add byte ptr [rax], al ; ret
0x00000000000b8a6b : test dword ptr [rax + 7], edx ; add byte ptr [rax], al ; ret
0x00000000000b896b : test dword ptr [rax + 8], edx ; add byte ptr [rax], al ; ret
0x00000000000a1e8f : test dword ptr [rax + rax], edi ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000071144 : test dword ptr [rax + rbx], ecx ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000071423 : test dword ptr [rax - 0x16000007], edx ; ret
0x0000000000064a97 : test dword ptr [rax - 0x7d000000], esp ; ret
0x0000000000004708 : test dword ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000014cd6c : test dword ptr [rax], 0x4c8d4c00 ; and al, 0x20 ; call qword ptr [rax]
0x00000000000a02dd : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x00000000001bf735 : test dword ptr [rax], 0xedc70400 ; jmp rax
0x0000000000065456 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000010f867 : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000990ab : test dword ptr [rax], eax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000031401 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000005a111 : test dword ptr [rax], eax ; idiv edi ; call qword ptr [rax]
0x000000000010d9ad : test dword ptr [rax], edi ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x80], al ; jmp qword ptr [rdi]
0x0000000000031400 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000004f8fd : test dword ptr [rbp - 0x14000005], edi ; ret
0x00000000000f673b : test dword ptr [rbp - 0x74fffffc], eax ; pop rdx ; or bh, dh ; ret
0x00000000000abbd8 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x000000000010fca9 : test dword ptr [rbx + 0x48000000], edi ; add esp, 0x68 ; ret
0x0000000000001b12 : test dword ptr [rbx + 0x59e7c8ee], esi ; pop rbx ; ret 0x2a63
0x00000000000bcc80 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x00000000000d0798 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000017ef08 : test dword ptr [rbx + 2], eax ; add byte ptr [rax], al ; ret
0x000000000017eee8 : test dword ptr [rbx + 2], esp ; add byte ptr [rax], al ; ret
0x000000000017ee00 : test dword ptr [rbx + 3], ecx ; add byte ptr [rax], al ; ret
0x00000000000b8b60 : test dword ptr [rbx + 6], ebx ; add byte ptr [rax], al ; ret
0x0000000000190e77 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001912c6 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000002c33 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x000000000013119d : test dword ptr [rbx - 0x37000000], esp ; ret
0x000000000018af08 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x0000000000092680 : test dword ptr [rbx], eax ; add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f299a : test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000001aca : test dword ptr [rbx], ebx ; movsd dword ptr [rdi], dword ptr [rsi] ; jb 0x1b4f ; out dx, eax ; fidiv word ptr [rbx] ; retf
0x00000000001990e7 : test dword ptr [rbx], ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000197d18 : test dword ptr [rbx], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4c07
0x000000000005b940 : test dword ptr [rbx], esp ; adc eax, 0x83490000 ; ret
0x000000000009bf4c : test dword ptr [rcx + 0x48000000], esi ; add esp, 0x18 ; ret
0x000000000017ec0a : test dword ptr [rcx + 5], eax ; add byte ptr [rax], al ; ret
0x0000000000190e4d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b7132 : test dword ptr [rcx + 8], ebp ; add byte ptr [rax], al ; ret
0x0000000000190d5d : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000190c6d : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000bccc7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000195547 : test dword ptr [rcx + rax], edx ; add byte ptr [rax], al ; ret
0x00000000000bcc97 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000859c8 : test dword ptr [rcx - 0x16000002], esi ; retf 0xfffe
0x000000000017efaa : test dword ptr [rcx - 0x3cffffff], esp ; ret
0x0000000000034e62 : test dword ptr [rcx - 0x7d], 0x94e801c5 ; ret 0xfffe
0x00000000001c23ed : test dword ptr [rcx], 0xf8876400 ; jmp rsp
0x00000000001e2f1d : test dword ptr [rcx], 0xfb27d000 ; call rax
0x00000000001dbce9 : test dword ptr [rcx], eax ; add byte ptr [rcx + rdx*8], dh ; cmc ; jmp rsp
0x000000000018a94a : test dword ptr [rcx], edx ; add dword ptr [rax], eax ; add ch, al ; std ; xlatb ; ret 0xc085
0x00000000000d566a : test dword ptr [rcx], esi ; add byte ptr [rcx], dh ; dec dword ptr [rbx + rbp + 0x1d] ; retf 0x3185
0x00000000000caf3e : test dword ptr [rcx], esp ; or eax, dword ptr [rax] ; add byte ptr [rbp - 0x77], cl ; retf 0xc283
0x0000000000167473 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x00000000000b7297 : test dword ptr [rdi + rax], eax ; add byte ptr [rax], al ; ret
0x00000000000b7277 : test dword ptr [rdi + rax], esp ; add byte ptr [rax], al ; ret
0x0000000000107c33 : test dword ptr [rdi - 0x76fffff6], ecx ; ret 0xead1
0x00000000000a610c : test dword ptr [rdi - 0x78], 0x840f211c ; retf 0
0x00000000000a59c9 : test dword ptr [rdi - 0x78], 0x840f261c ; retf 0
0x000000000003f976 : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000012cf83 : test dword ptr [rdi], ebp ; idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000195ebc : test dword ptr [rdi], ebx ; or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000f6781 : test dword ptr [rdi], edi ; add al, 0 ; add dh, dh ; ret 0x7420
0x00000000000b7431 : test dword ptr [rdx + 5], ebp ; add byte ptr [rax], al ; ret
0x00000000000b8849 : test dword ptr [rdx + 9], esi ; add byte ptr [rax], al ; ret
0x00000000000cb2d8 : test dword ptr [rdx + rax], ecx ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000001921c2 : test dword ptr [rdx + rax], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000190b92 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000017eec7 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; ret
0x00000000000d58a1 : test dword ptr [rdx], ebp ; add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0xd], cl ; ret
0x0000000000001d52 : test dword ptr [rdx], ebx ; scasb al, byte ptr [rdi] ; retf 0x9226
0x000000000015936c : test dword ptr [rip - 0x16000002], edi ; retf
0x000000000018a93e : test dword ptr [rip - 0x3affffff], ebp ; std ; xlatb ; ret
0x000000000018e413 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x000000000010fece : test dword ptr [rsi + 0x48000000], edi ; add esp, 0x78 ; ret
0x00000000000d083d : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x0000000000194ed2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000b7255 : test dword ptr [rsi + 7], eax ; add byte ptr [rax], al ; ret
0x00000000000b7235 : test dword ptr [rsi + 7], esp ; add byte ptr [rax], al ; ret
0x00000000000b714d : test dword ptr [rsi + 8], ecx ; add byte ptr [rax], al ; ret
0x0000000000130bbd : test dword ptr [rsi - 0x14000002], edi ; retf 0xb7e8
0x00000000000038fe : test dword ptr [rsi - 0x5b], esi ; outsb dx, byte ptr [rsi] ; retf
0x000000000007e25d : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x00000000000fe8e5 : test dword ptr [rsi - 0xa000000], eax ; ret 0x7420
0x00000000000777a5 : test dword ptr [rsi], eax ; ret
0x0000000000191098 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000001ab9ad : test eax, 0x35eea9cd ; outsb dx, byte ptr [rsi] ; retf
0x00000000001ac800 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000171e36 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000003e340 : test eax, 0x7fffff ; je 0x3e339 ; ret
0x000000000011a33c : test eax, 0x89480001 ; ret 0xc9e8
0x00000000001b16f6 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000011f7ff : test eax, eax ; cmove eax, edx ; ret
0x00000000001163d6 : test eax, eax ; cmovns eax, edx ; ret
0x0000000000043994 : test eax, eax ; cmovs eax, edx ; pop rbx ; ret
0x0000000000116dac : test eax, eax ; je 0x116db7 ; ret
0x0000000000118d41 : test eax, eax ; je 0x118d50 ; mov qword ptr [rax], rdx ; ret
0x000000000011eafb : test eax, eax ; je 0x11eb88 ; call rax
0x000000000011ec92 : test eax, eax ; je 0x11ed78 ; call rax
0x0000000000130ea0 : test eax, eax ; je 0x130ed4 ; call rax
0x0000000000132f9a : test eax, eax ; je 0x132fb0 ; add rsp, 8 ; ret
0x000000000013c5e5 : test eax, eax ; je 0x13c5f5 ; mov rdi, rbx ; call rax
0x000000000013c89d : test eax, eax ; je 0x13c8ad ; mov rdi, rbx ; call rax
0x0000000000145786 : test eax, eax ; je 0x145795 ; ret
0x000000000014bac0 : test eax, eax ; je 0x14bad0 ; mov rdi, rbx ; call rax
0x000000000014bbfd : test eax, eax ; je 0x14bc0d ; mov rdi, rbx ; call rax
0x000000000014c4d7 : test eax, eax ; je 0x14c4e7 ; mov rdi, rbp ; call rax
0x000000000014c7e6 : test eax, eax ; je 0x14c7f5 ; ret
0x000000000014d56c : test eax, eax ; je 0x14d57c ; mov rdi, rbx ; call rax
0x000000000014d914 : test eax, eax ; je 0x14d928 ; mov rdi, qword ptr [rsp + 0x10] ; call rax
0x000000000014db21 : test eax, eax ; je 0x14db36 ; xor eax, eax ; ret
0x0000000000153951 : test eax, eax ; je 0x153961 ; mov rdi, r12 ; call rax
0x0000000000153b39 : test eax, eax ; je 0x153b4b ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000154f68 : test eax, eax ; je 0x154f78 ; mov rdi, r12 ; call rax
0x00000000001553a6 : test eax, eax ; je 0x1553b6 ; mov rdi, rbp ; call rax
0x0000000000155ead : test eax, eax ; je 0x155ebf ; lea rdi, [rbx + 0x68] ; call rax
0x00000000001565d7 : test eax, eax ; je 0x1565e7 ; mov rdi, r12 ; call rax
0x000000000015693d : test eax, eax ; je 0x15694f ; lea rdi, [rbx + 0x58] ; call rax
0x000000000015965f : test eax, eax ; je 0x15961a ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015960d : test eax, eax ; je 0x15961d ; pop rbx ; ret
0x0000000000159717 : test eax, eax ; je 0x1596c6 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000015a759 : test eax, eax ; je 0x15a76b ; lea rdi, [rbp + 0x10] ; call rax
0x000000000015aec2 : test eax, eax ; je 0x15aed4 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000015ffa6 : test eax, eax ; je 0x15ffb6 ; xor eax, eax ; ret
0x00000000001854c3 : test eax, eax ; je 0x1854cf ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001864a8 : test eax, eax ; je 0x1864b4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000019a2e1 : test eax, eax ; je 0x19a2f0 ; call rax
0x0000000000021c30 : test eax, eax ; je 0x21c40 ; mov rdi, r12 ; call rax
0x000000000002d4ab : test eax, eax ; je 0x2d4b5 ; call rax
0x000000000002e989 : test eax, eax ; je 0x2e993 ; call rax
0x000000000008a8ad : test eax, eax ; je 0x8a8bd ; pop rbx ; ret
0x0000000000091653 : test eax, eax ; je 0x9165d ; call rax
0x000000000009da50 : test eax, eax ; je 0x9da68 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dedae : test eax, eax ; je 0xdedd0 ; mov rsi, rdi ; xor edi, edi ; call rax
0x00000000000e4ac4 : test eax, eax ; je 0xe4ace ; call rax
0x00000000000e4c61 : test eax, eax ; je 0xe4c6e ; call rax
0x00000000000e4bc8 : test eax, eax ; je 0xe4d60 ; call rax
0x0000000000121882 : test eax, eax ; jl 0x12189f ; je 0x12188f ; ret
0x000000000010e62c : test eax, eax ; jne 0x10e651 ; mov eax, 0x11 ; syscall
0x000000000010e6dc : test eax, eax ; jne 0x10e701 ; mov eax, 0x12 ; syscall
0x000000000010fea8 : test eax, eax ; jne 0x10ff1a ; mov eax, 0x101 ; syscall
0x0000000000110079 : test eax, eax ; jne 0x110096 ; xor eax, eax ; syscall
0x0000000000110149 : test eax, eax ; jne 0x110169 ; mov eax, 1 ; syscall
0x00000000001105e6 : test eax, eax ; jne 0x110659 ; mov eax, 0x48 ; syscall
0x00000000001108c9 : test eax, eax ; jne 0x1108e9 ; mov eax, 3 ; syscall
0x0000000000110a69 : test eax, eax ; jne 0x110a89 ; mov eax, 0x55 ; syscall
0x0000000000114bb9 : test eax, eax ; jne 0x114bd9 ; mov eax, 7 ; syscall
0x000000000011579c : test eax, eax ; jne 0x1157c1 ; mov eax, 0x115 ; syscall
0x000000000011584c : test eax, eax ; jne 0x115871 ; mov eax, 0x11d ; syscall
0x0000000000116609 : test eax, eax ; jne 0x116629 ; mov eax, 0x13 ; syscall
0x00000000001166a9 : test eax, eax ; jne 0x1166c9 ; mov eax, 0x14 ; syscall
0x0000000000116ada : test eax, eax ; jne 0x116b11 ; mov eax, 0x71 ; syscall
0x0000000000116b7a : test eax, eax ; jne 0x116bb1 ; mov eax, 0x72 ; syscall
0x0000000000116fec : test eax, eax ; jne 0x117011 ; mov eax, 0x17 ; syscall
0x0000000000117209 : test eax, eax ; jne 0x117229 ; mov eax, 0x4a ; syscall
0x00000000001172b9 : test eax, eax ; jne 0x1172d9 ; mov eax, 0x4b ; syscall
0x000000000011bb19 : test eax, eax ; jne 0x11bb39 ; mov eax, 0x1a ; syscall
0x0000000000121b6c : test eax, eax ; jne 0x121b91 ; mov eax, 0xe8 ; syscall
0x0000000000121c1c : test eax, eax ; jne 0x121c41 ; mov eax, 0x114 ; syscall
0x0000000000121ccc : test eax, eax ; jne 0x121cf1 ; mov eax, 0x116 ; syscall
0x0000000000121d7c : test eax, eax ; jne 0x121da1 ; mov eax, 0x113 ; syscall
0x0000000000121e49 : test eax, eax ; jne 0x121e69 ; mov eax, 0x130 ; syscall
0x00000000001227d9 : test eax, eax ; jne 0x1227f9 ; mov eax, 0x2b ; syscall
0x00000000001228a9 : test eax, eax ; jne 0x1228c9 ; mov eax, 0x2a ; syscall
0x0000000000122acc : test eax, eax ; jne 0x122af1 ; mov eax, 0x2d ; syscall
0x0000000000122b99 : test eax, eax ; jne 0x122bb9 ; mov eax, 0x2f ; syscall
0x0000000000122cf9 : test eax, eax ; jne 0x122d19 ; mov eax, 0x2e ; syscall
0x0000000000122d9c : test eax, eax ; jne 0x122dc1 ; mov eax, 0x2c ; syscall
0x00000000001231ec : test eax, eax ; jne 0x123211 ; mov eax, 0x120 ; syscall
0x000000000012329c : test eax, eax ; jne 0x1232c1 ; mov eax, 0x12b ; syscall
0x000000000012334c : test eax, eax ; jne 0x123371 ; mov eax, 0x133 ; syscall
0x00000000001234ec : test eax, eax ; jne 0x123511 ; mov eax, 0x45 ; syscall
0x000000000012359c : test eax, eax ; jne 0x1235c1 ; mov eax, 0x46 ; syscall
0x00000000001306b0 : test eax, eax ; jne 0x1306ab ; pop rdx ; pop r10 ; ret
0x0000000000130f60 : test eax, eax ; jne 0x130f99 ; mov eax, 0xe6 ; syscall
0x0000000000145bca : test eax, eax ; jne 0x145bd5 ; ret
0x00000000001480c8 : test eax, eax ; jne 0x1480d5 ; ret
0x0000000000153d76 : test eax, eax ; jne 0x153d85 ; ret
0x000000000015a966 : test eax, eax ; jne 0x15a975 ; ret
0x00000000001635aa : test eax, eax ; jne 0x1635bf ; xor eax, eax ; pop rbx ; ret
0x0000000000169a2d : test eax, eax ; jne 0x169a4f ; mov eax, 0x27 ; syscall
0x000000000018a601 : test eax, eax ; jne 0x18a629 ; xor eax, eax ; vzeroupper ; ret
0x000000000018f5b1 : test eax, eax ; jne 0x18f5d9 ; xor eax, eax ; vzeroupper ; ret
0x000000000019c698 : test eax, eax ; jne 0x19c6b0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000448c9 : test eax, eax ; jne 0x448e9 ; mov eax, 0x13e ; syscall
0x00000000000673e6 : test eax, eax ; jne 0x673a9 ; mov rdi, r13 ; call 0x836d9
0x000000000007b5df : test eax, eax ; jne 0x7b5f8 ; mov rax, rbx ; pop rbx ; ret
0x000000000008ea8c : test eax, eax ; jne 0x8ea85 ; ret
0x000000000008fb04 : test eax, eax ; jne 0x8fafd ; ret
0x000000000009cfbf : test eax, eax ; jne 0x9cfb6 ; xor eax, eax ; ret
0x00000000000abc05 : test eax, eax ; jne 0xabc66 ; xor eax, eax ; ret
0x00000000000ac0a8 : test eax, eax ; jne 0xac126 ; xor eax, eax ; ret
0x00000000000ac0d7 : test eax, eax ; jne 0xac156 ; xor eax, eax ; ret
0x00000000000bd261 : test eax, eax ; jne 0xbd235 ; ret
0x00000000000d03d5 : test eax, eax ; jne 0xd0436 ; xor eax, eax ; ret
0x00000000000e0e5a : test eax, eax ; jne 0xe0e91 ; mov eax, 0x74 ; syscall
0x00000000000e48e9 : test eax, eax ; jne 0xe4909 ; mov eax, 0x22 ; syscall
0x00000000000e4999 : test eax, eax ; jne 0xe49b9 ; mov eax, 0x23 ; syscall
0x00000000000e598a : test eax, eax ; jne 0xe59c1 ; mov eax, 0x69 ; syscall
0x00000000000e5a1a : test eax, eax ; jne 0xe5a51 ; mov eax, 0x6a ; syscall
0x00000000000e5caa : test eax, eax ; jne 0xe5ce1 ; mov eax, 0x75 ; syscall
0x00000000000e5d4a : test eax, eax ; jne 0xe5d81 ; mov eax, 0x77 ; syscall
0x00000000000877bb : test eax, eax ; js 0x877cd ; ret
0x00000000000916c6 : test eax, eax ; js 0x916d5 ; ret
0x00000000000bcf9d : test eax, eax ; mov dword ptr [rcx + 4], r8d ; jne 0xbcf71 ; ret
0x000000000014b106 : test eax, eax ; sete al ; add rsp, 8 ; ret
0x0000000000082384 : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x0000000000123ba0 : test eax, edx ; idiv edi ; inc dword ptr [rcx + rcx*4 - 0x30] ; syscall
0x0000000000078123 : test eax, esi ; retf
0x0000000000123a95 : test eax, esp ; idiv edi ; dec dword ptr [rax + 0x63] ; ret 0x8b41
0x000000000011d239 : test ebp, ebp ; jne 0x11d258 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011dda4 : test ebp, ebp ; jne 0x11ddd0 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011ddd7 : test ebp, ebp ; jne 0x11de29 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011de03 : test ebp, ebp ; jne 0x11de89 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000199d41 : test ebp, ebp ; jne 0x199d30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a36b : test ebp, ebp ; jne 0x19a358 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c8a9a : test ebp, esi ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x00000000000abb40 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000129de8 : test ebx, ebx ; jne 0x129e00 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a687 : test ebx, ebx ; mov rdi, rbx ; jne 0x19a680 ; pop rbx ; ret
0x000000000019aa14 : test ebx, ebx ; mov rdx, rbx ; jne 0x19aa10 ; pop rbx ; ret
0x00000000000ac018 : test ebx, esi ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000028d39 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000c7eba : test ecx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000193682 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000019a1e1 : test ecx, ecx ; je 0x19a1eb ; call rcx
0x000000000002d646 : test ecx, ecx ; je 0x2d650 ; call rcx
0x000000000008721f : test ecx, ecx ; je 0x87258 ; mov eax, edx ; pop rbx ; ret
0x00000000000bd07b : test ecx, ecx ; je 0xbd08e ; xor eax, eax ; ret
0x00000000000bd24b : test ecx, ecx ; jne 0xbd245 ; ret
0x00000000000bd31e : test ecx, ecx ; jne 0xbd319 ; xor edi, edi ; mov rax, rdi ; ret
0x00000000000d0bd9 : test ecx, ecx ; jne 0xd0b98 ; mov rax, rdx ; ret
0x00000000000bc0e3 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0xbc0df ; ret
0x0000000000140282 : test ecx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000000000dc5ac : test edi, ebx ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x894c
0x0000000000055896 : test edi, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xc001
0x000000000009476c : test edi, edi ; add al, 0 ; add byte ptr [rax + 0x39], cl ; ret 0xf275
0x000000000011d25f : test edi, edi ; jne 0x11d2a9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011d287 : test edi, edi ; jne 0x11d2c9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000011de8f : test edi, edi ; jne 0x11defa ; mov rdi, qword ptr [r13] ; call r12
0x000000000011debf : test edi, edi ; jne 0x11df2b ; mov rdi, qword ptr [r13] ; call r12
0x000000000013c881 : test edi, edi ; jne 0x13c875 ; pop rbx ; ret
0x0000000000199a45 : test edi, edi ; jne 0x199abc ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000134dd2 : test edi, edi ; js 0x134de9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000587ed : test edi, edi ; mov byte ptr [rsi], al ; jne 0x587e1 ; mov rax, rsi ; ret
0x00000000001c3149 : test edx, edi ; call rsp
0x00000000001307a6 : test edx, edx ; je 0x1307b8 ; mov rdi, qword ptr [rdi + 8] ; jmp qword ptr [rax]
0x000000000014e150 : test edx, edx ; je 0x14e160 ; mov rdi, rbp ; call rdx
0x000000000008993a : test edx, edx ; je 0x89951 ; mov eax, 0xffffffff ; ret
0x0000000000089d6a : test edx, edx ; je 0x89d81 ; mov eax, 0xffffffff ; ret
0x00000000000b1652 : test edx, edx ; je 0xb1661 ; bsf eax, edx ; ret
0x00000000000b16fb : test edx, edx ; je 0xb1718 ; bsf rax, rdx ; ret
0x00000000000b18ca : test edx, edx ; je 0xb18f8 ; bsf rax, rdx ; ret
0x0000000000121ee0 : test edx, edx ; jne 0x121f01 ; mov eax, 0x95 ; syscall
0x000000000015e370 : test edx, edx ; jne 0x15e389 ; mov eax, 1 ; ret
0x000000000015e3b0 : test edx, edx ; jne 0x15e3c9 ; mov eax, 1 ; ret
0x000000000008331f : test edx, edx ; jne 0x83315 ; ret
0x000000000008cea3 : test edx, edx ; jne 0x8ceb5 ; ret
0x000000000008db5f : test edx, edx ; jne 0x8db55 ; ret
0x000000000009d079 : test edx, edx ; jne 0x9d075 ; ret
0x00000000000be71a : test edx, edx ; jne 0xbe715 ; ret
0x00000000000bd52f : test edx, edx ; mov dword ptr [rax], edx ; jne 0xbd52f ; ret
0x00000000000d048f : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0xd0490 ; ret
0x00000000000bd9ce : test edx, edx ; sete al ; ret
0x00000000001c3148 : test edx, r15d ; call rsp
0x0000000000097d25 : test esi, ebx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000193675 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000118c21 : test esi, esi ; je 0x118c61 ; mov eax, 0x105 ; syscall
0x00000000000b17c1 : test esi, esi ; jne 0xb17d0 ; xor rax, rax ; ret
0x00000000000d0941 : test esi, esi ; jne 0xd0950 ; xor rax, rax ; ret
0x00000000000a0b19 : test esi, esi ; mov rax, rdx ; cmovne rax, rdi ; ret
0x00000000001c45b9 : test esi, esp ; call qword ptr [rdx]
0x00000000001c4639 : test esi, esp ; jmp rax
0x000000000019368f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000006655d : test esp, esp ; idiv bh ; jmp qword ptr [rax]
0x0000000000102467 : test esp, esp ; je 0x102481 ; mov rdi, rbx ; call r12
0x00000000000e79c7 : test esp, esp ; je 0xe79e1 ; mov rdi, rbx ; call r12
0x000000000009d034 : test esp, esp ; jne 0x9d05d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003f975 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x00000000000a82d1 : test r10b, r9b ; jne 0xa82b6 ; ret
0x0000000000102466 : test r12, r12 ; je 0x102482 ; mov rdi, rbx ; call r12
0x00000000000e79c6 : test r12, r12 ; je 0xe79e2 ; mov rdi, rbx ; call r12
0x000000000009d033 : test r12, r12 ; jne 0x9d05e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001854c2 : test r8d, r8d ; je 0x1854d0 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000001864a7 : test r8d, r8d ; je 0x1864b5 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000bd260 : test r8d, r8d ; jne 0xbd236 ; ret
0x00000000000a8428 : test r9b, dil ; jne 0xa840e ; ret
0x00000000000d0bd8 : test r9d, r9d ; jne 0xd0b99 ; mov rax, rdx ; ret
0x0000000000116dab : test rax, rax ; je 0x116db8 ; ret
0x0000000000118d40 : test rax, rax ; je 0x118d51 ; mov qword ptr [rax], rdx ; ret
0x000000000011eafa : test rax, rax ; je 0x11eb89 ; call rax
0x000000000011ec91 : test rax, rax ; je 0x11ed79 ; call rax
0x0000000000130e9f : test rax, rax ; je 0x130ed5 ; call rax
0x0000000000132f99 : test rax, rax ; je 0x132fb1 ; add rsp, 8 ; ret
0x000000000013c5e4 : test rax, rax ; je 0x13c5f6 ; mov rdi, rbx ; call rax
0x000000000013c89c : test rax, rax ; je 0x13c8ae ; mov rdi, rbx ; call rax
0x000000000014babf : test rax, rax ; je 0x14bad1 ; mov rdi, rbx ; call rax
0x000000000014bbfc : test rax, rax ; je 0x14bc0e ; mov rdi, rbx ; call rax
0x000000000014c4d6 : test rax, rax ; je 0x14c4e8 ; mov rdi, rbp ; call rax
0x000000000014d56b : test rax, rax ; je 0x14d57d ; mov rdi, rbx ; call rax
0x0000000000153950 : test rax, rax ; je 0x153962 ; mov rdi, r12 ; call rax
0x0000000000153b38 : test rax, rax ; je 0x153b4c ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000154f67 : test rax, rax ; je 0x154f79 ; mov rdi, r12 ; call rax
0x00000000001553a5 : test rax, rax ; je 0x1553b7 ; mov rdi, rbp ; call rax
0x0000000000155eac : test rax, rax ; je 0x155ec0 ; lea rdi, [rbx + 0x68] ; call rax
0x00000000001565d6 : test rax, rax ; je 0x1565e8 ; mov rdi, r12 ; call rax
0x000000000015693c : test rax, rax ; je 0x156950 ; lea rdi, [rbx + 0x58] ; call rax
0x000000000015960c : test rax, rax ; je 0x15961e ; pop rbx ; ret
0x000000000015a758 : test rax, rax ; je 0x15a76c ; lea rdi, [rbp + 0x10] ; call rax
0x000000000015aec1 : test rax, rax ; je 0x15aed5 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000019a2e0 : test rax, rax ; je 0x19a2f1 ; call rax
0x0000000000021c2f : test rax, rax ; je 0x21c41 ; mov rdi, r12 ; call rax
0x000000000002d4aa : test rax, rax ; je 0x2d4b6 ; call rax
0x000000000002e988 : test rax, rax ; je 0x2e994 ; call rax
0x000000000008a8ac : test rax, rax ; je 0x8a8be ; pop rbx ; ret
0x0000000000091652 : test rax, rax ; je 0x9165e ; call rax
0x000000000009da4f : test rax, rax ; je 0x9da69 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4ac3 : test rax, rax ; je 0xe4acf ; call rax
0x00000000000e4c60 : test rax, rax ; je 0xe4c6f ; call rax
0x00000000000e4bc7 : test rax, rax ; je 0xe4d61 ; call rax
0x0000000000121881 : test rax, rax ; jl 0x1218a0 ; je 0x121890 ; ret
0x00000000001480c7 : test rax, rax ; jne 0x1480d6 ; ret
0x000000000008ea8b : test rax, rax ; jne 0x8ea86 ; ret
0x000000000008fb03 : test rax, rax ; jne 0x8fafe ; ret
0x000000000009cfbe : test rax, rax ; jne 0x9cfb7 ; xor eax, eax ; ret
0x000000000011d238 : test rbp, rbp ; jne 0x11d259 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000011dda3 : test rbp, rbp ; jne 0x11ddd1 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000199d40 : test rbp, rbp ; jne 0x199d31 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a36a : test rbp, rbp ; jne 0x19a359 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000129de7 : test rbx, rbx ; jne 0x129e01 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a686 : test rbx, rbx ; mov rdi, rbx ; jne 0x19a681 ; pop rbx ; ret
0x000000000019aa13 : test rbx, rbx ; mov rdx, rbx ; jne 0x19aa11 ; pop rbx ; ret
0x000000000019a1e0 : test rcx, rcx ; je 0x19a1ec ; call rcx
0x000000000002d645 : test rcx, rcx ; je 0x2d651 ; call rcx
0x000000000013c880 : test rdi, rdi ; jne 0x13c876 ; pop rbx ; ret
0x000000000013c87f : test rdi, rdi ; jne 0x13c877 ; pop rbx ; ret
0x000000000014e14f : test rdx, rdx ; je 0x14e161 ; mov rdi, rbp ; call rdx
0x00000000000b16fa : test rdx, rdx ; je 0xb1719 ; bsf rax, rdx ; ret
0x00000000000b18c9 : test rdx, rdx ; je 0xb18f9 ; bsf rax, rdx ; ret
0x000000000008331e : test rdx, rdx ; jne 0x83316 ; ret
0x000000000008cea2 : test rdx, rdx ; jne 0x8ceb6 ; ret
0x000000000008db5e : test rdx, rdx ; jne 0x8db56 ; ret
0x000000000009d078 : test rdx, rdx ; jne 0x9d076 ; ret
0x00000000000b17c0 : test rsi, rsi ; jne 0xb17d1 ; xor rax, rax ; ret
0x00000000000d0940 : test rsi, rsi ; jne 0xd0951 ; xor rax, rax ; ret
0x00000000001c4638 : test rsi, rsp ; jmp rax
0x00000000000a808f : test sil, sil ; jne 0xa8088 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002c32 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000011c1bf : ucomisd xmm4, xmm6 ; jae 0x11c1b9 ; divsd xmm1, xmm2 ; jmp 0x11c20b
0x000000000011c1c0 : ucomiss xmm4, xmm6 ; jae 0x11c1b8 ; divsd xmm1, xmm2 ; jmp 0x11c20a
0x000000000008d363 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000019258a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x000000000018eb4c : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000192c65 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018f031 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000192c69 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x000000000018ecd8 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000018ed7f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000192576 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x000000000019255d : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x000000000018ea95 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x000000000018ef9b : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x000000000018ec23 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x000000000018ebf5 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x000000000018ef12 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000192c5b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000192c5f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000193142 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000193208 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000193431 : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000192c74 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000192c78 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000192893 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x000000000019272c : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x000000000019252e : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x00000000001924f2 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000001929f5 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000192e18 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000192d7b : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000192c1a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000018b071 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, [r10 + r9] ; jmp r10
0x0000000000096e04 : vshufps xmm2, xmm2, xmm4, 0xff ; dec dword ptr [rax - 0x77] ; ret 0x8548
0x000000000018a4a8 : vzeroupper ; ret
0x000000000018a680 : vzeroupper ; xor eax, eax ; ret
0x000000000013f79f : wait ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000001404c1 : wait ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; fisttp dword ptr [rax + 1] ; ret
0x00000000001318f3 : wait ; clc ; dec dword ptr [rax + 0xf] ; ret 0xfc3
0x00000000001d7f51 : wait ; hlt ; jmp qword ptr [rcx]
0x00000000001e09a1 : wait ; idiv edi ; retf
0x0000000000133502 : wait ; mov rax, rdi ; ret
0x00000000001b0e90 : wait ; or dh, ah ; call qword ptr [rax]
0x00000000001b0e24 : wait ; or dh, ah ; call rax
0x00000000000228c1 : wait ; ret 7
0x00000000001bd745 : wait ; sti ; jmp rax
0x000000000009dd91 : wait ; xor eax, 0xf480001 ; ret 0x66c3
0x00000000000baadd : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000bab5f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000bac61 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002c88 : xabort -0xd ; ret
0x000000000014be5a : xadd edx, edi ; adc ch, byte ptr [rcx] ; retf 0xc8d
0x0000000000002c84 : xbegin 0xfffffffff8c6f084 ; ret
0x00000000001bcb6d : xchg ah, bh ; inc dword ptr [rax] ; xchg esp, edi ; call rax
0x00000000001852cf : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185af3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000018743f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184ebf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x0000000000185be3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185a03 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000004fc46 : xchg ah, dh ; std ; dec dword ptr [rax - 0x77] ; ret
0x00000000001849cb : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001851db : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001c5609 : xchg bh, ah ; call qword ptr [rcx]
0x000000000018bf6c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000018b78c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000018bb7c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b39c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018de9d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000a89fb : xchg bh, dh ; dec dword ptr [rax + 0x39] ; ret
0x000000000018c9a1 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x000000000018dba1 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018d2a1 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018d5a1 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018cc99 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000131b56 : xchg bl, dl ; add eax, 0x450f4800 ; ret 0x90c3
0x000000000005bd70 : xchg byte ptr [rax + 1], cl ; clc ; jmp rax
0x00000000000bba32 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000018644b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x0000000000187f9f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018777f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x0000000000184c4f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000009fdd6 : xchg byte ptr [rax + rdi*8], dl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000186f5f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x00000000000233e8 : xchg byte ptr [rax - 0x75], cl ; ret
0x0000000000184f8f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000185fa3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000001afe8c : xchg byte ptr [rax - 0xe], bh ; jmp rax
0x00000000001852ab : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000122571 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000018b53b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018537b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187abf : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000185733 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000018729f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000186a7f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x00000000000ec7db : xchg byte ptr [rbp - 0x16000002], dh ; retf
0x00000000000a14c9 : xchg byte ptr [rbx + 0x5d], bl ; ret
0x0000000000187c5f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000018512f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000186183 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000185913 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000018491f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x0000000000186363 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000184d1f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x00000000001ab6d5 : xchg byte ptr [rdi - 0x7c], dl ; xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000000c9120 : xchg byte ptr [rdi], ah ; or al, 0 ; add byte ptr [rbp - 0x77], cl ; ret 0xc149
0x000000000018ba2c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b24c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018c35c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000000285f3 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x00000000001851ff : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x0000000000186273 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001849ef : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x00000000000a63af : xchg byte ptr [rdx + rdx - 0x76b40000], dl ; ret 0xf748
0x0000000000186dbf : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000001cde63 : xchg byte ptr [rdx], al ; add cl, byte ptr [rsi + rcx + 8] ; ret
0x0000000000184a91 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185bb5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185ca5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185ac5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000184def : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x000000000005ed36 : xchg byte ptr [rsi - 0x7ab7ffed], ah ; ror byte ptr [rdi], 0x85 ; retf 6
0x000000000018cf46 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000186ef5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187bf5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018de46 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018d546 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018d246 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000187715 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018b92d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000296e5 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000018cc3e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018c25d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000018505f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000005bdd3 : xchg byte ptr [rsp + rbx], dh ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000185823 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000001bf6b9 : xchg ch, ch ; call rax
0x000000000018974f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000018956f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000189f47 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000188e67 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000189d67 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000000f2665 : xchg ch, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000017606f : xchg cl, al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; retf 0x377
0x00000000001c29c9 : xchg cl, bh ; call rsp
0x00000000001c29c8 : xchg cl, r15b ; call rsp
0x0000000000187f35 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187235 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000186d55 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000187a55 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000092475 : xchg dh, al ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000005cfc5 : xchg dh, bh ; or eax, 0x894c0000 ; retf 0x894c
0x000000000018ba7d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000002629 : xchg dh, ch ; ret 0x88ad
0x000000000018b29d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000184ab5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000001c3161 : xchg dl, bh ; call qword ptr [rax]
0x00000000001c3181 : xchg dl, bh ; jmp qword ptr [rax]
0x00000000001859d5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000013f3a1 : xchg dl, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001857f5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000001858e5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000185705 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000002d65 : xchg dl, cl ; rcr byte ptr [r10], 1 ; retf 0x2217
0x000000000007d419 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x0000000000052244 : xchg dword ptr [rax + rax - 0x76bc0000], esp ; retf 0x8341
0x00000000001e34f0 : xchg dword ptr [rax + rax], ecx ; retf
0x000000000004aaa6 : xchg dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x0000000000121b31 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000012e05f : xchg dword ptr [rax], ecx ; add byte ptr [rax - 0x77], cl ; ret 0xb2e9
0x00000000001ab6d8 : xchg dword ptr [rax], edi ; in eax, 0xe5 ; retf 0x2a91
0x00000000000234d4 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000001ab25f : xchg dword ptr [rbp - 0x5b], ebx ; xchg eax, ebp ; retf 0x33e6
0x00000000000729e8 : xchg dword ptr [rbp - 0x77000000], ecx ; ret 0x348
0x000000000006ad9f : xchg dword ptr [rbp - 0x77000000], esp ; ret 0x349
0x00000000000bd25f : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x0000000000079f89 : xchg dword ptr [rbx - 0x77000000], ecx ; ret 0x348
0x000000000007024c : xchg dword ptr [rbx - 0x7cffffde], ecx ; ret 0xbf08
0x0000000000070b76 : xchg dword ptr [rbx - 0x7cffffe3], ebp ; ret 0xbe08
0x00000000001aa4cc : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000010f3c1 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000725b4 : xchg dword ptr [rcx - 0x77000000], ecx ; ret 0x348
0x00000000000700d5 : xchg dword ptr [rcx - 0x7cffffe1], ebx ; ret 0xbf08
0x000000000007868e : xchg dword ptr [rcx - 0x7cffffea], edi ; ret 0xbf08
0x0000000000069ea3 : xchg dword ptr [rdi - 0x76fffff2], esp ; ret 0x349
0x000000000005d597 : xchg dword ptr [rdi - 0x76fffff3], edx ; ret 0x349
0x00000000000723cb : xchg dword ptr [rdi - 0x77000000], eax ; ret 0x348
0x00000000000726f2 : xchg dword ptr [rdi - 0x77000000], edx ; ret 0x348
0x000000000004aaa5 : xchg dword ptr [rdi - 0x7ab80000], eax ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x00000000001306ae : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x1306ad ; pop rdx ; pop r10 ; ret
0x000000000007d604 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000005d8ef : xchg dword ptr [rdx - 0x76fffff5], ecx ; ret 0x349
0x0000000000079ecd : xchg dword ptr [rdx - 0x76fffffd], esp ; ret 0x348
0x000000000007a126 : xchg dword ptr [rdx - 0x76fffffe], esp ; ret 0x348
0x0000000000070f75 : xchg dword ptr [rdx - 0x7cffffe2], ebp ; ret 0xbf08
0x0000000000071643 : xchg dword ptr [rdx - 0x7cfffff7], ebp ; ret 0xbf08
0x00000000000e6cd9 : xchg dword ptr [rdx], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000005be3e : xchg dword ptr [rip - 0x76ffffd9], edi ; ret 0x349
0x00000000000697a2 : xchg dword ptr [rip - 0x76ffffeb], edi ; ret 0x349
0x0000000000110406 : xchg dword ptr [rip - 0x76ffffff], ecx ; ret
0x0000000000077f1e : xchg dword ptr [rip - 0x7cffffdf], esp ; ret 0xbf08
0x0000000000070df8 : xchg dword ptr [rip - 0x7cffffe7], ebp ; ret 0xbe08
0x00000000000c9486 : xchg dword ptr [rsi + 0x1000004], esi ; retf 0x8d49
0x0000000000068a83 : xchg dword ptr [rsi - 0x76ffffdd], ebp ; ret 0x349
0x000000000007adc6 : xchg dword ptr [rsi - 0x77000000], edx ; ret 0x348
0x000000000014ff95 : xchg dword ptr [rsi - 0x77000000], esp ; retf 0x894c
0x00000000001aa66b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000188aa8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x00000000000e0872 : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f753c : xchg eax, ebp ; add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000000878f7 : xchg eax, ebp ; add byte ptr gs:[rax], al ; mov r10d, eax ; jmp 0x87891
0x00000000001dcc95 : xchg eax, ebp ; add dword ptr [rax], eax ; pop rax ; idiv r15b ; ret 0
0x0000000000084c5f : xchg eax, ebp ; call qword ptr [rdx]
0x00000000001b0ae5 : xchg eax, ebp ; call rsi
0x00000000001c31d1 : xchg eax, ebp ; cli ; call qword ptr [rax]
0x000000000007670c : xchg eax, ebp ; cmp bl, 0xff ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000008aa07 : xchg eax, ebp ; fdiv dword ptr [rip + 0x4f0f4800] ; ret 0x8948
0x00000000001bf091 : xchg eax, ebp ; in al, dx ; call rax
0x00000000001ced45 : xchg eax, ebp ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aa9a9 : xchg eax, ebp ; jge 0x1aa98c ; push r8 ; xor byte ptr [rcx], ah ; retf
0x00000000000a8426 : xchg eax, ebp ; mov dword ptr [rcx - 0x7c], 0xf3db75f9 ; ret
0x0000000000001edb : xchg eax, ebp ; mov esp, 0xf69e7650 ; xchg eax, r11d ; retf
0x0000000000131da6 : xchg eax, ebp ; mov rax, rdi ; ret
0x00000000000a7a89 : xchg eax, ebp ; push -0x16000001 ; retf 0xfffa
0x000000000002c9bb : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x0000000000031832 : xchg eax, ebp ; push 0xfffffff ; retf 0xc089
0x000000000000211b : xchg eax, ebp ; ret
0x0000000000199670 : xchg eax, ebp ; ret 0x145
0x0000000000111a65 : xchg eax, ebp ; ret 0x2141
0x0000000000119563 : xchg eax, ebp ; ret 0x233c
0x00000000000c19bd : xchg eax, ebp ; ret 0x294c
0x000000000011950b : xchg eax, ebp ; ret 0x2f3c
0x00000000000e05f3 : xchg eax, ebp ; ret 0x30
0x00000000000a1767 : xchg eax, ebp ; ret 0x3844
0x00000000000a82c8 : xchg eax, ebp ; ret 0x3941
0x0000000000110d1c : xchg eax, ebp ; ret 0x3948
0x0000000000145175 : xchg eax, ebp ; ret 0x8040
0x000000000014a6c5 : xchg eax, ebp ; ret 0x8041
0x000000000009552b : xchg eax, ebp ; ret 0x8348
0x0000000000051b57 : xchg eax, ebp ; ret 0x854d
0x0000000000157fdd : xchg eax, ebp ; ret 0x8b48
0x0000000000055471 : xchg eax, ebp ; ret 0x941
0x000000000005542e : xchg eax, ebp ; ret 0xb60f
0x0000000000197a5d : xchg eax, ebp ; ret 0xc149
0x00000000000987e4 : xchg eax, ebp ; ret 0xd020
0x0000000000041e75 : xchg eax, ebp ; ret 0xd021
0x000000000005fb3a : xchg eax, ebp ; ret 0xd120
0x00000000001069c2 : xchg eax, ebp ; ret 0xd320
0x0000000000197d8c : xchg eax, ebp ; ret 0xd349
0x00000000000401df : xchg eax, ebp ; ret 0xd521
0x000000000004fcaf : xchg eax, ebp ; ret 0xdaf7
0x0000000000198080 : xchg eax, ebp ; ret 0xf45
0x0000000000144e7a : xchg eax, ebp ; ret 0xf980
0x0000000000098b47 : xchg eax, ebp ; retf
0x0000000000003bb5 : xchg eax, ebp ; retf 0x10bf
0x00000000001ab262 : xchg eax, ebp ; retf 0x33e6
0x00000000000d9db7 : xchg eax, ebp ; retf 0xffff
0x00000000000efea3 : xchg eax, ebp ; rol byte ptr [rcx], 0xc0 ; ret
0x00000000000a82cf : xchg eax, ebp ; rol dword ptr [rbp - 0x7c], 0xca ; jne 0xa82b8 ; ret
0x0000000000119334 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000007bd1a : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x0000000000103fde : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x000000000008486d : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000001bd7b9 : xchg eax, ebp ; sti ; call qword ptr [rsi]
0x00000000001bd979 : xchg eax, ebp ; sti ; call rax
0x00000000001c3331 : xchg eax, ebp ; sti ; call rsp
0x00000000001bd975 : xchg eax, ebp ; sti ; inc dword ptr [rax - 0x6b] ; sti ; call rax
0x00000000001bd8f9 : xchg eax, ebp ; sti ; jmp rsp
0x0000000000162fda : xchg eax, ebp ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000002c31 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x00000000001ac6bc : xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x0000000000152195 : xchg eax, ebx ; adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x00000000000104f1 : xchg eax, ebx ; adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf 0
0x000000000013cfd1 : xchg eax, ebx ; add al, byte ptr [rax] ; mov rdi, rbp ; call r12
0x00000000000fecd4 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0xc148
0x0000000000085b22 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000001dcad5 : xchg eax, ebx ; add dword ptr [rax], eax ; call 0x181dc122
0x000000000018ffe0 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003a8d : xchg eax, ebx ; and cl, ah ; ret
0x00000000000f70e9 : xchg eax, ebx ; fild dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; fucomip st(0) ; retf
0x00000000001ad04c : xchg eax, ebx ; in al, dx ; retf 0xae32
0x00000000001bf6f1 : xchg eax, ebx ; in eax, dx ; call rsp
0x00000000000b675c : xchg eax, ebx ; lea rcx, [r11 + rcx] ; jmp rcx
0x000000000016c8a2 : xchg eax, ebx ; lea rdx, [r11 + rdx] ; jmp rdx
0x00000000001ac563 : xchg eax, ebx ; mov ebx, 0x1b5c347e ; jmp 0x1ac53d
0x00000000001af185 : xchg eax, ebx ; out dx, eax ; call qword ptr [rax]
0x000000000009cdc0 : xchg eax, ebx ; ret
0x0000000000196009 : xchg eax, ebx ; ret 0x2045
0x0000000000040ba8 : xchg eax, ebx ; ret 0x3948
0x0000000000041389 : xchg eax, ebx ; ret 0x3949
0x00000000000c96ff : xchg eax, ebx ; ret 0x394c
0x00000000000a4ff0 : xchg eax, ebx ; ret 0x394d
0x0000000000097f20 : xchg eax, ebx ; ret 0x3d83
0x0000000000083bde : xchg eax, ebx ; ret 0x841
0x00000000000c8e68 : xchg eax, ebx ; ret 0x845
0x000000000004168d : xchg eax, ebx ; ret 0x854d
0x00000000000a63a0 : xchg eax, ebx ; ret 0xd108
0x0000000000001ee2 : xchg eax, ebx ; retf
0x00000000000cf469 : xchg eax, ebx ; retf 0xe
0x0000000000003bae : xchg eax, ebx ; sbb al, 0xb ; push rbp ; jg 0x3c25 ; xchg eax, ebp ; retf 0x10bf
0x000000000014e5ee : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x0000000000197afb : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx + 0x21], cl ; ret
0x00000000001dc931 : xchg eax, ecx ; add dword ptr [rax], eax ; insb byte ptr [rdi], dx ; cmp dh, dh ; call qword ptr [rdi]
0x00000000001b036c : xchg eax, ecx ; fdiv st(2) ; call rcx
0x00000000001ae558 : xchg eax, ecx ; jo 0x1ae54a ; jmp rsp
0x00000000001ae5c4 : xchg eax, ecx ; jo 0x1ae5ba ; call qword ptr [rcx - 0x1b001390]
0x00000000001ae5c8 : xchg eax, ecx ; jo 0x1ae5ba ; jmp rsp
0x0000000000188041 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x00000000000f574b : xchg eax, ecx ; mov edx, 0x8948fff2 ; ret
0x0000000000155c01 : xchg eax, ecx ; or eax, dword ptr [rsi] ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x0000000000071373 : xchg eax, ecx ; retf
0x0000000000070654 : xchg eax, ecx ; retf 0xffff
0x00000000001bdcfd : xchg eax, ecx ; std ; call rax
0x00000000001bdac9 : xchg eax, ecx ; sti ; call rsp
0x00000000001bd98d : xchg eax, ecx ; sti ; jmp qword ptr [rax + 0x20fffb90]
0x00000000001bd989 : xchg eax, ecx ; sti ; jmp qword ptr [rax]
0x00000000001e1b05 : xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x000000000018676f : xchg eax, ecx ; sub eax, edx ; ret
0x000000000007ed02 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000500d5 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000010f3a8 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; adc dword ptr [rsi + 0x70], eax ; ret
0x00000000000dc4b5 : xchg eax, edi ; add rax, rdi ; jmp rax
0x000000000003c761 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x00000000001bcbb5 : xchg eax, edi ; cld ; jmp qword ptr [rax]
0x00000000001aaa15 : xchg eax, edi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x1aa9e3 ; mov ecx, 0x5b92ac50 ; retf
0x00000000001e08a5 : xchg eax, edi ; idiv edi ; retf
0x00000000001c23f1 : xchg eax, edi ; jmp rsp
0x0000000000114903 : xchg eax, edi ; mov edi, ebx ; call 0x110b25
0x000000000009dd65 : xchg eax, edi ; or eax, 0x450f4800 ; ret 0xc3f3
0x000000000006eacd : xchg eax, edi ; ret
0x000000000009668b : xchg eax, edi ; ret 0x394c
0x0000000000139f2b : xchg eax, edi ; ret 0x920f
0x00000000000ea9eb : xchg eax, edi ; ret 0xd008
0x0000000000096b91 : xchg eax, edi ; ret 0xeee9
0x0000000000142263 : xchg eax, edi ; ret 0xf631
0x0000000000001ed1 : xchg eax, edi ; retf 0x20f4
0x00000000001ab37d : xchg eax, edi ; retf 0xe152
0x00000000000e5f6e : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000124526 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x0000000000111df9 : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000001b2215 : xchg eax, edi ; stc ; call rax
0x00000000001b2211 : xchg eax, edi ; stc ; jmp qword ptr [rax - 0x2f000669]
0x00000000001bd969 : xchg eax, edi ; sti ; call qword ptr [rax + 0x20fffb96]
0x00000000001bd7a9 : xchg eax, edi ; sti ; call rsi
0x00000000001bd7a5 : xchg eax, edi ; sti ; inc dword ptr [rsi - 0x69] ; sti ; call rsi
0x00000000001ac6bb : xchg eax, edi ; xchg eax, ebp ; xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000001aab18 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000013d11b : xchg eax, edx ; add al, byte ptr [rax] ; mov rdi, rbp ; call r12
0x00000000000fbf0a : xchg eax, edx ; add rdx, r10 ; jmp rdx
0x0000000000084c58 : xchg eax, edx ; call qword ptr [rdx]
0x0000000000132166 : xchg eax, edx ; dec dword ptr [rax - 0x7f] ; ret
0x00000000001ac3dd : xchg eax, edx ; jae 0x1ac3ba ; push rsi ; pop rdx ; je 0x1ac3af ; ret 0xacfc
0x00000000001bd308 : xchg eax, edx ; je 0x1bd309 ; jmp qword ptr [rdx]
0x00000000001aaa1c : xchg eax, edx ; pop rbx ; retf
0x0000000000154d6a : xchg eax, edx ; ret
0x00000000000e56f5 : xchg eax, edx ; ret 0x148
0x0000000000048006 : xchg eax, edx ; ret 0x2948
0x0000000000052dee : xchg eax, edx ; ret 0x294c
0x00000000000350f8 : xchg eax, edx ; ret 0x8548
0x0000000000053635 : xchg eax, edx ; ret 0x8949
0x0000000000111dde : xchg eax, edx ; ret 0x970f
0x0000000000197a22 : xchg eax, edx ; ret 0xc031
0x00000000000e5f71 : xchg eax, edx ; ret 0xd029
0x000000000009d5f3 : xchg eax, edx ; ret 0xf083
0x000000000018a265 : xchg eax, edx ; ret 0xf40
0x00000000001aa4cf : xchg eax, edx ; ret 0xf869
0x00000000000a7bee : xchg eax, edx ; ret 0xffff
0x000000000018a14d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000001e1a05 : xchg eax, edx ; sti ; jmp qword ptr [rdx]
0x00000000001854c7 : xchg eax, edx ; sub eax, edx ; ret
0x000000000008cf14 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000001902e0 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000173633 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000002626 : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret 0x88ad
0x000000000002a401 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000000bbac4 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000000521ea : xchg eax, esi ; add rdx, rsi ; cmp r9d, 0x2f ; jmp rdx
0x000000000009b5aa : xchg eax, esi ; and esi, dword ptr [rip + 0x100] ; add cl, ch ; retf
0x00000000001d160d : xchg eax, esi ; call qword ptr [rax]
0x00000000001c2411 : xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000001bcbb1 : xchg eax, esi ; cld ; push qword ptr [rax] ; xchg eax, edi ; cld ; jmp qword ptr [rax]
0x00000000001bd79c : xchg eax, esi ; cwde ; sti ; jmp qword ptr [rsi]
0x00000000001bd2a4 : xchg eax, esi ; jno 0x1bd2a5 ; jmp qword ptr [rsi]
0x00000000001ac7c8 : xchg eax, esi ; jnp 0x1ac817 ; retf 0x99e0
0x000000000019039d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000001902fb : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000ef6dd : xchg eax, esi ; ret
0x000000000002eed6 : xchg eax, esi ; ret 0x18
0x000000000009d90b : xchg eax, esi ; ret 0x3145
0x000000000003fb8f : xchg eax, esi ; ret 0x394c
0x0000000000140e87 : xchg eax, esi ; ret 0x8341
0x000000000004865e : xchg eax, esi ; ret 0x8348
0x00000000000cc451 : xchg eax, esi ; ret 0xc085
0x00000000001acd6c : xchg eax, esi ; ret 0xcd11
0x000000000003fbb2 : xchg eax, esi ; ret 0xd108
0x00000000000cc4af : xchg eax, esi ; ret 0xd284
0x000000000009d8b3 : xchg eax, esi ; ret 0xf631
0x00000000000f472e : xchg eax, esi ; retf
0x0000000000101526 : xchg eax, esi ; retf 0x2e
0x000000000019034c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000ea80d : xchg eax, esi ; rol byte ptr [rcx - 0x7d], 0xfc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xd009
0x0000000000002ec0 : xchg eax, esi ; sbb eax, 0x8d468ae2 ; ret 0xc1bb
0x00000000001bccfc : xchg eax, esi ; std ; call qword ptr [rdi]
0x00000000001bcccc : xchg eax, esi ; std ; call qword ptr [rsi + 0x16fffd42]
0x00000000001bccd0 : xchg eax, esi ; std ; call qword ptr [rsi]
0x00000000001bd771 : xchg eax, esi ; sti ; call qword ptr [rax]
0x00000000001bd96d : xchg eax, esi ; sti ; jmp qword ptr [rax]
0x00000000001bd831 : xchg eax, esi ; sti ; jmp rdx
0x00000000001e232c : xchg eax, esp ; adc al, bh ; call qword ptr [rbx]
0x00000000000c86b7 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; retf 0x8948
0x00000000001dcb8d : xchg eax, esp ; add dword ptr [rax], eax ; and byte ptr [rbp - 0xa], al ; jmp qword ptr [rsi]
0x00000000001dcc05 : xchg eax, esp ; add dword ptr [rax], eax ; sub byte ptr [rsi - 0xa], al ; jmp qword ptr [rbx]
0x00000000001d7ddc : xchg eax, esp ; add dword ptr [rax], r8d ; jo 0x1d7d82 ; hlt ; jmp qword ptr [rcx]
0x00000000001becb8 : xchg eax, esp ; add ebp, esp ; call rsp
0x00000000000facc6 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x427e
0x00000000000c8810 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000144981 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x30e9
0x00000000001445b6 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; retf 0x30e9
0x0000000000144adb : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x3c], cl ; ret 0x55e9
0x00000000000ec538 : xchg eax, esp ; and al, 0xd0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000082eab : xchg eax, esp ; and al, 0xe0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001c2f40 : xchg eax, esp ; cli ; call rax
0x00000000001c0f49 : xchg eax, esp ; cmc ; jmp rsp
0x00000000001d71dc : xchg eax, esp ; cmp al, byte ptr [rcx] ; add al, dh ; hlt ; jmp qword ptr [rcx]
0x00000000001da16c : xchg eax, esp ; idiv eax ; jmp qword ptr [rbx]
0x00000000001da0dc : xchg eax, esp ; imul eax, dword ptr [rcx], 0xf5619000 ; jmp qword ptr [rbx]
0x00000000001e1bdc : xchg eax, esp ; in al, 1 ; add byte ptr [rax], dh ; xchg eax, ecx ; sti ; jmp qword ptr [rdx]
0x00000000001bee70 : xchg eax, esp ; in al, dx ; jmp rax
0x00000000001cf4dc : xchg eax, esp ; jbe 0x1cf4d0 ; call rsp
0x00000000001c0528 : xchg eax, esp ; jl 0x1c051f ; call rax
0x00000000001c0528 : xchg eax, esp ; jl 0x1c0520 ; call rax
0x00000000001be290 : xchg eax, esp ; jmp rdi
0x00000000001c04d8 : xchg eax, esp ; jne 0x1c04cf ; call rsp
0x00000000001c04d8 : xchg eax, esp ; jne 0x1c04d0 ; call rsp
0x0000000000002661 : xchg eax, esp ; jnp 0x2687 ; retf
0x000000000013be18 : xchg eax, esp ; jo 0x13be14 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; retf 4
0x00000000001becb4 : xchg eax, esp ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; xchg eax, esp ; add ebp, esp ; call rsp
0x00000000001c2094 : xchg eax, esp ; loop 0x1c209f ; add byte ptr [rax + rcx*8 - 9], dh ; jmp rax
0x00000000001db05c : xchg eax, esp ; nop ; cmc ; call qword ptr [rbx]
0x0000000000002dea : xchg eax, esp ; or cl, byte ptr [rcx - 0x13e347e0] ; clc ; ret
0x00000000001896a9 : xchg eax, esp ; or dword ptr [rax], eax ; add byte ptr [rbp - 0x77], cl ; retf
0x00000000001bf61c : xchg eax, esp ; out 0, al ; add byte ptr [rsi + rbp - 0x13], al ; call rsp
0x00000000001af1ad : xchg eax, esp ; out dx, eax ; call rsp
0x00000000001af1a9 : xchg eax, esp ; out dx, eax ; inc esp ; xchg eax, esp ; out dx, eax ; call rsp
0x00000000001af1bd : xchg eax, esp ; out dx, eax ; jmp qword ptr [rax - 0x1f001067]
0x00000000001b084c : xchg eax, esp ; push rax ; jmp rsp
0x00000000001c06dc : xchg eax, esp ; push rdi ; add dword ptr [rax], eax ; push rsp ; push rcx ; jmp rax
0x000000000014d5f8 : xchg eax, esp ; push rdi ; std ; dec dword ptr [rax + 0x39] ; ret
0x00000000001acf7f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1acf10 ; ret 0x48f
0x00000000001d4e8c : xchg eax, esp ; pushfq ; call qword ptr [rbx]
0x0000000000046c5e : xchg eax, esp ; ret
0x00000000001cf9dc : xchg eax, esp ; ret 0
0x00000000001047e8 : xchg eax, esp ; ret 0x1589
0x00000000000251cb : xchg eax, esp ; ret 0x1f0f
0x0000000000110deb : xchg eax, esp ; ret 0x2044
0x0000000000111654 : xchg eax, esp ; ret 0x2141
0x00000000000a837e : xchg eax, esp ; ret 0x3941
0x0000000000157e68 : xchg eax, esp ; ret 0x3d83
0x0000000000094191 : xchg eax, esp ; ret 0x40e9
0x0000000000104c1e : xchg eax, esp ; ret 0x5408
0x0000000000050ff0 : xchg eax, esp ; ret 0x540a
0x000000000012a067 : xchg eax, esp ; ret 0x5422
0x00000000000d1abd : xchg eax, esp ; ret 0x5438
0x0000000000149278 : xchg eax, esp ; ret 0x5522
0x00000000000e7c98 : xchg eax, esp ; ret 0x5c3c
0x000000000006a443 : xchg eax, esp ; ret 0x7f3c
0x00000000000ee015 : xchg eax, esp ; ret 0x8341
0x0000000000118528 : xchg eax, esp ; ret 0x840
0x000000000014429f : xchg eax, esp ; ret 0x841
0x0000000000143658 : xchg eax, esp ; ret 0x8440
0x00000000000a1399 : xchg eax, esp ; ret 0x8445
0x00000000000f92c4 : xchg eax, esp ; ret 0x8548
0x000000000003fb57 : xchg eax, esp ; ret 0x854d
0x00000000000d8f90 : xchg eax, esp ; ret 0x8d48
0x00000000000d377b : xchg eax, esp ; ret 0x8d4f
0x0000000000031d38 : xchg eax, esp ; ret 0xb60f
0x000000000018a150 : xchg eax, esp ; ret 0xc085
0x00000000000bffb0 : xchg eax, esp ; ret 0xc220
0x0000000000111111 : xchg eax, esp ; ret 0xc221
0x0000000000110c28 : xchg eax, esp ; ret 0xca21
0x00000000000ea814 : xchg eax, esp ; ret 0xd009
0x0000000000050ffe : xchg eax, esp ; ret 0xd084
0x0000000000199363 : xchg eax, esp ; ret 0xd231
0x0000000000021bcc : xchg eax, esp ; ret 0xd284
0x00000000000a81a3 : xchg eax, esp ; ret 0xd308
0x000000000008140d : xchg eax, esp ; ret 0xdaf7
0x0000000000023c2e : xchg eax, esp ; ret 0xfae9
0x0000000000198cd8 : xchg eax, esp ; ret 0xff31
0x00000000000f5030 : xchg eax, esp ; ret 0xfff2
0x0000000000034e68 : xchg eax, esp ; ret 0xfffe
0x00000000001bf104 : xchg eax, esp ; retf
0x00000000001bf204 : xchg eax, esp ; rol byte ptr [rax], 1 ; add byte ptr [rbp + rdi*4 - 0x14], al ; jmp rsp
0x00000000000d5f2c : xchg eax, esp ; rol byte ptr [rip + 0x16d], 0xf3 ; ret
0x000000000009f823 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc1 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000004f463 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000101ae5 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000009a812 : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000001bd801 : xchg eax, esp ; sti ; jmp qword ptr [rdx]
0x00000000001bfa80 : xchg eax, esp ; sub al, 0xee ; call rax
0x00000000001c3390 : xchg eax, esp ; xchg esp, edi ; call qword ptr [rax]
0x00000000001aa9a3 : xchg eax, esp ; xlatb ; retf 0xa1eb
0x0000000000001ee1 : xchg eax, r11d ; retf
0x0000000000052201 : xchg ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], al ; retf 0x8341
0x00000000001d4ba5 : xchg ebx, esi ; call rdx
0x00000000000a2b53 : xchg ecx, ebp ; retf 0xfffe
0x000000000009ade4 : xchg edi, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000000662b7 : xchg edi, ebx ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000092544 : xchg edi, esi ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000001c5631 : xchg edi, esp ; call qword ptr [rax]
0x000000000011c715 : xchg esi, eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; retf 0x8d4d
0x00000000001c3391 : xchg esp, edi ; call qword ptr [rax]
0x00000000001bcb71 : xchg esp, edi ; call rax
0x00000000000659f6 : xchg esp, esi ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000001dcc94 : xchg rax, rbp ; add dword ptr [rax], eax ; pop rax ; idiv r15b ; ret 0
0x0000000000152194 : xchg rax, rbx ; adc byte ptr [rax - 0x77], cl ; ret 0xec75
0x00000000000facc5 : xchg rax, rsp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret 0x427e
0x00000000000c0709 : xlatb ; add byte ptr [rax + 0x29], cl ; ret 0xf66
0x0000000000155d2d : xlatb ; add byte ptr [rax], al ; add al, ch ; retf 0x38
0x00000000001d0ec9 : xlatb ; add byte ptr [rax], al ; test byte ptr [rax + rsi*8], al ; jmp rcx
0x00000000001a7939 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000016c769 : xlatb ; add r9, r11 ; jmp r9
0x00000000000847c5 : xlatb ; call 0x212cb
0x000000000005b485 : xlatb ; cli ; cmp byte ptr [rax], al ; call rax
0x0000000000163157 : xlatb ; cli ; dec dword ptr [rbp - 0x7b] ; in al, 0xf ; sahf ; ret 0x8349
0x0000000000002dff : xlatb ; cmp ecx, dword ptr [rip - 0x7114c7b] ; ret
0x0000000000002733 : xlatb ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x00000000001164d2 : xlatb ; ja 0x116504 ; ret
0x00000000000bb4d3 : xlatb ; jb 0xbb4de ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000003ca4d : xlatb ; jmp rdi
0x000000000011fa86 : xlatb ; jne 0x11fa7f ; mov rax, qword ptr [rax + 8] ; ret
0x00000000001ab543 : xlatb ; jo 0x1ab5bf ; mov ebp, 0xfb67d10d ; ret
0x0000000000058872 : xlatb ; mov byte ptr [rsi], al ; jne 0x58858 ; mov rax, rsi ; ret
0x00000000000e4df1 : xlatb ; mov eax, esi ; syscall
0x00000000000e4e00 : xlatb ; mov eax, r8d ; syscall
0x00000000001411c6 : xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000f480a : xlatb ; mov qword ptr [rsp + 0x20], rdx ; call 0x212c8
0x000000000000239c : xlatb ; mov word ptr [rdx + rsi - 0x28], gs ; retf 0x23c4
0x000000000003e397 : xlatb ; movd xmm1, edi ; movaps xmm0, xmm1 ; ret
0x00000000001aa950 : xlatb ; out 0xb3, al ; retf 0xe80
0x00000000001cfe01 : xlatb ; out dx, al ; jmp qword ptr [rdi]
0x0000000000018ba8 : xlatb ; pop rbp ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000000aba54 : xlatb ; ret
0x00000000001ac9e6 : xlatb ; ret 0x4e27
0x0000000000003368 : xlatb ; ret 0x5a51
0x00000000000b14f7 : xlatb ; ret 0x94c
0x00000000000aba3f : xlatb ; ret 0xc085
0x00000000000a9f00 : xlatb ; ret 0xc148
0x000000000018abb4 : xlatb ; ret 0xe883
0x00000000000ac22b : xlatb ; ret 0xf188
0x00000000000b1674 : xlatb ; ret 0xf66
0x000000000018ad78 : xlatb ; ret 0xff2d
0x00000000000b10dd : xlatb ; retf
0x000000000005b1f5 : xlatb ; retf 0x15
0x00000000000d07b2 : xlatb ; retf 0x8548
0x00000000001aa9a4 : xlatb ; retf 0xa1eb
0x00000000000b15d4 : xlatb ; retf 0xc148
0x000000000018e512 : xlatb ; retf 0xc985
0x00000000001ab8d2 : xlatb ; retf 0xdf7f
0x00000000000a8b80 : xlatb ; retf 0xead3
0x00000000000d065c : xlatb ; retf 0xf66
0x000000000018e3e5 : xlatb ; retf 0xfdc5
0x00000000000abe21 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000018e445 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x00000000000abc03 : xlatb ; rol dword ptr [rbp + 0x315775c0], 0xc0 ; ret
0x00000000000ac0a6 : xlatb ; rol dword ptr [rbp + 0x317475c0], 0xc0 ; ret
0x00000000000ac0d5 : xlatb ; rol dword ptr [rbp + 0x317575c0], 0xc0 ; ret
0x000000000018a6c2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], 0xfd ; xlatb ; ret 0xc085
0x000000000018e192 : xlatb ; rol dword ptr [rbp - 0x3a678a40], 0xfd ; xlatb ; ret 0xc085
0x00000000000b6bce : xlatb ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4d10
0x0000000000193636 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000ac044 : xlatb ; ror dword ptr [rdi], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000a9de6 : xlatb ; sal bh, 1 ; ret 0x8000
0x00000000000a9ca6 : xlatb ; sal bh, 1 ; ret 0xc000
0x00000000000a9b66 : xlatb ; sal bh, 1 ; ret 0xe000
0x00000000000a9a26 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000000a98e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000000a97a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000000a9666 : xlatb ; sal bh, 1 ; ret 0xfe00
0x00000000000a9526 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000000a93e6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000000a92a6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000000a9166 : xlatb ; sal bh, 1 ; ret 0xffe0
0x00000000000a9026 : xlatb ; sal bh, 1 ; ret 0xfff0
0x00000000000a8ee6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x00000000000a8da6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x00000000000a8c66 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000193632 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000000b1495 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000b14a6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000121696 : xlatb ; shr rax, 0xc ; xor al, al ; or eax, edx ; ret
0x000000000010f0cb : xlatb ; syscall
0x00000000001674b8 : xlatb ; xor eax, eax ; ret
0x00000000000b6208 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000b619e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x00000000001d3378 : xor ah, bh ; add byte ptr [rax], al ; pop rcx ; loopne 0x1d336a ; jmp qword ptr [rbx]
0x0000000000002658 : xor ah, byte ptr [rsi] ; sahf ; jl 0x25f0 ; loop 0x263c ; ret 0x943d
0x00000000001c6b49 : xor al, 0 ; add ah, dh ; in eax, 0xe7 ; call qword ptr [rdx]
0x000000000000df48 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000122941 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x000000000009de02 : xor al, 0 ; add rsp, 8 ; ret
0x000000000009cbce : xor al, 0 ; call qword ptr [rax]
0x000000000009de15 : xor al, 0 ; mov qword ptr [rip + 0x34fbca], rax ; ret
0x000000000009de1c : xor al, 0 ; ret
0x00000000001bf9e0 : xor al, 0x12 ; out dx, al ; jmp rax
0x00000000001aa4ca : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x0000000000021c93 : xor al, 0x1b ; sbb dword ptr [rax], eax ; ret
0x00000000001c0ba0 : xor al, 0x22 ; cmc ; jmp qword ptr [rax]
0x000000000013ca52 : xor al, 0x24 ; mov rdi, r13 ; call r12
0x000000000013d072 : xor al, 0x24 ; mov rdi, rbp ; call r12
0x0000000000002099 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000fd698 : xor al, 0x39 ; ret
0x00000000000f0490 : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xf04af
0x00000000000f048f : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xf04b0
0x00000000000f048e : xor al, 0x39 ; sar byte ptr [rsi + 0x39], 1 ; movsxd rcx, edx ; jmp 0xf04b1
0x00000000001c27e0 : xor al, 0x3f ; stc ; call qword ptr [rax]
0x00000000001bf658 : xor al, 0x40 ; in eax, dx ; jmp rsp
0x00000000000ac15b : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x00000000001ac566 : xor al, 0x5c ; sbb ebp, ebx ; retf
0x00000000001c3070 : xor al, 0x63 ; cli ; jmp rax
0x000000000012701e : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x126ff6
0x0000000000128d3e : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x128d16
0x000000000013859e : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x138576
0x000000000013db9e : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x13db76
0x0000000000152a2e : xor al, 0x64 ; mov dword ptr [rbp], eax ; jmp 0x152a06
0x000000000002e282 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x00000000001c0f48 : xor al, 0x94 ; cmc ; jmp rsp
0x00000000001c3330 : xor al, 0x95 ; sti ; call rsp
0x00000000001d7e8c : xor al, 0x9a ; hlt ; jmp qword ptr [rcx]
0x00000000001d528c : xor al, 0xa8 ; jmp qword ptr [rcx]
0x000000000007d25b : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000001c36a4 : xor al, 0xc6 ; add dword ptr [rax], eax ; hlt ; retf
0x00000000001c3700 : xor al, 0xd0 ; std ; jmp qword ptr [rax]
0x00000000001dbcec : xor al, 0xd1 ; cmc ; jmp rsp
0x00000000001ab6aa : xor al, 0xd8 ; ret
0x00000000001bf820 : xor al, 0xf2 ; in eax, dx ; call rax
0x00000000000e48fb : xor al, 0xf3 ; ret
0x0000000000026fce : xor al, 0xf6 ; ret
0x00000000001bd235 : xor al, 0xfb ; call qword ptr [rax]
0x00000000001bf8e0 : xor al, 0xfc ; in eax, dx ; call rsp
0x00000000001bf908 : xor al, 0xff ; in eax, dx ; jmp rax
0x00000000000bd212 : xor al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000000bcc98 : xor al, 1 ; add byte ptr [rax], al ; ret
0x0000000000122691 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x00000000001c2cdd : xor al, 2 ; add ah, dh ; out dx, eax ; stc ; jmp rax
0x00000000001bf3f8 : xor al, 5 ; in eax, dx ; jmp rsp
0x000000000005a93b : xor al, 6 ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000012169b : xor al, al ; or eax, edx ; ret
0x00000000001af284 : xor al, al ; sti ; jmp qword ptr [rax + 0x10fffbc1]
0x00000000000c4905 : xor al, byte ptr [rax + rax] ; add al, ch ; ret 0xf6ba
0x000000000000075d : xor al, byte ptr [rax + rcx*4 + 0x2000008a] ; add byte ptr [rdx], dl ; retf
0x0000000000010018 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; retf
0x00000000001229d1 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000015f657 : xor al, byte ptr [rax] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x00000000001c0105 : xor al, byte ptr [rcx] ; add byte ptr [rax + rdi], al ; int1 ; jmp qword ptr [rax]
0x0000000000117331 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000c0a87 : xor al, ch ; ret
0x0000000000114a48 : xor ax, ax ; ret
0x00000000001e29e5 : xor bh, al ; call qword ptr [rbx]
0x00000000000abc8c : xor bl, al ; nop ; xor eax, eax ; ret
0x000000000000239f : xor bl, al ; retf 0x23c4
0x00000000001bd229 : xor bl, bh ; jmp qword ptr [rax]
0x00000000001af2f8 : xor bl, dh ; out dx, eax ; call rax
0x00000000001487d0 : xor byte ptr [eax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000bcd8c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000abb5d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x000000000010e7e3 : xor byte ptr [r15], r9b ; adc dword ptr [rdi + 0x40], eax ; ret
0x0000000000085d82 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000000520e7 : xor byte ptr [r8 - 0x75], r9b ; jg 0x5215d ; xor eax, eax ; ret
0x000000000014ec92 : xor byte ptr [r8 - 0x77], cl ; ret 0x8b48
0x00000000000bb974 : xor byte ptr [r8 - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000000f04f7 : xor byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x774
0x0000000000006f90 : xor byte ptr [r8], r8b ; add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add byte ptr [rax], dl ; retf
0x0000000000157662 : xor byte ptr [r9 - 0x77], r9b ; cmp r8b, r13b ; ret
0x00000000000f401f : xor byte ptr [r9], sil ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000115a79 : xor byte ptr [rax + 0x10], bh ; syscall
0x0000000000121f67 : xor byte ptr [rax + 0x149], bh ; syscall
0x00000000000071f0 : xor byte ptr [rax + 0x15], ah ; add byte ptr [rax], al ; retf
0x000000000003e86b : xor byte ptr [rax + 0x21], cl ; retf 0x948
0x00000000000a1b08 : xor byte ptr [rax + 0x29], cl ; ret 0x1f0f
0x0000000000088b80 : xor byte ptr [rax + 0x29], cl ; ret 0x3949
0x00000000000a2146 : xor byte ptr [rax + 0x29], cl ; ret 0xf66
0x000000000009ba96 : xor byte ptr [rax + 0x31], cl ; ret 0x3949
0x0000000000041308 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x000000000012aa93 : xor byte ptr [rax + 0x39], cl ; ret 0xf375
0x000000000013e605 : xor byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000b0f51 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x000000000018e022 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000156814 : xor byte ptr [rax + 1], bh ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000000000ac136 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000085d83 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x0000000000113764 : xor byte ptr [rax + 1], cl ; retf 0x8948
0x00000000000a1c3c : xor byte ptr [rax + rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000b92b7 : xor byte ptr [rax - 0x73], cl ; ret
0x0000000000052418 : xor byte ptr [rax - 0x75], cl ; jbe 0x52494 ; xor eax, eax ; ret
0x00000000000520e8 : xor byte ptr [rax - 0x75], cl ; jg 0x5215c ; xor eax, eax ; ret
0x000000000011d77a : xor byte ptr [rax - 0x75], cl ; jge 0x11d730 ; mov r12d, r14d ; call r15
0x0000000000052417 : xor byte ptr [rax - 0x75], r9b ; jbe 0x52495 ; xor eax, eax ; ret
0x00000000000b640f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000001531e9 : xor byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x28 ; call rcx
0x00000000000bdeef : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000013d233 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000001997d8 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000050999 : xor byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000011310e : xor byte ptr [rax - 0x77], cl ; ret 0x830f
0x000000000014ec93 : xor byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000d1e29 : xor byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000113760 : xor byte ptr [rax - 0x77], cl ; xor byte ptr [rax + 1], cl ; retf 0x8948
0x0000000000084312 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000001487d1 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x8b4c
0x00000000000fad09 : xor byte ptr [rax - 0x7d], cl ; mov byte ptr [rcx], 0x39 ; ret 0xce75
0x00000000000f7532 : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000001185cc : xor byte ptr [rax - 0x7d], cl ; ret 0x4104
0x00000000000f7d3d : xor byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000000000a1f7f : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f84a6 : xor byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000000000bb975 : xor byte ptr [rax - 0x7d], cl ; rol dword ptr [rax + 0x48], 0x39 ; retf 0xe475
0x00000000001bd10c : xor byte ptr [rax - 5], al ; call qword ptr [rax]
0x00000000000860db : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000f04f8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x774
0x0000000000084992 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; retf 0x8d49
0x0000000000021ec9 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; jmp rax
0x000000000009de4b : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021bae : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000042f63 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000001df9dc : xor byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 1
0x000000000003ecdd : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000051c66 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0x24] ; call rax
0x00000000000438a4 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr fs:[rbp], rdx ; call rax
0x0000000000043037 : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000003189b : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r12 ; call rax
0x000000000008050b : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rbp ; call rax
0x00000000000bbb13 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001df9a8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000122e91 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000130e9b : xor byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x130ed9 ; call rax
0x0000000000006f91 : xor byte ptr [rax], al ; add byte ptr [rcx], dl ; add byte ptr [rax], dl ; add byte ptr [rax], dl ; retf
0x000000000008424a : xor byte ptr [rax], al ; je 0x84255 ; ret
0x00000000000bacf7 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000675ec : xor byte ptr [rbp + 0x15], dl ; add byte ptr [rcx - 0x77], al ; retf
0x00000000000bcd90 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000bcd8f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000bb745 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x00000000000622e9 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x000000000008c516 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002398f : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001bdbb0 : xor byte ptr [rbx + rdi*8 - 0x4745f01], cl ; call qword ptr [rax]
0x00000000001bcf64 : xor byte ptr [rbx + rdi*8], dl ; call qword ptr [rax]
0x00000000001dc278 : xor byte ptr [rbx - 0x77bffff], cl ; cmc ; call rsp
0x000000000006a22a : xor byte ptr [rbx - 0x79f0f608], al ; retf 5
0x00000000001bd648 : xor byte ptr [rbx - 5], ch ; jmp qword ptr [rax + 0x20fffb6a]
0x00000000001c015c : xor byte ptr [rbx], 1 ; add byte ptr [rdx + rdx*2], ah ; int1 ; call qword ptr [rax]
0x00000000000bcd8d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000001993f5 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000000caec9 : xor byte ptr [rcx + 0x39], cl ; retf 0x8d49
0x0000000000001b24 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x000000000009d911 : xor byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xb60f
0x00000000001da078 : xor byte ptr [rcx + 1], ch ; add byte ptr [rcx], al ; cmc ; jmp qword ptr [rbx]
0x0000000000197c71 : xor byte ptr [rcx + 9], cl ; retf 0x2149
0x00000000001dcb78 : xor byte ptr [rcx + rax - 0x9bbac00], dl ; call rcx
0x000000000003333b : xor byte ptr [rcx - 0x75], al ; push rdi ; adc byte ptr [rdi], cl ; retf 0xd289
0x00000000000d2117 : xor byte ptr [rcx - 0x77], al ; ret
0x0000000000157663 : xor byte ptr [rcx - 0x77], cl ; cmp r8b, r13b ; ret
0x00000000001afe94 : xor byte ptr [rcx - 0xe], bh ; jmp rax
0x00000000001bcc58 : xor byte ptr [rcx - 3], al ; jmp qword ptr [rax]
0x00000000001aa9ae : xor byte ptr [rcx], ah ; retf
0x00000000000860dc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000008a8d7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007ed03 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000121e4e : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000001d67a1 : xor byte ptr [rcx], al ; add byte ptr [rdi + rcx], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000f4020 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012517a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000001188e3 : xor byte ptr [rcx], dh ; xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x00000000001188a3 : xor byte ptr [rcx], dh ; xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x00000000001ceec8 : xor byte ptr [rdi - 0x65bc0000], 0xed ; call qword ptr [rbx]
0x00000000001bd18c : xor byte ptr [rdi], bh ; sti ; jmp qword ptr [rax]
0x000000000010e7e4 : xor byte ptr [rdi], cl ; adc dword ptr [rdi + 0x40], eax ; ret
0x000000000011bf0b : xor byte ptr [rdi], cl ; lahf ; ret 0x8545
0x00000000000833e0 : xor byte ptr [rdi], cl ; ret 0x4389
0x000000000014df19 : xor byte ptr [rdi], cl ; retf 0x5089
0x000000000010a0d3 : xor byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000001bd984 : xor byte ptr [rdx - 0x6e4f0005], dl ; sti ; jmp qword ptr [rax]
0x00000000001c2c2d : xor byte ptr [rdx], al ; add byte ptr [rax], ah ; stc ; call qword ptr [rax]
0x00000000001d7178 : xor byte ptr [rdx], bh ; add dword ptr [rax], eax ; hlt ; jmp qword ptr [rcx]
0x00000000001bcf30 : xor byte ptr [rdx], bl ; sti ; call qword ptr [rax]
0x00000000001bcf80 : xor byte ptr [rdx], dl ; sti ; push rax ; adc edi, ebx ; call rax
0x000000000019008f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000000b145c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000abb5e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001ac6be : xor byte ptr [rsi - 0x73e34314], ch ; retf
0x00000000001bcb6c : xor byte ptr [rsi - 0x78ff0004], al ; cld ; call rax
0x00000000001d6578 : xor byte ptr [rsi], ch ; add dword ptr [rax], eax ; je 0x1d658e ; hlt ; jmp qword ptr [rcx]
0x00000000001aa99f : xor byte ptr [rsi], cl ; or eax, 0xcad7947e ; jmp 0x1aa94f
0x00000000001cf940 : xor ch, 0xfb ; call qword ptr [rdx]
0x00000000000baa88 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000baa9e : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000baac0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000baade : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000baafe : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000bab24 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000bab40 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000bab60 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000bab80 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000baba6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000babc8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000babe6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000bac06 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000bac22 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000bac42 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000bac62 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000bac82 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000baca8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000bacf8 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000ba9ce : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000ba9ec : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000baa0c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000baa2e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000baa4e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000baa6e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000ba904 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000ba916 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000ba92c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000ba944 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000ba95a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000ba96c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000ba98a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000ba996 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000ba9ac : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000ba8f0 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000da7c5 : xor cl, byte ptr [rax - 0x75] ; jl 0xda7f6 ; adc byte ptr [rax + 0x63], cl ; ret 0x8944
0x0000000000086b0d : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x0000000000054e25 : xor cl, byte ptr [rax - 0x77] ; ret 0x32e8
0x0000000000044af2 : xor cl, byte ptr [rax - 0x77] ; ret 0x65e8
0x0000000000044fa7 : xor cl, byte ptr [rax - 0x77] ; ret 0xb0e8
0x0000000000044d4a : xor cl, byte ptr [rax - 0x77] ; ret 0xde8
0x00000000000e2581 : xor cl, byte ptr [rax - 0x77] ; retf 0x44f6
0x000000000013f708 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000040e77 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x0000000000154ad4 : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000001188e5 : xor cl, byte ptr [rax - 0x7d] ; ret 0xe904
0x00000000001007d6 : xor cl, byte ptr [rcx - 0x7cb7fbbe] ; ret 0x4808
0x0000000000076453 : xor cl, byte ptr [rdi] ; test byte ptr [rdi], bh ; adc al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4c04
0x0000000000035120 : xor cl, ch ; ret
0x00000000000b6080 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001d2a89 : xor cl, dh ; jmp qword ptr [rcx]
0x00000000001c1c31 : xor dh, bh ; call qword ptr [rax]
0x00000000001bf6b4 : xor dh, ch ; add byte ptr [rax], al ; hlt ; xchg ch, ch ; call rax
0x000000000002e6e9 : xor dh, dh ; ret 0x4002
0x0000000000111fda : xor dh, dh ; ret 0xf01
0x00000000001cf978 : xor dl, al ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; sti ; call qword ptr [rbx]
0x00000000001d9300 : xor dl, bl ; hlt ; call rsi
0x00000000001bcc28 : xor dl, cl ; cld ; call qword ptr [rax]
0x00000000001c0349 : xor dl, dh ; inc esp ; add dword ptr [rax], eax ; xor edx, esi ; jmp rax
0x00000000001cfcb0 : xor dl, dl ; out dx, al ; jmp rdx
0x00000000000300af : xor dword ptr [rax + 0x39], ecx ; ror byte ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000011eda6 : xor dword ptr [rax + 0x88], edi ; syscall
0x000000000006176d : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x00000000000a808e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x00000000001ab956 : xor dword ptr [rax - 0x7d993651], ebp ; retf 0xe496
0x000000000013cbd6 : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000001188a5 : xor dword ptr [rax - 0x7d], ecx ; ret 0xe904
0x00000000001c693d : xor dword ptr [rax], eax ; add al, ah ; fucom st(7) ; call qword ptr [rsi]
0x0000000000122871 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000d13e1 : xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000106172 : xor dword ptr [rbp + 1], ecx ; out 0x8d, eax ; push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009369a : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x00000000001170de : xor dword ptr [rcx - 0x77], ecx ; fdivr dword ptr [rax + 0x10e] ; syscall
0x0000000000122151 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000000a8256 : xor dword ptr [rcx], edi ; ret 0x2d74
0x00000000000be64b : xor dword ptr [rdi + 0x39480032], ebx ; ret
0x000000000009a7c2 : xor dword ptr [rip + 0x48197300], esi ; lea eax, [rdx - 8] ; ret
0x000000000019a732 : xor dword ptr [rip + 0x5be17500], esp ; ret
0x000000000007e693 : xor dword ptr [rsi + 0x29480036], ebx ; retf 0x8948
0x0000000000096fea : xor eax, 0 ; add bl, dh ; ret
0x000000000009b5ac : xor eax, 0x100 ; add cl, ch ; retf
0x0000000000090dc9 : xor eax, 0x10894800 ; ret
0x00000000000803f8 : xor eax, 0x1d3 ; mov rdi, rbp ; call rax
0x000000000008f6b4 : xor eax, 0x1d894800 ; ret
0x0000000000115787 : xor eax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x000000000008b9c7 : xor eax, 0x258d4c00 ; clc ; retf 0x35
0x0000000000167610 : xor eax, 0x28631b ; xor eax, eax ; ret
0x000000000016473e : xor eax, 0x286ced ; mov edi, ebx ; call 0x1109a9
0x000000000004f012 : xor eax, 0x349 ; call rax
0x0000000000073613 : xor eax, 0x377948 ; call rax
0x000000000006b35a : xor eax, 0x37fc01 ; call rax
0x000000000006b02a : xor eax, 0x37ff31 ; call rax
0x0000000000067e68 : xor eax, 0x3830f3 ; call rax
0x0000000000097053 : xor eax, 0x38894800 ; ret
0x000000000005e6b1 : xor eax, 0x38c8aa ; call rax
0x000000000005b484 : xor eax, 0x38fad7 ; call rax
0x00000000001ae318 : xor eax, 0x40ffebef ; loop 0x1ae311 ; call rdi
0x0000000000192f13 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000009a7c3 : xor eax, 0x48197300 ; lea eax, [rdx - 8] ; ret
0x000000000008aa09 : xor eax, 0x4f0f4800 ; ret 0x8948
0x000000000009082c : xor eax, 0x57014400 ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000001c0185 : xor eax, 0x63140001 ; int1 ; call rax
0x000000000009c935 : xor eax, 0x6740000 ; ret
0x0000000000094134 : xor eax, 0x74894800 ; and al, 8 ; xor edi, edi ; call qword ptr [rax]
0x000000000013cd40 : xor eax, 0x79f73 ; call 0x148f67
0x000000000013cc84 : xor eax, 0x7a02f ; call 0x148f67
0x000000000011d28a : xor eax, 0x7d8b48 ; call r12
0x000000000008ed95 : xor eax, 0x83f08900 ; ret 0x2501
0x0000000000028b97 : xor eax, 0x89000078 ; retf 0xe283
0x00000000000e6397 : xor eax, 0x89000296 ; ret 0xc748
0x000000000004a2e7 : xor eax, 0x890015fb ; ret
0x000000000006107a : xor eax, 0x89ffffe6 ; ret
0x000000000010f862 : xor eax, 0xb8c7894c ; test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000094bad : xor eax, 0xd8d4800 ; ret
0x00000000000024e5 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x000000000009c69c : xor eax, 0xeb0b7500 ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; call qword ptr [rdx]
0x000000000008f7c8 : xor eax, 0xeb0b7500 ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; retf
0x00000000001af4d9 : xor eax, 0xf08110ff ; jmp qword ptr [rax]
0x00000000001af505 : xor eax, 0xf081c0ff ; jmp rax
0x00000000001af511 : xor eax, 0xf08200ff ; jmp qword ptr [rax]
0x000000000009dd92 : xor eax, 0xf480001 ; ret 0x66c3
0x000000000008f799 : xor eax, 0xffffdd72 ; call rax
0x000000000008f436 : xor eax, 0xffffe0d5 ; call rax
0x000000000008f130 : xor eax, 0xffffe3db ; call rax
0x000000000008ed29 : xor eax, 0xffffe7e2 ; call rax
0x000000000005c51c : xor eax, 0xfffff7bf ; add rax, rsi ; jmp rax
0x000000000008d900 : xor eax, 0xfffffc0b ; call rax
0x0000000000080763 : xor eax, 0xfffffe68 ; call rax
0x000000000008d60b : xor eax, 0xffffff00 ; call rax
0x0000000000021bab : xor eax, dword ptr [0x30] ; call rax
0x000000000003ecda : xor eax, dword ptr [0x30] ; jmp rax
0x00000000001c6b21 : xor eax, dword ptr [rax] ; add ah, ch ; in eax, 0xe7 ; call qword ptr [rdx]
0x00000000001c6b35 : xor eax, dword ptr [rax] ; add al, bh ; in eax, 0xe7 ; call qword ptr [rax]
0x00000000001c6b0d : xor eax, dword ptr [rax] ; add al, dh ; in eax, 0xe7 ; call qword ptr [rax]
0x0000000000122971 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000001c3685 : xor eax, dword ptr [rcx] ; add ah, ah ; retf 0xfffd
0x0000000000123351 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000001c015d : xor eax, dword ptr [rcx] ; add byte ptr [rdx + rdx*2], ah ; int1 ; call qword ptr [rax]
0x00000000000fdcdd : xor eax, dword ptr [rcx] ; ret 0x3944
0x00000000000df0c8 : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000008a770 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000446fd : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d140e : xor eax, eax ; add rsp, 8 ; ret
0x00000000000306d0 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000123486 : xor eax, eax ; call 0x10f764
0x0000000000163afa : xor eax, eax ; call 0x10fd74
0x0000000000164456 : xor eax, eax ; call 0x1106c4
0x0000000000051b29 : xor eax, eax ; call 0x7ddd4
0x000000000015d171 : xor eax, eax ; call r8
0x000000000015d1d3 : xor eax, eax ; call rcx
0x0000000000043966 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x43978 ; pop rbx ; ret
0x000000000012517b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000e9729 : xor eax, eax ; cmp esi, 1 ; sete al ; ret
0x000000000011ce59 : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0x11ce71 ; ret
0x00000000001164ce : xor eax, eax ; cmp rdi, rdx ; ja 0x116508 ; ret
0x00000000001300e7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000001638c0 : xor eax, eax ; jmp 0x16388a
0x0000000000163940 : xor eax, eax ; jmp 0x16390a
0x000000000008c4a0 : xor eax, eax ; jmp 0x8c46a
0x000000000014e480 : xor eax, eax ; jmp rcx
0x00000000001401f8 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x0000000000115940 : xor eax, eax ; mov dword ptr [rdi + 8], esi ; ret
0x00000000000440f8 : xor eax, eax ; mov dword ptr [rsi], r10d ; pop rbp ; ret
0x0000000000116751 : xor eax, eax ; mov eax, 0x127 ; syscall
0x0000000000116801 : xor eax, eax ; mov eax, 0x128 ; syscall
0x00000000001168d0 : xor eax, eax ; mov eax, 0x147 ; syscall
0x00000000001169e0 : xor eax, eax ; mov eax, 0x148 ; syscall
0x0000000000122c44 : xor eax, eax ; mov eax, 0x2c ; syscall
0x0000000000122a14 : xor eax, eax ; mov eax, 0x2d ; syscall
0x00000000000e47a1 : xor eax, eax ; mov eax, 0xf7 ; syscall
0x000000000018f190 : xor eax, eax ; mov edx, dword ptr [rdi] ; cmp edx, dword ptr [rsi] ; jne 0x18f184 ; ret
0x0000000000044357 : xor eax, eax ; mov qword ptr [rdi], r8 ; ret
0x000000000009d622 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x000000000005b7e7 : xor eax, eax ; mov r9d, 1 ; jmp rax
0x0000000000130fe1 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000149cc7 : xor eax, eax ; mov rcx, r14 ; mov rdi, r13 ; call r12
0x0000000000153ad7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000044880 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x0000000000131047 : xor eax, eax ; pop r12 ; pop rbp ; ret
0x00000000000a0ab2 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000352bf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000014c1c2 : xor eax, eax ; pop rbx ; pop rbp ; jmp rcx
0x000000000014da4f : xor eax, eax ; pop rbx ; pop rbp ; jmp rdx
0x0000000000043834 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d1195 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x00000000000431de : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008fbc0 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003d296 : xor eax, eax ; pop rbx ; ret
0x000000000014106d : xor eax, eax ; rep stosq qword ptr [rdi], rax ; mov eax, r8d ; ret
0x000000000003f8f8 : xor eax, eax ; ret
0x00000000000aa10e : xor eax, eax ; sub eax, ecx ; ret
0x000000000011007d : xor eax, eax ; syscall
0x000000000012e7f1 : xor eax, eax ; test byte ptr [rbx + 0x1c], 0x20 ; je 0x12e809 ; pop rbx ; ret
0x00000000000893a0 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x00000000000893b0 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000bd9cc : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000008cea0 : xor eax, eax ; test rdx, rdx ; jne 0x8ceb8 ; ret
0x000000000018a5cc : xor eax, eax ; vzeroupper ; ret
0x00000000000443f8 : xor eax, ecx ; ret
0x00000000000438e7 : xor eax, edx ; sub eax, edx ; ret
0x00000000000438fb : xor eax, edx ; sub rax, rdx ; ret
0x000000000013c460 : xor ebp, dword ptr [rbx] ; add byte ptr [rcx - 0x3f], cl ; retf 0x6411
0x00000000001542dc : xor ebp, ebp ; call 0x30d74
0x0000000000121889 : xor ebp, ebp ; pop rax ; pop rdi ; call rax
0x00000000001a9545 : xor ebp, ecx ; call qword ptr [rax]
0x00000000001a9539 : xor ebp, ecx ; jmp qword ptr [rax]
0x000000000002d018 : xor ebp, ecx ; ret 0xfffd
0x0000000000002917 : xor ebp, edi ; out dx, al ; retf 0x182c
0x000000000007f113 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000002cd16 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007b5f0 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; ret
0x000000000015084d : xor ecx, dword ptr [rax + 0x31] ; retf 0xc148
0x000000000010be71 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x000000000014c149 : xor ecx, dword ptr [rbx + 0x1f0ffffe] ; add bl, dh ; ret
0x000000000009cc72 : xor ecx, dword ptr [rcx + rcx*4 - 0x31] ; call rcx
0x000000000013e9e4 : xor ecx, dword ptr [rcx - 0x76b80000] ; ret 0xdf89
0x000000000006000c : xor ecx, dword ptr [rdi] ; mov esi, 0xc08349c8 ; add dword ptr [rcx], edi ; retf
0x000000000003e160 : xor ecx, ecx ; addsd xmm0, xmm0 ; mov dword ptr [rdi], ecx ; ret
0x000000000002bce9 : xor ecx, ecx ; call r15
0x0000000000156b50 : xor ecx, ecx ; mov rdx, r13 ; call 0x122d97
0x00000000000bdcd9 : xor ecx, ecx ; xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x00000000001d2b01 : xor ecx, esi ; jmp qword ptr [rcx]
0x000000000014cd6b : xor edi, 0x8d4c0000 ; and al, 0x20 ; call qword ptr [rax]
0x000000000014895c : xor edi, dword ptr [0x30] ; call rax
0x0000000000118c24 : xor edi, dword ptr [rax + 0x105] ; syscall
0x00000000000643c9 : xor edi, dword ptr [rbx + 0x15] ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001bd231 : xor edi, ebx ; inc eax ; xor al, 0xfb ; call qword ptr [rax]
0x000000000009404d : xor edi, edi ; call qword ptr [rax]
0x00000000000dedb5 : xor edi, edi ; call rax
0x00000000000be641 : xor edi, edi ; jmp 0xbe613
0x00000000000690ce : xor edi, edi ; jmp rax
0x00000000000dedca : xor edi, edi ; mov eax, 0xe4 ; syscall
0x0000000000021be0 : xor edi, edi ; mov eax, edx ; syscall
0x0000000000127def : xor edi, edi ; mov ebx, eax ; call 0xe4846
0x00000000000bd322 : xor edi, edi ; mov rax, rdi ; ret
0x00000000000ff5e6 : xor edi, edi ; mov rcx, rax ; lea rdx, [r10 + rax*8] ; jmp 0xff615
0x00000000000228bb : xor edi, edi ; mov rdx, r14 ; call 0x9eb67
0x000000000011ba6d : xor edi, edi ; or r10d, 0x40 ; mov eax, ecx ; syscall
0x000000000009230c : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000115f9c : xor edi, edi ; syscall
0x000000000011c302 : xor edi, edi ; xor byte ptr [rdi], cl ; lahf ; ret 0x8545
0x00000000000213b4 : xor edi, edi ; xor eax, eax ; call 0x7ddd6
0x00000000001c1c21 : xor edi, esi ; call rsp
0x0000000000042f60 : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b10 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0xee ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000001b3725 : xor edx, edi ; call rsp
0x0000000000022c03 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000008e9c3 : xor edx, edx ; jmp rax
0x00000000000bdcdb : xor edx, edx ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000123841 : xor edx, edx ; mov eax, 0x1d ; syscall
0x00000000000e467e : xor edx, edx ; mov eax, 0x3d ; syscall
0x00000000000a81f0 : xor edx, edx ; mov qword ptr [rdi], rdx ; pop rbx ; ret
0x00000000000a815d : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000096c84 : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000bb383 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000080f66 : xor edx, edx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001156d8 : xor edx, edx ; xor esi, esi ; mov eax, 0x118 ; syscall
0x000000000010f613 : xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call rax
0x00000000001c0351 : xor edx, esi ; jmp rax
0x000000000015084b : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x31] ; retf 0xc148
0x00000000000681f5 : xor esi, esi ; jmp rax
0x00000000001156da : xor esi, esi ; mov eax, 0x118 ; syscall
0x0000000000130e21 : xor esi, esi ; mov edi, edx ; syscall
0x000000000007ec70 : xor esi, esi ; mov rax, rsi ; ret
0x000000000004360e : xor esi, esi ; mov rdi, r9 ; call rdx
0x000000000010f615 : xor esi, esi ; mov rdi, rbx ; call rax
0x0000000000114f72 : xor esi, esi ; syscall
0x00000000001c4139 : xor esi, esp ; call qword ptr [rdi]
0x00000000000238a3 : xor esp, ecx ; cmp al, 0 ; ret
0x0000000000078935 : xor esp, esp ; jmp 0x74bcc
0x000000000010f579 : xor esp, esp ; mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a0941 : xor esp, esp ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019a731 : xor qword ptr [rip + 0x5be17500], rsp ; ret
0x0000000000123840 : xor r10d, r10d ; mov eax, 0x1d ; syscall
0x00000000000e467d : xor r10d, r10d ; mov eax, 0x3d ; syscall
0x0000000000078934 : xor r12d, r12d ; jmp 0x74bcd
0x000000000011c301 : xor r15d, edi ; xor byte ptr [rdi], cl ; lahf ; ret 0x8545
0x000000000012a04a : xor r15d, r15d ; call rax
0x00000000000be640 : xor r15d, r15d ; jmp 0xbe614
0x00000000000690cd : xor r15d, r15d ; jmp rax
0x000000000015f656 : xor r8b, byte ptr [rax] ; add byte ptr [rbx - 0x76be0008], al ; ret 0x840f
0x0000000000116750 : xor r8d, r8d ; mov eax, 0x127 ; syscall
0x0000000000116800 : xor r8d, r8d ; mov eax, 0x128 ; syscall
0x00000000001168cf : xor r8d, r8d ; mov eax, 0x147 ; syscall
0x00000000001169df : xor r8d, r8d ; mov eax, 0x148 ; syscall
0x0000000000122c43 : xor r8d, r8d ; mov eax, 0x2c ; syscall
0x0000000000122a13 : xor r8d, r8d ; mov eax, 0x2d ; syscall
0x00000000000e47a0 : xor r8d, r8d ; mov eax, 0xf7 ; syscall
0x000000000005b7e6 : xor r8d, r8d ; mov r9d, 1 ; jmp rax
0x000000000002bce8 : xor r9d, r9d ; call r15
0x0000000000115786 : xor rax, 0x20 ; mov qword ptr [rsi + 0x48], rax ; ret
0x0000000000021baa : xor rax, qword ptr [0x30] ; call rax
0x000000000003ecd9 : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000021ba9 : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000003ecd8 : xor rax, qword ptr fs:[0x30] ; jmp rax
0x00000000000b17c5 : xor rax, rax ; ret
0x00000000000438fa : xor rax, rdx ; sub rax, rdx ; ret
0x000000000014895b : xor rdi, qword ptr [0x30] ; call rax
0x000000000014895a : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000042f5f : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000042f5e : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 26576
