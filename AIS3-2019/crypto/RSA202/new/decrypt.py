from Crypto.PublicKey import RSA
from Crypto.Util.number import getPrime, isPrime, inverse

def isqrt(n):
    x = n
    y = (x + 1) // 2
    while y < x:
        x = y
        y = (x + n // x) // 2
    return x

n1 = 2690153560098422689438856794321691825719832060299561951194302323240562495990217010317801477731089973668588128967016337779575627831898882459867404403387214885415346624389035996682859
n2 = 118027549409878604264012736654927233346920837944846575818754847907880368675624366394203653380221660211315361755920669716440496898211914217335230742984843120050383882941722501392124047590326872899128617434281204148318662749900200194670188103263177546919438016336846469756854752026975479149793463876762471714108432818786000465993290801399214329049054119981658213265389939089317666831125145824945882995918298696377737601660646485283234310101374712647705071476704496758208194997429504674719143870529626356221905660889610337516143470814753142491492270653975294857216793821678338435439603621105948329878977112487302117853019225422370586674417344112100195790488940967411657331250567378225177536703707592213441028252868882578028219

print(isqrt(n1))
